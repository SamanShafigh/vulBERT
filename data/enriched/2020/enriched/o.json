{
  "year": 2020,
  "total": 147,
  "reference": "mozilla.org",
  "reports": {
    "CVE-2020-12388": [
      {
        "url": "https://www.mozilla.org/security/advisories/mfsa2020-17/",
        "description": "The Firefox content processes did not sufficiently lockdown access control which could result in a sandbox escape.Note: this issue only affects Firefox on Windows operating systems."
      },
      {
        "url": "https://www.mozilla.org/security/advisories/mfsa2020-16/",
        "description": "The Firefox content processes did not sufficiently lockdown access control which could result in a sandbox escape.Note: this issue only affects Firefox on Windows operating systems."
      }
    ],
    "CVE-2020-12389": [
      {
        "url": "https://www.mozilla.org/security/advisories/mfsa2020-17/",
        "description": "The Firefox content processes did not sufficiently lockdown access control which could result in a sandbox escape.Note: this issue only affects Firefox on Windows operating systems."
      },
      {
        "url": "https://www.mozilla.org/security/advisories/mfsa2020-16/",
        "description": "The Firefox content processes did not sufficiently lockdown access control which could result in a sandbox escape.Note: this issue only affects Firefox on Windows operating systems."
      }
    ],
    "CVE-2020-12391": [
      {
        "url": "https://www.mozilla.org/security/advisories/mfsa2020-16/",
        "description": "Documents formed using data: URLs in an object element failed to inherit the CSP of the creating context. This allowed the execution of scripts that should have been blocked, albeit with a unique opaque origin."
      }
    ],
    "CVE-2020-12392": [
      {
        "url": "https://www.mozilla.org/security/advisories/mfsa2020-17/",
        "description": "The 'Copy as cURL' feature of Devtools' network tab did not properly escape the HTTP POST data of a request, which can be controlled by the website. If a user used the 'Copy as cURL' feature and pasted the command into a terminal, it could have resulted in the disclosure of local files."
      },
      {
        "url": "https://www.mozilla.org/security/advisories/mfsa2020-18/",
        "description": "The 'Copy as cURL' feature of Devtools' network tab did not properly escape the HTTP POST data of a request, which can be controlled by the website. If a user used the 'Copy as cURL' feature and pasted the command into a terminal, it could have resulted in the disclosure of local files."
      },
      {
        "url": "https://www.mozilla.org/security/advisories/mfsa2020-16/",
        "description": "The 'Copy as cURL' feature of Devtools' network tab did not properly escape the HTTP POST data of a request, which can be controlled by the website. If a user used the 'Copy as cURL' feature and pasted the command into a terminal, it could have resulted in the disclosure of local files."
      }
    ],
    "CVE-2020-12394": [
      {
        "url": "https://www.mozilla.org/security/advisories/mfsa2020-16/",
        "description": "A logic flaw in our location bar implementation could have allowed a local attacker to spoof the current location by selecting a different origin and removing focus from the input element."
      }
    ],
    "CVE-2020-12395": [
      {
        "url": "https://www.mozilla.org/security/advisories/mfsa2020-17/",
        "description": "Mozilla developers and community members Alexandru Michis, Jason Kratzer, philipp, Ted Campbell, Bas Schouten, André Bargull, and Karl Tomlinson reported memory safety bugs present in Firefox 75 and Firefox ESR 68.7. Some of these bugs showed evidence of memory corruption and we presume that with enough effort some of these could have been exploited to run arbitrary code."
      },
      {
        "url": "https://www.mozilla.org/security/advisories/mfsa2020-18/",
        "description": "Mozilla developers and community members Alexandru Michis, Jason Kratzer, philipp, Ted Campbell, Bas Schouten, André Bargull, and Karl Tomlinson reported memory safety bugs present in Firefox 75 and Firefox ESR 68.7. Some of these bugs showed evidence of memory corruption and we presume that with enough effort some of these could have been exploited to run arbitrary code."
      },
      {
        "url": "https://www.mozilla.org/security/advisories/mfsa2020-16/",
        "description": "Mozilla developers and community members Alexandru Michis, Jason Kratzer, philipp, Ted Campbell, Bas Schouten, André Bargull, and Karl Tomlinson reported memory safety bugs present in Firefox 75 and Firefox ESR 68.7. Some of these bugs showed evidence of memory corruption and we presume that with enough effort some of these could have been exploited to run arbitrary code."
      }
    ],
    "CVE-2020-12396": [
      {
        "url": "https://www.mozilla.org/security/advisories/mfsa2020-16/",
        "description": "Mozilla developers and community members Frederik Braun, Andrew McCreight, C.M.Chang, and Dan Minor reported memory safety bugs present in Firefox 75. Some of these bugs showed evidence of memory corruption and we presume that with enough effort some of these could have been exploited to run arbitrary code."
      }
    ],
    "CVE-2020-12400": [
      {
        "url": "https://www.mozilla.org/security/advisories/mfsa2020-36/",
        "description": "When converting coordinates from projective to affine, the modular inversion was not performed in constant time, resulting in a possible timing-based side channel attack."
      },
      {
        "url": "https://www.mozilla.org/security/advisories/mfsa2020-39/",
        "description": "When converting coordinates from projective to affine, the modular inversion was not performed in constant time, resulting in a possible timing-based side channel attack."
      }
    ],
    "CVE-2020-12404": [
      {
        "url": "https://www.mozilla.org/security/advisories/mfsa2020-19/",
        "description": "For native-to-JS bridging the app requires a unique token to be passed that ensures non-app code can't call the bridging functions. That token could leak when used for downloading files."
      }
    ],
    "CVE-2020-12405": [
      {
        "url": "https://www.mozilla.org/security/advisories/mfsa2020-20/",
        "description": "When browsing a malicious page, a race condition in our SharedWorkerService could occur and lead to a potentially exploitable crash."
      },
      {
        "url": "https://www.mozilla.org/security/advisories/mfsa2020-21/",
        "description": "When browsing a malicious page, a race condition in our SharedWorkerService could occur and lead to a potentially exploitable crash."
      },
      {
        "url": "https://www.mozilla.org/security/advisories/mfsa2020-22/",
        "description": "When browsing a malicious page, a race condition in our SharedWorkerService could occur and lead to a potentially exploitable crash."
      }
    ],
    "CVE-2020-12407": [
      {
        "url": "https://www.mozilla.org/security/advisories/mfsa2020-20/",
        "description": "Mozilla Developer Nicolas Silva found that when using WebRender, Firefox would under certain conditions leak arbitrary GPU memory to the visible screen. The leaked memory content was visible to the user, but not observable from web content."
      }
    ],
    "CVE-2020-12410": [
      {
        "url": "https://www.mozilla.org/security/advisories/mfsa2020-20/",
        "description": "Mozilla developers Tom Tung and Karl Tomlinson reported memory safety bugs present in Firefox 76 and Firefox ESR 68.8. Some of these bugs showed evidence of memory corruption and we presume that with enough effort some of these could have been exploited to run arbitrary code."
      },
      {
        "url": "https://www.mozilla.org/security/advisories/mfsa2020-21/",
        "description": "Mozilla developers Tom Tung and Karl Tomlinson reported memory safety bugs present in Firefox 76 and Firefox ESR 68.8. Some of these bugs showed evidence of memory corruption and we presume that with enough effort some of these could have been exploited to run arbitrary code."
      },
      {
        "url": "https://www.mozilla.org/security/advisories/mfsa2020-22/",
        "description": "Mozilla developers Tom Tung and Karl Tomlinson reported memory safety bugs present in Firefox 68.8. Some of these bugs showed evidence of memory corruption and we presume that with enough effort some of these could have been exploited to run arbitrary code."
      }
    ],
    "CVE-2020-12411": [
      {
        "url": "https://www.mozilla.org/security/advisories/mfsa2020-20/",
        "description": "Mozilla developers :Gijs (he/him), Randell Jesup reported memory safety bugs present in Firefox 76. Some of these bugs showed evidence of memory corruption and we presume that with enough effort some of these could have been exploited to run arbitrary code."
      }
    ],
    "CVE-2020-12416": [
      {
        "url": "https://www.mozilla.org/security/advisories/mfsa2020-24/",
        "description": "A VideoStreamEncoder may have been freed in a race condition with VideoBroadcaster::AddOrUpdateSink, resulting in a use-after-free, memory corruption, and a potentially exploitable crash."
      }
    ],
    "CVE-2020-12417": [
      {
        "url": "https://www.mozilla.org/security/advisories/mfsa2020-24/",
        "description": "Due to confusion about ValueTags on JavaScript Objects, an object may pass through the type barrier, resulting in memory corruption and a potentially exploitable crash.Note: this issue only affects Firefox on ARM64 platforms."
      },
      {
        "url": "https://www.mozilla.org/security/advisories/mfsa2020-25/",
        "description": "Due to confusion about ValueTags on JavaScript Objects, an object may pass through the type barrier, resulting in memory corruption and a potentially exploitable crash.Note: this issue only affects Firefox on ARM64 platforms."
      },
      {
        "url": "https://www.mozilla.org/security/advisories/mfsa2020-26/",
        "description": "Due to confusion about ValueTags on JavaScript Objects, an object may pass through the type barrier, resulting in memory corruption and a potentially exploitable crash.Note: this issue only affects Firefox on ARM64 platforms."
      }
    ],
    "CVE-2020-12418": [
      {
        "url": "https://www.mozilla.org/security/advisories/mfsa2020-24/",
        "description": "Manipulating individual parts of a URL object could have caused an out-of-bounds read, leaking process memory to malicious JavaScript."
      },
      {
        "url": "https://www.mozilla.org/security/advisories/mfsa2020-25/",
        "description": "Manipulating individual parts of a URL object could have caused an out-of-bounds read, leaking process memory to malicious JavaScript."
      },
      {
        "url": "https://www.mozilla.org/security/advisories/mfsa2020-26/",
        "description": "Manipulating individual parts of a URL object could have caused an out-of-bounds read, leaking process memory to malicious JavaScript."
      }
    ],
    "CVE-2020-12419": [
      {
        "url": "https://www.mozilla.org/security/advisories/mfsa2020-24/",
        "description": "When processing callbacks that occurred during window flushing in the parent process, the associated window may die; causing a use-after-free condition. This could have led to memory corruption and a potentially exploitable crash."
      },
      {
        "url": "https://www.mozilla.org/security/advisories/mfsa2020-25/",
        "description": "When processing callbacks that occurred during window flushing in the parent process, the associated window may die; causing a use-after-free condition. This could have led to memory corruption and a potentially exploitable crash."
      },
      {
        "url": "https://www.mozilla.org/security/advisories/mfsa2020-26/",
        "description": "When processing callbacks that occurred during window flushing in the parent process, the associated window may die; causing a use-after-free condition. This could have led to memory corruption and a potentially exploitable crash."
      }
    ],
    "CVE-2020-12420": [
      {
        "url": "https://www.mozilla.org/security/advisories/mfsa2020-24/",
        "description": "When trying to connect to a STUN server, a race condition could have caused a use-after-free of a pointer, leading to memory corruption and a potentially exploitable crash."
      },
      {
        "url": "https://www.mozilla.org/security/advisories/mfsa2020-25/",
        "description": "When trying to connect to a STUN server, a race condition could have caused a use-after-free of a pointer, leading to memory corruption and a potentially exploitable crash."
      },
      {
        "url": "https://www.mozilla.org/security/advisories/mfsa2020-26/",
        "description": "When trying to connect to a STUN server, a race condition could have caused a use-after-free of a pointer, leading to memory corruption and a potentially exploitable crash."
      }
    ],
    "CVE-2020-12422": [
      {
        "url": "https://www.mozilla.org/security/advisories/mfsa2020-24/",
        "description": "In non-standard configurations, a JPEG image created by JavaScript could have caused an internal variable to overflow, resulting in an out of bounds write, memory corruption, and a potentially exploitable crash."
      }
    ],
    "CVE-2020-12425": [
      {
        "url": "https://www.mozilla.org/security/advisories/mfsa2020-24/",
        "description": "Due to confusion processing a hyphen character in Date.parse(), a one-byte out of bounds read could have occurred, leading to potential information disclosure."
      }
    ],
    "CVE-2020-12426": [
      {
        "url": "https://www.mozilla.org/security/advisories/mfsa2020-24/",
        "description": "Mozilla developers and community members Bob Clary, Benjamin Bouvier, Calixte Denizet, Christian Holler reported memory safety bugs present in Firefox 77. Some of these bugs showed evidence of memory corruption and we presume that with enough effort some of these could have been exploited to run arbitrary code."
      }
    ],
    "CVE-2020-15647": [
      {
        "url": "https://www.mozilla.org/security/advisories/mfsa2020-27/",
        "description": "A Content Provider in Firefox for Android allowed local files accessible by the browser to be read by a remote webpage, leading to sensitive data disclosure, including cookies for other origins."
      }
    ],
    "CVE-2020-15651": [
      {
        "url": "https://www.mozilla.org/security/advisories/mfsa2020-34/",
        "description": "A unicode RTL order character in the downloaded file name can be used to change the file's name during the download UI flow to change the file extension."
      }
    ],
    "CVE-2020-15655": [
      {
        "url": "https://www.mozilla.org/security/advisories/mfsa2020-32/",
        "description": "Mozilla Developer Rob Wu discovered that a redirected HTTP request which is observed or modified through a web extension could bypass existing CORS checks, leading to potential disclosure of cross-origin information."
      },
      {
        "url": "https://www.mozilla.org/security/advisories/mfsa2020-30/",
        "description": "Mozilla Developer Rob Wu discovered that a redirected HTTP request which is observed or modified through a web extension could bypass existing CORS checks, leading to potential disclosure of cross-origin information."
      },
      {
        "url": "https://www.mozilla.org/security/advisories/mfsa2020-33/",
        "description": "Mozilla Developer Rob Wu discovered that a redirected HTTP request which is observed or modified through a web extension could bypass existing CORS checks, leading to potential disclosure of cross-origin information."
      }
    ],
    "CVE-2020-15659": [
      {
        "url": "https://www.mozilla.org/security/advisories/mfsa2020-31/",
        "description": "Mozilla developers Jason Kratzer and Luke Wagner reported memory safety bugs present in Firefox 78 and Firefox ESR 68.10. Some of these bugs showed evidence of memory corruption and we presume that with enough effort some of these could have been exploited to run arbitrary code."
      },
      {
        "url": "https://www.mozilla.org/security/advisories/mfsa2020-32/",
        "description": "Mozilla developers and community members Natalia Csoregi, Simon Giesecke, Jason Kratzer, Christian Holler, and Luke Wagner reported memory safety bugs present in Firefox 78 and Firefox ESR 78.0. Some of these bugs showed evidence of memory corruption and we presume that with enough effort some of these could have been exploited to run arbitrary code."
      },
      {
        "url": "https://www.mozilla.org/security/advisories/mfsa2020-30/",
        "description": "Mozilla developers and community members Kevin Brosnan, Alexandru Michis, Natalia Csoregi, Jason Kratzer, Christian Holler, Simon Giesecke, Luke Wagner reported memory safety bugs present in Firefox 78. Some of these bugs showed evidence of memory corruption and we presume that with enough effort some of these could have been exploited to run arbitrary code."
      },
      {
        "url": "https://www.mozilla.org/security/advisories/mfsa2020-35/",
        "description": "Mozilla developers Jason Kratzer and Luke Wagner reported memory safety bugs present in Thunderbird 68.10. Some of these bugs showed evidence of memory corruption and we presume that with enough effort some of these could have been exploited to run arbitrary code."
      },
      {
        "url": "https://www.mozilla.org/security/advisories/mfsa2020-33/",
        "description": "Mozilla developers and community members Natalia Csoregi, Simon Giesecke, Jason Kratzer, Christian Holler, and Luke Wagner reported memory safety bugs present in Firefox 78 and Firefox ESR 78.0. Some of these bugs showed evidence of memory corruption and we presume that with enough effort some of these could have been exploited to run arbitrary code."
      }
    ],
    "CVE-2020-15663": [
      {
        "url": "https://www.mozilla.org/security/advisories/mfsa2020-40/",
        "description": "If Thunderbird is installed to a user-writable directory, the Mozilla Maintenance Service would execute updater.exe from the install location with system privileges. Although the Mozilla Maintenance Service does ensure that updater.exe is signed by Mozilla, the version could have been rolled back to a previous version which would have allowed exploitation of an older bug and arbitrary code execution with System Privileges.Note: This issue only affected Windows operating systems. Other operating systems are unaffected."
      },
      {
        "url": "https://www.mozilla.org/security/advisories/mfsa2020-41/",
        "description": "If Thunderbird is installed to a user-writable directory, the Mozilla Maintenance Service would execute updater.exe from the install location with system privileges. Although the Mozilla Maintenance Service does ensure that updater.exe is signed by Mozilla, the version could have been rolled back to a previous version which would have allowed exploitation of an older bug and arbitrary code execution with System Privileges.Note: This issue only affected Windows operating systems. Other operating systems are unaffected."
      },
      {
        "url": "https://www.mozilla.org/security/advisories/mfsa2020-36/",
        "description": "If Firefox is installed to a user-writable directory, the Mozilla Maintenance Service would execute updater.exe from the install location with administrative privileges. Although the Mozilla Maintenance Service does ensure that updater.exe is signed by Mozilla, the version could have been rolled back to a previous version which would have allowed exploitation of an older bug and arbitrary code execution with system privileges.Note: This issue only affected Windows operating systems. Other operating systems are unaffected."
      },
      {
        "url": "https://www.mozilla.org/security/advisories/mfsa2020-37/",
        "description": "If Firefox is installed to a user-writable directory, the Mozilla Maintenance Service would execute updater.exe from the install location with system privileges. Although the Mozilla Maintenance Service does ensure that updater.exe is signed by Mozilla, the version could have been rolled back to a previous version which would have allowed exploitation of an older bug and arbitrary code execution with System Privileges.Note: This issue only affected Windows operating systems. Other operating systems are unaffected."
      },
      {
        "url": "https://www.mozilla.org/security/advisories/mfsa2020-38/",
        "description": "If Firefox is installed to a user-writable directory, the Mozilla Maintenance Service would execute updater.exe from the install location with system privileges. Although the Mozilla Maintenance Service does ensure that updater.exe is signed by Mozilla, the version could have been rolled back to a previous version which would have allowed exploitation of an older bug and arbitrary code execution with System Privileges.Note: This issue only affected Windows operating systems. Other operating systems are unaffected."
      }
    ],
    "CVE-2020-15666": [
      {
        "url": "https://www.mozilla.org/security/advisories/mfsa2020-36/",
        "description": "When trying to load a non-video in an audio/video context the exact status code (200, 302, 404, 500, 412, 403, etc.) was disclosed via the MediaError Message. This level of information leakage is inconsistent with the standardized onerror/onsuccess disclosure and can lead to inferring login status to services or device discovery on a local network among other attacks."
      },
      {
        "url": "https://www.mozilla.org/security/advisories/mfsa2020-39/",
        "description": "When trying to load a non-video in an audio/video context the exact status code (200, 302, 404, 500, 412, 403, etc.) was disclosed via the MediaError Message. This level of information leakage is inconsistent with the standardized onerror/onsuccess disclosure and can lead to inferring login status to services or device discovery on a local network among other attacks."
      }
    ],
    "CVE-2020-15669": [
      {
        "url": "https://www.mozilla.org/security/advisories/mfsa2020-40/",
        "description": "When aborting an operation, such as a fetch, an abort signal may be deleted while alerting the objects to be notified. This results in a use-after-free and we presume that with enough effort it could have been exploited to run arbitrary code."
      },
      {
        "url": "https://www.mozilla.org/security/advisories/mfsa2020-37/",
        "description": "When aborting an operation, such as a fetch, an abort signal may be deleted while alerting the objects to be notified. This results in a use-after-free and we presume that with enough effort it could have been exploited to run arbitrary code."
      }
    ],
    "CVE-2020-15671": [
      {
        "url": "https://www.mozilla.org/security/advisories/mfsa2020-39/",
        "description": "When typing in a password under certain conditions, a race may have occured where the InputContext was not being correctly set for the input field, resulting in the typed passwod being saved to the keyboard dictionary."
      }
    ],
    "CVE-2020-15676": [
      {
        "url": "https://www.mozilla.org/security/advisories/mfsa2020-42/",
        "description": "Firefox sometimes ran the onload handler for SVG elements that the DOM sanitizer decided to remove, resulting in JavaScript being executed after pasting attacker-controlled data into a contenteditable element."
      },
      {
        "url": "https://www.mozilla.org/security/advisories/mfsa2020-43/",
        "description": "Firefox sometimes ran the onload handler for SVG elements that the DOM sanitizer decided to remove, resulting in JavaScript being executed after pasting attacker-controlled data into a contenteditable element."
      },
      {
        "url": "https://www.mozilla.org/security/advisories/mfsa2020-44/",
        "description": "Thunderbird sometimes ran the onload handler for SVG elements that the DOM sanitizer decided to remove, resulting in JavaScript being executed after pasting attacker-controlled data into a contenteditable element."
      }
    ],
    "CVE-2020-15678": [
      {
        "url": "https://www.mozilla.org/security/advisories/mfsa2020-42/",
        "description": "When recursing through graphical layers while scrolling, an iterator may have become invalid, resulting in a potential use-after-free. This occurs because the function APZCTreeManager::ComputeClippedCompositionBounds did not follow iterator invalidation rules."
      },
      {
        "url": "https://www.mozilla.org/security/advisories/mfsa2020-43/",
        "description": "When recursing through graphical layers while scrolling, an iterator may have become invalid, resulting in a potential use-after-free. This occurs because the function APZCTreeManager::ComputeClippedCompositionBounds did not follow iterator invalidation rules."
      },
      {
        "url": "https://www.mozilla.org/security/advisories/mfsa2020-44/",
        "description": "When recursing through graphical layers while scrolling, an iterator may have become invalid, resulting in a potential use-after-free. This occurs because the function APZCTreeManager::ComputeClippedCompositionBounds did not follow iterator invalidation rules."
      }
    ],
    "CVE-2020-26950": [
      {
        "url": "https://www.mozilla.org/security/advisories/mfsa2020-49/",
        "description": "In certain circumstances, the MCallGetProperty opcode can be emitted with unmet assumptions resulting in an exploitable use-after-free condition."
      }
    ],
    "CVE-2020-26951": [
      {
        "url": "https://www.mozilla.org/security/advisories/mfsa2020-50/",
        "description": "A parsing and event loading mismatch in Firefox's SVG code could have allowed load events to fire, even after sanitization. An attacker already capable of exploiting an XSS vulnerability in privileged internal pages could have used this attack to bypass our built-in sanitizer."
      },
      {
        "url": "https://www.mozilla.org/security/advisories/mfsa2020-51/",
        "description": "A parsing and event loading mismatch in Firefox's SVG code could have allowed load events to fire, even after sanitization. An attacker already capable of exploiting an XSS vulnerability in privileged internal pages could have used this attack to bypass our built-in sanitizer."
      },
      {
        "url": "https://www.mozilla.org/security/advisories/mfsa2020-52/",
        "description": "A parsing and event loading mismatch in Thunderbird's SVG code could have allowed load events to fire, even after sanitization. An attacker already capable of exploiting an XSS vulnerability in privileged internal pages could have used this attack to bypass our built-in sanitizer."
      }
    ],
    "CVE-2020-26952": [
      {
        "url": "https://www.mozilla.org/security/advisories/mfsa2020-50/",
        "description": "Incorrect bookkeeping of functions inlined during JIT compilation could have led to memory corruption and a potentially exploitable crash when handling out-of-memory errors."
      }
    ],
    "CVE-2020-26956": [
      {
        "url": "https://www.mozilla.org/security/advisories/mfsa2020-50/",
        "description": "In some cases, removing HTML elements during sanitization would keep existing SVG event handlers and therefore lead to XSS."
      },
      {
        "url": "https://www.mozilla.org/security/advisories/mfsa2020-51/",
        "description": "In some cases, removing HTML elements during sanitization would keep existing SVG event handlers and therefore lead to XSS."
      },
      {
        "url": "https://www.mozilla.org/security/advisories/mfsa2020-52/",
        "description": "In some cases, removing HTML elements during sanitization would keep existing SVG event handlers and therefore lead to XSS."
      }
    ],
    "CVE-2020-26958": [
      {
        "url": "https://www.mozilla.org/security/advisories/mfsa2020-50/",
        "description": "Firefox did not block execution of scripts with incorrect MIME types when the response was intercepted and cached through a ServiceWorker. This could lead to a cross-site script inclusion vulnerability, or a Content Security Policy bypass."
      },
      {
        "url": "https://www.mozilla.org/security/advisories/mfsa2020-51/",
        "description": "Firefox did not block execution of scripts with incorrect MIME types when the response was intercepted and cached through a ServiceWorker. This could lead to a cross-site script inclusion vulnerability, or a Content Security Policy bypass."
      },
      {
        "url": "https://www.mozilla.org/security/advisories/mfsa2020-52/",
        "description": "Thunderbird did not block execution of scripts with incorrect MIME types when the response was intercepted and cached through a ServiceWorker. This could lead to a cross-site script inclusion vulnerability, or a Content Security Policy bypass."
      }
    ],
    "CVE-2020-26959": [
      {
        "url": "https://www.mozilla.org/security/advisories/mfsa2020-50/",
        "description": "During browser shutdown, reference decrementing could have occured on a previously freed object, resulting in a use-after-free, memory corruption, and a potentially exploitable crash."
      },
      {
        "url": "https://www.mozilla.org/security/advisories/mfsa2020-51/",
        "description": "During browser shutdown, reference decrementing could have occured on a previously freed object, resulting in a use-after-free, memory corruption, and a potentially exploitable crash."
      },
      {
        "url": "https://www.mozilla.org/security/advisories/mfsa2020-52/",
        "description": "During browser shutdown, reference decrementing could have occured on a previously freed object, resulting in a use-after-free, memory corruption, and a potentially exploitable crash."
      }
    ],
    "CVE-2020-26960": [
      {
        "url": "https://www.mozilla.org/security/advisories/mfsa2020-50/",
        "description": "If the Compact() method was called on an nsTArray, the array could have been reallocated without updating other pointers, leading to a potential use-after-free and exploitable crash."
      },
      {
        "url": "https://www.mozilla.org/security/advisories/mfsa2020-51/",
        "description": "If the Compact() method was called on an nsTArray, the array could have been reallocated without updating other pointers, leading to a potential use-after-free and exploitable crash."
      },
      {
        "url": "https://www.mozilla.org/security/advisories/mfsa2020-52/",
        "description": "If the Compact() method was called on an nsTArray, the array could have been reallocated without updating other pointers, leading to a potential use-after-free and exploitable crash."
      }
    ],
    "CVE-2020-26968": [
      {
        "url": "https://www.mozilla.org/security/advisories/mfsa2020-50/",
        "description": "Mozilla developers Randell Jesup, Christian Holler, Jason Kratzer, Byron Campen, and Steve Fink reported memory safety bugs present in Firefox 82 and Firefox ESR 78.4. Some of these bugs showed evidence of memory corruption and we presume that with enough effort some of these could have been exploited to run arbitrary code."
      },
      {
        "url": "https://www.mozilla.org/security/advisories/mfsa2020-51/",
        "description": "Mozilla developers Steve Fink, Jason Kratzer, Randell Jesup, Christian Holler, and Byron Campen reported memory safety bugs present in Firefox 82 and Firefox ESR 78.4. Some of these bugs showed evidence of memory corruption and we presume that with enough effort some of these could have been exploited to run arbitrary code."
      },
      {
        "url": "https://www.mozilla.org/security/advisories/mfsa2020-52/",
        "description": "Mozilla developers Steve Fink, Jason Kratzer, Randell Jesup, Christian Holler, and Byron Campen reported memory safety bugs present in Thunderbird 78.4. Some of these bugs showed evidence of memory corruption and we presume that with enough effort some of these could have been exploited to run arbitrary code."
      }
    ],
    "CVE-2020-26969": [
      {
        "url": "https://www.mozilla.org/security/advisories/mfsa2020-50/",
        "description": "Mozilla developers Tyson Smith, Aaron Klotz, David Major and Jason Kratzer reported memory safety bugs present in Firefox 82. Some of these bugs showed evidence of memory corruption and we presume that with enough effort some of these could have been exploited to run arbitrary code."
      }
    ],
    "CVE-2020-26970": [
      {
        "url": "https://www.mozilla.org/security/advisories/mfsa2020-53/",
        "description": "When reading SMTP server status codes, Thunderbird writes an integer value to a position on the stack that is intended to contain just one byte. Depending on processor architecture and stack layout, this leads to stack corruption that may be exploitable."
      }
    ],
    "CVE-2020-26971": [
      {
        "url": "https://www.mozilla.org/security/advisories/mfsa2020-54/",
        "description": "Certain blit values provided by the user were not properly constrained leading to a heap buffer overflow on some video drivers."
      },
      {
        "url": "https://www.mozilla.org/security/advisories/mfsa2020-55/",
        "description": "Certain blit values provided by the user were not properly constrained leading to a heap buffer overflow on some video drivers."
      },
      {
        "url": "https://www.mozilla.org/security/advisories/mfsa2020-56/",
        "description": "Certain blit values provided by the user were not properly constrained leading to a heap buffer overflow on some video drivers."
      }
    ],
    "CVE-2020-26972": [
      {
        "url": "https://www.mozilla.org/security/advisories/mfsa2020-54/",
        "description": "The lifecycle of IPC Actors allows managed actors to outlive their manager actors; and the former must ensure that they are not attempting to use a dead actor they have a reference to. Such a check was omitted in WebGL, resulting in a use-after-free and a potentially exploitable crash."
      }
    ],
    "CVE-2020-26974": [
      {
        "url": "https://www.mozilla.org/security/advisories/mfsa2020-54/",
        "description": "When flex-basis was used on a table wrapper, a StyleGenericFlexBasis object could have been incorrectly cast to the wrong type. This resulted in a heap user-after-free, memory corruption, and a potentially exploitable crash."
      },
      {
        "url": "https://www.mozilla.org/security/advisories/mfsa2020-55/",
        "description": "When flex-basis was used on a table wrapper, a StyleGenericFlexBasis object could have been incorrectly cast to the wrong type. This resulted in a heap user-after-free, memory corruption, and a potentially exploitable crash."
      },
      {
        "url": "https://www.mozilla.org/security/advisories/mfsa2020-56/",
        "description": "When flex-basis was used on a table wrapper, a StyleGenericFlexBasis object could have been incorrectly cast to the wrong type. This resulted in a heap user-after-free, memory corruption, and a potentially exploitable crash."
      }
    ],
    "CVE-2020-35113": [
      {
        "url": "https://www.mozilla.org/security/advisories/mfsa2020-54/",
        "description": "Mozilla developer Christian Holler reported memory safety bugs present in Firefox 83 and Firefox ESR 78.5. Some of these bugs showed evidence of memory corruption and we presume that with enough effort some of these could have been exploited to run arbitrary code."
      },
      {
        "url": "https://www.mozilla.org/security/advisories/mfsa2020-55/",
        "description": "Mozilla developer Christian Holler reported memory safety bugs present in Firefox 83 and Firefox ESR 78.5. Some of these bugs showed evidence of memory corruption and we presume that with enough effort some of these could have been exploited to run arbitrary code."
      },
      {
        "url": "https://www.mozilla.org/security/advisories/mfsa2020-56/",
        "description": "Mozilla developer Christian Holler reported memory safety bugs present in Thunderbird 78.5. Some of these bugs showed evidence of memory corruption and we presume that with enough effort some of these could have been exploited to run arbitrary code."
      }
    ],
    "CVE-2020-35114": [
      {
        "url": "https://www.mozilla.org/security/advisories/mfsa2020-54/",
        "description": "Mozilla developers Christian Holler, Jan-Ivar Bruaroey, and Gabriele Svelto reported memory safety bugs present in Firefox 83. Some of these bugs showed evidence of memory corruption and we presume that with enough effort some of these could have been exploited to run arbitrary code."
      }
    ],
    "CVE-2020-6793": [
      {
        "url": "https://www.mozilla.org/security/advisories/mfsa2020-07/",
        "description": "When processing an email message with an ill-formed envelope, Thunderbird could read data from a random memory location."
      }
    ],
    "CVE-2020-6795": [
      {
        "url": "https://www.mozilla.org/security/advisories/mfsa2020-07/",
        "description": "When processing a message that contains multiple S/MIME signatures, a bug in the MIME processing code caused a null pointer dereference, leading to an unexploitable crash."
      }
    ],
    "CVE-2020-6796": [
      {
        "url": "https://www.mozilla.org/security/advisories/mfsa2020-06/",
        "description": "A content process could have modified shared memory relating to crash reporting information, crash itself, and cause an out-of-bound write. This could have caused memory corruption and a potentially exploitable crash."
      },
      {
        "url": "https://www.mozilla.org/security/advisories/mfsa2020-05/",
        "description": "A content process could have modified shared memory relating to crash reporting information, crash itself, and cause an out-of-bound write. This could have caused memory corruption and a potentially exploitable crash."
      }
    ],
    "CVE-2020-6797": [
      {
        "url": "https://www.mozilla.org/security/advisories/mfsa2020-06/",
        "description": "By downloading a file with the .fileloc extension, a semi-privileged extension could launch an arbitrary application on the user's computer. The attacker is restricted as they are unable to download non-quarantined files or supply command line arguments to the application, limiting the impact.Note: this issue only occurs on Mac OSX. Other operating systems are unaffected."
      },
      {
        "url": "https://www.mozilla.org/security/advisories/mfsa2020-07/",
        "description": "By downloading a file with the .fileloc extension, a semi-privileged extension could launch an arbitrary application on the user's computer. The attacker is restricted as they are unable to download non-quarantined files or supply command line arguments to the application, limiting the impact.Note: this issue only occurs on Mac OSX. Other operating systems are unaffected."
      },
      {
        "url": "https://www.mozilla.org/security/advisories/mfsa2020-05/",
        "description": "By downloading a file with the .fileloc extension, a semi-privileged extension could launch an arbitrary application on the user's computer. The attacker is restricted as they are unable to download non-quarantined files or supply command line arguments to the application, limiting the impact.Note: this issue only occurs on Mac OSX. Other operating systems are unaffected."
      }
    ],
    "CVE-2020-6798": [
      {
        "url": "https://www.mozilla.org/security/advisories/mfsa2020-06/",
        "description": "If a <template> tag was used in a <select%gt; tag, the parser could be confused and allow JavaScript parsing and execution when it should not be allowed. A site that relied on the browser behaving correctly could suffer a cross-site scripting vulnerability as a result."
      },
      {
        "url": "https://www.mozilla.org/security/advisories/mfsa2020-07/",
        "description": "If a <template> tag was used in a <select%gt; tag, the parser could be confused and allow JavaScript parsing and execution when it should not be allowed. A site that relied on the browser behaving correctly could suffer a cross-site scripting vulnerability as a result.In general, this flaw cannot be exploited through email in the Thunderbird product because scripting is disabled when reading mail, but is potentially a risk in browser or browser-like contexts."
      },
      {
        "url": "https://www.mozilla.org/security/advisories/mfsa2020-05/",
        "description": "If a <template> tag was used in a <select%gt; tag, the parser could be confused and allow JavaScript parsing and execution when it should not be allowed. A site that relied on the browser behaving correctly could suffer a cross-site scripting vulnerability as a result."
      }
    ],
    "CVE-2020-6799": [
      {
        "url": "https://www.mozilla.org/security/advisories/mfsa2020-06/",
        "description": "Command line arguments could have been injected during Firefox invocation as a shell handler for certain unsupported file types. This required Firefox to be configured as the default handler for a given file type and for a file downloaded to be opened in a third party application that insufficiently sanitized URL data. In that situation, clicking a link in the third party application could have been used to retrieve and execute files whose location was supplied through command line arguments. Note: This issue only affects Windows operating systems and when Firefox is configured as the default handler for non-default filetypes. Other operating systems are unaffected."
      },
      {
        "url": "https://www.mozilla.org/security/advisories/mfsa2020-05/",
        "description": "Command line arguments could have been injected during Firefox invocation as a shell handler for certain unsupported file types. This required Firefox to be configured as the default handler for a given file type and for a file downloaded to be opened in a third party application that insufficiently sanitized URL data. In that situation, clicking a link in the third party application could have been used to retrieve and execute files whose location was supplied through command line arguments. Note: This issue only affects Windows operating systems and when Firefox is configured as the default handler for non-default filetypes. Other operating systems are unaffected."
      }
    ],
    "CVE-2020-6800": [
      {
        "url": "https://www.mozilla.org/security/advisories/mfsa2020-06/",
        "description": "Mozilla developers and community members Raul Gurzau, Tyson Smith, Bob Clary, Liz Henry, and Christian Holler reported memory safety bugs present in Firefox 72 and Firefox ESR 68.4. Some of these bugs showed evidence of memory corruption and we presume that with enough effort some of these could have been exploited to run arbitrary code."
      },
      {
        "url": "https://www.mozilla.org/security/advisories/mfsa2020-07/",
        "description": "Mozilla developers and community members Raul Gurzau, Tyson Smith, Bob Clary, Liz Henry, and Christian Holler reported memory safety bugs present in Firefox 72 and Firefox ESR 68.4. Some of these bugs showed evidence of memory corruption and we presume that with enough effort some of these could have been exploited to run arbitrary code.In general, these flaws cannot be exploited through email in the Thunderbird product because scripting is disabled when reading mail, but are potentially risks in browser or browser-like contexts."
      },
      {
        "url": "https://www.mozilla.org/security/advisories/mfsa2020-05/",
        "description": "Mozilla developers and community members Raul Gurzau, Tyson Smith, Bob Clary, Liz Henry, and Christian Holler reported memory safety bugs present in Firefox 72 and Firefox ESR 68.4. Some of these bugs showed evidence of memory corruption and we presume that with enough effort some of these could have been exploited to run arbitrary code."
      }
    ],
    "CVE-2020-6801": [
      {
        "url": "https://www.mozilla.org/security/advisories/mfsa2020-05/",
        "description": "Mozilla developers Jason Kratzer, Tyson Smith, and Christian Holler reported memory safety bugs present in Firefox 72. Some of these bugs showed evidence of memory corruption and we presume that with enough effort some of these could have been exploited to run arbitrary code."
      }
    ],
    "CVE-2020-6805": [
      {
        "url": "https://www.mozilla.org/security/advisories/mfsa2020-10/",
        "description": "When removing data about an origin whose tab was recently closed, a use-after-free could occur in the Quota manager, resulting in a potentially exploitable crash."
      },
      {
        "url": "https://www.mozilla.org/security/advisories/mfsa2020-08/",
        "description": "When removing data about an origin whose tab was recently closed, a use-after-free could occur in the Quota manager, resulting in a potentially exploitable crash."
      },
      {
        "url": "https://www.mozilla.org/security/advisories/mfsa2020-09/",
        "description": "When removing data about an origin whose tab was recently closed, a use-after-free could occur in the Quota manager, resulting in a potentially exploitable crash."
      }
    ],
    "CVE-2020-6806": [
      {
        "url": "https://www.mozilla.org/security/advisories/mfsa2020-10/",
        "description": "By carefully crafting promise resolutions, it was possible to cause an out-of-bounds read off the end of an array resized during script execution. This could have led to memory corruption and a potentially exploitable crash."
      },
      {
        "url": "https://www.mozilla.org/security/advisories/mfsa2020-08/",
        "description": "By carefully crafting promise resolutions, it was possible to cause an out-of-bounds read off the end of an array resized during script execution. This could have led to memory corruption and a potentially exploitable crash."
      },
      {
        "url": "https://www.mozilla.org/security/advisories/mfsa2020-09/",
        "description": "By carefully crafting promise resolutions, it was possible to cause an out-of-bounds read off the end of an array resized during script execution. This could have led to memory corruption and a potentially exploitable crash."
      }
    ],
    "CVE-2020-6807": [
      {
        "url": "https://www.mozilla.org/security/advisories/mfsa2020-10/",
        "description": "When a device was changed while a stream was about to be destroyed, the stream-reinit task may have been executed after the stream was destroyed, causing a use-after-free and a potentially exploitable crash."
      },
      {
        "url": "https://www.mozilla.org/security/advisories/mfsa2020-08/",
        "description": "When a device was changed while a stream was about to be destroyed, the stream-reinit task may have been executed after the stream was destroyed, causing a use-after-free and a potentially exploitable crash."
      },
      {
        "url": "https://www.mozilla.org/security/advisories/mfsa2020-09/",
        "description": "When a device was changed while a stream was about to be destroyed, the stream-reinit task may have been executed after the stream was destroyed, causing a use-after-free and a potentially exploitable crash."
      }
    ],
    "CVE-2020-6809": [
      {
        "url": "https://www.mozilla.org/security/advisories/mfsa2020-08/",
        "description": "When a Web Extension had the all-urls permission and made a fetch request with a mode set to 'same-origin', it was possible for the Web Extension to read local files."
      }
    ],
    "CVE-2020-6812": [
      {
        "url": "https://www.mozilla.org/security/advisories/mfsa2020-10/",
        "description": "The first time AirPods are connected to an iPhone, they become named after the user's name by default (e.g. Jane Doe's AirPods.) Websites with camera or microphone permission are able to enumerate device names, disclosing the user's name. To resolve this issue, Firefox added a special case that renames devices containing the substring 'AirPods' to simply 'AirPods'."
      },
      {
        "url": "https://www.mozilla.org/security/advisories/mfsa2020-08/",
        "description": "The first time AirPods are connected to an iPhone, they become named after the user's name by default (e.g. Jane Doe's AirPods.) Websites with camera or microphone permission are able to enumerate device names, disclosing the user's name. To resolve this issue, Firefox added a special case that renames devices containing the substring 'AirPods' to simply 'AirPods'."
      },
      {
        "url": "https://www.mozilla.org/security/advisories/mfsa2020-09/",
        "description": "The first time AirPods are connected to an iPhone, they become named after the user's name by default (e.g. Jane Doe's AirPods.) Websites with camera or microphone permission are able to enumerate device names, disclosing the user's name. To resolve this issue, Firefox added a special case that renames devices containing the substring 'AirPods' to simply 'AirPods'."
      }
    ],
    "CVE-2020-6814": [
      {
        "url": "https://www.mozilla.org/security/advisories/mfsa2020-10/",
        "description": "Mozilla developers Byron Campen, Jason Kratzer, and Christian Holler reported memory safety bugs present in Thunderbird 68.5. Some of these bugs showed evidence of memory corruption and we presume that with enough effort some of these could have been exploited to run arbitrary code."
      },
      {
        "url": "https://www.mozilla.org/security/advisories/mfsa2020-08/",
        "description": "Mozilla developers Byron Campen, Jason Kratzer, and Christian Holler reported memory safety bugs present in Firefox 73 and Firefox ESR 68.5. Some of these bugs showed evidence of memory corruption and we presume that with enough effort some of these could have been exploited to run arbitrary code."
      },
      {
        "url": "https://www.mozilla.org/security/advisories/mfsa2020-09/",
        "description": "Mozilla developers and community members Byron Campen, Jason Kratzer, and Christian Holler reported memory safety bugs present in Firefox 73 and Firefox ESR 68.5. Some of these bugs showed evidence of memory corruption and we presume that with enough effort some of these could have been exploited to run arbitrary code."
      }
    ],
    "CVE-2020-6815": [
      {
        "url": "https://www.mozilla.org/security/advisories/mfsa2020-08/",
        "description": "Mozilla developers Jason Kratzer, Boris Zbarsky, Tyson Smith, and Alexandru Michis reported memory safety and script safety bugs present in Firefox 73. Some of these bugs showed evidence of memory corruption or escalation of privilege and we presume that with enough effort some of these could have been exploited to run arbitrary code."
      }
    ],
    "CVE-2020-6819": [
      {
        "url": "https://www.mozilla.org/security/advisories/mfsa2020-14/",
        "description": "Under certain conditions, when running the nsDocShell destructor, a race condition can cause a use-after-free."
      },
      {
        "url": "https://www.mozilla.org/security/advisories/mfsa2020-11/",
        "description": "Under certain conditions, when running the nsDocShell destructor, a race condition can cause a use-after-free. We are aware of targeted attacks in the wild abusing this flaw."
      }
    ],
    "CVE-2020-6821": [
      {
        "url": "https://www.mozilla.org/security/advisories/mfsa2020-13/",
        "description": "When reading from areas partially or fully outside the source resource with WebGL's copyTexSubImage method, the specification requires the returned values be zero. Previously, this memory was uninitialized, leading to potentially sensitive data disclosure."
      },
      {
        "url": "https://www.mozilla.org/security/advisories/mfsa2020-14/",
        "description": "When reading from areas partially or fully outside the source resource with WebGL's copyTexSubImage method, the specification requires the returned values be zero. Previously, this memory was uninitialized, leading to potentially sensitive data disclosure."
      },
      {
        "url": "https://www.mozilla.org/security/advisories/mfsa2020-12/",
        "description": "When reading from areas partially or fully outside the source resource with WebGL's copyTexSubImage method, the specification requires the returned values be zero. Previously, this memory was uninitialized, leading to potentially sensitive data disclosure."
      }
    ],
    "CVE-2020-6822": [
      {
        "url": "https://www.mozilla.org/security/advisories/mfsa2020-13/",
        "description": "On 32-bit builds, an out of bounds write could have occurred when processing an image larger than 4 GB in GMPDecodeData. It is possible that with enough effort this could have been exploited to run arbitrary code."
      },
      {
        "url": "https://www.mozilla.org/security/advisories/mfsa2020-14/",
        "description": "On 32-bit builds, an out of bounds write could have occurred when processing an image larger than 4 GB in GMPDecodeData. It is possible that with enough effort this could have been exploited to run arbitrary code."
      },
      {
        "url": "https://www.mozilla.org/security/advisories/mfsa2020-12/",
        "description": "On 32-bit builds, an out of bounds write could have occurred when processing an image larger than 4 GB in GMPDecodeData. It is possible that with enough effort this could have been exploited to run arbitrary code."
      }
    ],
    "CVE-2020-6823": [
      {
        "url": "https://www.mozilla.org/security/advisories/mfsa2020-12/",
        "description": "A malicious extension could have called browser.identity.launchWebAuthFlow, controlling the redirect_uri, and through the Promise returned, obtain the Auth code and gain access to the user's account at the service provider."
      }
    ],
    "CVE-2020-6825": [
      {
        "url": "https://www.mozilla.org/security/advisories/mfsa2020-13/",
        "description": "Mozilla developers Tyson Smith and Christian Holler reported memory safety bugs present in Firefox 74 and Firefox ESR 68.6. Some of these bugs showed evidence of memory corruption and we presume that with enough effort some of these could have been exploited to run arbitrary code."
      },
      {
        "url": "https://www.mozilla.org/security/advisories/mfsa2020-14/",
        "description": "Mozilla developers Tyson Smith and Christian Holler reported memory safety bugs present in Firefox 74 and Firefox ESR 68.6. Some of these bugs showed evidence of memory corruption and we presume that with enough effort some of these could have been exploited to run arbitrary code."
      },
      {
        "url": "https://www.mozilla.org/security/advisories/mfsa2020-12/",
        "description": "Mozilla developers and community members Tyson Smith and Christian Holler reported memory safety bugs present in Firefox 74 and Firefox ESR 68.6. Some of these bugs showed evidence of memory corruption and we presume that with enough effort some of these could have been exploited to run arbitrary code."
      }
    ],
    "CVE-2020-6826": [
      {
        "url": "https://www.mozilla.org/security/advisories/mfsa2020-12/",
        "description": "Mozilla developers Tyson Smith, Bob Clary, and Alexandru Michis reported memory safety bugs present in Firefox 74. Some of these bugs showed evidence of memory corruption and we presume that with enough effort some of these could have been exploited to run arbitrary code."
      }
    ],
    "CVE-2020-6828": [
      {
        "url": "https://www.mozilla.org/security/advisories/mfsa2020-13/",
        "description": "A malicious Android application could craft an Intent that would have been processed by Firefox for Android and potentially result in a file overwrite in the user's profile directory. One exploitation vector for this would be to supply a user.js file providing arbitrary malicious preference values. Control of arbitrary preferences can lead to sufficient compromise such that it is generally equivalent to arbitrary code execution. Note: This issue only affects Firefox for Android. Other operating systems are unaffected."
      }
    ],
    "CVE-2020-6830": [
      {
        "url": "https://www.mozilla.org/security/advisories/mfsa2020-15/",
        "description": "For native-to-JS bridging, the app requires a unique token to be passed that ensures non-app code can't call the bridging functions. That token was being used for JS-to-native also, but it isn't needed in this case, and its usage was also leaking this token."
      }
    ]
  }
}