{
  "year": 2019,
  "total": 157,
  "reference": "mozilla.org",
  "reports": {
    "CVE-2019-11691": [
      {
        "url": "https://www.mozilla.org/security/advisories/mfsa2019-15/",
        "description": "A use-after-free vulnerability can occur when working with XMLHttpRequest (XHR) in an event loop, causing the XHR main thread to be called after it has been freed. This results in a potentially exploitable crash."
      },
      {
        "url": "https://www.mozilla.org/security/advisories/mfsa2019-14/",
        "description": "A use-after-free vulnerability can occur when working with XMLHttpRequest (XHR) in an event loop, causing the XHR main thread to be called after it has been freed. This results in a potentially exploitable crash."
      },
      {
        "url": "https://www.mozilla.org/security/advisories/mfsa2019-13/",
        "description": "A use-after-free vulnerability can occur when working with XMLHttpRequest (XHR) in an event loop, causing the XHR main thread to be called after it has been freed. This results in a potentially exploitable crash."
      }
    ],
    "CVE-2019-11692": [
      {
        "url": "https://www.mozilla.org/security/advisories/mfsa2019-15/",
        "description": "A use-after-free vulnerability can occur when listeners are removed from the event listener manager while still in use, resulting in a potentially exploitable crash."
      },
      {
        "url": "https://www.mozilla.org/security/advisories/mfsa2019-14/",
        "description": "A use-after-free vulnerability can occur when listeners are removed from the event listener manager while still in use, resulting in a potentially exploitable crash."
      },
      {
        "url": "https://www.mozilla.org/security/advisories/mfsa2019-13/",
        "description": "A use-after-free vulnerability can occur when listeners are removed from the event listener manager while still in use, resulting in a potentially exploitable crash."
      }
    ],
    "CVE-2019-11693": [
      {
        "url": "https://www.mozilla.org/security/advisories/mfsa2019-15/",
        "description": "The bufferdata function in WebGL is vulnerable to a buffer overflow with specific graphics drivers on Linux. This could result in malicious content freezing a tab or triggering a potentially exploitable crash. Note: this issue only occurs on Linux. Other operating systems are unaffected."
      },
      {
        "url": "https://www.mozilla.org/security/advisories/mfsa2019-14/",
        "description": "The bufferdata function in WebGL is vulnerable to a buffer overflow with specific graphics drivers on Linux. This could result in malicious content freezing a tab or triggering a potentially exploitable crash. Note: this issue only occurs on Linux. Other operating systems are unaffected."
      },
      {
        "url": "https://www.mozilla.org/security/advisories/mfsa2019-13/",
        "description": "The bufferdata function in WebGL is vulnerable to a buffer overflow with specific graphics drivers on Linux. This could result in malicious content freezing a tab or triggering a potentially exploitable crash. Note: this issue only occurs on Linux. Other operating systems are unaffected."
      }
    ],
    "CVE-2019-11696": [
      {
        "url": "https://www.mozilla.org/security/advisories/mfsa2019-13/",
        "description": "Files with the .JNLP extension used for \"Java web start\" applications are not treated as executable content for download prompts even though they can be executed if Java is installed on the local system. This could allow users to mistakenly launch an executable binary locally."
      }
    ],
    "CVE-2019-11697": [
      {
        "url": "https://www.mozilla.org/security/advisories/mfsa2019-13/",
        "description": "If the ALT and \"a\" keys are pressed when users receive an extension installation prompt, the extension will be installed without the install prompt delay that keeps the prompt visible in order for users to accept or decline the installation. A malicious web page could use this with spoofing on the page to trick users into installing a malicious extension."
      }
    ],
    "CVE-2019-11698": [
      {
        "url": "https://www.mozilla.org/security/advisories/mfsa2019-15/",
        "description": "If a crafted hyperlink is dragged and dropped to the bookmark bar or sidebar and the resulting bookmark is subsequently dragged and dropped into the web content area, an arbitrary query of a user's browser history can be run and transmitted to the content page via drop event data. This allows for the theft of browser history by a malicious site."
      },
      {
        "url": "https://www.mozilla.org/security/advisories/mfsa2019-14/",
        "description": "If a crafted hyperlink is dragged and dropped to the bookmark bar or sidebar and the resulting bookmark is subsequently dragged and dropped into the web content area, an arbitrary query of a user's browser history can be run and transmitted to the content page via drop event data. This allows for the theft of browser history by a malicious site."
      },
      {
        "url": "https://www.mozilla.org/security/advisories/mfsa2019-13/",
        "description": "If a crafted hyperlink is dragged and dropped to the bookmark bar or sidebar and the resulting bookmark is subsequently dragged and dropped into the web content area, an arbitrary query of a user's browser history can be run and transmitted to the content page via drop event data. This allows for the theft of browser history by a malicious site."
      }
    ],
    "CVE-2019-11701": [
      {
        "url": "https://www.mozilla.org/security/advisories/mfsa2019-13/",
        "description": "The default webcal: protocol handler will load a web site vulnerable to cross-site scripting (XSS) attacks. This default was left in place as a legacy feature and has now been removed. Note: this issue only affects users with an account on the vulnerable service. Other users are unaffected."
      }
    ],
    "CVE-2019-11703": [
      {
        "url": "https://www.mozilla.org/security/advisories/mfsa2019-17/",
        "description": "A flaw in Thunderbird's implementation of iCal causes a heap buffer overflow in parser_get_next_char when processing certain email messages, resulting in a potentially exploitable crash."
      }
    ],
    "CVE-2019-11704": [
      {
        "url": "https://www.mozilla.org/security/advisories/mfsa2019-17/",
        "description": "A flaw in Thunderbird's implementation of iCal causes a heap buffer overflow in icalmemory_strdup_and_dequote when processing certain email messages, resulting in a potentially exploitable crash."
      }
    ],
    "CVE-2019-11705": [
      {
        "url": "https://www.mozilla.org/security/advisories/mfsa2019-17/",
        "description": "A flaw in Thunderbird's implementation of iCal causes a stack buffer overflow in icalrecur_add_bydayrules when processing certain email messages, resulting in a potentially exploitable crash."
      }
    ],
    "CVE-2019-11708": [
      {
        "url": "https://www.mozilla.org/security/advisories/mfsa2019-20/",
        "description": "Insufficient vetting of parameters passed with the Prompt:Open IPC message between child and parent processes can result in the non-sandboxed parent process opening web content chosen by a compromised child process. When combined with additional vulnerabilities this could result in executing arbitrary code on the user's computer."
      },
      {
        "url": "https://www.mozilla.org/security/advisories/mfsa2019-19/",
        "description": "Insufficient vetting of parameters passed with the Prompt:Open IPC message between child and parent processes can result in the non-sandboxed parent process opening web content chosen by a compromised child process. When combined with additional vulnerabilities this could result in executing arbitrary code on the user's computer."
      }
    ],
    "CVE-2019-11709": [
      {
        "url": "https://www.mozilla.org/security/advisories/mfsa2019-21/",
        "description": "Mozilla developers and community members Andreea Pavel, Christian Holler, Honza Bambas, Jason Kratzer, and Jeff Gilbert reported memory safety bugs present in Firefox 67 and Firefox ESR 60.7. Some of these bugs showed evidence of memory corruption and we presume that with enough effort that some of these could be exploited to run arbitrary code."
      },
      {
        "url": "https://www.mozilla.org/security/advisories/mfsa2019-22/",
        "description": "Mozilla developers and community members Andreea Pavel, Christian Holler, Honza Bambas, Jason Kratzer, and Jeff Gilbert reported memory safety bugs present in Firefox 67 and Firefox ESR 60.7. Some of these bugs showed evidence of memory corruption and we presume that with enough effort that some of these could be exploited to run arbitrary code."
      },
      {
        "url": "https://www.mozilla.org/security/advisories/mfsa2019-23/",
        "description": "Mozilla developers and community members Andreea Pavel, Christian Holler, Honza Bambas, Jason Kratzer, and Jeff Gilbert reported memory safety bugs present in Firefox 67, Firefox ESR 60.7, and Thunderbird 60.7. Some of these bugs showed evidence of memory corruption and we presume that with enough effort that some of these could be exploited to run arbitrary code."
      }
    ],
    "CVE-2019-11710": [
      {
        "url": "https://www.mozilla.org/security/advisories/mfsa2019-21/",
        "description": "Mozilla developers and community members Andr√© Bargull, Christian Holler, Natalia Csoregi, Raul Gurzau, Daniel Varga, Jon Coppeard, Marcia Knous, Gary Kwong, Randell Jesup, David Bolter, Jeff Gilbert, and Deian Stefan reported memory safety bugs present in Firefox 67. Some of these bugs showed evidence of memory corruption and we presume that with enough effort that some of these could be exploited to run arbitrary code."
      }
    ],
    "CVE-2019-11712": [
      {
        "url": "https://www.mozilla.org/security/advisories/mfsa2019-21/",
        "description": "POST requests made by NPAPI plugins, such as Flash, that receive a status 308 redirect response can bypass CORS requirements. This can allow an attacker to perform Cross-Site Request Forgery (CSRF) attacks."
      },
      {
        "url": "https://www.mozilla.org/security/advisories/mfsa2019-22/",
        "description": "POST requests made by NPAPI plugins, such as Flash, that receive a status 308 redirect response can bypass CORS requirements. This can allow an attacker to perform Cross-Site Request Forgery (CSRF) attacks."
      },
      {
        "url": "https://www.mozilla.org/security/advisories/mfsa2019-23/",
        "description": "POST requests made by NPAPI plugins, such as Flash, that receive a status 308 redirect response can bypass CORS requirements. This can allow an attacker to perform Cross-Site Request Forgery (CSRF) attacks."
      }
    ],
    "CVE-2019-11713": [
      {
        "url": "https://www.mozilla.org/security/advisories/mfsa2019-21/",
        "description": "A use-after-free vulnerability can occur in HTTP/2 when a cached HTTP/2 stream is closed while still in use, resulting in a potentially exploitable crash."
      },
      {
        "url": "https://www.mozilla.org/security/advisories/mfsa2019-22/",
        "description": "A use-after-free vulnerability can occur in HTTP/2 when a cached HTTP/2 stream is closed while still in use, resulting in a potentially exploitable crash."
      },
      {
        "url": "https://www.mozilla.org/security/advisories/mfsa2019-23/",
        "description": "A use-after-free vulnerability can occur in HTTP/2 when a cached HTTP/2 stream is closed while still in use, resulting in a potentially exploitable crash."
      }
    ],
    "CVE-2019-11714": [
      {
        "url": "https://www.mozilla.org/security/advisories/mfsa2019-21/",
        "description": "Necko can access a child on the wrong thread during UDP connections, resulting in a potentially exploitable crash in some instances."
      }
    ],
    "CVE-2019-11715": [
      {
        "url": "https://www.mozilla.org/security/advisories/mfsa2019-21/",
        "description": "Due to an error while parsing page content, it is possible for properly sanitized user input to be misinterpreted and lead to XSS hazards on web sites in certain circumstances."
      },
      {
        "url": "https://www.mozilla.org/security/advisories/mfsa2019-22/",
        "description": "Due to an error while parsing page content, it is possible for properly sanitized user input to be misinterpreted and lead to XSS hazards on web sites in certain circumstances."
      },
      {
        "url": "https://www.mozilla.org/security/advisories/mfsa2019-23/",
        "description": "Due to an error while parsing page content, it is possible for properly sanitized user input to be misinterpreted and lead to XSS hazards on web sites in certain circumstances."
      }
    ],
    "CVE-2019-11716": [
      {
        "url": "https://www.mozilla.org/security/advisories/mfsa2019-21/",
        "description": "Until explicitly accessed by script, window.globalThis is not enumerable and, as a result, is not visible to code such as Object.getOwnPropertyNames(window). Sites that deploy a sandboxing that depends on enumerating and freezing access to the window object may miss this, allowing their sandboxes to be bypassed."
      }
    ],
    "CVE-2019-11719": [
      {
        "url": "https://www.mozilla.org/security/advisories/mfsa2019-21/",
        "description": "When importing a curve25519 private key in PKCS#8format with leading 0x00 bytes, it is possible to trigger an out-of-bounds read in the Network Security Services (NSS) library. This could lead to information disclosure."
      },
      {
        "url": "https://www.mozilla.org/security/advisories/mfsa2019-22/",
        "description": "When importing a curve25519 private key in PKCS#8format with leading 0x00 bytes, it is possible to trigger an out-of-bounds read in the Network Security Services (NSS) library. This could lead to information disclosure."
      },
      {
        "url": "https://www.mozilla.org/security/advisories/mfsa2019-23/",
        "description": "When importing a curve25519 private key in PKCS#8format with leading 0x00 bytes, it is possible to trigger an out-of-bounds read in the Network Security Services (NSS) library. This could lead to information disclosure."
      }
    ],
    "CVE-2019-11720": [
      {
        "url": "https://www.mozilla.org/security/advisories/mfsa2019-21/",
        "description": "Some unicode characters are incorrectly treated as whitespace during the parsing of web content instead of triggering parsing errors. This allows malicious code to then be processed, evading cross-site scripting (XSS) filtering."
      }
    ],
    "CVE-2019-11729": [
      {
        "url": "https://www.mozilla.org/security/advisories/mfsa2019-21/",
        "description": "Empty or malformed p256-ECDH public keys may trigger a segmentation fault due values being improperly sanitized before being copied into memory and used."
      },
      {
        "url": "https://www.mozilla.org/security/advisories/mfsa2019-22/",
        "description": "Empty or malformed p256-ECDH public keys may trigger a segmentation fault due values being improperly sanitized before being copied into memory and used."
      },
      {
        "url": "https://www.mozilla.org/security/advisories/mfsa2019-23/",
        "description": "Empty or malformed p256-ECDH public keys may trigger a segmentation fault due values being improperly sanitized before being copied into memory and used."
      }
    ],
    "CVE-2019-11733": [
      {
        "url": "https://www.mozilla.org/security/advisories/mfsa2019-24/",
        "description": "When a master password is set, it is required to be entered again before stored passwords can be accessed in the 'Saved Logins' dialog. It was found that locally stored passwords can be copied to the clipboard thorough the 'copy password' context menu item without re-entering the master password if the master password had been previously entered in the same session, allowing for potential theft of stored passwords."
      }
    ],
    "CVE-2019-11740": [
      {
        "url": "https://www.mozilla.org/security/advisories/mfsa2019-29/",
        "description": "Mozilla developers and community members Tyson Smith and Nathan Froyd reported memory safety bugs present in Firefox 68, Firefox ESR 68, Firefox 60.8, Thunderbird 68, and Thunderbird 60.8. Some of these bugs showed evidence of memory corruption and we presume that with enough effort that some of these could be exploited to run arbitrary code."
      },
      {
        "url": "https://www.mozilla.org/security/advisories/mfsa2019-30/",
        "description": "Mozilla developers and community members Tyson Smith and Nathan Froyd reported memory safety bugs present in Firefox 68, Firefox ESR 68, Firefox 60.8, Thunderbird 68, and Thunderbird 60.8. Some of these bugs showed evidence of memory corruption and we presume that with enough effort that some of these could be exploited to run arbitrary code."
      },
      {
        "url": "https://www.mozilla.org/security/advisories/mfsa2019-27/",
        "description": "Mozilla developers and community members Tyson Smith and Nathan Froyd reported memory safety bugs present in Firefox 68, Firefox ESR 68, and Firefox 60.8. Some of these bugs showed evidence of memory corruption and we presume that with enough effort that some of these could be exploited to run arbitrary code."
      },
      {
        "url": "https://www.mozilla.org/security/advisories/mfsa2019-25/",
        "description": "Mozilla developers and community members Tyson Smith and Nathan Froyd reported memory safety bugs present in Firefox 68, Firefox ESR 68, and Firefox 60.8. Some of these bugs showed evidence of memory corruption and we presume that with enough effort that some of these could be exploited to run arbitrary code."
      },
      {
        "url": "https://www.mozilla.org/security/advisories/mfsa2019-26/",
        "description": "Mozilla developers and community members Tyson Smith and Nathan Froyd reported memory safety bugs present in Firefox 68, Firefox ESR 68, and Firefox 60.8. Some of these bugs showed evidence of memory corruption and we presume that with enough effort that some of these could be exploited to run arbitrary code."
      }
    ],
    "CVE-2019-11741": [
      {
        "url": "https://www.mozilla.org/security/advisories/mfsa2019-25/",
        "description": "A compromised sandboxed content process can perform a Universal Cross-site Scripting (UXSS) attack on content from any site it can cause to be loaded in the same process. Because addons.mozilla.org and accounts.firefox.com have close ties to the Firefox product, malicious manipulation of these sites within the browser can potentially be used to modify a user's Firefox configuration. These two sites will now be isolated into their own process and not allowed to be loaded in a standard content process."
      }
    ],
    "CVE-2019-11744": [
      {
        "url": "https://www.mozilla.org/security/advisories/mfsa2019-29/",
        "description": "Some HTML elements, such as <title> and <textarea>, can contain literal angle brackets without treating them as markup. It is possible to pass a literal closing tag to .innerHTML on these elements, and subsequent content after that will be parsed as if it were outside the tag. This can lead to XSS if a site does not filter user input as strictly for these elements as it does for other elements."
      },
      {
        "url": "https://www.mozilla.org/security/advisories/mfsa2019-30/",
        "description": "Some HTML elements, such as <title> and <textarea>, can contain literal angle brackets without treating them as markup. It is possible to pass a literal closing tag to .innerHTML on these elements, and subsequent content after that will be parsed as if it were outside the tag. This can lead to XSS if a site does not filter user input as strictly for these elements as it does for other elements."
      },
      {
        "url": "https://www.mozilla.org/security/advisories/mfsa2019-27/",
        "description": "Some HTML elements, such as <title> and <textarea>, can contain literal angle brackets without treating them as markup. It is possible to pass a literal closing tag to .innerHTML on these elements, and subsequent content after that will be parsed as if it were outside the tag. This can lead to XSS if a site does not filter user input as strictly for these elements as it does for other elements."
      },
      {
        "url": "https://www.mozilla.org/security/advisories/mfsa2019-25/",
        "description": "Some HTML elements, such as <title> and <textarea>, can contain literal angle brackets without treating them as markup. It is possible to pass a literal closing tag to .innerHTML on these elements, and subsequent content after that will be parsed as if it were outside the tag. This can lead to XSS if a site does not filter user input as strictly for these elements as it does for other elements."
      },
      {
        "url": "https://www.mozilla.org/security/advisories/mfsa2019-26/",
        "description": "Some HTML elements, such as <title> and <textarea>, can contain literal angle brackets without treating them as markup. It is possible to pass a literal closing tag to .innerHTML on these elements, and subsequent content after that will be parsed as if it were outside the tag. This can lead to XSS if a site does not filter user input as strictly for these elements as it does for other elements."
      }
    ],
    "CVE-2019-11745": [
      {
        "url": "https://www.mozilla.org/security/advisories/mfsa2019-38/",
        "description": "When encrypting with a block cipher, if a call to NSC_EncryptUpdate was made with data smaller than the block size, a small out of bounds write could occur. This could have caused heap corruption and a potentially exploitable crash."
      },
      {
        "url": "https://www.mozilla.org/security/advisories/mfsa2019-37/",
        "description": "When encrypting with a block cipher, if a call to NSC_EncryptUpdate was made with data smaller than the block size, a small out of bounds write could occur. This could have caused heap corruption and a potentially exploitable crash."
      },
      {
        "url": "https://www.mozilla.org/security/advisories/mfsa2019-36/",
        "description": "When encrypting with a block cipher, if a call to NSC_EncryptUpdate was made with data smaller than the block size, a small out of bounds write could occur. This could have caused heap corruption and a potentially exploitable crash."
      }
    ],
    "CVE-2019-11746": [
      {
        "url": "https://www.mozilla.org/security/advisories/mfsa2019-29/",
        "description": "A use-after-free vulnerability can occur while manipulating video elements if the body is freed while still in use. This results in a potentially exploitable crash."
      },
      {
        "url": "https://www.mozilla.org/security/advisories/mfsa2019-30/",
        "description": "A use-after-free vulnerability can occur while manipulating video elements if the body is freed while still in use. This results in a potentially exploitable crash."
      },
      {
        "url": "https://www.mozilla.org/security/advisories/mfsa2019-27/",
        "description": "A use-after-free vulnerability can occur while manipulating video elements if the body is freed while still in use. This results in a potentially exploitable crash."
      },
      {
        "url": "https://www.mozilla.org/security/advisories/mfsa2019-25/",
        "description": "A use-after-free vulnerability can occur while manipulating video elements if the body is freed while still in use. This results in a potentially exploitable crash."
      },
      {
        "url": "https://www.mozilla.org/security/advisories/mfsa2019-26/",
        "description": "A use-after-free vulnerability can occur while manipulating video elements if the body is freed while still in use. This results in a potentially exploitable crash."
      }
    ],
    "CVE-2019-11752": [
      {
        "url": "https://www.mozilla.org/security/advisories/mfsa2019-29/",
        "description": "It is possible to delete an IndexedDB key value and subsequently try to extract it during conversion. This results in a use-after-free and a potentially exploitable crash."
      },
      {
        "url": "https://www.mozilla.org/security/advisories/mfsa2019-30/",
        "description": "It is possible to delete an IndexedDB key value and subsequently try to extract it during conversion. This results in a use-after-free and a potentially exploitable crash."
      },
      {
        "url": "https://www.mozilla.org/security/advisories/mfsa2019-27/",
        "description": "It is possible to delete an IndexedDB key value and subsequently try to extract it during conversion. This results in a use-after-free and a potentially exploitable crash."
      },
      {
        "url": "https://www.mozilla.org/security/advisories/mfsa2019-25/",
        "description": "It is possible to delete an IndexedDB key value and subsequently try to extract it during conversion. This results in a use-after-free and a potentially exploitable crash."
      },
      {
        "url": "https://www.mozilla.org/security/advisories/mfsa2019-26/",
        "description": "It is possible to delete an IndexedDB key value and subsequently try to extract it during conversion. This results in a use-after-free and a potentially exploitable crash."
      }
    ],
    "CVE-2019-11756": [
      {
        "url": "https://www.mozilla.org/security/advisories/mfsa2019-36/",
        "description": "Improper refcounting of soft token session objects could cause a use-after-free and crash (likely limited to a denial of service)."
      }
    ],
    "CVE-2019-11757": [
      {
        "url": "https://www.mozilla.org/security/advisories/mfsa2019-35/",
        "description": "When following the value's prototype chain, it was possible to retain a reference to a locale, delete it, and subsequently reference it. This resulted in a use-after-free and a potentially exploitable crash."
      },
      {
        "url": "https://www.mozilla.org/security/advisories/mfsa2019-34/",
        "description": "When storing a value in IndexedDB, the value's prototype chain is followed and it was possible to retain a reference to a locale, delete it, and subsequently reference it. This resulted in a use-after-free and a potentially exploitable crash."
      },
      {
        "url": "https://www.mozilla.org/security/advisories/mfsa2019-33/",
        "description": "When following the value's prototype chain, it was possible to retain a reference to a locale, delete it, and subsequently reference it. This resulted in a use-after-free and a potentially exploitable crash."
      }
    ],
    "CVE-2019-11758": [
      {
        "url": "https://www.mozilla.org/security/advisories/mfsa2019-35/",
        "description": "Mozilla community member Philipp reported a memory safety bug present in Firefox 68 when 360 Total Security was installed. This bug showed evidence of memory corruption in the accessibility engine and we presume that with enough effort that it could be exploited to run arbitrary code."
      },
      {
        "url": "https://www.mozilla.org/security/advisories/mfsa2019-33/",
        "description": "Mozilla community member Philipp reported a memory safety bug present in Firefox 68 when 360 Total Security was installed. This bug showed evidence of memory corruption in the accessibility engine and we presume that with enough effort that it could be exploited to run arbitrary code."
      },
      {
        "url": "https://www.mozilla.org/security/advisories/mfsa2019-25/",
        "description": "Mozilla developer Philipp reported a memory safety bug present in Firefox 68 when 360 Total Security was installed. This bug showed evidence of memory corruption in the accessibility engine and we presume that with enough effort that it could be exploited to run arbitrary code."
      }
    ],
    "CVE-2019-11760": [
      {
        "url": "https://www.mozilla.org/security/advisories/mfsa2019-35/",
        "description": "A fixed-size stack buffer could overflow in nrappkit when doing WebRTC signaling. This resulted in a potentially exploitable crash in some instances."
      },
      {
        "url": "https://www.mozilla.org/security/advisories/mfsa2019-34/",
        "description": "A fixed-size stack buffer could overflow in nrappkit when doing WebRTC signaling. This resulted in a potentially exploitable crash in some instances."
      },
      {
        "url": "https://www.mozilla.org/security/advisories/mfsa2019-33/",
        "description": "A fixed-size stack buffer could overflow in nrappkit when doing WebRTC signaling. This resulted in a potentially exploitable crash in some instances."
      }
    ],
    "CVE-2019-11763": [
      {
        "url": "https://www.mozilla.org/security/advisories/mfsa2019-35/",
        "description": "Failure to correctly handle null bytes when processing HTML entities resulted in Firefox incorrectly parsing these entities. This could have led to HTML comment text being treated as HTML which could have led to XSS in a web application under certain conditions. It could have also led to HTML entities being masked from filters - enabling the use of entities to mask the actual characters of interest from filters."
      },
      {
        "url": "https://www.mozilla.org/security/advisories/mfsa2019-34/",
        "description": "Failure to correctly handle null bytes when processing HTML entities resulted in Firefox incorrectly parsing these entities. This could have led to HTML comment text being treated as HTML which could have led to XSS in a web application under certain conditions. It could have also led to HTML entities being masked from filters, enabling the use of entities to mask the actual characters of interest from filters."
      },
      {
        "url": "https://www.mozilla.org/security/advisories/mfsa2019-33/",
        "description": "Failure to correctly handle null bytes when processing HTML entities resulted in Firefox incorrectly parsing these entities. This could have led to HTML comment text being treated as HTML which could have led to XSS in a web application under certain conditions. It could have also led to HTML entities being masked from filters - enabling the use of entities to mask the actual characters of interest from filters."
      }
    ],
    "CVE-2019-11764": [
      {
        "url": "https://www.mozilla.org/security/advisories/mfsa2019-35/",
        "description": "Mozilla developers and community members Bob Clary, Jason Kratzer, Aaron Klotz, Iain Ireland, Tyson Smith, Christian Holler, Steve Fink, Honza Bambas, Byron Campen, and Cristian Brindusan reported memory safety bugs present in Firefox 69 and Firefox ESR 68.1. Some of these bugs showed evidence of memory corruption and we presume that with enough effort some of these could be exploited to run arbitrary code."
      },
      {
        "url": "https://www.mozilla.org/security/advisories/mfsa2019-34/",
        "description": "Mozilla developers and community members Bob Clary, Jason Kratzer, Aaron Klotz, Iain Ireland, Tyson Smith, Christian Holler, Steve Fink, Honza Bambas, Byron Campen, and Cristian Brindusan reported memory safety bugs present in Firefox 69 and Firefox ESR 68.1. Some of these bugs showed evidence of memory corruption and we presume that with enough effort some of these could be exploited to run arbitrary code."
      },
      {
        "url": "https://www.mozilla.org/security/advisories/mfsa2019-33/",
        "description": "Mozilla developers and community members Bob Clary, Jason Kratzer, Aaron Klotz, Iain Ireland, Tyson Smith, Christian Holler, Steve Fink, Honza Bambas, Byron Campen, and Cristian Brindusan reported memory safety bugs present in Firefox 69 and Firefox ESR 68.1. Some of these bugs showed evidence of memory corruption and we presume that with enough effort some of these could be exploited to run arbitrary code."
      }
    ],
    "CVE-2019-13722": [
      {
        "url": "https://www.mozilla.org/en-US/security/advisories/mfsa2019-36/",
        "description": "When setting a thread name on Windows in WebRTC, an incorrect number of arguments could have been supplied, leading to stack corruption and a potentially exploitable crash. Note: this issue only occurs on Windows. Other operating systems are unaffected."
      }
    ],
    "CVE-2019-17000": [
      {
        "url": "https://www.mozilla.org/security/advisories/mfsa2019-34/",
        "description": "An object tag with a data URI did not correctly inherit the document's Content Security Policy. This allowed a CSP bypass in a cross-origin frame if the document's policy explicitly allowed data: URIs."
      }
    ],
    "CVE-2019-17001": [
      {
        "url": "https://www.mozilla.org/security/advisories/mfsa2019-34/",
        "description": "A Content-Security-Policy that blocks in-line scripts could be bypassed using an object tag to execute JavaScript in the protected document (cross-site scripting). This is a separate bypass from CVE-2019-17000.Note: This flaw only affected Firefox 69 and was not present in earlier versions."
      }
    ],
    "CVE-2019-17002": [
      {
        "url": "https://www.mozilla.org/security/advisories/mfsa2019-34/",
        "description": "If upgrade-insecure-requests was specified in the Content Security Policy, and a link was dragged and dropped from that page, the link was not upgraded to https."
      }
    ],
    "CVE-2019-17008": [
      {
        "url": "https://www.mozilla.org/security/advisories/mfsa2019-38/",
        "description": "When using nested workers, a use-after-free could occur during worker destruction. This resulted in a potentially exploitable crash."
      },
      {
        "url": "https://www.mozilla.org/security/advisories/mfsa2019-37/",
        "description": "When using nested workers, a use-after-free could occur during worker destruction. This resulted in a potentially exploitable crash."
      },
      {
        "url": "https://www.mozilla.org/security/advisories/mfsa2019-36/",
        "description": "When using nested workers, a use-after-free could occur during worker destruction. This resulted in a potentially exploitable crash."
      }
    ],
    "CVE-2019-17010": [
      {
        "url": "https://www.mozilla.org/security/advisories/mfsa2019-38/",
        "description": "Under certain conditions, when checking the Resist Fingerprinting preference during device orientation checks, a race condition could have caused a use-after-free and a potentially exploitable crash."
      },
      {
        "url": "https://www.mozilla.org/security/advisories/mfsa2019-37/",
        "description": "Under certain conditions, when checking the Resist Fingerprinting preference during device orientation checks, a race condition could have caused a use-after-free and a potentially exploitable crash."
      },
      {
        "url": "https://www.mozilla.org/security/advisories/mfsa2019-36/",
        "description": "Under certain conditions, when checking the Resist Fingerprinting preference during device orientation checks, a race condition could have caused a use-after-free and a potentially exploitable crash."
      }
    ],
    "CVE-2019-17011": [
      {
        "url": "https://www.mozilla.org/security/advisories/mfsa2019-38/",
        "description": "Under certain conditions, when retrieving a document from a DocShell in the antitracking code, a race condition could cause a use-after-free condition and a potentially exploitable crash."
      },
      {
        "url": "https://www.mozilla.org/security/advisories/mfsa2019-37/",
        "description": "Under certain conditions, when retrieving a document from a DocShell in the antitracking code, a race condition could cause a use-after-free condition and a potentially exploitable crash."
      },
      {
        "url": "https://www.mozilla.org/security/advisories/mfsa2019-36/",
        "description": "Under certain conditions, when retrieving a document from a DocShell in the antitracking code, a race condition could cause a use-after-free condition and a potentially exploitable crash."
      }
    ],
    "CVE-2019-17015": [
      {
        "url": "https://www.mozilla.org/security/advisories/mfsa2020-01/",
        "description": "During the initialization of a new content process, a pointer offset can be manipulated leading to memory corruption and a potentially exploitable crash in the parent process. Note: this issue only occurs on Windows. Other operating systems are unaffected."
      },
      {
        "url": "https://www.mozilla.org/security/advisories/mfsa2020-02/",
        "description": "During the initialization of a new content process, a pointer offset can be manipulated leading to memory corruption and a potentially exploitable crash in the parent process. Note: this issue only occurs on Windows. Other operating systems are unaffected."
      }
    ],
    "CVE-2019-17016": [
      {
        "url": "https://www.mozilla.org/security/advisories/mfsa2020-01/",
        "description": "When pasting a <style> tag from the clipboard into a rich text editor, the CSS sanitizer incorrectly rewrites a @namespace rule. This could allow for injection into certain types of websites resulting in data exfiltration."
      },
      {
        "url": "https://www.mozilla.org/security/advisories/mfsa2020-02/",
        "description": "When pasting a <style> tag from the clipboard into a rich text editor, the CSS sanitizer incorrectly rewrites a @namespace rule. This could allow for injection into certain types of websites resulting in data exfiltration."
      }
    ],
    "CVE-2019-17018": [
      {
        "url": "https://www.mozilla.org/security/advisories/mfsa2020-01/",
        "description": "When in Private Browsing Mode on Windows 10, the Windows keyboard may retain word suggestions to improve the accuracy of the keyboard."
      }
    ],
    "CVE-2019-17019": [
      {
        "url": "https://www.mozilla.org/security/advisories/mfsa2020-01/",
        "description": "When Python was installed on Windows, a python file being served with the MIME type of text/plain could be executed by Python instead of being opened as a text file when the Open option was selected upon download. Note: this issue only occurs on Windows. Other operating systems are unaffected."
      }
    ],
    "CVE-2019-17020": [
      {
        "url": "https://www.mozilla.org/security/advisories/mfsa2020-01/",
        "description": "If an XML file is served with a Content Security Policy and the XML file includes an XSL stylesheet, the Content Security Policy will not be applied to the contents of the XSL stylesheet. If the XSL sheet e.g. includes JavaScript, it would bypass any of the restrictions of the Content Security Policy applied to the XML document."
      }
    ],
    "CVE-2019-17021": [
      {
        "url": "https://www.mozilla.org/security/advisories/mfsa2020-01/",
        "description": "During the initialization of a new content process, a race condition occurs that can allow a content process to disclose heap addresses from the parent process. Note: this issue only occurs on Windows. Other operating systems are unaffected."
      },
      {
        "url": "https://www.mozilla.org/security/advisories/mfsa2020-02/",
        "description": "During the initialization of a new content process, a race condition occurs that can allow a content process to disclose heap addresses from the parent process. Note: this issue only occurs on Windows. Other operating systems are unaffected."
      }
    ],
    "CVE-2019-17022": [
      {
        "url": "https://www.mozilla.org/security/advisories/mfsa2020-01/",
        "description": "When pasting a <style> tag from the clipboard into a rich text editor, the CSS sanitizer does not escape < and > characters. Because the resulting string is pasted directly into the text node of the element this does not result in a direct injection into the webpage; however, if a webpage subsequently copies the node's innerHTML, assigning it to another innerHTML, this would result in an XSS vulnerability. Two WYSIWYG editors were identified with this behavior, more may exist."
      },
      {
        "url": "https://www.mozilla.org/security/advisories/mfsa2020-02/",
        "description": "When pasting a <style> tag from the clipboard into a rich text editor, the CSS sanitizer does not escape < and > characters. Because the resulting string is pasted directly into the text node of the element this does not result in a direct injection into the webpage; however, if a webpage subsequently copies the node's innerHTML, assigning it to another innerHTML, this would result in an XSS vulnerability. Two WYSIWYG editors were identified with this behavior, more may exist."
      }
    ],
    "CVE-2019-17023": [
      {
        "url": "https://www.mozilla.org/security/advisories/mfsa2020-01/",
        "description": "After a HelloRetryRequest has been sent, the client may negotiate a lower protocol that TLS 1.3, resulting in an invalid state transition in the TLS State Machine. If the client gets into this state, incoming Application Data records will be ignored."
      }
    ],
    "CVE-2019-17025": [
      {
        "url": "https://www.mozilla.org/security/advisories/mfsa2020-01/",
        "description": "Mozilla developers Karl Tomlinson, Jason Kratzer, Tyson Smith, Jon Coppeard, and Christian Holler reported memory safety bugs present in Firefox 71. Some of these bugs showed evidence of memory corruption and we presume that with enough effort some of these could have been exploited to run arbitrary code."
      }
    ],
    "CVE-2019-9788": [
      {
        "url": "https://www.mozilla.org/security/advisories/mfsa2019-11/",
        "description": "Mozilla developers and community members Bob Clary, Chun-Min Chang, Aral Yaman, Andreea Pavel, Jonathan Kew, Gary Kwong, Alex Gaynor, Masayuki Nakano, and Anne van Kesteren reported memory safety bugs present in Firefox 65, Firefox ESR 60.5, and Thunderbird 60.5. Some of these bugs showed evidence of memory corruption and we presume that with enough effort that some of these could be exploited to run arbitrary code."
      },
      {
        "url": "https://www.mozilla.org/security/advisories/mfsa2019-08/",
        "description": "Mozilla developers and community members Bob Clary, Chun-Min Chang, Aral Yaman, Andreea Pavel, Jonathan Kew, Gary Kwong, Alex Gaynor, Masayuki Nakano, and Anne van Kesteren reported memory safety bugs present in Firefox 65 and Firefox ESR 60.5. Some of these bugs showed evidence of memory corruption and we presume that with enough effort that some of these could be exploited to run arbitrary code."
      },
      {
        "url": "https://www.mozilla.org/security/advisories/mfsa2019-07/",
        "description": "Mozilla developers and community members Bob Clary, Chun-Min Chang, Aral Yaman, Andreea Pavel, Jonathan Kew, Gary Kwong, Alex Gaynor, Masayuki Nakano, and Anne van Kesteren reported memory safety bugs present in Firefox 65 and Firefox ESR 60.5. Some of these bugs showed evidence of memory corruption and we presume that with enough effort that some of these could be exploited to run arbitrary code."
      }
    ],
    "CVE-2019-9789": [
      {
        "url": "https://www.mozilla.org/security/advisories/mfsa2019-07/",
        "description": "Mozilla developers and community members Dragana Damjanovic, Emilio Cobos √Ålvarez, Henri Sivonen, Narcis Beleuzu, Julian Seward, Marcia Knous, Gary Kwong, Tyson Smith, Yaron Tausky, Ronald Crane, and Andr√© Bargull reported memory safety bugs present in Firefox 65. Some of these bugs showed evidence of memory corruption and we presume that with enough effort that some of these could be exploited to run arbitrary code."
      }
    ],
    "CVE-2019-9790": [
      {
        "url": "https://www.mozilla.org/security/advisories/mfsa2019-11/",
        "description": "A use-after-free vulnerability can occur when a raw pointer to a DOM element on a page is obtained using JavaScript and the element is then removed while still in use. This results in a potentially exploitable crash."
      },
      {
        "url": "https://www.mozilla.org/security/advisories/mfsa2019-08/",
        "description": "A use-after-free vulnerability can occur when a raw pointer to a DOM element on a page is obtained using JavaScript and the element is then removed while still in use. This results in a potentially exploitable crash."
      },
      {
        "url": "https://www.mozilla.org/security/advisories/mfsa2019-07/",
        "description": "A use-after-free vulnerability can occur when a raw pointer to a DOM element on a page is obtained using JavaScript and the element is then removed while still in use. This results in a potentially exploitable crash."
      }
    ],
    "CVE-2019-9791": [
      {
        "url": "https://www.mozilla.org/security/advisories/mfsa2019-11/",
        "description": "The type inference system allows the compilation of functions that can cause type confusions between arbitrary objects when compiled through the IonMonkey just-in-time (JIT) compiler and when the constructor function is entered through on-stack replacement (OSR). This allows for possible arbitrary reading and writing of objects during an exploitable crash."
      },
      {
        "url": "https://www.mozilla.org/security/advisories/mfsa2019-08/",
        "description": "The type inference system allows the compilation of functions that can cause type confusions between arbitrary objects when compiled through the IonMonkey just-in-time (JIT) compiler and when the constructor function is entered through on-stack replacement (OSR). This allows for possible arbitrary reading and writing of objects during an exploitable crash."
      },
      {
        "url": "https://www.mozilla.org/security/advisories/mfsa2019-07/",
        "description": "The type inference system allows the compilation of functions that can cause type confusions between arbitrary objects when compiled through the IonMonkey just-in-time (JIT) compiler and when the constructor function is entered through on-stack replacement (OSR). This allows for possible arbitrary reading and writing of objects during an exploitable crash."
      }
    ],
    "CVE-2019-9792": [
      {
        "url": "https://www.mozilla.org/security/advisories/mfsa2019-11/",
        "description": "The IonMonkey just-in-time (JIT) compiler can leak an internal JS_OPTIMIZED_OUT magic value to the running script during a bailout. This magic value can then be used by JavaScript to achieve memory corruption, which results in a potentially exploitable crash."
      },
      {
        "url": "https://www.mozilla.org/security/advisories/mfsa2019-08/",
        "description": "The IonMonkey just-in-time (JIT) compiler can leak an internal JS_OPTIMIZED_OUT magic value to the running script during a bailout. This magic value can then be used by JavaScript to achieve memory corruption, which results in a potentially exploitable crash."
      },
      {
        "url": "https://www.mozilla.org/security/advisories/mfsa2019-07/",
        "description": "The IonMonkey just-in-time (JIT) compiler can leak an internal JS_OPTIMIZED_OUT magic value to the running script during a bailout. This magic value can then be used by JavaScript to achieve memory corruption, which results in a potentially exploitable crash."
      }
    ],
    "CVE-2019-9793": [
      {
        "url": "https://www.mozilla.org/security/advisories/mfsa2019-11/",
        "description": "A mechanism was discovered that removes some bounds checking for string, array, or typed array accesses if Spectre mitigations have been disabled. This vulnerability could allow an attacker to create an arbitrary value in compiled JavaScript, for which the range analysis will infer a fully controlled, incorrect range in circumstances where users have explicitly disabled Spectre mitigations. Note: Spectre mitigations are currently enabled for all users by default settings."
      },
      {
        "url": "https://www.mozilla.org/security/advisories/mfsa2019-08/",
        "description": "A mechanism was discovered that removes some bounds checking for string, array, or typed array accesses if Spectre mitigations have been disabled. This vulnerability could allow an attacker to create an arbitrary value in compiled JavaScript, for which the range analysis will infer a fully controlled, incorrect range in circumstances where users have explicitly disabled Spectre mitigations. Note: Spectre mitigations are currently enabled for all users by default settings."
      },
      {
        "url": "https://www.mozilla.org/security/advisories/mfsa2019-07/",
        "description": "A mechanism was discovered that removes some bounds checking for string, array, or typed array accesses if Spectre mitigations have been disabled. This vulnerability could allow an attacker to create an arbitrary value in compiled JavaScript, for which the range analysis will infer a fully controlled, incorrect range in circumstances where users have explicitly disabled Spectre mitigations. Note: Spectre mitigations are currently enabled for all users by default settings."
      }
    ],
    "CVE-2019-9794": [
      {
        "url": "https://www.mozilla.org/security/advisories/mfsa2019-11/",
        "description": "A vulnerability was discovered where specific command line arguments are not properly discarded during Firefox invocation as a shell handler for URLs. This could be used to retrieve and execute files whose location is supplied through these command line arguments if Firefox is configured as the default URI handler for a given URI scheme in third party applications and these applications insufficiently sanitize URL data. Note: This issue only affects Windows operating systems. Other operating systems are unaffected."
      },
      {
        "url": "https://www.mozilla.org/security/advisories/mfsa2019-08/",
        "description": "A vulnerability was discovered where specific command line arguments are not properly discarded during Firefox invocation as a shell handler for URLs. This could be used to retrieve and execute files whose location is supplied through these command line arguments if Firefox is configured as the default URI handler for a given URI scheme in third party applications and these applications insufficiently sanitize URL data. Note: This issue only affects Windows operating systems. Other operating systems are unaffected."
      },
      {
        "url": "https://www.mozilla.org/security/advisories/mfsa2019-07/",
        "description": "A vulnerability was discovered where specific command line arguments are not properly discarded during Firefox invocation as a shell handler for URLs. This could be used to retrieve and execute files whose location is supplied through these command line arguments if Firefox is configured as the default URI handler for a given URI scheme in third party applications and these applications insufficiently sanitize URL data. Note: This issue only affects Windows operating systems. Other operating systems are unaffected."
      }
    ],
    "CVE-2019-9796": [
      {
        "url": "https://www.mozilla.org/security/advisories/mfsa2019-11/",
        "description": "A use-after-free vulnerability can occur when the SMIL animation controller incorrectly registers with the refresh driver twice when only a single registration is expected. When a registration is later freed with the removal of the animation controller element, the refresh driver incorrectly leaves a dangling pointer to the driver's observer array."
      },
      {
        "url": "https://www.mozilla.org/security/advisories/mfsa2019-08/",
        "description": "A use-after-free vulnerability can occur when the SMIL animation controller incorrectly registers with the refresh driver twice when only a single registration is expected. When a registration is later freed with the removal of the animation controller element, the refresh driver incorrectly leaves a dangling pointer to the driver's observer array."
      },
      {
        "url": "https://www.mozilla.org/security/advisories/mfsa2019-07/",
        "description": "A use-after-free vulnerability can occur when the SMIL animation controller incorrectly registers with the refresh driver twice when only a single registration is expected. When a registration is later freed with the removal of the animation controller element, the refresh driver incorrectly leaves a dangling pointer to the driver's observer array."
      }
    ],
    "CVE-2019-9799": [
      {
        "url": "https://www.mozilla.org/security/advisories/mfsa2019-07/",
        "description": "Insufficient bounds checking of data during inter-process communication might allow a compromised content process to be able to read memory from the parent process under certain conditions."
      }
    ],
    "CVE-2019-9800": [
      {
        "url": "https://www.mozilla.org/security/advisories/mfsa2019-15/",
        "description": "Mozilla developers and community members Olli Pettay, Bogdan Tara, Jan de Mooij, Jason Kratzer, Jan Varga, Gary Kwong, Tim Guan-tin Chien, Tyson Smith, Ronald Crane, and Ted Campbell reported memory safety bugs present in Firefox 66, Firefox ESR 60.6, and Thunderbird 60.6. Some of these bugs showed evidence of memory corruption and we presume that with enough effort that some of these could be exploited to run arbitrary code."
      },
      {
        "url": "https://www.mozilla.org/security/advisories/mfsa2019-14/",
        "description": "Mozilla developers and community members Olli Pettay, Bogdan Tara, Jan de Mooij, Jason Kratzer, Jan Varga, Gary Kwong, Tim Guan-tin Chien, Tyson Smith, Ronald Crane, and Ted Campbell reported memory safety bugs present in Firefox 66 and Firefox ESR 60.6. Some of these bugs showed evidence of memory corruption and we presume that with enough effort that some of these could be exploited to run arbitrary code."
      },
      {
        "url": "https://www.mozilla.org/security/advisories/mfsa2019-13/",
        "description": "Mozilla developers and community members Olli Pettay, Bogdan Tara, Jan de Mooij, Jason Kratzer, Jan Varga, Gary Kwong, Tim Guan-tin Chien, Tyson Smith, Ronald Crane, and Ted Campbell reported memory safety bugs present in Firefox 66 and Firefox ESR 60.6. Some of these bugs showed evidence of memory corruption and we presume that with enough effort that some of these could be exploited to run arbitrary code."
      }
    ],
    "CVE-2019-9801": [
      {
        "url": "https://www.mozilla.org/security/advisories/mfsa2019-11/",
        "description": "Firefox will accept any registered Program ID as an external protocol handler and offer to launch this local application when given a matching URL on Windows operating systems. This should only happen if the program has specifically registered itself as a \"URL Handler\" in the Windows registry. Note: This issue only affects Windows operating systems. Other operating systems are unaffected."
      },
      {
        "url": "https://www.mozilla.org/security/advisories/mfsa2019-08/",
        "description": "Firefox will accept any registered Program ID as an external protocol handler and offer to launch this local application when given a matching URL on Windows operating systems. This should only happen if the program has specifically registered itself as a \"URL Handler\" in the Windows registry. Note: This issue only affects Windows operating systems. Other operating systems are unaffected."
      },
      {
        "url": "https://www.mozilla.org/security/advisories/mfsa2019-07/",
        "description": "Firefox will accept any registered Program ID as an external protocol handler and offer to launch this local application when given a matching URL on Windows operating systems. This should only happen if the program has specifically registered itself as a \"URL Handler\" in the Windows registry. Note: This issue only affects Windows operating systems. Other operating systems are unaffected."
      }
    ],
    "CVE-2019-9802": [
      {
        "url": "https://www.mozilla.org/security/advisories/mfsa2019-07/",
        "description": "If a Sandbox content process is compromised, it can initiate an FTP download which will then use a child process to render the downloaded data. The downloaded data can then be passed to the Chrome process with an arbitrary file length supplied by an attacker, bypassing sandbox protections and allow for a potential memory read of adjacent data from the privileged Chrome process, which may include sensitive data."
      }
    ],
    "CVE-2019-9804": [
      {
        "url": "https://www.mozilla.org/security/advisories/mfsa2019-07/",
        "description": "In Firefox Developer Tools it is possible that pasting the result of the 'Copy as cURL' command into a command shell on macOS will cause the execution of unintended additional bash script commands if the URL was maliciously crafted. This is the result of an issue with the native version of Bash on macOS. Note: This issue only affects macOS. Other operating systems are unaffected."
      }
    ],
    "CVE-2019-9806": [
      {
        "url": "https://www.mozilla.org/security/advisories/mfsa2019-07/",
        "description": "A vulnerability exists during authorization prompting for FTP transaction where successive modal prompts are displayed and cannot be immediately dismissed. This allows for a denial of service (DOS) attack."
      }
    ],
    "CVE-2019-9807": [
      {
        "url": "https://www.mozilla.org/security/advisories/mfsa2019-07/",
        "description": "When arbitrary text is sent over an FTP connection and a page reload is initiated, it is possible to create a modal alert message with this text as the content. This could potentially be used for social engineering attacks."
      }
    ],
    "CVE-2019-9809": [
      {
        "url": "https://www.mozilla.org/security/advisories/mfsa2019-07/",
        "description": "If the source for resources on a page is through an FTP connection, it is possible to trigger a series of modal alert messages for these resources through invalid credentials or locations. These messages cannot be immediately dismissed, allowing for a denial of service (DOS) attack."
      }
    ],
    "CVE-2019-9810": [
      {
        "url": "https://www.mozilla.org/security/advisories/mfsa2019-12/",
        "description": "Incorrect alias information in IonMonkey JIT compiler for Array.prototype.slice method may lead to missing bounds check and a buffer overflow."
      },
      {
        "url": "https://www.mozilla.org/security/advisories/mfsa2019-10/",
        "description": "Incorrect alias information in IonMonkey JIT compiler for Array.prototype.slice method may lead to missing bounds check and a buffer overflow."
      },
      {
        "url": "https://www.mozilla.org/security/advisories/mfsa2019-09/",
        "description": "Incorrect alias information in IonMonkey JIT compiler for Array.prototype.slice method may lead to missing bounds check and a buffer overflow."
      }
    ],
    "CVE-2019-9812": [
      {
        "url": "https://www.mozilla.org/security/advisories/mfsa2019-27/",
        "description": "Given a compromised sandboxed content process due to a separate vulnerability, it is possible to escape that sandbox by loading accounts.firefox.com in that process and forcing a log-in to a malicious Firefox Sync account. Preference settings that disable the sandbox are then synchronized to the local machine and the compromised browser would restart without the sandbox if a crash is triggered."
      },
      {
        "url": "https://www.mozilla.org/security/advisories/mfsa2019-25/",
        "description": "Given a compromised sandboxed content process due to a separate vulnerability, it is possible to escape that sandbox by loading accounts.firefox.com in that process and forcing a log-in to a malicious Firefox Sync account. Preference settings that disable the sandbox are then synchronized to the local machine and the compromised browser would restart without the sandbox if a crash is triggered."
      },
      {
        "url": "https://www.mozilla.org/security/advisories/mfsa2019-26/",
        "description": "Given a compromised sandboxed content process due to a separate vulnerability, it is possible to escape that sandbox by loading accounts.firefox.com in that process and forcing a log-in to a malicious Firefox Sync account. Preference settings that disable the sandbox are then synchronized to the local machine and the compromised browser would restart without the sandbox if a crash is triggered."
      }
    ],
    "CVE-2019-9814": [
      {
        "url": "https://www.mozilla.org/security/advisories/mfsa2019-13/",
        "description": "Mozilla developers and community members Christian Holler, Andrei Ciure, Julien Cristau, Jan de Mooij, Jan Varga, Marcia Knous, Andr√© Bargull, and Philipp reported memory safety bugs present in Firefox 66. Some of these bugs showed evidence of memory corruption and we presume that with enough effort that some of these could be exploited to run arbitrary code."
      }
    ],
    "CVE-2019-9819": [
      {
        "url": "https://www.mozilla.org/security/advisories/mfsa2019-15/",
        "description": "A vulnerability where a JavaScript compartment mismatch can occur while working with the fetch API, resulting in a potentially exploitable crash."
      },
      {
        "url": "https://www.mozilla.org/security/advisories/mfsa2019-14/",
        "description": "A vulnerability where a JavaScript compartment mismatch can occur while working with the fetch API, resulting in a potentially exploitable crash."
      },
      {
        "url": "https://www.mozilla.org/security/advisories/mfsa2019-13/",
        "description": "A vulnerability where a JavaScript compartment mismatch can occur while working with the fetch API, resulting in a potentially exploitable crash."
      }
    ],
    "CVE-2019-9820": [
      {
        "url": "https://www.mozilla.org/security/advisories/mfsa2019-15/",
        "description": "A use-after-free vulnerability can occur in the chrome event handler when it is freed while still in use. This results in a potentially exploitable crash."
      },
      {
        "url": "https://www.mozilla.org/security/advisories/mfsa2019-14/",
        "description": "A use-after-free vulnerability can occur in the chrome event handler when it is freed while still in use. This results in a potentially exploitable crash."
      },
      {
        "url": "https://www.mozilla.org/security/advisories/mfsa2019-13/",
        "description": "A use-after-free vulnerability can occur in the chrome event handler when it is freed while still in use. This results in a potentially exploitable crash."
      }
    ],
    "CVE-2019-9821": [
      {
        "url": "https://www.mozilla.org/security/advisories/mfsa2019-13/",
        "description": "A use-after-free vulnerability can occur in AssertWorkerThread due to a race condition with shared workers. This results in a potentially exploitable crash."
      }
    ]
  }
}