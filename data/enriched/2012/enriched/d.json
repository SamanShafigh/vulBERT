{
  "year": 2012,
  "total": 337,
  "reference": "github.com",
  "reports": {
    "CVE-2012-0028": [
      {
        "url": "https://github.com/torvalds/linux/commit/8141c7f3e7aee618312fa1c15109e1219de784a7",
        "title": "",
        "body": ""
      }
    ],
    "CVE-2012-0030": [
      {
        "url": "https://github.com/openstack/nova/commit/3d4ffb64f1e18117240c26809788528979e3bd15#diff-0",
        "title": "",
        "body": ""
      }
    ],
    "CVE-2012-0033": [
      {
        "url": "https://github.com/znc/znc/commit/11508aa72efab4fad0dbd8292b9614d9371b20a9#modules/bouncedcc.cpp",
        "title": "",
        "body": ""
      }
    ],
    "CVE-2012-0036": [
      {
        "url": "https://github.com/bagder/curl/commit/75ca568fa1c19de4c5358fed246686de8467c238",
        "title": "",
        "body": ""
      }
    ],
    "CVE-2012-0037": [
      {
        "url": "https://github.com/dajobe/raptor/commit/a676f235309a59d4aa78eeffd2574ae5d341fcb0",
        "title": "",
        "body": ""
      }
    ],
    "CVE-2012-0038": [
      {
        "url": "https://github.com/torvalds/linux/commit/fa8b18edd752a8b4e9d1ee2cd615b82c93cf8bba",
        "title": "",
        "body": ""
      },
      {
        "url": "https://github.com/torvalds/linux/commit/093019cf1b18dd31b2c3b77acce4e000e2cbc9ce",
        "title": "",
        "body": ""
      }
    ],
    "CVE-2012-0044": [
      {
        "url": "https://github.com/torvalds/linux/commit/a5cd335165e31db9dbab636fd29895d41da55dd2",
        "title": "",
        "body": ""
      }
    ],
    "CVE-2012-0807": [
      {
        "url": "https://github.com/stefanesser/suhosin/commit/73b1968ee30f6d9d2dae497544b910e68e114bfa",
        "title": "",
        "body": ""
      }
    ],
    "CVE-2012-0863": [
      {
        "url": "https://github.com/mumble-voip/mumble/commit/5632c35d6759f5e13a7dfe78e4ee6403ff6a8e3e",
        "title": "",
        "body": ""
      }
    ],
    "CVE-2012-0973": [
      {
        "url": "https://github.com/osclass/OSClass/commit/ff7ef8a97301aaaf6a97fe46c2c27981a86b4e2f#diff-73",
        "title": "",
        "body": ""
      }
    ],
    "CVE-2012-0974": [
      {
        "url": "https://github.com/osclass/OSClass/commit/ff7ef8a97301aaaf6a97fe46c2c27981a86b4e2f#diff-73",
        "title": "",
        "body": ""
      }
    ],
    "CVE-2012-0976": [
      {
        "url": "https://github.com/silverstripe/sapphire/commit/475e077",
        "title": "",
        "body": ""
      },
      {
        "url": "https://github.com/silverstripe/sapphire/commit/252e187",
        "title": "",
        "body": ""
      },
      {
        "url": "https://github.com/silverstripe/sapphire/commit/5fe7091",
        "title": "",
        "body": ""
      }
    ],
    "CVE-2012-1001": [
      {
        "url": "https://github.com/vito/chyrp/commit/f69bd791c37e0b154c0bda16f9759ba19cc77f6c",
        "title": "",
        "body": ""
      }
    ],
    "CVE-2012-1016": [
      {
        "url": "https://github.com/krb5/krb5/commit/db64ca25d661a47b996b4e2645998b5d7f0eb52c",
        "title": "",
        "body": ""
      }
    ],
    "CVE-2012-1059": [
      {
        "url": "https://github.com/osCommerce/oscommerce/commit/a5aeb0448cc333cc4b801c0e01981b218fd9c7df",
        "title": "",
        "body": ""
      }
    ],
    "CVE-2012-1090": [
      {
        "url": "https://github.com/torvalds/linux/commit/88d7d4e4a439f32acc56a6d860e415ee71d3df08",
        "title": "",
        "body": ""
      }
    ],
    "CVE-2012-1097": [
      {
        "url": "https://github.com/torvalds/linux/commit/c8e252586f8d5de906385d8cf6385fee289a825e",
        "title": "",
        "body": ""
      }
    ],
    "CVE-2012-1108": [
      {
        "url": "https://github.com/taglib/taglib/commit/b3646a07348ffa276ea41a9dae03ddc63ea6c532",
        "title": "",
        "body": ""
      }
    ],
    "CVE-2012-1118": [
      {
        "url": "https://github.com/mantisbt/mantisbt/commit/eb803ed02105fc919cf5f789e939f2b824162927",
        "title": "",
        "body": ""
      }
    ],
    "CVE-2012-1119": [
      {
        "url": "https://github.com/mantisbt/mantisbt/commit/cf5df427f17cf9204645f83e000665780eb9afe6",
        "title": "",
        "body": ""
      },
      {
        "url": "https://github.com/mantisbt/mantisbt/commit/dea7e315f3fc96dfa995e56e8810845fc07a47aa",
        "title": "",
        "body": ""
      }
    ],
    "CVE-2012-1120": [
      {
        "url": "https://github.com/mantisbt/mantisbt/commit/df7782a65e96aa1c9639a7625a658102134c7fe0",
        "title": "",
        "body": ""
      }
    ],
    "CVE-2012-1121": [
      {
        "url": "https://github.com/mantisbt/mantisbt/commit/9443258724e84cb388aa1865b775beaecd80596d",
        "title": "",
        "body": ""
      }
    ],
    "CVE-2012-1122": [
      {
        "url": "https://github.com/mantisbt/mantisbt/commit/0da3f7ace233208eb3c8d628cc2fd6e56d83839f",
        "title": "",
        "body": ""
      }
    ],
    "CVE-2012-1123": [
      {
        "url": "https://github.com/mantisbt/mantisbt/commit/f5106be52cf6aa72c521f388e4abb5f0de1f1d7f",
        "title": "",
        "body": ""
      }
    ],
    "CVE-2012-1146": [
      {
        "url": "https://github.com/torvalds/linux/commit/371528caec553785c37f73fa3926ea0de84f986f",
        "title": "",
        "body": ""
      }
    ],
    "CVE-2012-1171": [
      {
        "url": "https://github.com/php/php-src/blob/master/ext/libxml/tests/bug61367-read.phpt",
        "title": "",
        "body": ""
      },
      {
        "url": "https://github.com/php/php-src/blob/master/ext/libxml/tests/bug61367-write.phpt",
        "title": "",
        "body": ""
      }
    ],
    "CVE-2012-1176": [
      {
        "url": "https://github.com/pediapress/pyfribidi/commit/d2860c655357975e7b32d84e6b45e98f0dcecd7a",
        "title": "",
        "body": ""
      },
      {
        "url": "https://github.com/pediapress/pyfribidi/issues/2%29:",
        "title": "",
        "body": ""
      }
    ],
    "CVE-2012-1179": [
      {
        "url": "https://github.com/torvalds/linux/commit/4a1d704194a441bf83c636004a479e01360ec850",
        "title": "",
        "body": ""
      }
    ],
    "CVE-2012-1188": [
      {
        "url": "https://github.com/forkcms/forkcms/commit/995220182068518e89019a265d113518f6566407",
        "title": "",
        "body": ""
      },
      {
        "url": "https://github.com/forkcms/forkcms/commit/1269fe8b3813c7b7d5552a2b88bc2e7bd4d0c1f9",
        "title": "",
        "body": ""
      }
    ],
    "CVE-2012-1190": [
      {
        "url": "https://github.com/phpmyadmin/phpmyadmin/commit/86073d532aed656550cb731aa5b4288b126ae7a6",
        "title": "",
        "body": ""
      }
    ],
    "CVE-2012-1207": [
      {
        "url": "https://github.com/forkcms/forkcms/commit/a9986b86c53de0582248b39605660fbba0c21a29",
        "title": "",
        "body": ""
      }
    ],
    "CVE-2012-1208": [
      {
        "url": "https://github.com/forkcms/forkcms/commit/df75e0797a6540c4d656969a2e7df7689603b2cf",
        "title": "",
        "body": ""
      },
      {
        "url": "https://github.com/forkcms/forkcms/commit/8fa74dd3e2e32723cd121177dce6aeac37e29df6",
        "title": "",
        "body": ""
      },
      {
        "url": "https://github.com/forkcms/forkcms/commit/d65c083adc91c88d21bd9a0df4c2688df634c6ff",
        "title": "",
        "body": ""
      }
    ],
    "CVE-2012-1209": [
      {
        "url": "https://github.com/forkcms/forkcms/commit/df75e0797a6540c4d656969a2e7df7689603b2cf",
        "title": "",
        "body": ""
      },
      {
        "url": "https://github.com/forkcms/forkcms/commit/c8ec9c58a6b3c46cdd924532c1de99bcda6072ed",
        "title": "",
        "body": ""
      }
    ],
    "CVE-2012-1226": [
      {
        "url": "https://github.com/Dolibarr/dolibarr/commit/8f9b9987ffb42cfbe907fe31ded3001bfc1b3417",
        "title": "",
        "body": ""
      },
      {
        "url": "https://github.com/Dolibarr/dolibarr/commit/5381986e50dd6055f2b3b63281eaacffa0449da2",
        "title": "",
        "body": ""
      }
    ],
    "CVE-2012-1571": [
      {
        "url": "https://github.com/glensc/file/commit/1aec04dbf8a24b8a6ba64c4f74efa0628e36db0b",
        "title": "",
        "body": ""
      },
      {
        "url": "https://github.com/glensc/file/commit/1859fdb4e67c49c463c4e0078054335cd46ba295",
        "title": "",
        "body": ""
      }
    ],
    "CVE-2012-1583": [
      {
        "url": "https://github.com/torvalds/linux/commit/d0772b70faaf8e9f2013b6c4273d94d5eac8047a",
        "title": "",
        "body": ""
      }
    ],
    "CVE-2012-1584": [
      {
        "url": "https://github.com/taglib/taglib/commit/dcdf4fd954e3213c355746fa15b7480461972308",
        "title": "",
        "body": ""
      }
    ],
    "CVE-2012-1597": [
      {
        "url": "https://github.com/ezsystems/ezjscore/commit/58854564c7b8672090c25c4b1677d08620d870f2",
        "title": "",
        "body": ""
      }
    ],
    "CVE-2012-1600": [
      {
        "url": "https://github.com/phppgadmin/phppgadmin/commit/74174ad639664b52cc1609ede0af8bc403e98a00",
        "title": "",
        "body": ""
      },
      {
        "url": "https://github.com/phppgadmin/phppgadmin/commit/e92a003624609a445c4cf57c9c3d1fcef0eae47c#diff-0",
        "title": "",
        "body": ""
      }
    ],
    "CVE-2012-1601": [
      {
        "url": "https://github.com/torvalds/linux/commit/9c895160d25a76c21b65bad141b08e8d4f99afef",
        "title": "",
        "body": ""
      }
    ],
    "CVE-2012-1617": [
      {
        "url": "https://github.com/osclass/OSClass/commit/1e7626f4e1a26371480989c0b937f107ea9a6d4b",
        "title": "",
        "body": ""
      },
      {
        "url": "https://github.com/osclass/OSClass/commit/a40b76695994442644e46e1b776d79660500566a",
        "title": "",
        "body": ""
      },
      {
        "url": "https://github.com/osclass/OSClass/commit/ff7ef8a97301aaaf6a97fe46c2c27981a86b4e2f#diff-1",
        "title": "",
        "body": ""
      }
    ],
    "CVE-2012-1826": [
      {
        "url": "https://github.com/dotCMS/dotCMS/issues/261",
        "title": "",
        "body": ""
      },
      {
        "url": "https://github.com/dotCMS/dotCMS/issues/281",
        "title": "",
        "body": ""
      }
    ],
    "CVE-2012-1836": [
      {
        "url": "https://github.com/inspircd/inspircd/commit/fe7dbd2c104c37f6f3af7d9f1646a3c332aea4a4",
        "title": "",
        "body": ""
      }
    ],
    "CVE-2012-1902": [
      {
        "url": "https://github.com/phpmyadmin/phpmyadmin/commit/c51817d3b8cb05ff54dca9373c0667e29b8498d4",
        "title": "",
        "body": ""
      }
    ],
    "CVE-2012-2094": [
      {
        "url": "https://github.com/openstack/horizon/commit/7f8c788aa70db98ac904f37fa4197fcabb802942",
        "title": "",
        "body": ""
      }
    ],
    "CVE-2012-2100": [
      {
        "url": "https://github.com/torvalds/linux/commit/d50f2ab6f050311dbf7b8f5501b25f0bf64a439b",
        "title": "",
        "body": ""
      }
    ],
    "CVE-2012-2101": [
      {
        "url": "https://github.com/openstack/nova/commit/8c8735a73afb16d5856f0aa6088e9ae406c52beb",
        "title": "",
        "body": ""
      },
      {
        "url": "https://github.com/openstack/nova/commit/a67db4586f70ed881d65e80035b2a25be195ce64",
        "title": "",
        "body": ""
      },
      {
        "url": "https://github.com/openstack/nova/commit/1f644d210557b1254f7c7b39424b09a45329ade7",
        "title": "",
        "body": ""
      }
    ],
    "CVE-2012-2119": [
      {
        "url": "https://github.com/torvalds/linux/commit/b92946e2919134ebe2a4083e4302236295ea2a73",
        "title": "",
        "body": ""
      }
    ],
    "CVE-2012-2121": [
      {
        "url": "https://github.com/torvalds/linux/commit/09ca8e1173bcb12e2a449698c9ae3b86a8a10195",
        "title": "",
        "body": ""
      }
    ],
    "CVE-2012-2123": [
      {
        "url": "https://github.com/torvalds/linux/commit/d52fc5dde171f030170a6cb78034d166b13c9445",
        "title": "",
        "body": ""
      }
    ],
    "CVE-2012-2126": [
      {
        "url": "https://github.com/rubygems/rubygems/blob/1.8/History.txt",
        "title": "",
        "body": ""
      }
    ],
    "CVE-2012-2127": [
      {
        "url": "https://github.com/torvalds/linux/commit/905ad269c55fc62bee3da29f7b1d1efeba8aa1e1",
        "title": "",
        "body": ""
      }
    ],
    "CVE-2012-2129": [
      {
        "url": "https://github.com/splitbrain/dokuwiki/commit/ff71173477e54774b5571015d49d944f51cb8a26",
        "title": "escape target error message (SECURITY) FS#2487 FS#2488",
        "body": "The error message when a non-existant editor was tried to load wasn'tescaped correctly, allowing to introduce arbitrary JavaScript to theoutput, leading to a XSS vulnerability.Note: the reported second XCRF vulnerability is the same bug, the xploitcode simply uses JavaScript to extract a valid CSRF token from the site"
      }
    ],
    "CVE-2012-2133": [
      {
        "url": "https://github.com/torvalds/linux/commit/90481622d75715bfcb68501280a917dbfe516029",
        "title": "hugepages: fix use after free bug in \"quota\" handling",
        "body": "hugetlbfs_{get,put}_quota() are badly named. They don't interact with thegeneral quota handling code, and they don't much resemble its behaviour.Rather than being about maintaining limits on on-disk block usage byparticular users, they are instead about maintaining limits on in-memorypage usage (including anonymous MAP_PRIVATE copied-on-write pages)associated with a particular hugetlbfs filesystem instance.Worse, they work by having callbacks to the hugetlbfs filesystem code fromthe low-level page handling code, in particular from free_huge_page().This is a layering violation of itself, but more importantly, if thekernel does a get_user_pages() on hugepages (which can happen from KVMamongst others), then the free_huge_page() can be delayed until after theassociated inode has already been freed. If an unmount occurs at thewrong time, even the hugetlbfs superblock where the \"quota\" limits arestored may have been freed.Andrew Barry proposed a patch to fix this by having hugepages, instead ofstoring a pointer to their address_space and reaching the superblock fromthere, had the hugepages store pointers directly to the superblock,bumping the reference count as appropriate to avoid it being freed.Andrew Morton rejected that version, however, on the grounds that it madethe existing layering violation worse.This is a reworked version of Andrew's patch, which removes the extra, andsome of the existing, layering violation. It works by introducing theconcept of a hugepage \"subpool\" at the lower hugepage mm layer - that is afinite logical pool of hugepages to allocate from. hugetlbfs now createsa subpool for each filesystem instance with a page limit set, and apointer to the subpool gets added to each allocated hugepage, instead ofthe address_space pointer used now. The subpool has its own lifetime andis only freed once all pages in it _and_ all other references to it (i.e.superblocks) are gone.subpools are optional - a NULL subpool pointer is taken by the code tomean that no subpool limits are in effect.Previous discussion of this bug found in: \"Fix refcounting in hugetlbfsquota handling.\". See: https://lkml.org/lkml/2011/8/11/28 orhttp://marc.info/?l=linux-mm&m=126928970510627&w=1v2: Fixed a bug spotted by Hillf Danton, and removed the extra parameter toalloc_huge_page() - since it already takes the vma, it is not necessary.Signed-off-by: Andrew Barry <abarry@cray.com>Signed-off-by: David Gibson <david@gibson.dropbear.id.au>Cc: Hugh Dickins <hughd@google.com>Cc: Mel Gorman <mgorman@suse.de>Cc: Minchan Kim <minchan.kim@gmail.com>Cc: Hillf Danton <dhillf@gmail.com>Cc: Paul Mackerras <paulus@samba.org>Signed-off-by: Andrew Morton <akpm@linux-foundation.org>Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>"
      }
    ],
    "CVE-2012-2136": [
      {
        "url": "https://github.com/torvalds/linux/commit/cc9b17ad29ecaa20bfe426a8d4dbfb94b13ff1cc",
        "title": "net: sock: validate data_len before allocating skb in sock_alloc_send…",
        "body": "…_pskb()We need to validate the number of pages consumed by data_len, otherwise fragsarray could be overflowed by userspace. So this patch validate data_len andreturn -EMSGSIZE when data_len may occupies more frags than MAX_SKB_FRAGS.Signed-off-by: Jason Wang <jasowang@redhat.com>Signed-off-by: David S. Miller <davem@davemloft.net>"
      }
    ],
    "CVE-2012-2139": [
      {
        "url": "https://github.com/mikel/mail/commit/29aca25218e4c82991400eb9b0c933626aefc98f",
        "title": "Preventing file system traversal in file_delivery method",
        "body": ""
      }
    ],
    "CVE-2012-2140": [
      {
        "url": "https://github.com/mikel/mail/commit/ac56f03bdfc30b379aeecd4ff317d08fdaa328c2",
        "title": "Fix security vulnerability allowing command line exploit when using e…",
        "body": "…xim or sendmail from the command line"
      },
      {
        "url": "https://github.com/mikel/mail/commit/39b590ddb08f90ddbe445837359a2c8843e533d0",
        "title": "Making sure that destinations are also properly escaped in all versio…",
        "body": "…n of ruby"
      },
      {
        "url": "https://github.com/mikel/mail/blob/9beb079c70d236a5ad2e1ba95b2c977e55deb7af/CHANGELOG.rdoc",
        "title": "",
        "body": ""
      }
    ],
    "CVE-2012-2234": [
      {
        "url": "https://github.com/nilsteampassnet/TeamPass/blob/master/readme.txt",
        "title": "",
        "body": ""
      }
    ],
    "CVE-2012-2313": [
      {
        "url": "https://github.com/torvalds/linux/commit/1bb57e940e1958e40d51f2078f50c3a96a9b2d75",
        "title": "dl2k: Clean up rio_ioctl",
        "body": "The dl2k driver's rio_ioctl call has a few issues:- No permissions checking- Implements SIOCGMIIREG and SIOCGMIIREG using the SIOCDEVPRIVATE numbers- Has a few ioctls that may have been used for debugging at one point but have no place in the kernel proper.This patch removes all but the MII ioctls, renumbers them to use thestandard ones, and adds the proper permission check for SIOCSMIIREG.We can also get rid of the dl2k-specific struct mii_data in favor ofthe generic struct mii_ioctl_data.Since we have the phyid on hand, we can add the SIOCGMIIPHY ioctl too.Most of the MII code for the driver could probably be converted to usethe generic MII library but I don't have a device to test the results.Reported-by: Stephan Mueller <stephan.mueller@atsec.com>Signed-off-by: Jeff Mahoney <jeffm@suse.com>Signed-off-by: David S. Miller <davem@davemloft.net>"
      }
    ],
    "CVE-2012-2319": [
      {
        "url": "https://github.com/torvalds/linux/commit/6f24f892871acc47b40dd594c63606a17c714f77",
        "title": "hfsplus: Fix potential buffer overflows",
        "body": "Commit ec81aec (\"hfs: fix a potential buffer overflow\") fixed a fewpotential buffer overflows in the hfs filesystem. But as Timo Warnspointed out, these changes also need to be made on the hfsplusfilesystem as well.Reported-by: Timo Warns <warns@pre-sense.de>Acked-by: WANG Cong <amwang@redhat.com>Cc: Alexey Khoroshilov <khoroshilov@ispras.ru>Cc: Miklos Szeredi <mszeredi@suse.cz>Cc: Sage Weil <sage@newdream.net>Cc: Eugene Teo <eteo@redhat.com>Cc: Roman Zippel <zippel@linux-m68k.org>Cc: Al Viro <viro@zeniv.linux.org.uk>Cc: Christoph Hellwig <hch@lst.de>Cc: Alexey Dobriyan <adobriyan@gmail.com>Cc: Dave Anderson <anderson@redhat.com>Cc: stable <stable@vger.kernel.org>Cc: Andrew Morton <akpm@linux-foundation.org>Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>"
      }
    ],
    "CVE-2012-2330": [
      {
        "url": "https://github.com/joyent/node/commit/7b3fb22",
        "title": "typo in node_http_parser",
        "body": ""
      },
      {
        "url": "https://github.com/joyent/node/commit/c9a231d",
        "title": "typo in node_http_parser",
        "body": ""
      }
    ],
    "CVE-2012-2331": [
      {
        "url": "https://github.com/s9y/Serendipity/commit/264bf55719baacc069ff9d3cc35f0c349cde11e3",
        "title": "backend media",
        "body": ""
      }
    ],
    "CVE-2012-2375": [
      {
        "url": "https://github.com/torvalds/linux/commit/20e0fa98b751facf9a1101edaefbc19c82616a68",
        "title": "Fix length of buffer copied in __nfs4_get_acl_uncached",
        "body": "_copy_from_pages() used to copy data from the temporary buffer to theuser passed buffer is passed the wrong size parameter when copyingdata. res.acl_len contains both the bitmap and acl lenghts whileacl_len contains the acl length after adjusting for the bitmap size.Signed-off-by: Sachin Prabhu <sprabhu@redhat.com>Signed-off-by: Trond Myklebust <Trond.Myklebust@netapp.com>"
      }
    ],
    "CVE-2012-2383": [
      {
        "url": "https://github.com/torvalds/linux/commit/ed8cd3b2cd61004cab85380c52b1817aca1ca49b",
        "title": "drm/i915: fix integer overflow in i915_gem_execbuffer2()",
        "body": "On 32-bit systems, a large args->buffer_count from userspace via ioctlmay overflow the allocation size, leading to out-of-bounds access.This vulnerability was introduced in commit 8408c28 (\"drm/i915:First try a normal large kmalloc for the temporary exec buffers\").Signed-off-by: Xi Wang <xi.wang@gmail.com>Reviewed-by: Chris Wilson <chris@chris-wilson.co.uk>Cc: stable@vger.kernel.orgSigned-off-by: Daniel Vetter <daniel.vetter@ffwll.ch>"
      }
    ],
    "CVE-2012-2384": [
      {
        "url": "https://github.com/torvalds/linux/commit/44afb3a04391a74309d16180d1e4f8386fdfa745",
        "title": "drm/i915: fix integer overflow in i915_gem_do_execbuffer()",
        "body": "On 32-bit systems, a large args->num_cliprects from userspace via ioctlmay overflow the allocation size, leading to out-of-bounds access.This vulnerability was introduced in commit 432e58e (\"drm/i915: Avoidallocation for execbuffer object list\").Signed-off-by: Xi Wang <xi.wang@gmail.com>Reviewed-by: Chris Wilson <chris@chris-wilson.co.uk>Cc: stable@vger.kernel.orgSigned-off-by: Daniel Vetter <daniel.vetter@ffwll.ch>"
      }
    ],
    "CVE-2012-2385": [
      {
        "url": "https://github.com/keithw/mosh/commit/9791768705528e911bfca6c4d8aa88139035060e",
        "title": "Cap escape sequence parameters to prevent long loops.",
        "body": "Fixes #271 github issue."
      },
      {
        "url": "https://github.com/keithw/mosh/blob/master/ChangeLog",
        "title": "",
        "body": ""
      },
      {
        "url": "https://github.com/keithw/mosh/issues/271",
        "title": "",
        "body": ""
      }
    ],
    "CVE-2012-2390": [
      {
        "url": "https://github.com/torvalds/linux/commit/c50ac050811d6485616a193eb0f37bfbd191cc89",
        "title": "hugetlb: fix resv_map leak in error path",
        "body": "When called for anonymous (non-shared) mappings, hugetlb_reserve_pages()does a resv_map_alloc(). It depends on code in hugetlbfs'svm_ops->close() to release that allocation.However, in the mmap() failure path, we do a plain unmap_region() withoutthe remove_vma() which actually calls vm_ops->close().This is a decent fix. This leak could get reintroduced if new code (say,after hugetlb_reserve_pages() in hugetlbfs_file_mmap()) decides to returnan error. But, I think it would have to unroll the reservation anyway.Christoph's test case:http://marc.info/?l=linux-mm&m=133728900729735This patch applies to 3.4 and later. A version for earlier kernels is athttps://lkml.org/lkml/2012/5/22/418.Signed-off-by: Dave Hansen <dave@linux.vnet.ibm.com>Acked-by: Mel Gorman <mel@csn.ul.ie>Acked-by: KOSAKI Motohiro <kosaki.motohiro@jp.fujitsu.com>Reported-by: Christoph Lameter <cl@linux.com>Tested-by: Christoph Lameter <cl@linux.com>Cc: Andrea Arcangeli <aarcange@redhat.com>Cc: <stable@vger.kernel.org>[2.6.32+]Signed-off-by: Andrew Morton <akpm@linux-foundation.org>Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>"
      }
    ],
    "CVE-2012-2417": [
      {
        "url": "https://github.com/Legrandin/pycrypto/commit/9f912f13df99ad3421eff360d6a62d7dbec755c2",
        "title": "Fix to bug #985164 (ElGamal key generation). Fix to missing range che…",
        "body": "…ck in signature verification."
      },
      {
        "url": "https://github.com/dlitz/pycrypto/blob/373ea760f21701b162e8c4912a66928ee30d401a/ChangeLog",
        "title": "",
        "body": ""
      }
    ],
    "CVE-2012-2654": [
      {
        "url": "https://github.com/openstack/nova/commit/9f9e9da777161426a6f8cb4314b78e09beac2978",
        "title": "Fix up protocol case handling for security groups.",
        "body": "Fix bug 985184.When creating security group rules, any case for the protocol wasaccepted as input, such as TCP, Tcp, tcp, etc., and was stored in thedatabase as specified. However, unless specified as all lowercase, thecode to apply the rules would break and result in some rules not beingapplied.(cherry picked from commit ff06c7c)Change-Id: If737104f492aacd3688f04d78eb9bc993ffa33fc"
      },
      {
        "url": "https://github.com/openstack/nova/commit/ff06c7c885dc94ed7c828e8cdbb8b5d850a7e654",
        "title": "Fix up protocol case handling for security groups.",
        "body": "Fix bug 985184.When creating security group rules, any case for the protocol wasaccepted as input, such as TCP, Tcp, tcp, etc., and was stored in thedatabase as specified. However, unless specified as all lowercase, thecode to apply the rules would break and result in some rules not beingapplied.Change-Id: I6c723d371579eb37a94bd484d39beeb773668ed4"
      }
    ],
    "CVE-2012-2669": [
      {
        "url": "https://github.com/torvalds/linux/commit/bcc2c9c3fff859e0eb019fe6fec26f9b8eba795c",
        "title": "Tools: hv: verify origin of netlink connector message",
        "body": "The SuSE security team suggested to use recvfrom instead of recv to becertain that the connector message is originated from kernel.CVE-2012-2669Signed-off-by: Olaf Hering <olaf@aepfle.de>Signed-off-by: Marcus Meissner <meissner@suse.de>Signed-off-by: Sebastian Krahmer <krahmer@suse.de>Signed-off-by: K. Y. Srinivasan <kys@microsoft.com>Cc: stable <stable@vger.kernel.org>Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>"
      }
    ],
    "CVE-2012-2673": [
      {
        "url": "https://github.com/ivmai/bdwgc/commit/83231d0ab5ed60015797c3d1ad9056295ac3b2bb",
        "title": "Speedup calloc size overflow check by preventing division if small va…",
        "body": "…lues* malloc.c (GC_SQRT_SIZE_MAX): New macro.* malloc.c (calloc): Add fast initial size overflow check to avoidinteger division for reasonably small values passed."
      },
      {
        "url": "https://github.com/ivmai/bdwgc/blob/master/ChangeLog",
        "title": "",
        "body": ""
      },
      {
        "url": "https://github.com/ivmai/bdwgc/commit/6a93f8e5bcad22137f41b6c60a1c7384baaec2b3",
        "title": "Fix calloc-related code to prevent SIZE_MAX redefinition in sys headers",
        "body": "* malloc.c: Include limits.h for SIZE_MAX.* malloc.c (SIZE_MAX, calloc): Define GC_SIZE_MAX instead of SIZE_MAX."
      },
      {
        "url": "https://github.com/ivmai/bdwgc/commit/e10c1eb9908c2774c16b3148b30d2f3823d66a9a",
        "title": "Fix calloc() overflow",
        "body": "* malloc.c (calloc): Check multiplication overflow in calloc(),assuming REDIRECT_MALLOC."
      },
      {
        "url": "https://github.com/ivmai/bdwgc/commit/be9df82919960214ee4b9d3313523bff44fd99e1",
        "title": "Fix allocation size overflows due to rounding.",
        "body": "* malloc.c (GC_generic_malloc): Check if the allocation size isrounded to a smaller value.* mallocx.c (GC_generic_malloc_ignore_off_page): Likewise."
      }
    ],
    "CVE-2012-2674": [
      {
        "url": "https://github.com/android/platform_bionic/commit/7f5aa4f35e23fd37425b3a5041737cdf58f87385",
        "title": "bionic: fix integer overflows in chk_malloc(), leak_malloc(), and lea…",
        "body": "…k_memalign()The allocation size in chk_malloc(), leak_malloc(), and leak_memalign()functions may be rounded up to a small value, leading to buffer overflows.The code only runs in debugging mode.This patch complements commit 6f04a0f (CVE-2009-0607).Change-Id: Id899bcd2bcd2ea2205e5753c433390710032dc83Signed-off-by: Xi Wang <xi.wang@gmail.com>"
      }
    ],
    "CVE-2012-2675": [
      {
        "url": "https://github.com/ned14/nedmalloc/commit/1a759756639ab7543b650a10c2d77a0ffc7a2000",
        "title": "Avoid overflowing allocation size in CallMalloc()",
        "body": "The wraparound could happen if USE_MAGIC_HEADERS is enabled."
      },
      {
        "url": "https://github.com/ned14/nedmalloc/commit/2965eca30c408c13473c4146a9d47d547d288db1",
        "title": "Avoid overflowing allocation size in calloc()",
        "body": ""
      },
      {
        "url": "https://github.com/ned14/nedmalloc/blob/master/Readme.html",
        "title": "",
        "body": ""
      }
    ],
    "CVE-2012-2676": [
      {
        "url": "https://github.com/emeryberger/Hoard/blob/master/NEWS",
        "title": "",
        "body": ""
      }
    ],
    "CVE-2012-2691": [
      {
        "url": "https://github.com/mantisbt/mantisbt/commit/edc8142bb8ac0ac0df1a3824d78c15f4015d959e",
        "title": "Fix #14340: Reporters can use SOAP to update bugnotes without permission",
        "body": "The access checks inside bugnote_update.php andapi/soap/mc_issue_api.php differed. Users were incorrectly allowed viathe SOAP interface to update the bugnotes of other users. Instead ofcomparing the SOAP user's access level to $g_update_bugnote_threshold,$g_add_bugnote_threshold was used instead.This posed a problem because the default installed state of MantisBT isto allow the REPORTER access level to submit bugs via the SOAP API. Thusin the default installed state, any user who could submit a bug couldalso update/modify the bugnotes of any other user.Access checks within bugnote_update.php and api/soap/mc_issue_api.phpshould now be equivalent.Thanks to Roland Becker and Damien Regard (both MantisBT developers) forfinding and reporting this problem."
      },
      {
        "url": "https://github.com/mantisbt/mantisbt/commit/175d973105fe9f03a37ced537b742611631067e0",
        "title": "mc_issue_note_update passing wrong param to access check function",
        "body": "Commit edc8142 introduced proper logicto avoid unauthorized update of bugnotes, but was passing incorrectparameters to access_has_bugnote_level() so unprivileged users couldstill update them.Fixes #14340"
      }
    ],
    "CVE-2012-2692": [
      {
        "url": "https://github.com/mantisbt/mantisbt/commit/ceafe6f0c679411b81368052633a63dd3ca06d9c",
        "title": "Fix #14016: delete_attachments_threshold is not checked",
        "body": "Roland Becker (MantisBT developer) reported the followingsecurity/access control bug:In a default installation delete_attachments_threshold is set toDEVELOPER but having access level >= update_bug_threshold is enough todelete attachments if form_security_validation is set to OFF.MantisBT was not checking the access level of the user requestingdeletion of an attachment to an issue against$g_delete_attachments_threshold.The new access control logic for deleting an issue attachment is now:1. Does the user have an access level of at least update_bug_threshold?2. If the user is the owner of the file and$g_allow_delete_own_attachments=OFF, does this user have an access levelof at least delete_attachments_threshold?3. If the user is not the owner of the file, do they have an accesslevel of at least delete_attachments_threshold?Also refer to issue #14015 for discussion on whetherupdate_bug_threshold should be part of the access control logic.The relevant SOAP API call has also been updated."
      }
    ],
    "CVE-2012-2745": [
      {
        "url": "https://github.com/torvalds/linux/commit/79549c6dfda0603dba9a70a53467ce62d9335c33",
        "title": "cred: copy_process() should clear child->replacement_session_keyring",
        "body": "keyctl_session_to_parent(task) sets ->replacement_session_keyring,it should be processed and cleared by key_replace_session_keyring().However, this task can fork before it notices TIF_NOTIFY_RESUME andthe new child gets the bogus ->replacement_session_keyring copied bydup_task_struct(). This is obviously wrong and, if nothing else, thisleads to put_cred(already_freed_cred).change copy_creds() to clear this member. If copy_process() failsbefore this point the wrong ->replacement_session_keyring doesn'tmatter, exit_creds() won't be called.Cc: <stable@vger.kernel.org>Signed-off-by: Oleg Nesterov <oleg@redhat.com>Acked-by: David Howells <dhowells@redhat.com>Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>"
      }
    ],
    "CVE-2012-2760": [
      {
        "url": "https://github.com/bmuller/mod_auth_openid/pull/30",
        "title": "",
        "body": ""
      },
      {
        "url": "https://github.com/bmuller/mod_auth_openid/blob/master/ChangeLog",
        "title": "",
        "body": ""
      }
    ],
    "CVE-2012-2762": [
      {
        "url": "https://github.com/s9y/Serendipity/commit/87153991d06bc18fe4af05f97810487c4a340a92#diff-1",
        "title": "* Fix SQL injection for comment.php used in read-context.",
        "body": "(Thanks to High-Tech Bridge SA Security Release Lab, Advisory HTB23092)"
      }
    ],
    "CVE-2012-2935": [
      {
        "url": "https://github.com/osCommerce/oscommerce/commit/a5aeb0448cc333cc4b801c0e01981b218fd9c7df",
        "title": "Fix a cross site scripting vulnerability.",
        "body": "Reported by: Vulnerability Research Laboratory - Alexander Fuchs (F0x23)Brought to our attention by Te Taipo"
      }
    ],
    "CVE-2012-2981": [
      {
        "url": "https://github.com/webmin/webmin/commit/ed7365064c189b8f136a9f952062249167d1bd9e",
        "title": "Prevent passing in of monitor type that could contain invalid charact…",
        "body": "…ers https://sourceforge.net/tracker/index.php?func=detail&aid=3542038&group_id=17457&atid=117457#"
      }
    ],
    "CVE-2012-2983": [
      {
        "url": "https://github.com/webmin/webmin/commit/4cd7bad70e23e4e19be8ccf7b9f245445b2b3b80",
        "title": "Add access control check when reading HTML file https://sourceforge.n…",
        "body": "…et/tracker/index.php?func=detail&aid=3542038&group_id=17457&atid=117457#"
      }
    ],
    "CVE-2012-3360": [
      {
        "url": "https://github.com/openstack/nova/commit/b0feaffdb2b1c51182b8dce41b367f3449af5dd9",
        "title": "Prevent file injection writing to host filesystem.",
        "body": "Fix bug 1015531, CVE-2012-3360, CVE-2012-3361This patch prevents the file injection code from writing into the hostfilesystem if a user specifies a path for the injected file thatcontains '..'. The check is to make sure that the final normalized paththat is about to be written to is within the mounted guest filesystem.This is a backport of Russell Bryant, Pádraig Brady and MarkMcLoughlin's Folsom patch.Change-Id: Id8bd6ffb4d878467ba2086d341fce23f2ff5aa0a"
      },
      {
        "url": "https://github.com/openstack/nova/commit/2427d4a99bed35baefd8f17ba422cb7aae8dcca7",
        "title": "Prevent file injection writing to host filesystem.",
        "body": "Fix bug 1015531, CVE-2012-3360, CVE-2012-3361This patch prevents the file injection code from writing into the hostfilesystem if a user specifies a path for the injected file thatcontains '..'. The check is to make sure that the final normalized paththat is about to be written to is within the mounted guest filesystem.Signed-off-by: Russell Bryant <rbryant@redhat.com>Signed-off-by: Pádraig Brady <pbrady@redhat.com>Signed-off-by: Mark McLoughlin <markmc@redhat.com>Change-Id: I658cd12fd319cee91eb9544cdf53c862c5d2c560"
      }
    ],
    "CVE-2012-3361": [
      {
        "url": "https://github.com/openstack/nova/commit/b0feaffdb2b1c51182b8dce41b367f3449af5dd9",
        "title": "Prevent file injection writing to host filesystem.",
        "body": "Fix bug 1015531, CVE-2012-3360, CVE-2012-3361This patch prevents the file injection code from writing into the hostfilesystem if a user specifies a path for the injected file thatcontains '..'. The check is to make sure that the final normalized paththat is about to be written to is within the mounted guest filesystem.This is a backport of Russell Bryant, Pádraig Brady and MarkMcLoughlin's Folsom patch.Change-Id: Id8bd6ffb4d878467ba2086d341fce23f2ff5aa0a"
      },
      {
        "url": "https://github.com/openstack/nova/commit/2427d4a99bed35baefd8f17ba422cb7aae8dcca7",
        "title": "Prevent file injection writing to host filesystem.",
        "body": "Fix bug 1015531, CVE-2012-3360, CVE-2012-3361This patch prevents the file injection code from writing into the hostfilesystem if a user specifies a path for the injected file thatcontains '..'. The check is to make sure that the final normalized paththat is about to be written to is within the mounted guest filesystem.Signed-off-by: Russell Bryant <rbryant@redhat.com>Signed-off-by: Pádraig Brady <pbrady@redhat.com>Signed-off-by: Mark McLoughlin <markmc@redhat.com>Change-Id: I658cd12fd319cee91eb9544cdf53c862c5d2c560"
      }
    ],
    "CVE-2012-3364": [
      {
        "url": "https://github.com/torvalds/linux/commit/67de956ff5dc1d4f321e16cfbd63f5be3b691b43",
        "title": "NFC: Prevent multiple buffer overflows in NCI",
        "body": "Fix multiple remotely-exploitable stack-based buffer overflows due tothe NCI code pulling length fields directly from incoming frames andcopying too much data into statically-sized arrays.Signed-off-by: Dan Rosenberg <dan.j.rosenberg@gmail.com>Cc: stable@kernel.orgCc: security@kernel.orgCc: Lauro Ramos Venancio <lauro.venancio@openbossa.org>Cc: Aloisio Almeida Jr <aloisio.almeida@openbossa.org>Cc: Samuel Ortiz <sameo@linux.intel.com>Cc: David S. Miller <davem@davemloft.net>Acked-by: Ilan Elias <ilane@ti.com>Signed-off-by: Samuel Ortiz <sameo@linux.intel.com>"
      }
    ],
    "CVE-2012-3366": [
      {
        "url": "https://github.com/Bcfg2/bcfg2/commit/a524967e8d5c4c22e49cd619aed20c87a316c0be",
        "title": "fixed major security flaw in Trigger plugin",
        "body": ""
      }
    ],
    "CVE-2012-3371": [
      {
        "url": "https://github.com/openstack/nova/commit/034762e8060dcf0a11cb039b9d426b0d0bb1801d",
        "title": "Use compute_api.get_all in affinity filters.",
        "body": "Updates the affinity filters so they make a single compute APIcall to lookup instance host information rather than singlelookups for each UUID.This resolves a potential performance issue which can cause ascheduler to hang while processing requests which contain large numbersof UUID's in the scheduler_hints.Fixes LP Bug #1017795.Change-Id: I30f434faf109058573ee41c4a6abce2e48939e8d"
      }
    ],
    "CVE-2012-3382": [
      {
        "url": "https://github.com/mono/mono/commit/d16d4623edb210635bec3ca3786481b82cde25a2",
        "title": "HtmlEncode the path",
        "body": "Fixes Novell bug #769799."
      }
    ],
    "CVE-2012-3400": [
      {
        "url": "https://github.com/torvalds/linux/commit/1df2ae31c724e57be9d7ac00d78db8a5dabdd050",
        "title": "udf: Fortify loading of sparing table",
        "body": "Add sanity checks when loading sparing table from disk to avoid accessingunallocated memory or writing to it.Signed-off-by: Jan Kara <jack@suse.cz>"
      },
      {
        "url": "https://github.com/torvalds/linux/commit/adee11b2085bee90bd8f4f52123ffb07882d6256",
        "title": "udf: Avoid run away loop when partition table length is corrupted",
        "body": "Check provided length of partition table so that (possibly maliciously)corrupted partition table cannot cause accessing data beyond current buffer.Signed-off-by: Jan Kara <jack@suse.cz>"
      }
    ],
    "CVE-2012-3408": [
      {
        "url": "https://github.com/puppetlabs/puppet/commit/ab9150baa1b738467a33b01df1d90e076253fbbd",
        "title": "Deprecate IP-based authentication",
        "body": "This will need to be made explicit in a future version, so it's good toget people to stop using it if possible."
      }
    ],
    "CVE-2012-3412": [
      {
        "url": "https://github.com/torvalds/linux/commit/68cb695ccecf949d48949e72f8ce591fdaaa325c",
        "title": "sfc: Fix maximum number of TSO segments and minimum TX queue size",
        "body": "[ Upstream commit 7e6d06f ]Currently an skb requiring TSO may not fit within a minimum-size TXqueue. The TX queue selected for the skb may stall and trigger the TXwatchdog repeatedly (since the problem skb will be retried after theTX reset). This issue is designated as CVE-2012-3412.Set the maximum number of TSO segments for our devices to 100. Thisshould make no difference to behaviour unless the actual MSS is lessthan about 700. Increase the minimum TX queue size accordingly toallow for 2 worst-case skbs, so that there will definitely be spaceto add an skb after we wake a queue.To avoid invalidating existing configurations, changeefx_ethtool_set_ringparam() to fix up values that are too small ratherthan returning -EINVAL.Signed-off-by: Ben Hutchings <bhutchings@solarflare.com>Signed-off-by: David S. Miller <davem@davemloft.net>Signed-off-by: Ben Hutchings <ben@decadent.org.uk>"
      }
    ],
    "CVE-2012-3426": [
      {
        "url": "http://github.com/openstack/keystone/commit/ea03d05ed5de0c015042876100d37a6a14bf56de",
        "title": "Invalidate user tokens when password is changed",
        "body": "Fixes bug 996595This commit will cause all valid tokens to be deleted for a userwho's password is changed (implemented for the sql and kvs backends)Change-Id: I6ad7da8957b7041983a3fc91d9ba9368667d06ac"
      },
      {
        "url": "http://github.com/openstack/keystone/commit/628149b3dc6b58b91fd08e6ca8d91c728ccb8626",
        "title": "Invalidate user tokens when a user is disabled",
        "body": "Fixes Bug 997194Delete valid tokens for a user when they have been disabledMoved logic to delete tokens into update_user, as this can be calleddirectly form the REST API.Also checks if a user is enabled when creating a token from anothertoken, this helps in cases there the backend didn't support listing oftokens (and as a result weren't deleted)Change-Id: Ib5ed73a7873bfa66ef31bf6d0f0322f50e677688"
      },
      {
        "url": "http://github.com/openstack/keystone/commit/375838cfceb88cacc312ff6564e64eb18ee6a355",
        "title": "Carrying over token expiry time when token chaining",
        "body": "Fixes bug #998185This commit causes the token expiry time to be maintained whenone token is being created from anotherChange-Id: I7b61692a60d9227423b93c267864a5abe939ca33"
      },
      {
        "url": "http://github.com/openstack/keystone/commit/d9600434da14976463a0bd03abd8e0309f0db454",
        "title": "Invalidate user tokens when a user is disabled",
        "body": "Fixes Bug 997194Delete valid tokens for a user when they have been disabledMoved logic to delete tokens into update_user, as this can be calleddirectly form the REST API.Also checks if a user is enabled when creating a token from anothertoken, this helps in cases there the backend didn't support listing oftokens (and as a result weren't deleted)Change-Id: Ib5ed73a7873bfa66ef31bf6d0f0322f50e677688"
      },
      {
        "url": "http://github.com/openstack/keystone/commit/29e74e73a6e51cffc0371b32354558391826a4aa",
        "title": "Carrying over token expiry time when token chaining",
        "body": "Fixes bug #998185This commit causes the token expiry time to be maintained whenone token is being created from anotherChange-Id: I7b61692a60d9227423b93c267864a5abe939ca33"
      },
      {
        "url": "http://github.com/openstack/keystone/commit/a67b24878a6156eab17b9098fa649f0279256f5d",
        "title": "Invalidate user tokens when password is changed",
        "body": "Fixes bug 996595This commit will cause all valid tokens to be deleted for a userwho's password is changed (implemented for the sql and kvs backends)Change-Id: I6ad7da8957b7041983a3fc91d9ba9368667d06ac"
      }
    ],
    "CVE-2012-3430": [
      {
        "url": "https://github.com/torvalds/linux/commit/06b6a1cf6e776426766298d055bb3991957d90a7",
        "title": "rds: set correct msg_namelen",
        "body": "Jay Fenlason (fenlason@redhat.com) found a bug,that recvfrom() on an RDS socket can return the contents of random kernelmemory to userspace if it was called with a address length larger thansizeof(struct sockaddr_in).rds_recvmsg() also fails to set the addr_len paramater properly beforereturning, but that's just a bug.There are also a number of cases wher recvfrom() can return an entirely bogusaddress. Anything in rds_recvmsg() that returns a non-negative value but doesnot go through the \"sin = (struct sockaddr_in *)msg->msg_name;\" code pathat the end of the while(1) loop will return up to 128 bytes of kernel memoryto userspace.And I write two test programs to reproduce this bug, you will see that inrds_server, fromAddr will be overwritten and the following sock_fd will bedestroyed.Yes, it is the programmer's fault to set msg_namelen incorrectly, but it isbetter to make the kernel copy the real length of address to user space insuch case.How to run the test programs ?I test them on 32bit x86 system, 3.5.0-rc7.1 compilegcc -o rds_client rds_client.cgcc -o rds_server rds_server.c2 run ./rds_server on one console3 run ./rds_client on another console4 you will see something like:server is waiting to receive data...old socket fd=3server received data from client:data from clientmsg.msg_namelen=32new socket fd=-1067277685sendmsg(): Bad file descriptor/***************** rds_client.c ********************/int main(void){int sock_fd;struct sockaddr_in serverAddr;struct sockaddr_in toAddr;char recvBuffer[128] = \"data from client\";struct msghdr msg;struct iovec iov;sock_fd = socket(AF_RDS, SOCK_SEQPACKET, 0);if (sock_fd < 0) {perror(\"create socket error\\n\");exit(1);}memset(&serverAddr, 0, sizeof(serverAddr));serverAddr.sin_family = AF_INET;serverAddr.sin_addr.s_addr = inet_addr(\"127.0.0.1\");serverAddr.sin_port = htons(4001);if (bind(sock_fd, (struct sockaddr*)&serverAddr, sizeof(serverAddr)) < 0) {perror(\"bind() error\\n\");close(sock_fd);exit(1);}memset(&toAddr, 0, sizeof(toAddr));toAddr.sin_family = AF_INET;toAddr.sin_addr.s_addr = inet_addr(\"127.0.0.1\");toAddr.sin_port = htons(4000);msg.msg_name = &toAddr;msg.msg_namelen = sizeof(toAddr);msg.msg_iov = &iov;msg.msg_iovlen = 1;msg.msg_iov->iov_base = recvBuffer;msg.msg_iov->iov_len = strlen(recvBuffer) + 1;msg.msg_control = 0;msg.msg_controllen = 0;msg.msg_flags = 0;if (sendmsg(sock_fd, &msg, 0) == -1) {perror(\"sendto() error\\n\");close(sock_fd);exit(1);}printf(\"client send data:%s\\n\", recvBuffer);memset(recvBuffer, '\\0', 128);msg.msg_name = &toAddr;msg.msg_namelen = sizeof(toAddr);msg.msg_iov = &iov;msg.msg_iovlen = 1;msg.msg_iov->iov_base = recvBuffer;msg.msg_iov->iov_len = 128;msg.msg_control = 0;msg.msg_controllen = 0;msg.msg_flags = 0;if (recvmsg(sock_fd, &msg, 0) == -1) {perror(\"recvmsg() error\\n\");close(sock_fd);exit(1);}printf(\"receive data from server:%s\\n\", recvBuffer);close(sock_fd);return 0;}/***************** rds_server.c ********************/int main(void){struct sockaddr_in fromAddr;int sock_fd;struct sockaddr_in serverAddr;unsigned int addrLen;char recvBuffer[128];struct msghdr msg;struct iovec iov;sock_fd = socket(AF_RDS, SOCK_SEQPACKET, 0);if(sock_fd < 0) {perror(\"create socket error\\n\");exit(0);}memset(&serverAddr, 0, sizeof(serverAddr));serverAddr.sin_family = AF_INET;serverAddr.sin_addr.s_addr = inet_addr(\"127.0.0.1\");serverAddr.sin_port = htons(4000);if (bind(sock_fd, (struct sockaddr*)&serverAddr, sizeof(serverAddr)) < 0) {perror(\"bind error\\n\");close(sock_fd);exit(1);}printf(\"server is waiting to receive data...\\n\");msg.msg_name = &fromAddr;/* * I add 16 to sizeof(fromAddr), ie 32, * and pay attention to the definition of fromAddr, * recvmsg() will overwrite sock_fd, * since kernel will copy 32 bytes to userspace. * * If you just use sizeof(fromAddr), it works fine. * */msg.msg_namelen = sizeof(fromAddr) + 16;/* msg.msg_namelen = sizeof(fromAddr); */msg.msg_iov = &iov;msg.msg_iovlen = 1;msg.msg_iov->iov_base = recvBuffer;msg.msg_iov->iov_len = 128;msg.msg_control = 0;msg.msg_controllen = 0;msg.msg_flags = 0;while (1) {printf(\"old socket fd=%d\\n\", sock_fd);if (recvmsg(sock_fd, &msg, 0) == -1) {perror(\"recvmsg() error\\n\");close(sock_fd);exit(1);}printf(\"server received data from client:%s\\n\", recvBuffer);printf(\"msg.msg_namelen=%d\\n\", msg.msg_namelen);printf(\"new socket fd=%d\\n\", sock_fd);strcat(recvBuffer, \"--data from server\");if (sendmsg(sock_fd, &msg, 0) == -1) {perror(\"sendmsg()\\n\");close(sock_fd);exit(1);}}close(sock_fd);return 0;}Signed-off-by: Weiping Pan <wpan@redhat.com>Signed-off-by: David S. Miller <davem@davemloft.net>"
      }
    ],
    "CVE-2012-3447": [
      {
        "url": "https://github.com/openstack/nova/commit/ce4b2e27be45a85b310237615c47eb53f37bb5f3",
        "title": "Prohibit file injection writing to host filesystem",
        "body": "This is a refinement of the previous fix in commit 2427d4a,which does the file name canonicalization as the root user.This is required so that guest images could not for example,protect malicious symlinks in a directory only readable by root.Fixes bug: 1031311, CVE-2012-3447Change-Id: I7f7cdeeffadebae7451e1e13f73f1313a7df9c5c"
      },
      {
        "url": "https://github.com/openstack/nova/commit/d9577ce9f266166a297488445b5b0c93c1ddb368",
        "title": "Prohibit file injection writing to host filesystem",
        "body": "This is a refinement of the previous fix in commit 2427d4a,which does the file name canonicalization as the root user.This is required so that guest images could not for example,protect malicious symlinks in a directory only readable by root.Fixes bug: 1031311, CVE-2012-3447Change-Id: I7f7cdeeffadebae7451e1e13f73f1313a7df9c5c"
      }
    ],
    "CVE-2012-3458": [
      {
        "url": "https://github.com/bbangert/beaker/commit/91becae76101cf87ce8cbfabe3af2622fc328fe5",
        "title": "Apply patch from Redhat to secure pycrypto that otherwise could allow…",
        "body": "… an attacker to determine contents of the encrypted payload (but is unable to modify)."
      }
    ],
    "CVE-2012-3468": [
      {
        "url": "https://github.com/ushahidi/Ushahidi_Web/commit/fdb48d1",
        "title": "Fix potential SQLi in alerts/verify #645",
        "body": ""
      },
      {
        "url": "https://github.com/ushahidi/Ushahidi_Web/commit/d954093",
        "title": "Fix SQLi from media type #645",
        "body": ""
      },
      {
        "url": "https://github.com/ushahidi/Ushahidi_Web/commit/4764792",
        "title": "Fix SQLi in settings::save_all() Closes #680",
        "body": ""
      }
    ],
    "CVE-2012-3469": [
      {
        "url": "https://github.com/ushahidi/Ushahidi_Web/commit/68d9916",
        "title": "Fix SQLi in MY_Checkin_Api_Object.php #645",
        "body": "Parameterize query to check if user email exists"
      },
      {
        "url": "https://github.com/ushahidi/Ushahidi_Web/commit/e0e2b66",
        "title": "Fix SQL injection in admin/messages/reporters #653",
        "body": ""
      },
      {
        "url": "https://github.com/ushahidi/Ushahidi_Web/commit/6f6a919",
        "title": "Fix SQLi in messages admin #682",
        "body": ""
      },
      {
        "url": "https://github.com/ushahidi/Ushahidi_Web/commit/a11d43c",
        "title": "Fix SQLi in location api #654",
        "body": "* Removes Location_MOdel::get_locations since it better to use ORM* Filter locations by location_visible* Sanitize location id (automatic thanks to query builder/ORM)* Slight change to JSON response, but should be backwards compatible * Now returns lat/long/id as numbers not strings * Now return name and location_name * Response now includes location_date"
      }
    ],
    "CVE-2012-3470": [
      {
        "url": "https://github.com/ushahidi/Ushahidi_Web/commit/3301e48",
        "title": "Fix SQLi in MY_Countries_Api_Object.php #645",
        "body": "Converted _get_countries function to use the ORM instead so queriesare sanitized automatically. This adds some extra fields to the responsebut existing fields are unchanged."
      }
    ],
    "CVE-2012-3471": [
      {
        "url": "https://github.com/ushahidi/Ushahidi_Web/commit/3f14fa0",
        "title": "Fix SQLi in admin and members reports/edit controllers #645",
        "body": "* Previously the incident id was not sanitized before being used in the geometry query."
      }
    ],
    "CVE-2012-3472": [
      {
        "url": "https://github.com/ushahidi/Ushahidi_Web/commit/4c24325",
        "title": "Add authentication to the email API #665",
        "body": "* Also fixes undefined variable $ret_value error"
      }
    ],
    "CVE-2012-3473": [
      {
        "url": "https://github.com/ushahidi/Ushahidi_Web/commit/f67f4ad",
        "title": "",
        "body": ""
      },
      {
        "url": "https://github.com/ushahidi/Ushahidi_Web/commit/13ca6f4",
        "title": "",
        "body": ""
      }
    ],
    "CVE-2012-3474": [
      {
        "url": "https://github.com/ushahidi/Ushahidi_Web/commit/529f353",
        "title": "",
        "body": ""
      }
    ],
    "CVE-2012-3476": [
      {
        "url": "https://github.com/ushahidi/Ushahidi_Web/commit/00eae4f",
        "title": "",
        "body": ""
      }
    ],
    "CVE-2012-3501": [
      {
        "url": "https://github.com/darold/squidclamav/commit/80f74451f628264d1d9a1f1c0bbcebc932ba5e00",
        "title": "",
        "body": ""
      }
    ],
    "CVE-2012-3503": [
      {
        "url": "https://github.com/Katello/katello/pull/499",
        "title": "",
        "body": ""
      },
      {
        "url": "https://github.com/Katello/katello/commit/7c256fef9d75029d0ffff58ff1dcda915056d3a3",
        "title": "",
        "body": ""
      }
    ],
    "CVE-2012-3508": [
      {
        "url": "https://github.com/roundcube/roundcubemail/commit/5ef8e4ad9d3ee8689d2b83750aa65395b7cd59ee",
        "title": "",
        "body": ""
      }
    ],
    "CVE-2012-3510": [
      {
        "url": "https://github.com/torvalds/linux/commit/f0ec1aaf54caddd21c259aea8b2ecfbde4ee4fb9",
        "title": "",
        "body": ""
      }
    ],
    "CVE-2012-3520": [
      {
        "url": "https://github.com/torvalds/linux/commit/e0e3cea46d31d23dc40df0a49a7a2c04fe8edfea",
        "title": "",
        "body": ""
      }
    ],
    "CVE-2012-3525": [
      {
        "url": "https://github.com/Jabberd2/jabberd2/commit/aabcffae560d5fd00cd1d2ffce5d760353cf0a4d",
        "title": "",
        "body": ""
      }
    ],
    "CVE-2012-3537": [
      {
        "url": "https://github.com/dellcloudedge/barclamp-deployer/pull/57",
        "title": "",
        "body": ""
      },
      {
        "url": "https://github.com/SUSE-Cloud/barclamp-deployer/commit/5ea8d4ddaa4cb1ce834d36889f0fe7ac0d617bc8",
        "title": "",
        "body": ""
      },
      {
        "url": "https://github.com/SUSE-Cloud/barclamp-deployer/commit/b6454268a067fc77ff5de82057b5b53b3cc38b87",
        "title": "",
        "body": ""
      }
    ],
    "CVE-2012-3540": [
      {
        "url": "https://github.com/openstack/horizon/commit/35eada8a27323c0f83c400177797927aba6bc99b",
        "title": "",
        "body": ""
      }
    ],
    "CVE-2012-3542": [
      {
        "url": "https://github.com/openstack/keystone/commit/5438d3b5a219d7c8fa67e66e538d325a61617155",
        "title": "",
        "body": ""
      },
      {
        "url": "https://github.com/openstack/keystone/commit/c13d0ba606f7b2bdc609a7f388334e5efec3f3aa",
        "title": "Require authz to update user's tenant (bug 1040626)",
        "body": "Change-Id: I82f80b84af2bc4db00b3dcb87a2ec338816a82e9"
      }
    ],
    "CVE-2012-3551": [
      {
        "url": "https://github.com/SUSE-Cloud/barclamp-crowbar/commit/a82ed926c6e3ba2b0cada213c35e4b00f34ea629",
        "title": "",
        "body": ""
      },
      {
        "url": "https://github.com/SUSE-Cloud/barclamp-crowbar/commit/90e905b7668a1cc884fb70040f96c7a0a287de48",
        "title": "",
        "body": ""
      }
    ],
    "CVE-2012-3830": [
      {
        "url": "https://github.com/milesj/php-decoda/commit/666778f326dff3bd213be9f624f0fcb337c0b4c9",
        "title": "",
        "body": ""
      },
      {
        "url": "https://github.com/milesj/php-decoda/commit/4068257bb4e1071d1d60577289d3da922c296c83",
        "title": "",
        "body": ""
      }
    ],
    "CVE-2012-3831": [
      {
        "url": "https://github.com/milesj/php-decoda/commit/104afad9d3cb1fbb766c4bc5b98e070a8a13fbd8",
        "title": "",
        "body": ""
      }
    ],
    "CVE-2012-3832": [
      {
        "url": "https://github.com/milesj/php-decoda/commit/6f2b9fb48bc110edeab17459038feb2627d52320",
        "title": "",
        "body": ""
      }
    ],
    "CVE-2012-3864": [
      {
        "url": "https://github.com/puppetlabs/puppet/commit/c3c7462e4066bf3a563987a402bf3ddf278bcd87",
        "title": "Add Selector terminus for file_content/file_metadata",
        "body": "This terminus is now the default, and encapsulates the behavior that waspreviously in the IndirectionHooks. That is, we dynamically select theterminus to use for a file request based on the key. However, for thepuppet master, we instead explicitly always use the FileServer terminus,so that *all* requests for files from the master will go throughthe file server. This ensures that we will never accidentallyserve local files on the puppet master."
      },
      {
        "url": "https://github.com/puppetlabs/puppet/commit/10f6cb8969b4d5a933b333ecb01ce3696b1d57d4",
        "title": "Add Selector terminus for file_content/file_metadata",
        "body": "This terminus is now the default, and encapsulates the behavior that waspreviously in the IndirectionHooks. That is, we dynamically select theterminus to use for a file request based on the key. However, for thepuppet master, we instead explicitly always use the FileServer terminus,so that *all* requests for files from the master will go throughthe file server. This ensures that we will never accidentallyserve local files on the puppet master."
      }
    ],
    "CVE-2012-3865": [
      {
        "url": "https://github.com/puppetlabs/puppet/commit/554eefc55f57ed2b76e5ee04d8f194d36f6ee67f",
        "title": "Reject directory traversal in store report processor",
        "body": ""
      },
      {
        "url": "https://github.com/puppetlabs/puppet/commit/d80478208d79a3e6d6cb1fbc525e24817fe8c4c6",
        "title": "Reject directory traversal in store report processor",
        "body": ""
      }
    ],
    "CVE-2012-3866": [
      {
        "url": "https://github.com/puppetlabs/puppet/commit/fd44bf5e6d0d360f6a493d663b653c121fa83c3f",
        "title": "Tighten permissions on classfile, resourcefile, lastrunfile, and last…",
        "body": "…runreport."
      }
    ],
    "CVE-2012-3867": [
      {
        "url": "https://github.com/puppetlabs/puppet/commit/dfedaa5fa841ccf335245a748b347b7c7c236640",
        "title": "Validate CSR CN and provided certname before signing",
        "body": "This adds a few new checks when signing CSRs, to validate the CN. First,it must conform to a small set of characters, which are the printableASCII characters, except for '/' (because we store these in files). Thisprevents attacks such as a CN \"foo^H^H^Hbar\", which appears as \"bar\" to\"puppet cert list\".The other check is that the certname for the SSL::Host that we thinkwe're signing must match the CN. This prevents a CSR with the CN \"foo\"from being submitted as a CSR for \"bar\", which would cause it to appearas \"bar\" to \"puppet cert list\", but to issue a certificate for \"foo\"."
      },
      {
        "url": "https://github.com/puppetlabs/puppet/commit/f3419620b42080dad3b0be14470b20a972f13c50",
        "title": "Validate CSR CN and provided certname before signing",
        "body": "This adds a few new checks when signing CSRs, to validate the CN. First,it must conform to a small set of characters, which are the printableASCII characters, except for '/' (because we store these in files). Thisprevents attacks such as a CN \"foo^H^H^Hbar\", which appears as \"bar\" to\"puppet cert list\".The other check is that the certname for the SSL::Host that we thinkwe're signing must match the CN. This prevents a CSR with the CN \"foo\"from being submitted as a CSR for \"bar\", which would cause it to appearas \"bar\" to \"puppet cert list\", but to issue a certificate for \"foo\"."
      }
    ],
    "CVE-2012-4219": [
      {
        "url": "https://github.com/phpmyadmin/phpmyadmin/commit/0f0c2f1e2b3ece41cc1bb99a9931c8fcc7c917bc",
        "title": "- [security] Fixed local path disclosure vulnerability",
        "body": ""
      }
    ],
    "CVE-2012-4267": [
      {
        "url": "https://github.com/rodnaph/sockso/pull/99/files",
        "title": "",
        "body": ""
      },
      {
        "url": "https://github.com/rodnaph/sockso/issues/93",
        "title": "",
        "body": ""
      },
      {
        "url": "https://github.com/rodnaph/sockso/commit/fe2d895ea8eb8b8ccad5a3319f472e45d6ba5136",
        "title": "added fixed for XSS holes (fixes #93)",
        "body": ""
      }
    ],
    "CVE-2012-4390": [
      {
        "url": "https://github.com/owncloud/core/commit/4682846d3ecdad15c6a60126dda75eb7fa97c707",
        "title": "Disable user enumeration",
        "body": ""
      }
    ],
    "CVE-2012-4391": [
      {
        "url": "https://github.com/owncloud/core/commit/5192eecce239a0b7ade1e60a6cf03075e5cfc188",
        "title": "Added XSRF check",
        "body": ""
      }
    ],
    "CVE-2012-4392": [
      {
        "url": "https://github.com/owncloud/core/commit/4fd069b47906ebcf83887970c732d464dbe7d37a",
        "title": "Also check some other files",
        "body": ""
      }
    ],
    "CVE-2012-4393": [
      {
        "url": "https://github.com/owncloud/core/commit/38271ded753bc9ea9943cef3c2706f8d71f3a58f",
        "title": "Added CSRF checks",
        "body": ""
      },
      {
        "url": "https://github.com/owncloud/core/commit/93579d88dcea389205c01ddf6da41f37ad9b8745",
        "title": "CSRF checks",
        "body": ""
      }
    ],
    "CVE-2012-4394": [
      {
        "url": "https://github.com/owncloud/core/commit/d203fa2c50f4b2791e68e2b8ab9a0f8b94f9c9f8",
        "title": "Sanitizing file names",
        "body": ""
      }
    ],
    "CVE-2012-4395": [
      {
        "url": "https://github.com/owncloud/core/commit/0074062b5329c3d43679909fddce2d70608a4475",
        "title": "fixed xss vulnerability",
        "body": ""
      }
    ],
    "CVE-2012-4396": [
      {
        "url": "https://github.com/owncloud/core/commit/44260a552cd4ee50ee11eee45164c725f56f7027",
        "title": "xss vulnerability fixed",
        "body": ""
      },
      {
        "url": "https://github.com/owncloud/core/commit/e817504569dce49fd7a677fa510e500394af0c48",
        "title": "xss vulnerability fixed",
        "body": ""
      },
      {
        "url": "https://github.com/owncloud/core/commit/f955f6a6857754826af8903475688ba54f72c1bb",
        "title": "fix XSS in Calendar",
        "body": ""
      },
      {
        "url": "https://github.com/owncloud/core/commit/8f616ecf76aac4a8b554fbf5a90b1645d0f25438",
        "title": "fix potential xss in multiselect",
        "body": ""
      },
      {
        "url": "https://github.com/owncloud/core/commit/642e7ce110cb8c320072532c29abe003385d50f5",
        "title": "fix another XSS",
        "body": ""
      },
      {
        "url": "https://github.com/owncloud/core/commit/d294373f476c795aaee7dc2444e7edfdea01a606",
        "title": "Sanitzing user input",
        "body": ""
      },
      {
        "url": "https://github.com/owncloud/core/commit/8f09299e2468dfc4f9ec72b05acf47de3ef9d1d7",
        "title": "Sanitizing user input",
        "body": ""
      },
      {
        "url": "https://github.com/owncloud/core/commit/f8337c9d723039760eecccf68bcb02752551e254",
        "title": "Using POST instead of GET.",
        "body": ""
      },
      {
        "url": "https://github.com/owncloud/core/commit/cc653a8a408adfb4d0cd532145668aacd85ad96c",
        "title": "Sanitize user input",
        "body": ""
      }
    ],
    "CVE-2012-4397": [
      {
        "url": "https://github.com/owncloud/core/commit/00595351400523168e18a08e3ffa5c3b1e7c1f6e",
        "title": "fix potential XSS",
        "body": ""
      },
      {
        "url": "https://github.com/owncloud/core/commit/54a371700554ed21a5cb7db03126b6c95ae4cbd3",
        "title": "Contacts: Backport XSS fix.",
        "body": ""
      }
    ],
    "CVE-2012-4406": [
      {
        "url": "https://github.com/openstack/swift/commit/e1ff51c04554d51616d2845f92ab726cb0e5831a",
        "title": "Do not use pickle for serialization in memcache, but JSON",
        "body": "We don't want to use pickle as it can execute arbitrary code. JSON issafer. However, note that it supports serialization for only somespecific subset of object types; this should be enough for what we need,though.To avoid issues on upgrades (unability to read pickled values, and cachepoisoning for old servers not understanding JSON), we add amemcache_serialization_support configuration option, with the followingvalues: 0 = older, insecure pickle serialization 1 = json serialization but pickles can still be read (still insecure) 2 = json serialization only (secure and the default)To avoid an instant full cache flush, existing installations shouldupgrade with 0, then set to 1 and reload, then after some time (24hours) set to 2 and reload. Support for 0 and 1 will be removed infuture versions.Part of bug 1006414.Change-Id: Id7d6d547b103b4f23ebf5be98b88f09ec6027ce4"
      }
    ],
    "CVE-2012-4451": [
      {
        "url": "https://github.com/zendframework/zf2/commit/27131ca9520bdf1d4c774c71459eba32f2b10733",
        "title": "Merge branch 'security/escaper-usage'",
        "body": "Fixes a number of components that were not using Zend\\Escaper to escape HTML,HTML attributes, and/or URLs."
      }
    ],
    "CVE-2012-4456": [
      {
        "url": "https://github.com/openstack/keystone/commit/868054992faa45d6f42d822bf1588cb88d7c9ccb",
        "title": "Require authz for user role list (bug 1006815)",
        "body": "Change-Id: I65f25dcca3e265f44746930917434b45e64de15e"
      },
      {
        "url": "https://github.com/openstack/keystone/commit/14b136aed9d988f5a8f3e699bd4577c9b874d6c1",
        "title": "Require authz for user role list (bug 1006815)",
        "body": "Change-Id: I65f25dcca3e265f44746930917434b45e64de15e"
      },
      {
        "url": "https://github.com/openstack/keystone/commit/1d146f5c32e58a73a677d308370f147a3271c2cb",
        "title": "Require authz for service CRUD (bug 1006822)",
        "body": "Change-Id: Ia90f0aa2b856b9a9874d4865fb92ee913e8125c5"
      },
      {
        "url": "https://github.com/openstack/keystone/commit/24df3adb3f50cbb5ada411bc67aba8a781e6a431",
        "title": "Require authz for service CRUD (bug 1006822)",
        "body": "Change-Id: Ia90f0aa2b856b9a9874d4865fb92ee913e8125c5"
      }
    ],
    "CVE-2012-4457": [
      {
        "url": "https://github.com/openstack/keystone/commit/5373601bbdda10f879c08af1698852142b75f8d5",
        "title": "Raise unauthorized if tenant disabled (bug 988920)",
        "body": "If the client attempts to explicitly authenticate against a disabledtenant, keystone should return HTTP 401 Unauthorized.Change-Id: I49fe56b6ef8d9f2fc6b9357472dae8964bb9cb9c"
      },
      {
        "url": "https://github.com/openstack/keystone/commit/4ebfdfaf23c6da8e3c182bf3ec2cb2b7132ef685",
        "title": "Raise unauthorized if tenant disabled (bug 988920)",
        "body": "If the client attempts to explicitly authenticate against a disabledtenant, keystone should return HTTP 401 Unauthorized.Change-Id: I49fe56b6ef8d9f2fc6b9357472dae8964bb9cb9c"
      }
    ],
    "CVE-2012-4467": [
      {
        "url": "https://github.com/torvalds/linux/commit/ed6fe9d614fc1bca95eb8c0ccd0e92db00ef9d5d",
        "title": "Fix order of arguments to compat_put_time[spec|val]",
        "body": "Commit 644595f (\"compat: Handle COMPAT_USE_64BIT_TIME innet/socket.c\") introduced a bug where the helper functions to takeeither a 64-bit or compat time[spec|val] got the arguments in the wrongorder, passing the kernel stack pointer off as a user pointer (and viceversa).Because of the user address range check, that in turn then causes anEFAULT due to the user pointer range checking failing for the kerneladdress. Incorrectly resuling in a failed system call for 32-bitprocesses with a 64-bit kernel.On odder architectures like HP-PA (with separate user/kernel addressspaces), it can be used read kernel memory.Signed-off-by: Mikulas Patocka <mpatocka@redhat.com>Cc: stable@vger.kernel.orgSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>"
      }
    ],
    "CVE-2012-4506": [
      {
        "url": "https://github.com/sitaramc/gitolite/commit/f636ce3ba3e340569b26d1e47b9d9b62dd8a3bf2",
        "title": "(security) fix bug in pattern to detect path traversal",
        "body": "while we're about it, add the same check to some of the internalroutines, so that commands can also be protected.finally, just to make sure we don't lose it again in some other fashion,add a few tests for path traversal..."
      }
    ],
    "CVE-2012-4520": [
      {
        "url": "https://github.com/django/django/commit/9305c0e12d43c4df999c3301a1f0c742264a657e",
        "title": "Fixed a security issue related to password resets",
        "body": "Full disclosure and new release are forthcoming"
      },
      {
        "url": "https://github.com/django/django/commit/b45c377f8f488955e0c7069cad3f3dd21910b071",
        "title": "Fixed a security issue related to password resets",
        "body": "Full disclosure and new release are forthcomingbackport from master"
      },
      {
        "url": "https://github.com/django/django/commit/92d3430f12171f16f566c9050c40feefb830a4a3",
        "title": "Fixed a security issue related to password resets",
        "body": "Full disclosure and new release are forthcomingbackport from master"
      }
    ],
    "CVE-2012-4530": [
      {
        "url": "https://github.com/torvalds/linux/commit/b66c5984017533316fd1951770302649baf1aa33",
        "title": "exec: do not leave bprm->interp on stack",
        "body": "If a series of scripts are executed, each triggering module loading viaunprintable bytes in the script header, kernel stack contents can leakinto the command line.Normally execution of binfmt_script and binfmt_misc happens recursively.However, when modules are enabled, and unprintable bytes exist in thebprm->buf, execution will restart after attempting to load matchingbinfmt modules. Unfortunately, the logic in binfmt_script andbinfmt_misc does not expect to get restarted. They leave bprm->interppointing to their local stack. This means on restart bprm->interp isleft pointing into unused stack memory which can then be copied into theuserspace argv areas.After additional study, it seems that both recursion and restart remainsthe desirable way to handle exec with scripts, misc, and modules. Assuch, we need to protect the changes to interp.This changes the logic to require allocation for any changes to thebprm->interp. To avoid adding a new kmalloc to every exec, the defaultvalue is left as-is. Only when passing through binfmt_script orbinfmt_misc does an allocation take place.For a proof of concept, see DoTest.sh from: http://www.halfdog.net/Security/2012/LinuxKernelBinfmtScriptStackDataDisclosure/Signed-off-by: Kees Cook <keescook@chromium.org>Cc: halfdog <me@halfdog.net>Cc: P J P <ppandit@redhat.com>Cc: Alexander Viro <viro@zeniv.linux.org.uk>Cc: <stable@vger.kernel.org>Signed-off-by: Andrew Morton <akpm@linux-foundation.org>Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>"
      }
    ],
    "CVE-2012-4565": [
      {
        "url": "https://github.com/torvalds/linux/commit/8f363b77ee4fbf7c3bbcf5ec2c5ca482d396d664",
        "title": "net: fix divide by zero in tcp algorithm illinois",
        "body": "Reading TCP stats when using TCP Illinois congestion control algorithmcan cause a divide by zero kernel oops.The division by zero occur in tcp_illinois_info() at: do_div(t, ca->cnt_rtt);where ca->cnt_rtt can become zero (when rtt_reset is called)Steps to Reproduce: 1. Register tcp_illinois: # sysctl -w net.ipv4.tcp_congestion_control=illinois 2. Monitor internal TCP information via command \"ss -i\" # watch -d ss -i 3. Establish new TCP conn to machineEither it fails at the initial conn, or else it needs to waitfor a loss or a reset.This is only related to reading stats. The function avg_delay() alsoperforms the same divide, but is guarded with a (ca->cnt_rtt > 0) at itscalling point in update_params(). Thus, simply fix tcp_illinois_info().Function tcp_illinois_info() / get_info() is called withoutsocket lock. Thus, eliminate any race condition on ca->cnt_rttby using a local stack variable. Simply reuse info.tcpv_rttcnt,as its already set to ca->cnt_rtt.Function avg_delay() is not affected by this race condition, asits called with the socket lock.Cc: Petr Matousek <pmatouse@redhat.com>Signed-off-by: Jesper Dangaard Brouer <brouer@redhat.com>Acked-by: Eric Dumazet <edumazet@google.com>Acked-by: Stephen Hemminger <shemminger@vyatta.com>Signed-off-by: David S. Miller <davem@davemloft.net>"
      }
    ],
    "CVE-2012-4573": [
      {
        "url": "https://github.com/openstack/glance/commit/90bcdc5a89e350a358cf320a03f5afe99795f6f6",
        "title": "Delete from store after registry delete.",
        "body": "Because we rely on the registry to determine authorization in the glancev1 api, we must attempt a registry delete before deleting an image fromthe image store.This patch includes the test for the bug, which was posted separatelyon the bug.Fixes bug 1065187.Change-Id: I1a06b7c7421524066c684539e2f3516c4ed2c475"
      },
      {
        "url": "https://github.com/openstack/glance/commit/efd7e75b1f419a52c7103c7840e24af8e5deb29d",
        "title": "Ensure image owned by user before delayed_deletion",
        "body": "Fixes bug 1065187.Change-Id: Icf2f117a094c712bad645ef5f297e9f7da994c84"
      },
      {
        "url": "https://github.com/openstack/glance/commit/6ab0992e5472ae3f9bef0d2ced41030655d9d2bc",
        "title": "Delete from store after registry delete.",
        "body": "Because we rely on the registry to determine authorization in the glancev1 api, we must attempt a registry delete before deleting an image fromthe image store.This patch includes the test for the bug, which was posted separatelyon the bug.Fixes bug 1065187.Change-Id: I1a06b7c7421524066c684539e2f3516c4ed2c475"
      }
    ],
    "CVE-2012-4668": [
      {
        "url": "https://github.com/roundcube/roundcubemail/commit/c086978f6a91eacb339fd2976202fca9dad2ef32",
        "title": "Fix XSS issue where plain signatures wasn't secured in HTML mode (#14…",
        "body": "…88613)"
      }
    ],
    "CVE-2012-4673": [
      {
        "url": "https://github.com/mweimerskirch/neoinvoice/commit/501a9d5d261c718913cfc13d212b09b56f3bf087",
        "title": "",
        "body": ""
      },
      {
        "url": "https://github.com/tlhunter/neoinvoice/issues/2",
        "title": "",
        "body": ""
      }
    ],
    "CVE-2012-4752": [
      {
        "url": "https://github.com/owncloud/core/commit/9605e1926c6081e88326bf78a02c1d1b83126c4f",
        "title": "Check for admin user",
        "body": ""
      }
    ],
    "CVE-2012-4792": [
      {
        "url": "https://github.com/rapid7/metasploit-framework/blob/master/modules/exploits/windows/browser/ie_cbutton_uaf.rb",
        "title": "",
        "body": ""
      }
    ],
    "CVE-2012-4929": [
      {
        "url": "https://github.com/mpgn/CRIME-poc",
        "title": "",
        "body": ""
      }
    ],
    "CVE-2012-4968": [
      {
        "url": "https://github.com/silverstripe/sapphire/commit/0085876",
        "title": "BUGFIX Casting return values on text helper methods in StringField, T…",
        "body": "…ext, Varchar"
      }
    ],
    "CVE-2012-5162": [
      {
        "url": "https://github.com/osclass/OSClass/commit/ff7ef8a97301aaaf6a97fe46c2c27981a86b4e2f#diff-1",
        "title": "OSClass 2.3.5",
        "body": ""
      }
    ],
    "CVE-2012-5163": [
      {
        "url": "https://github.com/osclass/OSClass/commit/ff7ef8a97301aaaf6a97fe46c2c27981a86b4e2f#diff-1",
        "title": "OSClass 2.3.5",
        "body": ""
      }
    ],
    "CVE-2012-5164": [
      {
        "url": "https://github.com/forkcms/forkcms/pull/247",
        "title": "",
        "body": ""
      },
      {
        "url": "https://github.com/forkcms/forkcms/commit/641e27bf1e9a7e320d6856399a7c274934bb351e",
        "title": "XSS: Escape the input on ajax searches.",
        "body": ""
      },
      {
        "url": "https://github.com/forkcms/forkcms/commit/03e8f5b53f193a87116b3875eec39769d5c07114",
        "title": "Merge pull request #247 from jelmersnoeck/xss-fix-ajax-search",
        "body": "XSS: Escape the input on ajax searches."
      }
    ],
    "CVE-2012-5339": [
      {
        "url": "https://github.com/phpmyadmin/phpmyadmin/commit/cfd688d2512df9827a8ecc0412fc264fc5bcb186",
        "title": "triggers, routines, events : escape sql queries in error messages",
        "body": ""
      },
      {
        "url": "https://github.com/phpmyadmin/phpmyadmin/commit/6ea8fad3f999bfdf79eb6fe31309592bca54d611",
        "title": "triggers, routines, events : escape drop sql",
        "body": ""
      }
    ],
    "CVE-2012-5368": [
      {
        "url": "https://github.com/phpmyadmin/phpmyadmin/commit/a547f3d3e2cf36c6a904fa3e053fd8bddd3fbbb0",
        "title": "Escape json reply received from server",
        "body": ""
      },
      {
        "url": "https://github.com/phpmyadmin/phpmyadmin/commit/50edafc0884aa15d0a1aa178089ac6a1ad2eb18a",
        "title": "Load JSON rather than javascript from phpmyadmin.net",
        "body": "Conflicts:js/functions.jslibraries/Header.class.php"
      }
    ],
    "CVE-2012-5374": [
      {
        "url": "https://github.com/torvalds/linux/commit/9c52057c698fb96f8f07e7a4bcf4801a092bda89",
        "title": "Btrfs: fix hash overflow handling",
        "body": "The handling for directory crc hash overflows was fairly obscure,split_leaf returns EOVERFLOW when we try to extend the item and that issupposed to bubble up to userland. For a while it did so, but along theway we added better handling of errors and forced the FS readonly if wehit IO errors during the directory insertion.Along the way, we started testing only for EEXIST and the EOVERFLOW casewas dropped. The end result is that we may force the FS readonly if wecatch a directory hash bucket overflow.This fixes a few problem spots. First I add tests for EOVERFLOW in theplaces where we can safely just return the error up the chain.btrfs_rename is harder though, because it tries to insert the newdirectory item only after it has already unlinked anything the renamewas going to overwrite. Rather than adding very complex logic, I addeda helper to test for the hash overflow case early while it is still safeto bail out.Snapshot and subvolume creation had a similar problem, so they are usingthe new helper now too.Signed-off-by: Chris Mason <chris.mason@fusionio.com>Reported-by: Pascal Junod <pascal@junod.info>"
      }
    ],
    "CVE-2012-5375": [
      {
        "url": "https://github.com/torvalds/linux/commit/9c52057c698fb96f8f07e7a4bcf4801a092bda89",
        "title": "Btrfs: fix hash overflow handling",
        "body": "The handling for directory crc hash overflows was fairly obscure,split_leaf returns EOVERFLOW when we try to extend the item and that issupposed to bubble up to userland. For a while it did so, but along theway we added better handling of errors and forced the FS readonly if wehit IO errors during the directory insertion.Along the way, we started testing only for EEXIST and the EOVERFLOW casewas dropped. The end result is that we may force the FS readonly if wecatch a directory hash bucket overflow.This fixes a few problem spots. First I add tests for EOVERFLOW in theplaces where we can safely just return the error up the chain.btrfs_rename is harder though, because it tries to insert the newdirectory item only after it has already unlinked anything the renamewas going to overwrite. Rather than adding very complex logic, I addeda helper to test for the hash overflow case early while it is still safeto bail out.Snapshot and subvolume creation had a similar problem, so they are usingthe new helper now too.Signed-off-by: Chris Mason <chris.mason@fusionio.com>Reported-by: Pascal Junod <pascal@junod.info>"
      }
    ],
    "CVE-2012-5482": [
      {
        "url": "https://github.com/openstack/glance/commit/fc0ee7623ec59c87ac6fc671e95a9798d6f2e2c3",
        "title": "Ensure authorization before deleting from store",
        "body": "This fixes bug 1076506.Change-Id: I3794c14fe523a9a27e943d73dd0248489d2b91f6"
      },
      {
        "url": "https://github.com/openstack/glance/commit/b591304b8980d8aca8fa6cda9ea1621aca000c88",
        "title": "Ensure authorization before deleting from store",
        "body": "This fixes bug 1076506.Change-Id: I3794c14fe523a9a27e943d73dd0248489d2b91f6"
      }
    ],
    "CVE-2012-5485": [
      {
        "url": "https://github.com/plone/Products.CMFPlone/blob/4.2.3/docs/CHANGES.txt",
        "title": "",
        "body": ""
      }
    ],
    "CVE-2012-5487": [
      {
        "url": "https://github.com/plone/Products.CMFPlone/blob/4.2.3/docs/CHANGES.txt",
        "title": "",
        "body": ""
      }
    ],
    "CVE-2012-5488": [
      {
        "url": "https://github.com/plone/Products.CMFPlone/blob/4.2.3/docs/CHANGES.txt",
        "title": "",
        "body": ""
      }
    ],
    "CVE-2012-5489": [
      {
        "url": "https://github.com/plone/Products.CMFPlone/blob/4.2.3/docs/CHANGES.txt",
        "title": "",
        "body": ""
      }
    ],
    "CVE-2012-5490": [
      {
        "url": "https://github.com/plone/Products.CMFPlone/blob/4.2.3/docs/CHANGES.txt",
        "title": "",
        "body": ""
      }
    ],
    "CVE-2012-5491": [
      {
        "url": "https://github.com/plone/Products.CMFPlone/blob/4.2.3/docs/CHANGES.txt",
        "title": "",
        "body": ""
      }
    ],
    "CVE-2012-5492": [
      {
        "url": "https://github.com/plone/Products.CMFPlone/blob/4.2.3/docs/CHANGES.txt",
        "title": "",
        "body": ""
      }
    ],
    "CVE-2012-5493": [
      {
        "url": "https://github.com/plone/Products.CMFPlone/blob/4.2.3/docs/CHANGES.txt",
        "title": "",
        "body": ""
      }
    ],
    "CVE-2012-5494": [
      {
        "url": "https://github.com/plone/Products.CMFPlone/blob/4.2.3/docs/CHANGES.txt",
        "title": "",
        "body": ""
      }
    ],
    "CVE-2012-5495": [
      {
        "url": "https://github.com/plone/Products.CMFPlone/blob/4.2.3/docs/CHANGES.txt",
        "title": "",
        "body": ""
      }
    ],
    "CVE-2012-5496": [
      {
        "url": "https://github.com/plone/Products.CMFPlone/blob/4.2.3/docs/CHANGES.txt",
        "title": "",
        "body": ""
      }
    ],
    "CVE-2012-5497": [
      {
        "url": "https://github.com/plone/Products.CMFPlone/blob/4.2.3/docs/CHANGES.txt",
        "title": "",
        "body": ""
      }
    ],
    "CVE-2012-5498": [
      {
        "url": "https://github.com/plone/Products.CMFPlone/blob/4.2.3/docs/CHANGES.txt",
        "title": "",
        "body": ""
      }
    ],
    "CVE-2012-5499": [
      {
        "url": "https://github.com/plone/Products.CMFPlone/blob/4.2.3/docs/CHANGES.txt",
        "title": "",
        "body": ""
      }
    ],
    "CVE-2012-5500": [
      {
        "url": "https://github.com/plone/Products.CMFPlone/blob/4.2.3/docs/CHANGES.txt",
        "title": "",
        "body": ""
      }
    ],
    "CVE-2012-5501": [
      {
        "url": "https://github.com/plone/Products.CMFPlone/blob/4.2.3/docs/CHANGES.txt",
        "title": "",
        "body": ""
      }
    ],
    "CVE-2012-5502": [
      {
        "url": "https://github.com/plone/Products.CMFPlone/blob/4.2.3/docs/CHANGES.txt",
        "title": "",
        "body": ""
      }
    ],
    "CVE-2012-5504": [
      {
        "url": "https://github.com/plone/Products.CMFPlone/blob/4.2.3/docs/CHANGES.txt",
        "title": "",
        "body": ""
      }
    ],
    "CVE-2012-5505": [
      {
        "url": "https://github.com/plone/Products.CMFPlone/blob/4.2.3/docs/CHANGES.txt",
        "title": "",
        "body": ""
      }
    ],
    "CVE-2012-5506": [
      {
        "url": "https://github.com/plone/Products.CMFPlone/blob/4.2.3/docs/CHANGES.txt",
        "title": "",
        "body": ""
      }
    ],
    "CVE-2012-5508": [
      {
        "url": "https://github.com/plone/Products.CMFPlone/blob/4.2.3/docs/CHANGES.txt",
        "title": "",
        "body": ""
      }
    ],
    "CVE-2012-5561": [
      {
        "url": "https://github.com/Katello/katello/pull/1349",
        "title": "",
        "body": ""
      }
    ],
    "CVE-2012-5565": [
      {
        "url": "https://github.com/horde/horde/commit/1550c6ecd7204f9579fcbb09ec7089e01b0771e2",
        "title": "",
        "body": ""
      }
    ],
    "CVE-2012-5566": [
      {
        "url": "https://github.com/horde/horde/blob/master/kronolith/docs/CHANGES",
        "title": "",
        "body": ""
      }
    ],
    "CVE-2012-5567": [
      {
        "url": "https://github.com/horde/horde/blob/d3dda2d47fad7eb128a0091e732cded0c2601009/kronolith/docs/CHANGES",
        "title": "",
        "body": ""
      }
    ],
    "CVE-2012-5572": [
      {
        "url": "https://github.com/PerlDancer/Dancer/blob/devel/CHANGES",
        "title": "",
        "body": ""
      },
      {
        "url": "https://github.com/PerlDancer/Dancer/issues/859",
        "title": "",
        "body": ""
      }
    ],
    "CVE-2012-5583": [
      {
        "url": "https://github.com/Jasig/phpCAS/blob/master/docs/ChangeLog",
        "title": "",
        "body": ""
      }
    ],
    "CVE-2012-5606": [
      {
        "url": "https://github.com/owncloud/core/commit/e45f36c",
        "title": "",
        "body": ""
      },
      {
        "url": "https://github.com/owncloud/core/commit/e5f2d46",
        "title": "",
        "body": ""
      },
      {
        "url": "https://github.com/owncloud/core/commit/ce66759",
        "title": "",
        "body": ""
      }
    ],
    "CVE-2012-5608": [
      {
        "url": "https://github.com/owncloud/core/commit/054c168",
        "title": "",
        "body": ""
      }
    ],
    "CVE-2012-5610": [
      {
        "url": "https://github.com/owncloud/core/commit/4b86c43",
        "title": "",
        "body": ""
      },
      {
        "url": "https://github.com/owncloud/core/commit/f599267",
        "title": "",
        "body": ""
      },
      {
        "url": "https://github.com/owncloud/core/commit/3cd416b667",
        "title": "",
        "body": ""
      },
      {
        "url": "https://github.com/owncloud/core/commit/6540c0fc63",
        "title": "",
        "body": ""
      }
    ],
    "CVE-2012-5622": [
      {
        "url": "https://github.com/openshift/origin-server/pull/1009",
        "title": "",
        "body": ""
      },
      {
        "url": "https://github.com/openshift/origin-server/commit/1ad0d1d792395306b59a34ad7b6e7e89a35d041e",
        "title": "",
        "body": ""
      }
    ],
    "CVE-2012-5625": [
      {
        "url": "https://github.com/openstack/nova/commit/a99a802e008eed18e39fc1d98170edc495cbd354",
        "title": "",
        "body": ""
      },
      {
        "url": "https://github.com/openstack/nova/commit/9d2ea970422591f8cdc394001be9a2deca499a5f",
        "title": "",
        "body": ""
      }
    ],
    "CVE-2012-5641": [
      {
        "url": "https://github.com/melkote/mochiweb/commit/ac2bf",
        "title": "",
        "body": ""
      },
      {
        "url": "https://github.com/mochi/mochiweb/issues/92",
        "title": "",
        "body": ""
      }
    ],
    "CVE-2012-5646": [
      {
        "url": "https://github.com/openshift/origin-server/pull/1017",
        "title": "",
        "body": ""
      },
      {
        "url": "https://github.com/openshift/origin-server/commit/32564a0839b1517d762afab2013c26c0959bac00",
        "title": "",
        "body": ""
      }
    ],
    "CVE-2012-5647": [
      {
        "url": "https://github.com/openshift/origin-server/commit/32564a0839b1517d762afab2013c26c0959bac00",
        "title": "Fix for Bug 880699",
        "body": "restorer.php security patch"
      },
      {
        "url": "https://github.com/openshift/origin-server/pull/1017",
        "title": "",
        "body": ""
      }
    ],
    "CVE-2012-5648": [
      {
        "url": "https://github.com/theforeman/foreman/commit/387b764b614170f23b3552aca498612e341652db",
        "title": "Fix Foreman SQL injection through search mechanism CVE-2012-5648",
        "body": ""
      }
    ],
    "CVE-2012-5665": [
      {
        "url": "https://github.com/owncloud/core/commit/c4ecbad",
        "title": "check if admin",
        "body": ""
      },
      {
        "url": "https://github.com/owncloud/core/commit/db7ca53",
        "title": "backport fix admin check",
        "body": ""
      }
    ],
    "CVE-2012-5666": [
      {
        "url": "https://github.com/owncloud/core/commit/b24c929cc0",
        "title": "Encode the URI properly",
        "body": "Backport of eafa9b2"
      },
      {
        "url": "https://github.com/owncloud/apps/commit/eafa9b2",
        "title": "Encode the URI properly",
        "body": ""
      }
    ],
    "CVE-2012-5787": [
      {
        "url": "https://github.com/paypal/SDKs/commit/5f2d6dd77fb4211dcde34e36f1864234526c5d64",
        "title": "",
        "body": ""
      }
    ],
    "CVE-2012-5967": [
      {
        "url": "https://github.com/centreon/centreon/commit/434e291eebcd8f56771ac96b37831634fa52b6a8#diff-606758231371c4a66ae2668f7ad2b617",
        "title": "* Better SQL escape",
        "body": ""
      }
    ],
    "CVE-2012-5975": [
      {
        "url": "https://github.com/rapid7/metasploit-framework/blob/master/modules/exploits/unix/ssh/tectia_passwd_changereq.rb",
        "title": "",
        "body": ""
      }
    ],
    "CVE-2012-6112": [
      {
        "url": "https://github.com/tinymce/tinymce_spellchecker_php/commit/22910187bfb9edae90c26e10100d8145b505b974",
        "title": "Fixed security issue with google spellchecker",
        "body": ""
      }
    ],
    "CVE-2012-6116": [
      {
        "url": "https://github.com/jsomara/katello/commit/65f1e42b7bda0f3410931c50598540d944d8bf0d",
        "title": "877387 - Candlepin CA certificate mode in RPM",
        "body": "File mode is set to 0644 when RPM is generated."
      },
      {
        "url": "https://github.com/Katello/katello/commits/master/katello-configure/katello-configure.spec",
        "title": "",
        "body": ""
      }
    ],
    "CVE-2012-6119": [
      {
        "url": "https://github.com/candlepin/candlepin/commit/f4d93230e58b969c506b4c9778e04482a059b08c",
        "title": "835977: Re-enable manifest signature checking.",
        "body": "The production/stage public candlepin certificate is now packaged in theRPM. This is flagged as a config file but *without* noreplace, so anydeployment using their own upstream cert (we don't think there are any)will have to restore it from the rpmsave file that results after acandlepin rpm upgrade. This was done because we expect this to be thedesired behavior, there is no known usecase for using your ownupstream cert at this time."
      },
      {
        "url": "https://github.com/candlepin/candlepin/blob/master/candlepin.spec",
        "title": "",
        "body": ""
      }
    ],
    "CVE-2012-6121": [
      {
        "url": "https://github.com/roundcube/roundcubemail/commit/74cd0a9b62f11bc07c5a1d3ba0098b54883eb0ba",
        "title": "- Fix XSS vulnerability in vbscript: and data:text links handling (#1…",
        "body": "…488850)"
      }
    ],
    "CVE-2012-6134": [
      {
        "url": "https://github.com/intridea/omniauth-oauth2/pull/25",
        "title": "",
        "body": ""
      },
      {
        "url": "https://github.com/Shopify/omniauth-shopify-oauth2/pull/1",
        "title": "",
        "body": ""
      }
    ],
    "CVE-2012-6536": [
      {
        "url": "https://github.com/torvalds/linux/commit/ecd7918745234e423dd87fcc0c077da557909720",
        "title": "xfrm_user: ensure user supplied esn replay window is valid",
        "body": "The current code fails to ensure that the netlink message actuallycontains as many bytes as the header indicates. If a user creates a newstate or updates an existing one but does not supply the bytes for thewhole ESN replay window, the kernel copies random heap bytes into thereplay bitmap, the ones happen to follow the XFRMA_REPLAY_ESN_VALnetlink attribute. This leads to following issues:1. The replay window has random bits set confusing the replay handling code later on.2. A malicious user could use this flaw to leak up to ~3.5kB of heap memory when she has access to the XFRM netlink interface (requires CAP_NET_ADMIN).Known users of the ESN replay window are strongSwan and Steffen'siproute2 patch (<http://patchwork.ozlabs.org/patch/85962/>). The latteruses the interface with a bitmap supplied while the former does not.strongSwan is therefore prone to run into issue 1.To fix both issues without breaking existing userland allow using theXFRMA_REPLAY_ESN_VAL netlink attribute with either an empty bitmap or afully specified one. For the former case we initialize the in-kernelbitmap with zero, for the latter we copy the user supplied bitmap. Forstate updates the full bitmap must be supplied.To prevent overflows in the bitmap length calculation the maximum sizeof bmp_len is limited to 128 by this patch -- resulting in a maximumreplay window of 4096 packets. This should be sufficient for all reallife scenarios (RFC 4303 recommends a default replay window size of 64).Cc: Steffen Klassert <steffen.klassert@secunet.com>Cc: Martin Willi <martin@revosec.ch>Cc: Ben Hutchings <bhutchings@solarflare.com>Signed-off-by: Mathias Krause <minipli@googlemail.com>Signed-off-by: David S. Miller <davem@davemloft.net>"
      }
    ],
    "CVE-2012-6537": [
      {
        "url": "https://github.com/torvalds/linux/commit/f778a636713a435d3a922c60b1622a91136560c1",
        "title": "xfrm_user: fix info leak in copy_to_user_state()",
        "body": "The memory reserved to dump the xfrm state includes the padding bytes ofstruct xfrm_usersa_info added by the compiler for alignment (7 foramd64, 3 for i386). Add an explicit memset(0) before filling the bufferto avoid the info leak.Signed-off-by: Mathias Krause <minipli@googlemail.com>Acked-by: Steffen Klassert <steffen.klassert@secunet.com>Signed-off-by: David S. Miller <davem@davemloft.net>"
      },
      {
        "url": "https://github.com/torvalds/linux/commit/7b789836f434c87168eab067cfbed1ec4783dffd",
        "title": "xfrm_user: fix info leak in copy_to_user_policy()",
        "body": "The memory reserved to dump the xfrm policy includes multiple paddingbytes added by the compiler for alignment (padding bytes in structxfrm_selector and struct xfrm_userpolicy_info). Add an explicitmemset(0) before filling the buffer to avoid the heap info leak.Signed-off-by: Mathias Krause <minipli@googlemail.com>Acked-by: Steffen Klassert <steffen.klassert@secunet.com>Signed-off-by: David S. Miller <davem@davemloft.net>"
      },
      {
        "url": "https://github.com/torvalds/linux/commit/1f86840f897717f86d523a13e99a447e6a5d2fa5",
        "title": "xfrm_user: fix info leak in copy_to_user_tmpl()",
        "body": "The memory used for the template copy is a local stack variable. Asstruct xfrm_user_tmpl contains multiple holes added by the compiler foralignment, not initializing the memory will lead to leaking stack bytesto userland. Add an explicit memset(0) to avoid the info leak.Initial version of the patch by Brad Spengler.Cc: Brad Spengler <spender@grsecurity.net>Signed-off-by: Mathias Krause <minipli@googlemail.com>Acked-by: Steffen Klassert <steffen.klassert@secunet.com>Signed-off-by: David S. Miller <davem@davemloft.net>"
      }
    ],
    "CVE-2012-6538": [
      {
        "url": "https://github.com/torvalds/linux/commit/4c87308bdea31a7b4828a51f6156e6f721a1fcc9",
        "title": "xfrm_user: fix info leak in copy_to_user_auth()",
        "body": "copy_to_user_auth() fails to initialize the remainder of alg_name andtherefore discloses up to 54 bytes of heap memory via netlink touserland.Use strncpy() instead of strcpy() to fill the trailing bytes of alg_namewith null bytes.Signed-off-by: Mathias Krause <minipli@googlemail.com>Acked-by: Steffen Klassert <steffen.klassert@secunet.com>Signed-off-by: David S. Miller <davem@davemloft.net>"
      }
    ],
    "CVE-2012-6539": [
      {
        "url": "https://github.com/torvalds/linux/commit/43da5f2e0d0c69ded3d51907d9552310a6b545e8",
        "title": "net: fix info leak in compat dev_ifconf()",
        "body": "The implementation of dev_ifconf() for the compat ioctl interface usesan intermediate ifc structure allocated in userland for the duration ofthe syscall. Though, it fails to initialize the padding bytes insertedfor alignment and that for leaks four bytes of kernel stack. Add anexplicit memset(0) before filling the structure to avoid the info leak.Signed-off-by: Mathias Krause <minipli@googlemail.com>Signed-off-by: David S. Miller <davem@davemloft.net>"
      }
    ],
    "CVE-2012-6540": [
      {
        "url": "https://github.com/torvalds/linux/commit/2d8a041b7bfe1097af21441cb77d6af95f4f4680",
        "title": "ipvs: fix info leak in getsockopt(IP_VS_SO_GET_TIMEOUT)",
        "body": "If at least one of CONFIG_IP_VS_PROTO_TCP or CONFIG_IP_VS_PROTO_UDP isnot set, __ip_vs_get_timeouts() does not fully initialize the structurethat gets copied to userland and that for leaks up to 12 bytes of kernelstack. Add an explicit memset(0) before passing the structure to__ip_vs_get_timeouts() to avoid the info leak.Signed-off-by: Mathias Krause <minipli@googlemail.com>Cc: Wensong Zhang <wensong@linux-vs.org>Cc: Simon Horman <horms@verge.net.au>Cc: Julian Anastasov <ja@ssi.bg>Signed-off-by: David S. Miller <davem@davemloft.net>"
      }
    ],
    "CVE-2012-6541": [
      {
        "url": "https://github.com/torvalds/linux/commit/7b07f8eb75aa3097cdfd4f6eac3da49db787381d",
        "title": "dccp: fix info leak via getsockopt(DCCP_SOCKOPT_CCID_TX_INFO)",
        "body": "The CCID3 code fails to initialize the trailing padding bytes of structtfrc_tx_info added for alignment on 64 bit architectures. It that forpotentially leaks four bytes kernel stack via the getsockopt() syscall.Add an explicit memset(0) before filling the structure to avoid theinfo leak.Signed-off-by: Mathias Krause <minipli@googlemail.com>Cc: Gerrit Renker <gerrit@erg.abdn.ac.uk>Signed-off-by: David S. Miller <davem@davemloft.net>"
      }
    ],
    "CVE-2012-6542": [
      {
        "url": "https://github.com/torvalds/linux/commit/3592aaeb80290bda0f2cf0b5456c97bfc638b192",
        "title": "llc: fix info leak via getsockname()",
        "body": "The LLC code wrongly returns 0, i.e. \"success\", when the socket iszapped. Together with the uninitialized uaddrlen pointer argument fromsys_getsockname this leads to an arbitrary memory leak of up to 128bytes kernel stack via the getsockname() syscall.Return an error instead when the socket is zapped to prevent the infoleak. Also remove the unnecessary memset(0). We don't directly write tothe memory pointed by uaddr but memcpy() a local structure at the end ofthe function that is properly initialized.Signed-off-by: Mathias Krause <minipli@googlemail.com>Cc: Arnaldo Carvalho de Melo <acme@ghostprotocols.net>Signed-off-by: David S. Miller <davem@davemloft.net>"
      }
    ],
    "CVE-2012-6543": [
      {
        "url": "https://github.com/torvalds/linux/commit/04d4fbca1017c11381e7d82acea21dd741e748bc",
        "title": "l2tp: fix info leak via getsockname()",
        "body": "The L2TP code for IPv6 fails to initialize the l2tp_unused member ofstruct sockaddr_l2tpip6 and that for leaks two bytes kernel stack viathe getsockname() syscall. Initialize l2tp_unused with 0 to avoid theinfo leak.Signed-off-by: Mathias Krause <minipli@googlemail.com>Cc: James Chapman <jchapman@katalix.com>Signed-off-by: David S. Miller <davem@davemloft.net>"
      }
    ],
    "CVE-2012-6544": [
      {
        "url": "https://github.com/torvalds/linux/commit/e15ca9a0ef9a86f0477530b0f44a725d67f889ee",
        "title": "Bluetooth: HCI - Fix info leak in getsockopt(HCI_FILTER)",
        "body": "The HCI code fails to initialize the two padding bytes of structhci_ufilter before copying it to userland -- that for leaking twobytes kernel stack. Add an explicit memset(0) before filling thestructure to avoid the info leak.Signed-off-by: Mathias Krause <minipli@googlemail.com>Cc: Marcel Holtmann <marcel@holtmann.org>Cc: Gustavo Padovan <gustavo@padovan.org>Cc: Johan Hedberg <johan.hedberg@gmail.com>Signed-off-by: David S. Miller <davem@davemloft.net>"
      },
      {
        "url": "https://github.com/torvalds/linux/commit/792039c73cf176c8e39a6e8beef2c94ff46522ed",
        "title": "Bluetooth: L2CAP - Fix info leak via getsockname()",
        "body": "The L2CAP code fails to initialize the l2_bdaddr_type member of structsockaddr_l2 and the padding byte added for alignment. It that for leakstwo bytes kernel stack via the getsockname() syscall. Add an explicitmemset(0) before filling the structure to avoid the info leak.Signed-off-by: Mathias Krause <minipli@googlemail.com>Cc: Marcel Holtmann <marcel@holtmann.org>Cc: Gustavo Padovan <gustavo@padovan.org>Cc: Johan Hedberg <johan.hedberg@gmail.com>Signed-off-by: David S. Miller <davem@davemloft.net>"
      },
      {
        "url": "https://github.com/torvalds/linux/commit/3f68ba07b1da811bf383b4b701b129bfcb2e4988",
        "title": "Bluetooth: HCI - Fix info leak via getsockname()",
        "body": "The HCI code fails to initialize the hci_channel member of structsockaddr_hci and that for leaks two bytes kernel stack via thegetsockname() syscall. Initialize hci_channel with 0 to avoid theinfo leak.Signed-off-by: Mathias Krause <minipli@googlemail.com>Cc: Marcel Holtmann <marcel@holtmann.org>Cc: Gustavo Padovan <gustavo@padovan.org>Cc: Johan Hedberg <johan.hedberg@gmail.com>Signed-off-by: David S. Miller <davem@davemloft.net>"
      }
    ],
    "CVE-2012-6545": [
      {
        "url": "https://github.com/torvalds/linux/commit/f9432c5ec8b1e9a09b9b0e5569e3c73db8de432a",
        "title": "Bluetooth: RFCOMM - Fix info leak in ioctl(RFCOMMGETDEVLIST)",
        "body": "The RFCOMM code fails to initialize the two padding bytes of structrfcomm_dev_list_req inserted for alignment before copying it touserland. Additionally there are two padding bytes in each instance ofstruct rfcomm_dev_info. The ioctl() that for disclosures two bytes plusdev_num times two bytes uninitialized kernel heap memory.Allocate the memory using kzalloc() to fix this issue.Signed-off-by: Mathias Krause <minipli@googlemail.com>Cc: Marcel Holtmann <marcel@holtmann.org>Cc: Gustavo Padovan <gustavo@padovan.org>Cc: Johan Hedberg <johan.hedberg@gmail.com>Signed-off-by: David S. Miller <davem@davemloft.net>"
      },
      {
        "url": "https://github.com/torvalds/linux/commit/9ad2de43f1aee7e7274a4e0d41465489299e344b",
        "title": "Bluetooth: RFCOMM - Fix info leak in getsockopt(BT_SECURITY)",
        "body": "The RFCOMM code fails to initialize the key_size member of structbt_security before copying it to userland -- that for leaking onebyte kernel stack. Initialize key_size with 0 to avoid the infoleak.Signed-off-by: Mathias Krause <minipli@googlemail.com>Cc: Marcel Holtmann <marcel@holtmann.org>Cc: Gustavo Padovan <gustavo@padovan.org>Cc: Johan Hedberg <johan.hedberg@gmail.com>Signed-off-by: David S. Miller <davem@davemloft.net>"
      },
      {
        "url": "https://github.com/torvalds/linux/commit/9344a972961d1a6d2c04d9008b13617bcb6ec2ef",
        "title": "Bluetooth: RFCOMM - Fix info leak via getsockname()",
        "body": "The RFCOMM code fails to initialize the trailing padding byte of structsockaddr_rc added for alignment. It that for leaks one byte kernel stackvia the getsockname() syscall. Add an explicit memset(0) before fillingthe structure to avoid the info leak.Signed-off-by: Mathias Krause <minipli@googlemail.com>Cc: Marcel Holtmann <marcel@holtmann.org>Cc: Gustavo Padovan <gustavo@padovan.org>Cc: Johan Hedberg <johan.hedberg@gmail.com>Signed-off-by: David S. Miller <davem@davemloft.net>"
      }
    ],
    "CVE-2012-6546": [
      {
        "url": "https://github.com/torvalds/linux/commit/3c0c5cfdcd4d69ffc4b9c0907cec99039f30a50a",
        "title": "atm: fix info leak via getsockname()",
        "body": "The ATM code fails to initialize the two padding bytes of structsockaddr_atmpvc inserted for alignment. Add an explicit memset(0)before filling the structure to avoid the info leak.Signed-off-by: Mathias Krause <minipli@googlemail.com>Signed-off-by: David S. Miller <davem@davemloft.net>"
      },
      {
        "url": "https://github.com/torvalds/linux/commit/e862f1a9b7df4e8196ebec45ac62295138aa3fc2",
        "title": "atm: fix info leak in getsockopt(SO_ATMPVC)",
        "body": "The ATM code fails to initialize the two padding bytes of structsockaddr_atmpvc inserted for alignment. Add an explicit memset(0)before filling the structure to avoid the info leak.Signed-off-by: Mathias Krause <minipli@googlemail.com>Signed-off-by: David S. Miller <davem@davemloft.net>"
      }
    ],
    "CVE-2012-6547": [
      {
        "url": "https://github.com/torvalds/linux/commit/a117dacde0288f3ec60b6e5bcedae8fa37ee0dfc",
        "title": "net/tun: fix ioctl() based info leaks",
        "body": "The tun module leaks up to 36 bytes of memory by not fully initializinga structure located on the stack that gets copied to user memory by theTUNGETIFF and SIOCGIFHWADDR ioctl()s.Signed-off-by: Mathias Krause <minipli@googlemail.com>Signed-off-by: David S. Miller <davem@davemloft.net>"
      }
    ],
    "CVE-2012-6548": [
      {
        "url": "https://github.com/torvalds/linux/commit/0143fc5e9f6f5aad4764801015bc8d4b4a278200",
        "title": "udf: avoid info leak on export",
        "body": "For type 0x51 the udf.parent_partref member in struct fid gets copieduninitialized to userland. Fix this by initializing it to 0.Signed-off-by: Mathias Krause <minipli@googlemail.com>Signed-off-by: Jan Kara <jack@suse.cz>"
      }
    ],
    "CVE-2012-6549": [
      {
        "url": "https://github.com/torvalds/linux/commit/fe685aabf7c8c9f138e5ea900954d295bf229175",
        "title": "isofs: avoid info leak on export",
        "body": "For type 1 the parent_offset member in struct isofs_fid gets copieduninitialized to userland. Fix this by initializing it to 0.Signed-off-by: Mathias Krause <minipli@googlemail.com>Signed-off-by: Jan Kara <jack@suse.cz>"
      }
    ],
    "CVE-2012-6550": [
      {
        "url": "https://github.com/jonrohan/ZeroClipboard/commit/51b67b6d696f62aaf003210c08542588222c4913",
        "title": "XSS Bug escaping clipText returned",
        "body": ""
      },
      {
        "url": "https://github.com/jonrohan/ZeroClipboard/blob/master/docs/releases.md#zeroclipboard-114",
        "title": "",
        "body": ""
      }
    ],
    "CVE-2012-6607": [
      {
        "url": "https://github.com/hercules-team/augeas/commit/16387744",
        "title": "Prevent symlink attacks via .augnew during saving",
        "body": "Instead of saving into a predictable PATH.augnew file, save into a securelycreated PATH.augnew.XXXXXX* src/transform.c (transform_save): write changes to a temporary file in the same directory as the destination (either the file's canonical path or the path of .augnew), before renaming* src/transform.c (transfer_file_attrs): use fchown, fchmod etc. on the same file handles to ensure consistent permission changes* bootstrap: add mkstemp gnulib module* tests/ test-put-symlink-augnew.sh: test symlink attack when writing .augnew test-put-symlink-augsave.sh: test symlink attack when writing .augsave test-put-symlink-augtemp.sh: test symlink attack via temp .augnew test-put-symlink.sh: also test file modificationFixes BZ 772257"
      }
    ],
    "CVE-2012-6620": [
      {
        "url": "https://github.com/horde/horde/commit/1228a6825a8dab3333d0a8c8986fc10d1f3d11b2",
        "title": "Escape content (Bug #11189).",
        "body": ""
      }
    ],
    "CVE-2012-6638": [
      {
        "url": "https://github.com/torvalds/linux/commit/fdf5af0daf8019cec2396cdef8fb042d80fe71fa",
        "title": "tcp: drop SYN+FIN messages",
        "body": "Denys Fedoryshchenko reported that SYN+FIN attacks were bringing hislinux machines to their limits.Dont call conn_request() if the TCP flags includes SYN flagReported-by: Denys Fedoryshchenko <denys@visp.net.lb>Signed-off-by: Eric Dumazet <eric.dumazet@gmail.com>Signed-off-by: David S. Miller <davem@davemloft.net>"
      }
    ],
    "CVE-2012-6640": [
      {
        "url": "https://github.com/horde/horde/commit/08c699f744b6d2be1a5f3a2ba7203f4631b4c5dc",
        "title": "Prepare release.",
        "body": ""
      }
    ],
    "CVE-2012-6647": [
      {
        "url": "https://github.com/torvalds/linux/commit/6f7b0a2a5c0fb03be7c25bd1745baa50582348ef",
        "title": "futex: Forbid uaddr == uaddr2 in futex_wait_requeue_pi()",
        "body": "If uaddr == uaddr2, then we have broken the rule of only requeueingfrom a non-pi futex to a pi futex with this call. If we attempt this,as the trinity test suite manages to do, we miss early wakeups asq.key is equal to key2 (because they are the same uaddr). We will thenattempt to dereference the pi_mutex (which would exist had the futex_qbeen properly requeued to a pi futex) and trigger a NULL pointerdereference.Signed-off-by: Darren Hart <dvhart@linux.intel.com>Cc: Dave Jones <davej@redhat.com>Cc: stable@vger.kernel.orgLink: http://lkml.kernel.org/r/ad82bfe7f7d130247fbe2b5b4275654807774227.1342809673.git.dvhart@linux.intel.comSigned-off-by: Thomas Gleixner <tglx@linutronix.de>"
      }
    ],
    "CVE-2012-6657": [
      {
        "url": "https://github.com/torvalds/linux/commit/3e10986d1d698140747fcfc2761ec9cb64c1d582",
        "title": "net: guard tcp_set_keepalive() to tcp sockets",
        "body": "Its possible to use RAW sockets to get a crash intcp_set_keepalive() / sk_reset_timer()Fix is to make sure socket is a SOCK_STREAM one.Reported-by: Dave Jones <davej@redhat.com>Signed-off-by: Eric Dumazet <edumazet@google.com>Signed-off-by: David S. Miller <davem@davemloft.net>"
      }
    ],
    "CVE-2012-6661": [
      {
        "url": "https://github.com/plone/Products.CMFPlone/blob/4.2.3/docs/CHANGES.txt",
        "title": "",
        "body": ""
      }
    ],
    "CVE-2012-6662": [
      {
        "url": "https://github.com/jquery/jquery-ui/commit/f2854408cce7e4b7fc6bf8676761904af9c96bde",
        "title": "Tooltip: Escape the title attribute so that it's treated as text and …",
        "body": "…not HTML. Fixes #8861 - Tooltip: XSS vulnerability in default content."
      },
      {
        "url": "https://github.com/jquery/jquery-ui/commit/5fee6fd5000072ff32f2d65b6451f39af9e0e39e",
        "title": "Autocomplete demo: Combobox: Encode search term inside tooltips. Fixe…",
        "body": "…s #8859 - Autocomplete: XSS in combobox demo."
      },
      {
        "url": "https://github.com/jquery/jquery/issues/2432",
        "title": "",
        "body": ""
      }
    ],
    "CVE-2012-6696": [
      {
        "url": "https://github.com/inspircd/inspircd/commit/ed28c1ba666b39581adb860bf51cdde43c84cc89",
        "title": "Fixed out of bounds memory access from malformed DNS queries that hav…",
        "body": "…e an invalid length label. Introduced in a6a07de."
      }
    ],
    "CVE-2012-6697": [
      {
        "url": "https://github.com/inspircd/inspircd/commit/58c893e834ff20495d00770922",
        "title": "Fixed infinite loop cauesd by invalid dns packets",
        "body": ""
      }
    ],
    "CVE-2012-6704": [
      {
        "url": "https://github.com/torvalds/linux/commit/82981930125abfd39d7c8378a9cfdf5e1be2002b",
        "title": "net: cleanups in sock_setsockopt()",
        "body": "Use min_t()/max_t() macros, reformat two comments, use !!test_bit() tomatch !!sock_flag()Signed-off-by: Eric Dumazet <edumazet@google.com>Signed-off-by: David S. Miller <davem@davemloft.net>"
      }
    ],
    "CVE-2012-6708": [
      {
        "url": "https://github.com/jquery/jquery/commit/05531fc4080ae24070930d15ae0cea7ae056457d",
        "title": "Adjust jQuery('html') detection to only match when html starts with '…",
        "body": "…<' (not counting space characters). Fixes #11290."
      }
    ],
    "CVE-2012-6712": [
      {
        "url": "https://github.com/torvalds/linux/commit/2da424b0773cea3db47e1e81db71eeebde8269d4",
        "title": "iwlwifi: Sanity check for sta_id",
        "body": "On my testing, I saw some strange behavior[ 421.739708] iwlwifi 0000:01:00.0: ACTIVATE a non DRIVER active station id 148 addr 00:00:00:00:00:00[ 421.739719] iwlwifi 0000:01:00.0: iwl_sta_ucode_activate Added STA id 148 addr 00:00:00:00:00:00 to uCodenot sure how it happen, but adding the sanity check to prevent memorycorruptionSigned-off-by: Wey-Yi Guy <wey-yi.w.guy@intel.com>Signed-off-by: John W. Linville <linville@tuxdriver.com>"
      }
    ]
  }
}