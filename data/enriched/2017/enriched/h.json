{
  "year": 2017,
  "total": 36,
  "reference": "kb.cert.org",
  "reports": {
    "CVE-2017-1000250": [
      {
        "url": "https://www.kb.cert.org/vuls/id/240311",
        "title": "Multiple Bluetooth implementation vulnerabilities affect many devices",
        "overview": "A collection of Bluetooth implementation vulnerabilities known as \"BlueBorne\" has been released. These vulnerabilities collectively affect Windows, iOS, and Linux-kernel-based operating systems including Android and Tizen, and may in worst case allow an unauthenticated attacker to perform commands on the device.",
        "description": "The following vulnerabilities have been identified in various Bluetooth implementations:1. CWE-120: Buffer Copy without Checking Size of Input ('Classic Buffer Overflow') - CVE-2017-1000251 Linux kernel versions from 3.3-rc1 to present contain a vulnerable implementation of L2CAP EFS within the BlueZ module. The l2cap_parse_conf_rsp function does not properly check then length of the rsp argument prior to unpacking, allowing an attacker to overflow a 64 byte buffer on the kernel stack with an unlimited amount of data crafted to conform to a valid L2CAP response.2. CWE-125: Out-of-bounds Read - CVE-2017-1000250 All versions of BlueZ for Linux contains a vulnerable implementation of SDP. An attacker may be able to control the continuation state within SDP request packets and cause the SDP server to return an out of bounds read from the response buffer.3. CWE-125: Out-of-bounds Read - CVE-2017-0785 All versions of Android prior to September 9, 2017 Security Patch level contain a vulnerable implementation of SDP within the Android Bluetooth software stack. An attacker may be able to control the continuation state within SDP request packets and cause the SDP server to return an out of bounds read from the response buffer. While a similar flaw to CVE-2017-1000250, this is a distinct vulnerability in a different software stack.4. CWE-122: Heap-based Buffer Overflow - CVE-2017-0781In all versions of Android prior to September 9, 2017 Security Patch level, an incorrect buffer size passed to a memcpy call within the BNEP implementation for Android may allow an attacker to send crafted packets to the device that overflow the heap.5. CWE-191: Integer Underflow (Wrap or Wraparound) - CVE-2017-0782 In all versions of Android prior to September 9, 2017 Security Patch level, the bnep_process_control_packet function of the BNEP implementation for Android does not properly check the size of rem_len before decrementing, allowing integer underflow and further unsafe processing of attacker-controlled packets.6. CWE-122: Heap-based Buffer Overflow- CVE-2017-14315 Apple's Bluetooth Low-Energy Audio Protocol (LEAP) implementation in iOS version 9.3.5 and lower, and AppleTV tvOS version 7.2.2 and lower, does not properly validate the CID for incoming Bluetooth LEAP audio data, which may result in a heap overflow by not properly validating packet size before calling memcpy. An attacker sending \"classic\" (non-low-energy) Bluetooth packets may be able to cause multiple heap overflows resulting in code execution with the Bluetooth stack context.7 and 8. CWE-300: Channel Accessible by Non-Endpoint ('Man-in-the-Middle') - CVE-2017-0783 and CVE-2017-8628Incorrect \"Security Level\" requirements in the PAN profile of the Bluetooth implementation may allow an attacker to gain permissions to perform man in the middle attacks on the user. CVE-2017-0783 applies to all versions of Android prior to the September 9, 2017, Security Patch Level, while CVE-2017-8628 applies to a similar flaw in all versions of Windows from Windows Vista to Windows 10.For more details, please read Armis's BlueBorne disclosure website and Technical White Paper.",
        "impact": "An unauthenticated, remote attacker may be able to obtain private information about the device or user, or execute arbitrary code on the device."
      }
    ],
    "CVE-2017-1000251": [
      {
        "url": "https://www.kb.cert.org/vuls/id/240311",
        "title": "Multiple Bluetooth implementation vulnerabilities affect many devices",
        "overview": "A collection of Bluetooth implementation vulnerabilities known as \"BlueBorne\" has been released. These vulnerabilities collectively affect Windows, iOS, and Linux-kernel-based operating systems including Android and Tizen, and may in worst case allow an unauthenticated attacker to perform commands on the device.",
        "description": "The following vulnerabilities have been identified in various Bluetooth implementations:1. CWE-120: Buffer Copy without Checking Size of Input ('Classic Buffer Overflow') - CVE-2017-1000251 Linux kernel versions from 3.3-rc1 to present contain a vulnerable implementation of L2CAP EFS within the BlueZ module. The l2cap_parse_conf_rsp function does not properly check then length of the rsp argument prior to unpacking, allowing an attacker to overflow a 64 byte buffer on the kernel stack with an unlimited amount of data crafted to conform to a valid L2CAP response.2. CWE-125: Out-of-bounds Read - CVE-2017-1000250 All versions of BlueZ for Linux contains a vulnerable implementation of SDP. An attacker may be able to control the continuation state within SDP request packets and cause the SDP server to return an out of bounds read from the response buffer.3. CWE-125: Out-of-bounds Read - CVE-2017-0785 All versions of Android prior to September 9, 2017 Security Patch level contain a vulnerable implementation of SDP within the Android Bluetooth software stack. An attacker may be able to control the continuation state within SDP request packets and cause the SDP server to return an out of bounds read from the response buffer. While a similar flaw to CVE-2017-1000250, this is a distinct vulnerability in a different software stack.4. CWE-122: Heap-based Buffer Overflow - CVE-2017-0781In all versions of Android prior to September 9, 2017 Security Patch level, an incorrect buffer size passed to a memcpy call within the BNEP implementation for Android may allow an attacker to send crafted packets to the device that overflow the heap.5. CWE-191: Integer Underflow (Wrap or Wraparound) - CVE-2017-0782 In all versions of Android prior to September 9, 2017 Security Patch level, the bnep_process_control_packet function of the BNEP implementation for Android does not properly check the size of rem_len before decrementing, allowing integer underflow and further unsafe processing of attacker-controlled packets.6. CWE-122: Heap-based Buffer Overflow- CVE-2017-14315 Apple's Bluetooth Low-Energy Audio Protocol (LEAP) implementation in iOS version 9.3.5 and lower, and AppleTV tvOS version 7.2.2 and lower, does not properly validate the CID for incoming Bluetooth LEAP audio data, which may result in a heap overflow by not properly validating packet size before calling memcpy. An attacker sending \"classic\" (non-low-energy) Bluetooth packets may be able to cause multiple heap overflows resulting in code execution with the Bluetooth stack context.7 and 8. CWE-300: Channel Accessible by Non-Endpoint ('Man-in-the-Middle') - CVE-2017-0783 and CVE-2017-8628Incorrect \"Security Level\" requirements in the PAN profile of the Bluetooth implementation may allow an attacker to gain permissions to perform man in the middle attacks on the user. CVE-2017-0783 applies to all versions of Android prior to the September 9, 2017, Security Patch Level, while CVE-2017-8628 applies to a similar flaw in all versions of Windows from Windows Vista to Windows 10.For more details, please read Armis's BlueBorne disclosure website and Technical White Paper.",
        "impact": "An unauthenticated, remote attacker may be able to obtain private information about the device or user, or execute arbitrary code on the device."
      }
    ],
    "CVE-2017-11427": [
      {
        "url": "https://www.kb.cert.org/vuls/id/475445",
        "title": "Multiple SAML libraries may allow authentication bypass via incorrect XML canonicalization and DOM traversal",
        "overview": "Multiple SAML libraries may incorrectly utilize the results of XML DOM traversal and canonicalization APIs in such a way that an attacker may be able to manipulate the SAML data without invalidating the cryptographic signature, allowing the attack to potentially bypass authentication to SAML service providers.",
        "description": "CWE-287: Improper AuthenticationSecurity Assertion Markup Language (SAML) is an XML-based markup language for security assertions regarding authentication and permissions, most commonly used for single sign-on (SSO) services.Some XML DOM traversal and canonicalization APIs may be inconsistent in handling of comments within XML nodes. Incorrect use of these APIs by some SAML libraries results in incorrect parsing of the inner text of XML nodes such that any inner text after the comment is lost prior to cryptographically signing the SAML message. Text after the comment therefore has no impact on the signature on the SAML message.A remote attacker can modify SAML content for a SAML service provider without invalidating the cryptographic signature, which may allow attackers to bypass primary authentication for the affected SAML service providerThe following CVEs are assigned:CVE-2017-11427 - OneLogin’s \"python-saml\"CVE-2017-11428 - OneLogin’s \"ruby-saml\"CVE-2017-11429 - Clever’s \"saml2-js\"CVE-2017-11430 - \"OmniAuth-SAML\"CVE-2018-0489 - Shibboleth openSAML C++CVE-2018-5387 - Wizkunde SAMLBaseMore information is available in the researcher's blog post.",
        "impact": "By modifying SAML content without invalidating the cryptographic signature, a remote, unauthenticated attacker may be able to bypass primary authentication for an affected SAML service provider."
      }
    ],
    "CVE-2017-11428": [
      {
        "url": "https://www.kb.cert.org/vuls/id/475445",
        "title": "Multiple SAML libraries may allow authentication bypass via incorrect XML canonicalization and DOM traversal",
        "overview": "Multiple SAML libraries may incorrectly utilize the results of XML DOM traversal and canonicalization APIs in such a way that an attacker may be able to manipulate the SAML data without invalidating the cryptographic signature, allowing the attack to potentially bypass authentication to SAML service providers.",
        "description": "CWE-287: Improper AuthenticationSecurity Assertion Markup Language (SAML) is an XML-based markup language for security assertions regarding authentication and permissions, most commonly used for single sign-on (SSO) services.Some XML DOM traversal and canonicalization APIs may be inconsistent in handling of comments within XML nodes. Incorrect use of these APIs by some SAML libraries results in incorrect parsing of the inner text of XML nodes such that any inner text after the comment is lost prior to cryptographically signing the SAML message. Text after the comment therefore has no impact on the signature on the SAML message.A remote attacker can modify SAML content for a SAML service provider without invalidating the cryptographic signature, which may allow attackers to bypass primary authentication for the affected SAML service providerThe following CVEs are assigned:CVE-2017-11427 - OneLogin’s \"python-saml\"CVE-2017-11428 - OneLogin’s \"ruby-saml\"CVE-2017-11429 - Clever’s \"saml2-js\"CVE-2017-11430 - \"OmniAuth-SAML\"CVE-2018-0489 - Shibboleth openSAML C++CVE-2018-5387 - Wizkunde SAMLBaseMore information is available in the researcher's blog post.",
        "impact": "By modifying SAML content without invalidating the cryptographic signature, a remote, unauthenticated attacker may be able to bypass primary authentication for an affected SAML service provider."
      }
    ],
    "CVE-2017-11429": [
      {
        "url": "https://www.kb.cert.org/vuls/id/475445",
        "title": "Multiple SAML libraries may allow authentication bypass via incorrect XML canonicalization and DOM traversal",
        "overview": "Multiple SAML libraries may incorrectly utilize the results of XML DOM traversal and canonicalization APIs in such a way that an attacker may be able to manipulate the SAML data without invalidating the cryptographic signature, allowing the attack to potentially bypass authentication to SAML service providers.",
        "description": "CWE-287: Improper AuthenticationSecurity Assertion Markup Language (SAML) is an XML-based markup language for security assertions regarding authentication and permissions, most commonly used for single sign-on (SSO) services.Some XML DOM traversal and canonicalization APIs may be inconsistent in handling of comments within XML nodes. Incorrect use of these APIs by some SAML libraries results in incorrect parsing of the inner text of XML nodes such that any inner text after the comment is lost prior to cryptographically signing the SAML message. Text after the comment therefore has no impact on the signature on the SAML message.A remote attacker can modify SAML content for a SAML service provider without invalidating the cryptographic signature, which may allow attackers to bypass primary authentication for the affected SAML service providerThe following CVEs are assigned:CVE-2017-11427 - OneLogin’s \"python-saml\"CVE-2017-11428 - OneLogin’s \"ruby-saml\"CVE-2017-11429 - Clever’s \"saml2-js\"CVE-2017-11430 - \"OmniAuth-SAML\"CVE-2018-0489 - Shibboleth openSAML C++CVE-2018-5387 - Wizkunde SAMLBaseMore information is available in the researcher's blog post.",
        "impact": "By modifying SAML content without invalidating the cryptographic signature, a remote, unauthenticated attacker may be able to bypass primary authentication for an affected SAML service provider."
      }
    ],
    "CVE-2017-11430": [
      {
        "url": "https://www.kb.cert.org/vuls/id/475445",
        "title": "Multiple SAML libraries may allow authentication bypass via incorrect XML canonicalization and DOM traversal",
        "overview": "Multiple SAML libraries may incorrectly utilize the results of XML DOM traversal and canonicalization APIs in such a way that an attacker may be able to manipulate the SAML data without invalidating the cryptographic signature, allowing the attack to potentially bypass authentication to SAML service providers.",
        "description": "CWE-287: Improper AuthenticationSecurity Assertion Markup Language (SAML) is an XML-based markup language for security assertions regarding authentication and permissions, most commonly used for single sign-on (SSO) services.Some XML DOM traversal and canonicalization APIs may be inconsistent in handling of comments within XML nodes. Incorrect use of these APIs by some SAML libraries results in incorrect parsing of the inner text of XML nodes such that any inner text after the comment is lost prior to cryptographically signing the SAML message. Text after the comment therefore has no impact on the signature on the SAML message.A remote attacker can modify SAML content for a SAML service provider without invalidating the cryptographic signature, which may allow attackers to bypass primary authentication for the affected SAML service providerThe following CVEs are assigned:CVE-2017-11427 - OneLogin’s \"python-saml\"CVE-2017-11428 - OneLogin’s \"ruby-saml\"CVE-2017-11429 - Clever’s \"saml2-js\"CVE-2017-11430 - \"OmniAuth-SAML\"CVE-2018-0489 - Shibboleth openSAML C++CVE-2018-5387 - Wizkunde SAMLBaseMore information is available in the researcher's blog post.",
        "impact": "By modifying SAML content without invalidating the cryptographic signature, a remote, unauthenticated attacker may be able to bypass primary authentication for an affected SAML service provider."
      }
    ],
    "CVE-2017-11882": [
      {
        "url": "https://www.kb.cert.org/vuls/id/421280",
        "title": "Microsoft Office Equation Editor stack buffer overflow",
        "overview": "Microsoft Equation Editor contains a stack buffer overflow, which can allow a remote, unauthenticated attacker to execute arbitrary code on a vulnerable system.",
        "description": "Microsoft Equation Editor is a component that comes with Microsoft Office. It is an out-of-process COM server that is hosted by eqnedt32.exe. The Microsoft Equation Editor contains a stack buffer overflow vulnerability.Memory corruption vulnerabilities in modern software are often mitigated by exploit protections, such as DEP and ASLR. More modern memory corruption protections include features like CFG. Even in a modern, fully-patched Microsoft Office 2016 system, the Microsoft Equation Editor lacks any exploit protections, however. This lack of exploit protections allows an attacker to achieve code execution more easily than if protections were in place. For example, because eqnedt32.exe was linked without the /DYNAMICBASE flag, it will not be loaded at a randomized location by default.Because Equation Editor is an out-of-process COM server, this also means that protections specific to any Microsoft Office application may not have an effect on this vulnerability. For example, if the exploit document is an RTF document, the document will open in Microsoft Word. However, the COM server eqnedt32.exe is invoked by the Windows DCOM Server Process Launcher service, as opposed to Word itself. For this reason, EMET or Windows Defender Exploit Guard protections specific to the Microsoft Office programs themselves will not protect users. For this same reason, none of the Windows Defender Exploit Guard Attack Surface Reduction (ASR) protections will help either.Windows 7 users who have EMET configured for ASLR to be \"always on\" at a system-wide level are protected against known exploitation techniques for this vulnerability. Starting with Windows 8.0, system-wide ASLR receives entropy for non-DYNAMICBASE code only if bottom-up ASLR is enabled on a system-wide level as well. Neither EMET nor Windows Defender Exploit Guard configures system-wide bottom-up ASLR though. Because of this, Windows 8.0 through Windows 10 systems must enable specific protections for this vulnerability.",
        "impact": "By convincing a user to open a specially-crafted Office document, a remote, unauthenticated attacker may be able to execute arbitrary code with the privileges of the logged-on user."
      }
    ],
    "CVE-2017-1274": [
      {
        "url": "https://www.kb.cert.org/vuls/id/676632",
        "title": "IBM Lotus Domino server mailbox name stack buffer overflow",
        "overview": "The IBM Lotus Domino server IMAP service contains a stack-based buffer overflow vulnerability in IMAP commands that refer to a mailbox name. This can allow a remote, authenticated attacker to execute arbitrary code with the privileges of the Domino server",
        "description": "IBM Lotus Domino includes an IMAP server. This server contains a stack buffer overflow in the handling of mailbox names. By specifying a large mailbox name, an attacker can trigger a stack-based buffer overflow. Because IMAP commands that refer to a mailbox name are used after authentication, this vulnerability appears to only be exploitable by authenticated attackers. We have confirmed that this vulnerability affects Domino server 9.0.1FP8 and earlier versions. This exploit has been referred to by the \"EMPHASISMINE\" code name. Public exploit code uses the EXAMINE IMAP command, but other IMAP commands that refer to mailbox names may also be used.Note that on Windows at least one library used by Domino does not opt in to using ASLR, which makes exploitation trivial even on modern Windows platforms. This vulnerability is also exploitable when Domino is running on other platforms, such as Linux.",
        "impact": "By sending a specially-crafted IMAP command that references a mailbox name to an affected server, a remote, authenticated attacker can execute arbitrary code on the Domino system with the privileges of the Domino IMAP server."
      }
    ],
    "CVE-2017-13091": [
      {
        "url": "https://www.kb.cert.org/vuls/id/739007",
        "title": "IEEE P1735 implementations may have weak cryptographic protections",
        "overview": "The P1735 IEEE standard describes methods for encrypting electronic-design intellectual property (IP), as well as the management of access rights for such IP. The methods are flawed and, in the most egregious cases, enable attack vectors that allow recovery of the entire underlying plaintext IP. Implementations of IEEE P1735 may be weak to cryptographic attacks that allow an attacker to obtain plaintext intellectual property without the key, among other impacts.",
        "description": "CWE-310: Cryptographic IssuesThe P1735 IEEE standard describes methods for encrypting electronic-design intellectual property (IP), as well as the management of access rights for such IP. The methods are flawed and, in the most egregious cases, enable attack vectors that allow recovery of the entire underlying plaintext IP. Some of these attack vectors are well-known, such as padding-oracle attacks. Others are new, and are made possible by the need to support the typical uses of the underlying IP. In particular, the need for commercial electronic design automation (EDA) tools to synthesize multiple pieces of IP into a fully specified chip design and to provide HDL syntax errors. These flaws can be exploited by leveraging the commercial EDA tool as a black-box oracle. In addition to being able to recover entire plaintext IP, one can produce standard-compliant ciphertexts of IP that have been modified to include targeted hardware Trojans.Design of complex electronics design intellectual property (IP) involves multiple IP owners. To prevent rogue entities in the design flow from stealing their IPs, they use the P1735 IEEE standard to provide confidentiality and access control. The standard not only recommends poor cryptographic choices, it is vague/silent on security critical decisions.The following CVE IDs were assigned to document weaknesses in the P1735 standard as described in the researcher's paper.CVE-2017-13091: improperly specified padding in CBC mode allows use of an EDA tool as a decryption oracle.CVE-2017-13092: improperly specified HDL syntax allows use of an EDA tool as a decryption oracleCVE-2017-13093: modification of encrypted IP cyphertext to insert hardware trojans.CVE-2017-13094: modification of the encryption key and insertion of hardware trojans in any IP.CVE-2017-13095: modification of a license-deny response to a license grant.The following weaknesses in the P1735 standard were also identified and assigned CVE IDs:CVE-2017-13096: modification of Rights Block to remove or relax access control.CVE-2017-13097: modification of Rights Block to remove or relax license requirement.While CVE-2017-13096 and CVE-2017-13097 are not explicitly discussed in the research paper, section 4.2 of the paper describes a similar attack method and mitigation. The Rights Block of the digital envelope contains the Key Block (encryption of AES key under RSA public key of the EDA tool provider) as well as access control and license requirements. An attacker with information about the IP may be able to select a new AES key and spoof a new Rights Block for an EDA tool that modifies or removes the original access control or licensing requirements specified by the original IP owner.All CVE IDs above may extend to EDA tools that utilize the P1735 standard, or products designed with such EDA tools.",
        "impact": "An adversary can recover electronic design IPs encrypted using the P1735 workflow, resulting in IP theft and/or analysis of security critical features, as well as the ability to insert hardware trojans into an encrypted IP without the knowledge of the IP owner. Impacts may include loss of profit and reputation of the IP owners as well as integrated circuits (ICs) with trojans that contain backdoors, perform poorly, or even fail completely. See the researcher's paper for full impact details."
      }
    ],
    "CVE-2017-13092": [
      {
        "url": "https://www.kb.cert.org/vuls/id/739007",
        "title": "IEEE P1735 implementations may have weak cryptographic protections",
        "overview": "The P1735 IEEE standard describes methods for encrypting electronic-design intellectual property (IP), as well as the management of access rights for such IP. The methods are flawed and, in the most egregious cases, enable attack vectors that allow recovery of the entire underlying plaintext IP. Implementations of IEEE P1735 may be weak to cryptographic attacks that allow an attacker to obtain plaintext intellectual property without the key, among other impacts.",
        "description": "CWE-310: Cryptographic IssuesThe P1735 IEEE standard describes methods for encrypting electronic-design intellectual property (IP), as well as the management of access rights for such IP. The methods are flawed and, in the most egregious cases, enable attack vectors that allow recovery of the entire underlying plaintext IP. Some of these attack vectors are well-known, such as padding-oracle attacks. Others are new, and are made possible by the need to support the typical uses of the underlying IP. In particular, the need for commercial electronic design automation (EDA) tools to synthesize multiple pieces of IP into a fully specified chip design and to provide HDL syntax errors. These flaws can be exploited by leveraging the commercial EDA tool as a black-box oracle. In addition to being able to recover entire plaintext IP, one can produce standard-compliant ciphertexts of IP that have been modified to include targeted hardware Trojans.Design of complex electronics design intellectual property (IP) involves multiple IP owners. To prevent rogue entities in the design flow from stealing their IPs, they use the P1735 IEEE standard to provide confidentiality and access control. The standard not only recommends poor cryptographic choices, it is vague/silent on security critical decisions.The following CVE IDs were assigned to document weaknesses in the P1735 standard as described in the researcher's paper.CVE-2017-13091: improperly specified padding in CBC mode allows use of an EDA tool as a decryption oracle.CVE-2017-13092: improperly specified HDL syntax allows use of an EDA tool as a decryption oracleCVE-2017-13093: modification of encrypted IP cyphertext to insert hardware trojans.CVE-2017-13094: modification of the encryption key and insertion of hardware trojans in any IP.CVE-2017-13095: modification of a license-deny response to a license grant.The following weaknesses in the P1735 standard were also identified and assigned CVE IDs:CVE-2017-13096: modification of Rights Block to remove or relax access control.CVE-2017-13097: modification of Rights Block to remove or relax license requirement.While CVE-2017-13096 and CVE-2017-13097 are not explicitly discussed in the research paper, section 4.2 of the paper describes a similar attack method and mitigation. The Rights Block of the digital envelope contains the Key Block (encryption of AES key under RSA public key of the EDA tool provider) as well as access control and license requirements. An attacker with information about the IP may be able to select a new AES key and spoof a new Rights Block for an EDA tool that modifies or removes the original access control or licensing requirements specified by the original IP owner.All CVE IDs above may extend to EDA tools that utilize the P1735 standard, or products designed with such EDA tools.",
        "impact": "An adversary can recover electronic design IPs encrypted using the P1735 workflow, resulting in IP theft and/or analysis of security critical features, as well as the ability to insert hardware trojans into an encrypted IP without the knowledge of the IP owner. Impacts may include loss of profit and reputation of the IP owners as well as integrated circuits (ICs) with trojans that contain backdoors, perform poorly, or even fail completely. See the researcher's paper for full impact details."
      }
    ],
    "CVE-2017-13093": [
      {
        "url": "https://www.kb.cert.org/vuls/id/739007",
        "title": "IEEE P1735 implementations may have weak cryptographic protections",
        "overview": "The P1735 IEEE standard describes methods for encrypting electronic-design intellectual property (IP), as well as the management of access rights for such IP. The methods are flawed and, in the most egregious cases, enable attack vectors that allow recovery of the entire underlying plaintext IP. Implementations of IEEE P1735 may be weak to cryptographic attacks that allow an attacker to obtain plaintext intellectual property without the key, among other impacts.",
        "description": "CWE-310: Cryptographic IssuesThe P1735 IEEE standard describes methods for encrypting electronic-design intellectual property (IP), as well as the management of access rights for such IP. The methods are flawed and, in the most egregious cases, enable attack vectors that allow recovery of the entire underlying plaintext IP. Some of these attack vectors are well-known, such as padding-oracle attacks. Others are new, and are made possible by the need to support the typical uses of the underlying IP. In particular, the need for commercial electronic design automation (EDA) tools to synthesize multiple pieces of IP into a fully specified chip design and to provide HDL syntax errors. These flaws can be exploited by leveraging the commercial EDA tool as a black-box oracle. In addition to being able to recover entire plaintext IP, one can produce standard-compliant ciphertexts of IP that have been modified to include targeted hardware Trojans.Design of complex electronics design intellectual property (IP) involves multiple IP owners. To prevent rogue entities in the design flow from stealing their IPs, they use the P1735 IEEE standard to provide confidentiality and access control. The standard not only recommends poor cryptographic choices, it is vague/silent on security critical decisions.The following CVE IDs were assigned to document weaknesses in the P1735 standard as described in the researcher's paper.CVE-2017-13091: improperly specified padding in CBC mode allows use of an EDA tool as a decryption oracle.CVE-2017-13092: improperly specified HDL syntax allows use of an EDA tool as a decryption oracleCVE-2017-13093: modification of encrypted IP cyphertext to insert hardware trojans.CVE-2017-13094: modification of the encryption key and insertion of hardware trojans in any IP.CVE-2017-13095: modification of a license-deny response to a license grant.The following weaknesses in the P1735 standard were also identified and assigned CVE IDs:CVE-2017-13096: modification of Rights Block to remove or relax access control.CVE-2017-13097: modification of Rights Block to remove or relax license requirement.While CVE-2017-13096 and CVE-2017-13097 are not explicitly discussed in the research paper, section 4.2 of the paper describes a similar attack method and mitigation. The Rights Block of the digital envelope contains the Key Block (encryption of AES key under RSA public key of the EDA tool provider) as well as access control and license requirements. An attacker with information about the IP may be able to select a new AES key and spoof a new Rights Block for an EDA tool that modifies or removes the original access control or licensing requirements specified by the original IP owner.All CVE IDs above may extend to EDA tools that utilize the P1735 standard, or products designed with such EDA tools.",
        "impact": "An adversary can recover electronic design IPs encrypted using the P1735 workflow, resulting in IP theft and/or analysis of security critical features, as well as the ability to insert hardware trojans into an encrypted IP without the knowledge of the IP owner. Impacts may include loss of profit and reputation of the IP owners as well as integrated circuits (ICs) with trojans that contain backdoors, perform poorly, or even fail completely. See the researcher's paper for full impact details."
      }
    ],
    "CVE-2017-13094": [
      {
        "url": "https://www.kb.cert.org/vuls/id/739007",
        "title": "IEEE P1735 implementations may have weak cryptographic protections",
        "overview": "The P1735 IEEE standard describes methods for encrypting electronic-design intellectual property (IP), as well as the management of access rights for such IP. The methods are flawed and, in the most egregious cases, enable attack vectors that allow recovery of the entire underlying plaintext IP. Implementations of IEEE P1735 may be weak to cryptographic attacks that allow an attacker to obtain plaintext intellectual property without the key, among other impacts.",
        "description": "CWE-310: Cryptographic IssuesThe P1735 IEEE standard describes methods for encrypting electronic-design intellectual property (IP), as well as the management of access rights for such IP. The methods are flawed and, in the most egregious cases, enable attack vectors that allow recovery of the entire underlying plaintext IP. Some of these attack vectors are well-known, such as padding-oracle attacks. Others are new, and are made possible by the need to support the typical uses of the underlying IP. In particular, the need for commercial electronic design automation (EDA) tools to synthesize multiple pieces of IP into a fully specified chip design and to provide HDL syntax errors. These flaws can be exploited by leveraging the commercial EDA tool as a black-box oracle. In addition to being able to recover entire plaintext IP, one can produce standard-compliant ciphertexts of IP that have been modified to include targeted hardware Trojans.Design of complex electronics design intellectual property (IP) involves multiple IP owners. To prevent rogue entities in the design flow from stealing their IPs, they use the P1735 IEEE standard to provide confidentiality and access control. The standard not only recommends poor cryptographic choices, it is vague/silent on security critical decisions.The following CVE IDs were assigned to document weaknesses in the P1735 standard as described in the researcher's paper.CVE-2017-13091: improperly specified padding in CBC mode allows use of an EDA tool as a decryption oracle.CVE-2017-13092: improperly specified HDL syntax allows use of an EDA tool as a decryption oracleCVE-2017-13093: modification of encrypted IP cyphertext to insert hardware trojans.CVE-2017-13094: modification of the encryption key and insertion of hardware trojans in any IP.CVE-2017-13095: modification of a license-deny response to a license grant.The following weaknesses in the P1735 standard were also identified and assigned CVE IDs:CVE-2017-13096: modification of Rights Block to remove or relax access control.CVE-2017-13097: modification of Rights Block to remove or relax license requirement.While CVE-2017-13096 and CVE-2017-13097 are not explicitly discussed in the research paper, section 4.2 of the paper describes a similar attack method and mitigation. The Rights Block of the digital envelope contains the Key Block (encryption of AES key under RSA public key of the EDA tool provider) as well as access control and license requirements. An attacker with information about the IP may be able to select a new AES key and spoof a new Rights Block for an EDA tool that modifies or removes the original access control or licensing requirements specified by the original IP owner.All CVE IDs above may extend to EDA tools that utilize the P1735 standard, or products designed with such EDA tools.",
        "impact": "An adversary can recover electronic design IPs encrypted using the P1735 workflow, resulting in IP theft and/or analysis of security critical features, as well as the ability to insert hardware trojans into an encrypted IP without the knowledge of the IP owner. Impacts may include loss of profit and reputation of the IP owners as well as integrated circuits (ICs) with trojans that contain backdoors, perform poorly, or even fail completely. See the researcher's paper for full impact details."
      }
    ],
    "CVE-2017-13095": [
      {
        "url": "https://www.kb.cert.org/vuls/id/739007",
        "title": "IEEE P1735 implementations may have weak cryptographic protections",
        "overview": "The P1735 IEEE standard describes methods for encrypting electronic-design intellectual property (IP), as well as the management of access rights for such IP. The methods are flawed and, in the most egregious cases, enable attack vectors that allow recovery of the entire underlying plaintext IP. Implementations of IEEE P1735 may be weak to cryptographic attacks that allow an attacker to obtain plaintext intellectual property without the key, among other impacts.",
        "description": "CWE-310: Cryptographic IssuesThe P1735 IEEE standard describes methods for encrypting electronic-design intellectual property (IP), as well as the management of access rights for such IP. The methods are flawed and, in the most egregious cases, enable attack vectors that allow recovery of the entire underlying plaintext IP. Some of these attack vectors are well-known, such as padding-oracle attacks. Others are new, and are made possible by the need to support the typical uses of the underlying IP. In particular, the need for commercial electronic design automation (EDA) tools to synthesize multiple pieces of IP into a fully specified chip design and to provide HDL syntax errors. These flaws can be exploited by leveraging the commercial EDA tool as a black-box oracle. In addition to being able to recover entire plaintext IP, one can produce standard-compliant ciphertexts of IP that have been modified to include targeted hardware Trojans.Design of complex electronics design intellectual property (IP) involves multiple IP owners. To prevent rogue entities in the design flow from stealing their IPs, they use the P1735 IEEE standard to provide confidentiality and access control. The standard not only recommends poor cryptographic choices, it is vague/silent on security critical decisions.The following CVE IDs were assigned to document weaknesses in the P1735 standard as described in the researcher's paper.CVE-2017-13091: improperly specified padding in CBC mode allows use of an EDA tool as a decryption oracle.CVE-2017-13092: improperly specified HDL syntax allows use of an EDA tool as a decryption oracleCVE-2017-13093: modification of encrypted IP cyphertext to insert hardware trojans.CVE-2017-13094: modification of the encryption key and insertion of hardware trojans in any IP.CVE-2017-13095: modification of a license-deny response to a license grant.The following weaknesses in the P1735 standard were also identified and assigned CVE IDs:CVE-2017-13096: modification of Rights Block to remove or relax access control.CVE-2017-13097: modification of Rights Block to remove or relax license requirement.While CVE-2017-13096 and CVE-2017-13097 are not explicitly discussed in the research paper, section 4.2 of the paper describes a similar attack method and mitigation. The Rights Block of the digital envelope contains the Key Block (encryption of AES key under RSA public key of the EDA tool provider) as well as access control and license requirements. An attacker with information about the IP may be able to select a new AES key and spoof a new Rights Block for an EDA tool that modifies or removes the original access control or licensing requirements specified by the original IP owner.All CVE IDs above may extend to EDA tools that utilize the P1735 standard, or products designed with such EDA tools.",
        "impact": "An adversary can recover electronic design IPs encrypted using the P1735 workflow, resulting in IP theft and/or analysis of security critical features, as well as the ability to insert hardware trojans into an encrypted IP without the knowledge of the IP owner. Impacts may include loss of profit and reputation of the IP owners as well as integrated circuits (ICs) with trojans that contain backdoors, perform poorly, or even fail completely. See the researcher's paper for full impact details."
      }
    ],
    "CVE-2017-13096": [
      {
        "url": "https://www.kb.cert.org/vuls/id/739007",
        "title": "IEEE P1735 implementations may have weak cryptographic protections",
        "overview": "The P1735 IEEE standard describes methods for encrypting electronic-design intellectual property (IP), as well as the management of access rights for such IP. The methods are flawed and, in the most egregious cases, enable attack vectors that allow recovery of the entire underlying plaintext IP. Implementations of IEEE P1735 may be weak to cryptographic attacks that allow an attacker to obtain plaintext intellectual property without the key, among other impacts.",
        "description": "CWE-310: Cryptographic IssuesThe P1735 IEEE standard describes methods for encrypting electronic-design intellectual property (IP), as well as the management of access rights for such IP. The methods are flawed and, in the most egregious cases, enable attack vectors that allow recovery of the entire underlying plaintext IP. Some of these attack vectors are well-known, such as padding-oracle attacks. Others are new, and are made possible by the need to support the typical uses of the underlying IP. In particular, the need for commercial electronic design automation (EDA) tools to synthesize multiple pieces of IP into a fully specified chip design and to provide HDL syntax errors. These flaws can be exploited by leveraging the commercial EDA tool as a black-box oracle. In addition to being able to recover entire plaintext IP, one can produce standard-compliant ciphertexts of IP that have been modified to include targeted hardware Trojans.Design of complex electronics design intellectual property (IP) involves multiple IP owners. To prevent rogue entities in the design flow from stealing their IPs, they use the P1735 IEEE standard to provide confidentiality and access control. The standard not only recommends poor cryptographic choices, it is vague/silent on security critical decisions.The following CVE IDs were assigned to document weaknesses in the P1735 standard as described in the researcher's paper.CVE-2017-13091: improperly specified padding in CBC mode allows use of an EDA tool as a decryption oracle.CVE-2017-13092: improperly specified HDL syntax allows use of an EDA tool as a decryption oracleCVE-2017-13093: modification of encrypted IP cyphertext to insert hardware trojans.CVE-2017-13094: modification of the encryption key and insertion of hardware trojans in any IP.CVE-2017-13095: modification of a license-deny response to a license grant.The following weaknesses in the P1735 standard were also identified and assigned CVE IDs:CVE-2017-13096: modification of Rights Block to remove or relax access control.CVE-2017-13097: modification of Rights Block to remove or relax license requirement.While CVE-2017-13096 and CVE-2017-13097 are not explicitly discussed in the research paper, section 4.2 of the paper describes a similar attack method and mitigation. The Rights Block of the digital envelope contains the Key Block (encryption of AES key under RSA public key of the EDA tool provider) as well as access control and license requirements. An attacker with information about the IP may be able to select a new AES key and spoof a new Rights Block for an EDA tool that modifies or removes the original access control or licensing requirements specified by the original IP owner.All CVE IDs above may extend to EDA tools that utilize the P1735 standard, or products designed with such EDA tools.",
        "impact": "An adversary can recover electronic design IPs encrypted using the P1735 workflow, resulting in IP theft and/or analysis of security critical features, as well as the ability to insert hardware trojans into an encrypted IP without the knowledge of the IP owner. Impacts may include loss of profit and reputation of the IP owners as well as integrated circuits (ICs) with trojans that contain backdoors, perform poorly, or even fail completely. See the researcher's paper for full impact details."
      }
    ],
    "CVE-2017-13097": [
      {
        "url": "https://www.kb.cert.org/vuls/id/739007",
        "title": "IEEE P1735 implementations may have weak cryptographic protections",
        "overview": "The P1735 IEEE standard describes methods for encrypting electronic-design intellectual property (IP), as well as the management of access rights for such IP. The methods are flawed and, in the most egregious cases, enable attack vectors that allow recovery of the entire underlying plaintext IP. Implementations of IEEE P1735 may be weak to cryptographic attacks that allow an attacker to obtain plaintext intellectual property without the key, among other impacts.",
        "description": "CWE-310: Cryptographic IssuesThe P1735 IEEE standard describes methods for encrypting electronic-design intellectual property (IP), as well as the management of access rights for such IP. The methods are flawed and, in the most egregious cases, enable attack vectors that allow recovery of the entire underlying plaintext IP. Some of these attack vectors are well-known, such as padding-oracle attacks. Others are new, and are made possible by the need to support the typical uses of the underlying IP. In particular, the need for commercial electronic design automation (EDA) tools to synthesize multiple pieces of IP into a fully specified chip design and to provide HDL syntax errors. These flaws can be exploited by leveraging the commercial EDA tool as a black-box oracle. In addition to being able to recover entire plaintext IP, one can produce standard-compliant ciphertexts of IP that have been modified to include targeted hardware Trojans.Design of complex electronics design intellectual property (IP) involves multiple IP owners. To prevent rogue entities in the design flow from stealing their IPs, they use the P1735 IEEE standard to provide confidentiality and access control. The standard not only recommends poor cryptographic choices, it is vague/silent on security critical decisions.The following CVE IDs were assigned to document weaknesses in the P1735 standard as described in the researcher's paper.CVE-2017-13091: improperly specified padding in CBC mode allows use of an EDA tool as a decryption oracle.CVE-2017-13092: improperly specified HDL syntax allows use of an EDA tool as a decryption oracleCVE-2017-13093: modification of encrypted IP cyphertext to insert hardware trojans.CVE-2017-13094: modification of the encryption key and insertion of hardware trojans in any IP.CVE-2017-13095: modification of a license-deny response to a license grant.The following weaknesses in the P1735 standard were also identified and assigned CVE IDs:CVE-2017-13096: modification of Rights Block to remove or relax access control.CVE-2017-13097: modification of Rights Block to remove or relax license requirement.While CVE-2017-13096 and CVE-2017-13097 are not explicitly discussed in the research paper, section 4.2 of the paper describes a similar attack method and mitigation. The Rights Block of the digital envelope contains the Key Block (encryption of AES key under RSA public key of the EDA tool provider) as well as access control and license requirements. An attacker with information about the IP may be able to select a new AES key and spoof a new Rights Block for an EDA tool that modifies or removes the original access control or licensing requirements specified by the original IP owner.All CVE IDs above may extend to EDA tools that utilize the P1735 standard, or products designed with such EDA tools.",
        "impact": "An adversary can recover electronic design IPs encrypted using the P1735 workflow, resulting in IP theft and/or analysis of security critical features, as well as the ability to insert hardware trojans into an encrypted IP without the knowledge of the IP owner. Impacts may include loss of profit and reputation of the IP owners as well as integrated circuits (ICs) with trojans that contain backdoors, perform poorly, or even fail completely. See the researcher's paper for full impact details."
      }
    ],
    "CVE-2017-14491": [
      {
        "url": "https://www.kb.cert.org/vuls/id/973527",
        "title": "Dnsmasq contains multiple vulnerabilities",
        "overview": "Dnsmasq versions 2.77 and earlier contains multiple vulnerabilities.",
        "description": "Multiple vulnerabilities have been reported in dnsmasq.CWE-122: Heap-based Buffer Overflow - CVE-2017-14491CWE-122: Heap-based Buffer Overflow - CVE-2017-14492CWE-121: Stack-based Buffer Overflow - CVE-2017-14493CWE-200: Information Exposure - CVE-2017-14494CWE-400: Uncontrolled Resource Consumption('Resource Exhaustion') - CVE-2017-14495CWE-191: Integer Underflow - CVE-2017-14496Please see the Google Security blog post for additional information.",
        "impact": "Dnsmasq is a widely used piece of open-source software. These vulnerabilities can be triggered remotely via DNS and DHCP protocols and can lead to remote code execution, information exposure, and denial of service. In some cases an attacker would need to induce one or more DNS requests."
      }
    ],
    "CVE-2017-14492": [
      {
        "url": "https://www.kb.cert.org/vuls/id/973527",
        "title": "Dnsmasq contains multiple vulnerabilities",
        "overview": "Dnsmasq versions 2.77 and earlier contains multiple vulnerabilities.",
        "description": "Multiple vulnerabilities have been reported in dnsmasq.CWE-122: Heap-based Buffer Overflow - CVE-2017-14491CWE-122: Heap-based Buffer Overflow - CVE-2017-14492CWE-121: Stack-based Buffer Overflow - CVE-2017-14493CWE-200: Information Exposure - CVE-2017-14494CWE-400: Uncontrolled Resource Consumption('Resource Exhaustion') - CVE-2017-14495CWE-191: Integer Underflow - CVE-2017-14496Please see the Google Security blog post for additional information.",
        "impact": "Dnsmasq is a widely used piece of open-source software. These vulnerabilities can be triggered remotely via DNS and DHCP protocols and can lead to remote code execution, information exposure, and denial of service. In some cases an attacker would need to induce one or more DNS requests."
      }
    ],
    "CVE-2017-14493": [
      {
        "url": "https://www.kb.cert.org/vuls/id/973527",
        "title": "Dnsmasq contains multiple vulnerabilities",
        "overview": "Dnsmasq versions 2.77 and earlier contains multiple vulnerabilities.",
        "description": "Multiple vulnerabilities have been reported in dnsmasq.CWE-122: Heap-based Buffer Overflow - CVE-2017-14491CWE-122: Heap-based Buffer Overflow - CVE-2017-14492CWE-121: Stack-based Buffer Overflow - CVE-2017-14493CWE-200: Information Exposure - CVE-2017-14494CWE-400: Uncontrolled Resource Consumption('Resource Exhaustion') - CVE-2017-14495CWE-191: Integer Underflow - CVE-2017-14496Please see the Google Security blog post for additional information.",
        "impact": "Dnsmasq is a widely used piece of open-source software. These vulnerabilities can be triggered remotely via DNS and DHCP protocols and can lead to remote code execution, information exposure, and denial of service. In some cases an attacker would need to induce one or more DNS requests."
      }
    ],
    "CVE-2017-14494": [
      {
        "url": "https://www.kb.cert.org/vuls/id/973527",
        "title": "Dnsmasq contains multiple vulnerabilities",
        "overview": "Dnsmasq versions 2.77 and earlier contains multiple vulnerabilities.",
        "description": "Multiple vulnerabilities have been reported in dnsmasq.CWE-122: Heap-based Buffer Overflow - CVE-2017-14491CWE-122: Heap-based Buffer Overflow - CVE-2017-14492CWE-121: Stack-based Buffer Overflow - CVE-2017-14493CWE-200: Information Exposure - CVE-2017-14494CWE-400: Uncontrolled Resource Consumption('Resource Exhaustion') - CVE-2017-14495CWE-191: Integer Underflow - CVE-2017-14496Please see the Google Security blog post for additional information.",
        "impact": "Dnsmasq is a widely used piece of open-source software. These vulnerabilities can be triggered remotely via DNS and DHCP protocols and can lead to remote code execution, information exposure, and denial of service. In some cases an attacker would need to induce one or more DNS requests."
      }
    ],
    "CVE-2017-3185": [
      {
        "url": "https://www.kb.cert.org/vuls/id/355151",
        "title": "ACTi cameras models from the D, B, I, and E series contain multiple security vulnerabilities",
        "overview": "According to the reporter, ACTi devices including D, B, I, and E series models using firmware version A1D-500-V6.11.31-AC are vulnerable to several issues.",
        "description": "According to the reporter, multiple ACTi devices, including the D, B, I, and E series models, that use firmware version A1D-500-V6.11.31-AC are vulnerable to several issues. Other models may be affected.CWE-306: Missing Authentication for Critical Function - CVE-2017-3184The issue is due to the device failing to properly restrict access to the factory reset page. An unauthenticated, remote attacker can exploit this vulnerability by directly accessing the http://x.x.x.x/setup/setup_maintain_firmware-default.html page. This will allow an attacker to perform a factory reset on the device, leading to a denial of service condition or the ability to make use of default credentials (CVE-2017-3186).CWE-598: Information Exposure Through Query Strings in GET Request - CVE-2017-3185The web application uses the GET method to process requests that contain sensitive information such as user account name and password, which can expose that information through the browser's history, referrers, web logs, and other sources.CWE-521: Weak Password Requirements - CVE-2017-3186Device uses non-random default credentials across all devices. A remote attacker can take complete control of a device using default admin credentials.For more information, please read the researcher's security advisory.",
        "impact": "A remote unauthenticated attacker may be able to perform a factory reset of the device, gain access to sensitive information such as user account name or password, or utilize a known default root admin credential across all devices."
      }
    ],
    "CVE-2017-3187": [
      {
        "url": "https://www.kb.cert.org/vuls/id/168699",
        "title": "dotCMS contains multiple vulnerabilities",
        "overview": "The dotCMS administration panel is vulnerable to cross-site request forgery, and the \"Push Publishing\" feature in Enterprise Pro is vulnerable to path traversal and arbitrary file upload. dotCMS versions 3.7.1 and earlier are affected.",
        "description": "CWE-352: Cross-Site Request Forgery (CSRF) - CVE-2017-3187 The dotCMS administrator panel contains a cross-site request forgery (CSRF) vulnerability. An attacker can perform actions with the same permissions as a victim user, provided the victim has an active session and is induced to trigger the malicious request.CWE-22: Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal') - CVE-2017-3188 When \"Bundle\" tar.gz archives uploaded to the Push Publishing feature are decompressed, the filenames of its contents are not properly checked, allowing for writing files to arbitrary directories on the file system. These archives may be uploaded directly via the administrator panel, or using the CSRF vulnerability (CVE-2017-3187) described above.CWE-434: Unrestricted Upload of File with Dangerous Type - CVE-2017-3189When \"Bundle\" tar.gz archives uploaded to the Push Publishing feature are decompressed, there are no checks on the types of files which the bundle contains. This vulnerability combined with the path traversal vulnerability above (CVE-2017-3188) can lead to remote command execution with the permissions of the user running the dotCMS application.",
        "impact": "An unauthenticated remote attacker may perform actions with the dotCMS administrator panel with the same permissions of a victim user or execute arbitrary system commands with the permissions of the user running the dotCMS application."
      }
    ],
    "CVE-2017-3188": [
      {
        "url": "https://www.kb.cert.org/vuls/id/168699",
        "title": "dotCMS contains multiple vulnerabilities",
        "overview": "The dotCMS administration panel is vulnerable to cross-site request forgery, and the \"Push Publishing\" feature in Enterprise Pro is vulnerable to path traversal and arbitrary file upload. dotCMS versions 3.7.1 and earlier are affected.",
        "description": "CWE-352: Cross-Site Request Forgery (CSRF) - CVE-2017-3187 The dotCMS administrator panel contains a cross-site request forgery (CSRF) vulnerability. An attacker can perform actions with the same permissions as a victim user, provided the victim has an active session and is induced to trigger the malicious request.CWE-22: Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal') - CVE-2017-3188 When \"Bundle\" tar.gz archives uploaded to the Push Publishing feature are decompressed, the filenames of its contents are not properly checked, allowing for writing files to arbitrary directories on the file system. These archives may be uploaded directly via the administrator panel, or using the CSRF vulnerability (CVE-2017-3187) described above.CWE-434: Unrestricted Upload of File with Dangerous Type - CVE-2017-3189When \"Bundle\" tar.gz archives uploaded to the Push Publishing feature are decompressed, there are no checks on the types of files which the bundle contains. This vulnerability combined with the path traversal vulnerability above (CVE-2017-3188) can lead to remote command execution with the permissions of the user running the dotCMS application.",
        "impact": "An unauthenticated remote attacker may perform actions with the dotCMS administrator panel with the same permissions of a victim user or execute arbitrary system commands with the permissions of the user running the dotCMS application."
      }
    ],
    "CVE-2017-3191": [
      {
        "url": "https://www.kb.cert.org/vuls/id/553503",
        "title": "D-Link DIR-130 and DIR-330 are vulnerable to authentication bypass and do not protect credentials",
        "overview": "The D-Link DIR-130 and DIR-330 are vulnerable to authentication bypass of the remote login page, and do not sufficiently protect administrator credentials.",
        "description": "The D-Link DIR-130, firmware version 1.23, and DIR-330, firmware version 1.12, are vulnerable to the following:CWE-294: Authentication Bypass by Capture-replay - CVE-2017-3191A remote attacker that can access the remote management login page can manipulate the POST request in such a manner as to access some administrator-only pages such as tools_admin.asp without credentials.CWE-522: Insufficiently Protected Credentials - CVE-2017-3192The tools_admin.asp page discloses the administrator password in base64 encoding in the returned web page. A remote attacker with access to this page (potentially through a authentication bypass such as CVE-2017-3191) may obtain administrator credentials for the device.D-Link has confirmed these issues to the CERT/CC.Other D-Link models may be affected by these issues, but were not tested by the reporter or the CERT/CC. CERT/CC has received a report that the DIR-655 may also be impacted, but has not verified it at this time.",
        "impact": "A remote attacker may be able to obtain administrator credentials and access administrator functionality of the device."
      }
    ],
    "CVE-2017-3193": [
      {
        "url": "https://www.kb.cert.org/vuls/id/305448",
        "title": "D-Link DIR-850L web admin interface contains a stack-based buffer overflow vulnerability",
        "overview": "D-Link DIR-850L, firmware versions 1.14B07, 2.07.B05, and possibly others, contains a stack-based buffer overflow vulnerability in the web administration interface HNAP service. Other models may also be affected.",
        "description": "CWE-121: Stack-based Buffer Overflow - CVE-2017-3193D-Link DIR-850L, firmware versions 1.14B07, 2.07.B05, and possibly others, contains a stack-based buffer overflow vulnerability in the web administration interface HNAP service. An unauthenticated attacker may send a specially crafted POST request to http://<router-ip>/HNAP1/ with modified HNAP_AUTH and SOAPAction headers to overflow the buffer and execute arbitrary code as root. By default, remote administration is disabled, which limits web interface access to LAN-connected hosts. Other models and firmware versions may also be affected.The DIR-850L is reportedly also affected by CVE-2016-6563, previously disclosed in vulnerability note VU#677427.",
        "impact": "A remote, unauthenticated attacker can make a specially crafted POST request to gain arbitrary code execution as root."
      }
    ],
    "CVE-2017-3194": [
      {
        "url": "https://www.kb.cert.org/vuls/id/342303",
        "title": "Pandora iOS app does not properly validate SSL certificates",
        "overview": "The Pandora iOS app fails to properly validate SSL certificates provided by HTTPS connections, which may enable an attacker to conduct man-in-the-middle (MITM) attacks.",
        "description": "CWE-295: Improper Certificate Validation - CVE-2017-3194Pandora is a streaming music service. On iOS devices, the Pandora app fails to properly validate SSL certificates provided by HTTPS connections, which means that an attacker in the position to perform MITM attacks may be able to obtain sensitive account information such as login credentials.",
        "impact": "An attacker on the same network as the iOS device may be able to view or modify network traffic that should have been protected by HTTPS, which may lead to the exposure of sensitive account information, including login credentials."
      }
    ],
    "CVE-2017-3195": [
      {
        "url": "https://www.kb.cert.org/vuls/id/214283",
        "title": "Commvault Edge contains a buffer overflow vulnerability",
        "overview": "Commvault Edge, version 11 SP6 (11.80.50.0), is vulnerable to a stack-based buffer overflow vulnerability.",
        "description": "CWE-121: Stack-based Buffer Overflow - CVE-2017-3195A stack based buffer overflow in the Commvault Edge Communication Service (cvd) allows remote attackers to execute arbitrary code via crafted packets, exploiting weaknesses in the key exchange mechanism. Access to TCP port 8400 (by default) on the target machine is necessary to exploit this vulnerability.",
        "impact": "An unauthenticated remote attacker can execute arbitrary code with root/SYSTEM privileges."
      }
    ],
    "CVE-2017-3196": [
      {
        "url": "https://www.kb.cert.org/vuls/id/600671",
        "title": "PCAUSA Rawether for Windows local privilege escalation",
        "overview": "PCAUSA's Rawether framework does not properly validate BPF data, allowing a crafted malicious BPF program to perform operations on memory outside of its typical bounds on the driver's receipt of network packets. This vulnerability may be exploited to perform local privilege escalation on Windows systems.",
        "description": "The Rawether framework for Windows, originally produced by Printing Communications Assoc., Inc. (PCAUSA), is a framework that facilitates communication between an application and the Network Driver Interface System (NDIS) protocol. This framework is used by many different hardware vendors in their WiFi and router control applications. Rawether implements the Berkeley Packet Filter (BPF) mechanism. BPF filters are compiled into small programs that are executed by a BPF virtual machine.CWE-119: Improper Restriction of Operations within the Bounds of a Memory Buffer - CVE-2017-3196The Rawether framework does not properly validate BPF programs before execution, allowing BPF programs that may read/write arbitrary memory or infinitely loop. The return address on the stack may be overwritten, allowing a local user to execute arbitrary code with SYSTEM privileges.To enable the vulnerable part of the driver, an exploit has to issue a OID_GEN_CURRENT_PACKET_FILTER NDIS request with NDIS_PACKET_TYPE_ALL_LOCAL flags and set the BPF program. The exploit is triggered by reading the first received network packet.The researcher has provided a proof of concept affecting the 64-bit version of PcaSp60.sys driver which is part of ASUS PCE-AC56 WLAN Card Utilities. However, other utilities and programs making use of this driver may also be affected. Identifying vulnerable software may be difficult due to variations in driver name, version, or device name or information, but the vulnerable driver is most likely included in OEM WiFi utility programs. Some common default naming convention for the affected drivers include:PcaSp60.sysPcaSp50.sysPcaMp60.sysPcaMp50.sysFor more information, see the researcher's blog post.",
        "impact": "A local authenticated attacker may be able to execute a malicious BPF program that can execute arbitrary code with SYSTEM privileges."
      }
    ],
    "CVE-2017-3197": [
      {
        "url": "https://www.kb.cert.org/vuls/id/507496",
        "title": "GIGABYTE BRIX UEFI firmware fails to implement write protection and is not cryptographically signed",
        "overview": "GIGABYTE BRIX UEFI firmware for the GB-BSi7H-6500 and GB-BXi7-5775 platforms, versions vF6 and vF2 respectively, fails to properly set the BIOSWE, BLE, SMM_BWP, and PRx bits to enforce write protection. It also is not cryptographically signed. These issues may permit an attacker to write arbitrary code to the platform firmware, potentially allowing for persistent firmware level rootkits or the creation of a permanent denial of service condition in the platform.",
        "description": "CWE-693: Protection Mechanism Failure - CVE-2017-3197GIGABYTE UEFI firmware for the GB-BSi7H-6500 and GB-BXi7-5775 platforms fails to properly set the BIOSWE, BLE, SMM_BWP, and PRx bits. As a result, the BIOS is not protected from arbitrary write access and may permit modifications to the SPI flash.CWE-345: Insufficient Verification of Data Authenticity - CVE-2017-3198GIGABYTE UEFI firmware for the GB-BSi7H-6500 and GB-BXi7-5775 platforms is not cryptographically signed and is served over HTTP from the vendor's support pages without a checksum. An attacker in the position to do so may introduce arbitrary modifications to the firmware that the system has no means to detect.Note that the affected GIGABYTE firmware is a vulnerable implementation of an AMI reference design that does not, by default, appear to be affected by these issues. For more information about these findings, refer to the Cylance advisories, CLVA-2017-01-001 and CLVA-2017-01-002.",
        "impact": "A local, authenticated attacker may be able to execute arbitrary code with the privileges of system firmware, potentially allowing for persistent firmware level rootkits or the creation of a permanent denial of service condition in the platform."
      }
    ],
    "CVE-2017-3221": [
      {
        "url": "https://www.kb.cert.org/vuls/id/586501",
        "title": "Inmarsat AmosConnect8 Mail Client Vulnerable to SQL Injection and Backdoor Account",
        "overview": "Inmarsat Solutions offers a shipboard email client service, AmosConnect 8 (AC8), which was designed to be utilized over satellite networks in a highly optimized manner. IOActive has identified two security vulnerabilities in the client software: On-board ship network access could provide visibility of user names and passwords configured on the client device. A backdoor account has been identified in the client that provides full system privileges. This vulnerability could be exploited remotely. An attacker with high skill would be able to exploit this vulnerability. AmosConnect 8 has been deemed end of life, and no longer supported. Inmarsat customers must contact Inmarsat Customer Service to obtain the replacement mail client software.",
        "description": "CWE-89: Blind SQL Injection in Login Form - CVE-2017-3221Unauthenticated attackers having network access to the AmosConnect Server can exploit a Blind SQL Injection vulnerability in the login form to gain access to credentials stored in its internal database, containing user names and passwords.CWE-798: Use of Hard-coded Credentials - CVE-2017-3222Attackers having network access to an AmosConnect server can log into it using a backdoor account that has full system privileges. Among other things, this vulnerability allows attackers to execute commands with SYSTEM privileges on the remote system by abusing AmosConnect Task Manager.",
        "impact": "Successful exploitation of this vulnerability may allow a remote attacker to access or influence AmosConnect 8 email databases on computers that are installed onboard ships."
      }
    ],
    "CVE-2017-3223": [
      {
        "url": "https://www.kb.cert.org/vuls/id/547255",
        "title": "Dahua IP cameras Sonia web interface is vulnerable to stack buffer overflow",
        "overview": "Dahua IP camera products using firmware versions prior to V2.400.0000.14.R.20170713 include a version of the Sonia web interface that may be vulnerable to a stack buffer overflow.",
        "description": "CWE-121: Stack-based Buffer Overflow - CVE-2017-3223Dahua IP camera products include an application known as Sonia (/usr/bin/sonia) that provides the web interface and other services for controlling the IP camera remotely.Versions of Sonia included in firmware versions prior to DH_IPC-Consumer-Zi-Themis_Eng_P_V2.408.0000.11.R.20170621 do not validate input data length for the 'password' field of the web interface. A remote, unauthenticated attacker may submit a crafted POST request to the IP camera's Sonia web interface that may lead to out-of-bounds memory operations and loss of availability or remote code execution.The issue was originally identified by the researcher in firmware version DH_IPC-HX1X2X-Themis_EngSpnFrn_N_V2.400.0000.30.R.20160803.",
        "impact": "A remote, unauthenticated attacker may submit a crafted POST request to the IP camera's Sonia web interface that may lead to out-of-bounds memory operations and loss of availability or remote code execution."
      }
    ],
    "CVE-2017-3225": [
      {
        "url": "https://www.kb.cert.org/vuls/id/166743",
        "title": "Das U-Boot AES-CBC encryption implementation contains multiple vulnerabilities",
        "overview": "Das U-Boot is a device bootloader that can read its configuration from an AES encrypted file. For devices utilizing this environment encryption mode, U-Boot's use of a zero initialization vector and improper handling of an error condition may allow attacks against the underlying cryptographic implementation and allow an attacker to decrypt the data.",
        "description": "CWE-329: Not Using a Random IV with CBC Mode - CVE-2017-3225Das U-Boot's AES-CBC encryption feature uses a zero (0) initialization vector. This allows an attacker to perform dictionary attacks on encrypted data produced by Das U-Boot to learn information about the encrypted data.CWE-208: Information Exposure Through Timing Discrepancy - CVE-2017-3226Devices that make use of Das U-Boot's AES-CBC encryption feature using environment encryption (i.e., setting the configuration parameter CONFIG_ENV_AES=y) read environment variables from disk as the encrypted disk image is processed. An attacker with physical access to the device can manipulate the encrypted environment data to include a crafted two-byte sequence which triggers an error in environment variable parsing. This error condition is improperly handled by Das U-Boot, resulting in an immediate process termination with a debugging message.The immediate failure can be used as an oracle for a Vaudenay-style timing attack on the cryptography, allowing a dedicated attacker to decrypt and potentially modify the contents of the device.",
        "impact": "An attacker with physical access to the device may be able to decrypt the device's contents."
      }
    ],
    "CVE-2017-3226": [
      {
        "url": "https://www.kb.cert.org/vuls/id/166743",
        "title": "Das U-Boot AES-CBC encryption implementation contains multiple vulnerabilities",
        "overview": "Das U-Boot is a device bootloader that can read its configuration from an AES encrypted file. For devices utilizing this environment encryption mode, U-Boot's use of a zero initialization vector and improper handling of an error condition may allow attacks against the underlying cryptographic implementation and allow an attacker to decrypt the data.",
        "description": "CWE-329: Not Using a Random IV with CBC Mode - CVE-2017-3225Das U-Boot's AES-CBC encryption feature uses a zero (0) initialization vector. This allows an attacker to perform dictionary attacks on encrypted data produced by Das U-Boot to learn information about the encrypted data.CWE-208: Information Exposure Through Timing Discrepancy - CVE-2017-3226Devices that make use of Das U-Boot's AES-CBC encryption feature using environment encryption (i.e., setting the configuration parameter CONFIG_ENV_AES=y) read environment variables from disk as the encrypted disk image is processed. An attacker with physical access to the device can manipulate the encrypted environment data to include a crafted two-byte sequence which triggers an error in environment variable parsing. This error condition is improperly handled by Das U-Boot, resulting in an immediate process termination with a debugging message.The immediate failure can be used as an oracle for a Vaudenay-style timing attack on the cryptography, allowing a dedicated attacker to decrypt and potentially modify the contents of the device.",
        "impact": "An attacker with physical access to the device may be able to decrypt the device's contents."
      }
    ],
    "CVE-2017-3823": [
      {
        "url": "https://www.kb.cert.org/vuls/id/909240",
        "title": "Cisco WebEx web browser extension allows arbitrary code execution",
        "overview": "The Cisco WebEx extensions for Chrome, Firefox, and Internet Explorer allow a remote, unauthenticated attacker to execute arbitrary code on a vulnerable Windows system.",
        "description": "Cisco WebEx is a suite of online meeting software. WebEx meetings are usually joined through a web browser link. The WebEx software is launched through use of a web browser extension. The Cisco WebEx web browser extension allows a remote attacker to execute arbitrary code on a vulnerable Windows system.The WebEx Google Chrome extension versions older than 1.0.7 are affected.The WebEx Internet Explorer GpcContainer ActiveX control version 2.1.0.9 and earlier are reported to be affected.The WebEx Firefox ActiveTouch General Plugin Container version 3006.0.2016.222 and earlier are reported to be affected.Exploit code for the Google Chrome extension is publicly available.",
        "impact": "By convincing a user to visit a specially-crafted web page, a remote attacker may be able to execute arbitrary code on a vulnerable system."
      }
    ],
    "CVE-2017-5638": [
      {
        "url": "https://www.kb.cert.org/vuls/id/834067",
        "title": "Apache Struts 2 is vulnerable to remote code execution",
        "overview": "Apache Struts, versions 2.3.5 - 2.3.31 and 2.5 - 2.5.10, is vulnerable to code injection leading to remote code execution (RCE).",
        "description": "CWE-94: Improper Control of Generation of Code - CVE-2017-5638An attacker can execute arbitrary OGNL code included in the \"Content-Type\" header of a file upload.This vulnerability is actively being exploited.",
        "impact": "An unauthenticated remote attacker can execute arbitrary commands with the privileges of the user running Apache Struts."
      }
    ],
    "CVE-2017-5754": [
      {
        "url": "http://www.kb.cert.org/vuls/id/584653",
        "title": "CPU hardware vulnerable to side-channel attacks",
        "overview": "CPU hardware implementations are vulnerable to cache side-channel attacks. These vulnerabilities are referred to as Meltdown and Spectre.",
        "description": "CPU hardware implementations are vulnerable to side-channel attacks referred to as Meltdown and Spectre. Both Spectre and Meltdown take advantage of the ability to extract information from instructions that have executed on a CPU using the CPU cache as a side-channel. These attacks are described in detail by Google Project Zero, the Institute of Applied Information Processing and Communications (IAIK) at Graz University of Technology (TU Graz) and Anders Fogh. The issues are organized into three variants:Variant 1 (CVE-2017-5753, Spectre): Bounds check bypassVariant 2 (CVE-2017-5715, also Spectre): Branch target injectionVariant 3 (CVE-2017-5754, Meltdown): Rogue data cache load, memory access permission check performed after kernel memory readSpectreSpectre attacks take advantage of a CPU's branch prediction capabilities. Modern CPUs include a feature called branch prediction, which speculatively executes instructions at a location that the CPU believes it will branch to. Such speculative execution helps to more fully utilize the parts of the CPU, minimizing the time waiting, and therefore improving performance. When a branch is successfully predicted, instructions will retire, which means the outcomes of the instructions such as register and memory writes will be committed. If a branch is mispredicted, the speculatively-executed instructions will be discarded, and the direct side-effects of the instructions are undone. What is not undone are the indirect side-effects, such as CPU cache changes. By measuring latency of memory access operations, the cache can be used to extract values from speculatively-executed instructions.With Spectre variant 1 (CVE-2017-5753), the instructions after a conditional branch are speculatively executed as the result of a misprediction. With Spectre variant 2 (CVE-2017-5715), the CPU executes instructions at a location determined by a mispredicted branch target.With both variants of the Spectre attack, the impact is that a process may leak sensitive data to other processes on a system. Spectre may also allow one part of an application to access other parts of the same process memory space that would otherwise not be permitted.While the Spectre attack itself does not cross a user/kernel memory privilege boundary, depending on the configuration of the target platform, the Spectre attack may indirectly allow a user-space application to access kernel memory. For example, the Project Zero blog post describes a scenario that uses eBPF to exfiltrate kernel memory contents into user-space code. This is made possible because eBPF JIT allows for userspace applications to inject code that is executed in kernel space. While this code is verified by the kernel, eBPF-compliant code will be allowed to execute with kernel permissions. The exploit described by Project Zero leverages eBPF to execute the Spectre attack in kernel space, while exfiltrating the data to user space. It is possible that other technologies that allow in-kernel code execution may also possibly be leveraged to leak kernel memory using Spectre.MeltdownMeltdown is related to the Spectre attack in that it also uses a cache side channel to access data that otherwise wouldn't be available. The main difference is that it leverages out-of-order execution capabilities in modern CPUs. Like speculative execution due to branch prediction, as used by Spectre, out-of-order execution on a CPU is a technique for ensuring fullest utilization of the CPU's parts. Although instructions may appear sequentially in the machine language, a CPU that supports out-of-order execution may execute instructions in a non-sequential manner, which can minimize the time that a CPU spends idle.Meltdown leverages insecure behavior that has been demonstrated in Intel CPUs and may affect CPUs from other vendors. Vulnerable CPUs allow memory reads in out-of-order instruction execution, and also contain a race condition between the raising of exceptions and the out-of-order instruction execution. The Meltdown attack reads a kernel memory value, which raises an exception because code running with user-space privileges are not permitted to directly read kernel memory. However, due to the race condition, out-of-order instructions following the faulting instruction may also execute. Even though instructions appear after the faulting instruction, out-of-order execution allows them to execute, using data retrieved from the instruction that raises the exception. By the time the exception is raised, some number of out-of-order instructions have executed. Although the raised exception causes the CPU to roll back the out-of-order instructions, the cache state is not reverted. This allows data from out-of-order instructions to persist beyond the point when the exception has been raised.The impact of Meltdown is that a process running in user space is able to view the contents of kernel memory. Meltdown may also allow Spectre-like memory content leaking that does not cross the user/kernel privilege boundary.The Linux kernel mitigations for Meltdown are referred to as KAISER, and subsequently KPTI, which aim to improve separation of kernel and user memory pages. Because the Spectre attacks do not cross user/kernel boundaries, the protections introduced with KAISER/KPTI do not add any protection against them.The following table compares Spectre and Meltdown.SpectreMeltdownCPU mechanism for triggeringSpeculative execution from branch predictionOut-of-order executionAffected platformsCPUs that perform speculative execution from branch predictionCPUs that allow memory reads in out-of-order instructionsDifficulty of successful attackHigh - Requires tailoring to the software environment of the victim processLow - Kernel memory access exploit code is mostly universalImpactCross- and intra-process (including kernel) memory disclosureKernel memory disclosure to userspaceSoftware mitigationsVariant 1: Compiler changes. Web browser updates to help prevent exploitation from JavaScriptVariant 2: Indirect Branch Restricted Speculation (IBRS). Note: The software mitigation for Spectre variant 2 requires CPU microcode updatesKernel page-table isolation (KPTI)",
        "impact": "An attacker able to execute code with user privileges can achieve various impacts. The Meltdown attack allows reading of kernel memory from userspace. This can result in privilege escalation, disclosure of sensitive information, or it can weaken kernel-level protections, such as KASLR. The Spectre attack can allow inter-process or intra-process data leaks.To execute code locally, an attacker would require a valid account or independent compromise of the target. Attacks using JavaScript in web browsers are possible. Multi-user and multi-tenant systems (including virtualized and cloud environments) likely face the greatest risk. Systems used to browse arbitrary web sites are also at risk. Single-user systems that do not readily provide a way for attackers to execute code locally face significantly lower risk."
      },
      {
        "url": "https://www.kb.cert.org/vuls/id/180049",
        "title": "CPU hardware utilizing speculative execution may be vulnerable to cache side-channel attacks",
        "overview": "CPU hardware utilizing speculative execution may be vulnerable to cache timing side-channel analysis. Two vulnerabilities are identified, known as \"Variant 3a\" and \"Variant 4\".",
        "description": "Speculative execution is a technique used by many modern processors to improve performance by predicting which instructions may be executed based on past execution history. An attacker with local user access may be able to utilize sequences of speculative execution to perform a cache timing side-channel analysis.CWE-208: Information Exposure Through Timing DiscrepancyCVE-2018-3639 – Speculative Store Bypass (SSB) – also known as \"Variant 4\"Systems with microprocessors utilizing speculative execution and speculative execution of memory reads before the addresses of all prior memory writes are known may read an earlier value of the data. Subsequent speculative memory accesses cause allocations into the cache, which may allow a sequence of speculative loads to be used to perform timing side-channel attacks. In particular, if an attacker has control of a previously cached value, or the first store and load instructions are accesses onto the stack, an attacker may be able to control future speculative execution and access arbitrary privileged data by using less privileged code with timing side-channel analysis.CVE-2018-3640 – Rogue System Register Read (RSRE) – also known as \"Variant 3a\"Systems with microprocessors utilizing speculative execution and that perform speculative reads of system registers may return a speculative register value that is then used in subsequent speculative load instructions. These subsequence speculative loads cause allocations into the cache that may allow a sequence of speculative loads to be used to perform timing side-channel attacks. An attacker with local user access may be able to use timing side-channel analysis to determine the values stored in system registers.For more information and technical details, please see the original Project Zero bug report, Intel's security advisory INTEL-SA-00115, AMD's whitepaper, and ARM's whitepaper.These vulnerabilities have been noted in the media for their similarity to previously-disclosed vulnerabilities: CVE-2017-5753 (Variant 1, \"Spectre\"), CVE-2017-5715 (Variant 2, \"Spectre\"), CVE-2017-5754 (Variant 3, \"Meltdown\"). See VU#584653 for further information.",
        "impact": "An attacker with local user access may be able to read arbitrary privileged data or system register values by utilizing cache timing side-channel analysis."
      }
    ]
  }
}