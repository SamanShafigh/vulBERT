{
  "year": 2007,
  "total": 26,
  "reference": "mozilla.org",
  "reports": {
    "CVE-2007-0008": [
      {
        "url": "http://www.mozilla.org/security/announce/2007/mfsa2007-06.html",
        "title": "Mozilla Network Security Services (NSS) SSLv2 buffer overflows",
        "description": "iDefense has informed Mozilla about two potential buffer overflow vulnerabilities found by researcher regenrecht in the Network Security Services (NSS) code for processing the SSLv2 protocol. SSL clients such as Firefox and Thunderbird can suffer a buffer overflow if a malicious server presents a certificate with a public key that is too small to encrypt the entire \"Master Secret\". Exploiting this overflow appears to be unreliable but possible if the SSLv2 protocol is enabled. Servers that use NSS for the SSLv2 protocol can be exploited by a client that presents a \"Client Master Key\" with invalid length values in any of several fields that are used without adequate error checking. This can lead to a buffer overflow that presumably could be exploitable. Support for SSLv2 is disabled in Firefox 2 due to other known weaknesses in the protocol; Firefox 2 is not vulnerable unless the user has modified hidden internal NSS settings to re-enable SSLv2 support. Workaround Disable the SSLv2 protocol in any product that has not already done so. In Firefox 1.5: Click on the Advanced icon in the Options/Preferences dialog. On the Security tab uncheck the box next to \"Use SSL 2.0\" click the \"OK\" button. In Thunderbird 1.5: Click on the Advanced icon in the Options/Preferences dialog. Click the \"Config Editor...\" button. Type ssl2 in the Filter field Double-click security.enable_ssl2 to change the value to false and close the window. Server products making use of NSS should also disable the SSLv2 protocol. Products using the NSS libraries should upgrade to version 3.11.5"
      }
    ],
    "CVE-2007-0009": [
      {
        "url": "http://www.mozilla.org/security/announce/2007/mfsa2007-06.html",
        "title": "Mozilla Network Security Services (NSS) SSLv2 buffer overflows",
        "description": "iDefense has informed Mozilla about two potential buffer overflow vulnerabilities found by researcher regenrecht in the Network Security Services (NSS) code for processing the SSLv2 protocol. SSL clients such as Firefox and Thunderbird can suffer a buffer overflow if a malicious server presents a certificate with a public key that is too small to encrypt the entire \"Master Secret\". Exploiting this overflow appears to be unreliable but possible if the SSLv2 protocol is enabled. Servers that use NSS for the SSLv2 protocol can be exploited by a client that presents a \"Client Master Key\" with invalid length values in any of several fields that are used without adequate error checking. This can lead to a buffer overflow that presumably could be exploitable. Support for SSLv2 is disabled in Firefox 2 due to other known weaknesses in the protocol; Firefox 2 is not vulnerable unless the user has modified hidden internal NSS settings to re-enable SSLv2 support. Workaround Disable the SSLv2 protocol in any product that has not already done so. In Firefox 1.5: Click on the Advanced icon in the Options/Preferences dialog. On the Security tab uncheck the box next to \"Use SSL 2.0\" click the \"OK\" button. In Thunderbird 1.5: Click on the Advanced icon in the Options/Preferences dialog. Click the \"Config Editor...\" button. Type ssl2 in the Filter field Double-click security.enable_ssl2 to change the value to false and close the window. Server products making use of NSS should also disable the SSLv2 protocol. Products using the NSS libraries should upgrade to version 3.11.5"
      }
    ],
    "CVE-2007-0776": [
      {
        "url": "http://www.mozilla.org/security/announce/2007/mfsa2007-01.html",
        "title": "Crashes with evidence of memory corruption (rv:1.8.0.10/1.8.1.2)",
        "description": "As part of the Firefox 2.0.0.2 and 1.5.0.10 update releases we fixed several bugs to improve the stability of the product. Some of these were crashes that showed evidence of memory corruption and we presume that with enough effort at least some of these could be exploited to run arbitrary code. Thunderbird shares the browser engine with Firefox and could be vulnerable if JavaScript were to be enabled in mail. This is not the default setting and we strongly discourage users from running JavaScript in mail. Without further investigation we cannot rule out the possibility that for some of these an attacker might be able to prepare memory for exploitation through some means other than JavaScript, such as large images. Workaround Upgrade to the fixed versions. Do not enable JavaScript in Thunderbird or the mail portions of SeaMonkey."
      }
    ],
    "CVE-2007-0777": [
      {
        "url": "http://www.mozilla.org/security/announce/2007/mfsa2007-01.html",
        "title": "Crashes with evidence of memory corruption (rv:1.8.0.10/1.8.1.2)",
        "description": "As part of the Firefox 2.0.0.2 and 1.5.0.10 update releases we fixed several bugs to improve the stability of the product. Some of these were crashes that showed evidence of memory corruption and we presume that with enough effort at least some of these could be exploited to run arbitrary code. Thunderbird shares the browser engine with Firefox and could be vulnerable if JavaScript were to be enabled in mail. This is not the default setting and we strongly discourage users from running JavaScript in mail. Without further investigation we cannot rule out the possibility that for some of these an attacker might be able to prepare memory for exploitation through some means other than JavaScript, such as large images. Workaround Upgrade to the fixed versions. Do not enable JavaScript in Thunderbird or the mail portions of SeaMonkey."
      }
    ],
    "CVE-2007-0778": [
      {
        "url": "http://www.mozilla.org/security/announce/2007/mfsa2007-03.html",
        "title": "Information disclosure through cache collisions",
        "description": "Aad reported that two web pages can collide in the disk cache with the result that depending on order loaded the end of the longer document can be appended to the shorter when the shorter is reloaded from the cache. It is possible a determined hacker could construct a targeted attack to steal some sensitive data from a particular web page (for example, transaction history from a financial account). The potential victim would have to be already logged into the targeted service (or be fooled into doing so) and then visit the malicious site. We have not calculated how much effort would be required to compute a colliding URL on a different host from the target page. Workaround Temporarily set the disk cache size to zero (0) in the preferences until you can upgrade to a fixed version."
      }
    ],
    "CVE-2007-0780": [
      {
        "url": "http://www.mozilla.org/security/announce/2007/mfsa2007-05.html",
        "title": "XSS and local file access by opening blocked popupsand local file access by opening blocked popups",
        "description": "shutdown reported that if you could convince a user to open a blocked popup you could perform a cross-site scripting attack against any site that contains a frame whose source is a data: URL. To accomplish this the attacker's site would have to frame the target site plus another frame whose source is the exact same data: url as the victim site, and then attempt to open a popup with a javascript: url from the data: frame. It is unclear whether any high-value target sites that match this description actually exist. Similarly, Michal Zalewski reported that although pages loaded from the web normally cannot open windows containing local files, if you could convince a user to open a blocked popup then this restriction could be bypassed. In order to take advantage of this flaw the attacker would have to know the full path to a locally-saved file containing malicious script. He also reported that a flaw in the seeding of the pseudo-random number generator resulted in downloaded files being saved to temporary files with a reasonably predictable name. The two combined could be used to steal information saved on the local disk. Workaround Do not open blocked popups individually, instead either ignore them or decide to enable popups on a per-site basis."
      }
    ],
    "CVE-2007-0981": [
      {
        "url": "http://www.mozilla.org/security/announce/2007/mfsa2007-07.html",
        "title": "Embedded nulls in location.hostname confuse same-domain checks",
        "description": "Michal Zalewski demonstrated that setting location.hostname to a value with embedded null characters can confuse the browsers domain checks. Setting the value triggers a load, but the networking software reads the hostname only up to the null character while other checks for \"parent domain\" start at the right and so can have a completely different idea of what the current host is. This cannot be used for a direct same-origin violation to perform cross-site scripting: those checks are performed on the complete hostname including the nulls. However, other mechanisms rely on matching parent domains and those can be fooled by this trick. For example, this flaw allows a malicious page to set domain cookies for any arbitrary site, which might be useful in a session-fixation attack. This also allows setting document.domain to any arbitrary value which could be used to perform a cross-site scripting attack against any page which also sets document.domain. Workaround Disable JavaScript until a fixed version can be installed."
      }
    ],
    "CVE-2007-0994": [
      {
        "url": "http://www.mozilla.org/security/announce/2007/mfsa2007-09.html",
        "title": "Privilege escalation by setting img.src to javascript: URI",
        "description": "moz_bug_r_a4 reports that the fix for MFSA 2006-72 in Firefox 1.5.0.9 and Firefox 2.0.0.1 introduced a regression that allows scripts from web content to execute arbitrary code by setting the src attribute of an IMG tag to a specially crafted javascript: URI. The same regression also caused javascript: URIs in IMG tags to be executed even if JavaScript execution was disabled in the global preferences. This facet was noted by moz_bug_r_a4 and reported independently by Anbo Motohiko. Thunderbird is not affected by this flaw as it will not execute javascript: URIs in IMG tags. Workaround Upgrade to a version containing the fix. Disabling JavaScript does not protect against this flaw."
      }
    ],
    "CVE-2007-1362": [
      {
        "url": "http://www.mozilla.org/security/announce/2007/mfsa2007-14.html",
        "title": "Path Abuse in Cookies",
        "description": "Nicolas Derouet reported two problems with cookie handling in Mozilla clients. The first was that the cookie path parameter was not subject to any length checks, and this could be abused to cause the victim's browser to use excessive amounts of memory while it was running as well as waste the disk space used to store the cookie until it expired. Cookies sent by an HTTP server are limited to a reasonable size by the general limit on the size of an HTTP header, but cookies created programmatically through JavaScript and added using document.cookie could have a path of any length the script could create -- potentially several tens of megabytes. The second issue was that the cookie path and name values were not checked for the presence of the delimiter used for internal cookie storage, and if present this confused future interpretation of the cookie data. Since the cookie host continued to be set correctly there was very little that could be done that the site could not legitimately set in the first place. One exception was the ability for a non-secure site to create \"secure\" cookies (it still could not read them), which might be a problem on some sites. Other fields in the file could be faked, but scripts that could set cookies at all could generally set them anyway."
      }
    ],
    "CVE-2007-1562": [
      {
        "url": "http://www.mozilla.org/security/announce/2007/mfsa2007-11.html",
        "title": "FTP PASV port-scanning",
        "description": "The FTP protocol includes the PASV (passive) command which is used by Firefox to request an alternate data port. The specification of the FTP protocol allows the server response to include an alternate server address as well, although this is rarely used in practice. mark@bindshell.net reported that a malicious web page hosted on a specially-coded FTP server could use this feature to perform a rudimentary port-scan of machines inside the firewall of the victim. By itself this causes no harm, but information about an internal network may be useful to an attacker should there be other vulnerabilities present on the network. Mozilla clients will now ignore the alternate server address."
      }
    ],
    "CVE-2007-2292": [
      {
        "url": "http://www.mozilla.org/security/announce/2007/mfsa2007-31.html",
        "title": "Digest authentication request splitting",
        "description": "Security researcher Stefano Di Paola reported that Firefox did not properly validate the user ID when making an HTTP request using Digest Authentication to log into a web site. A malicious page could abuse this to inject arbitrary HTTP headers by including a newline character in the user ID followed by the injected header data. If the user were connecting through a proxy the attacker could inject headers that a proxy would interpret as two separate requests for different hosts."
      }
    ],
    "CVE-2007-2867": [
      {
        "url": "http://www.mozilla.org/security/announce/2007/mfsa2007-12.html",
        "title": "Crashes with evidence of memory corruption (rv:1.8.0.12/1.8.1.4)",
        "description": "As part of the Firefox 2.0.0.4 and 1.5.0.12 update releases Mozilla developers fixed many bugs to improve the stability of the product. Some of these crashes that showed evidence of memory corruption under certain circumstances and we presume that with enough effort at least some of these could be exploited to run arbitrary code. Thunderbird shares the browser engine with Firefox and could be vulnerable if JavaScript were to be enabled in mail. This is not the default setting and we strongly discourage users from running JavaScript in mail. Without further investigation we cannot rule out the possibility that for some of these an attacker might be able to prepare memory for exploitation through some means other than JavaScript, such as large images. Workaround Upgrade to the fixed versions. Do not enable JavaScript in Thunderbird or the mail portions of SeaMonkey."
      }
    ],
    "CVE-2007-2868": [
      {
        "url": "http://www.mozilla.org/security/announce/2007/mfsa2007-12.html",
        "title": "Crashes with evidence of memory corruption (rv:1.8.0.12/1.8.1.4)",
        "description": "As part of the Firefox 2.0.0.4 and 1.5.0.12 update releases Mozilla developers fixed many bugs to improve the stability of the product. Some of these crashes that showed evidence of memory corruption under certain circumstances and we presume that with enough effort at least some of these could be exploited to run arbitrary code. Thunderbird shares the browser engine with Firefox and could be vulnerable if JavaScript were to be enabled in mail. This is not the default setting and we strongly discourage users from running JavaScript in mail. Without further investigation we cannot rule out the possibility that for some of these an attacker might be able to prepare memory for exploitation through some means other than JavaScript, such as large images. Workaround Upgrade to the fixed versions. Do not enable JavaScript in Thunderbird or the mail portions of SeaMonkey."
      }
    ],
    "CVE-2007-3285": [
      {
        "url": "http://www.mozilla.org/security/announce/2007/mfsa2007-22.html",
        "title": "File type confusion due to %00 in name",
        "description": "Ronald van den Heetkamp reported that a filename URL containing %00 (encoded null) can cause Firefox to interpret the file extension differently than the underlying Windows operating system potentially leading to unsafe actions such as running a program. This is only accessible locally."
      }
    ],
    "CVE-2007-3656": [
      {
        "url": "http://www.mozilla.org/security/announce/2007/mfsa2007-24.html",
        "title": "Unauthorized access to wyciwyg:// documents",
        "description": "Michal Zalewski reported that it was possible to bypass the same-origin checks and read from cached (wyciwyg) documents. It is possible to access wyciwyg:// documents without proper same domain policy checks through the use of HTTP 302 redirects. This enables the attacker to steal sensitive data displayed on dynamically generated pages; perform cache poisoning; and execute own code or display own content with URL bar and SSL certificate data of the attacked page (URL spoofing++)."
      }
    ],
    "CVE-2007-3670": [
      {
        "url": "http://www.mozilla.org/security/announce/2007/mfsa2007-23.html",
        "title": "Remote code execution by launching Firefox from Internet Explorer",
        "description": "Internet Explorer calls registered URL protocols without escaping quotes and may be used to pass unexpected and potentially dangerous data to the application that registers that URL Protocol. The vulnerability is exposed when a user browses to a malicious web page in Internet Explorer and clicks on a specially crafted link. That link causes Internet Explorer to invoke another Windows program via the command line and then pass that program the URL from the malicious webpage without escaping the quotes. Firefox and Thunderbird are among those which can be launched, and both support a \"-chrome\" option that could be used to run malware. Other Windows applications can be called in this way and also manipulated to execute malicious code. This fix only prevents Firefox and Thunderbird from accepting bad data. This patch does not fix the vulnerability in Internet Explorer. Workaround Mozilla highly recommends using Firefox to browse the web to prevent attackers from exploiting this problem in Internet Explorer."
      },
      {
        "url": "http://www.mozilla.org/security/announce/2007/mfsa2007-40.html",
        "title": "Upgraded Thunderbird 1.5.0.13 missing fix for MFSA 2007-23",
        "description": "Mozilla tester Stephen Donner reported that only users who installed Thunderbird 1.5.0.13 using the install package received the fix for MFSA 2007-23. Users who upgraded to Thunderbird 1.5.0.13 from an earlier version using the automatic update mechanism were not protected. If those users browsed the internet using Internet Explorer or another similarly affected program and clicked on a malicious mailto: link the attacker could potentially execute arbitrary code. Workaround Mozilla highly recommends using Firefox to browse the web to prevent attackers from exploiting this problem in Internet Explorer."
      }
    ],
    "CVE-2007-4841": [
      {
        "url": "http://www.mozilla.org/security/announce/2007/mfsa2007-36.html",
        "title": "URIs with invalid %-encoding mishandled by Windows",
        "description": "On Windows XP with Internet Explorer 7 installed several \"web related\" URI schemes do not launch the registered protocol-handler if the URI contains an invalid %-encoded sequence. This was initially reported by Billy Rios and Nate McFeters with additional investigation by Secunia. A patch that mitigated the known exploits was shipped with Firefox 2.0.0.6 as described at MFSA 2007-27. That mitigation did not prevent the incorrect file-handling programs from launching which left some risk. An additional fix has been applied to Firefox 2.0.0.8 that detects when Windows would mishandle these URIs so that the wrong program does not get launched."
      }
    ],
    "CVE-2007-5045": [
      {
        "url": "http://www.mozilla.org/security/announce/2007/mfsa2007-28.html",
        "title": "Code execution via QuickTime Media-link files",
        "description": "On his blog Petko D. Petkov reported that QuickTime Media-Link files contain a qtnext attribute that could be used on Windows systems to launch the default browser with arbitrary command-line options. When the default browser is Firefox 2.0.0.6 or earlier use of the -chrome option allowed a remote attacker to run script commands with the full privileges of the user. This could be used to install malware, steal local data, or otherwise corrupt the victim's computer. The fix for MFSA 2007-23 was intended to prevent this type of attack but QuickTime calls the browser in an unexpected way that bypasses that fix. To protect Firefox users from this problem we have now eliminated the ability to run arbitrary script from the command-line. Other command-line options remain, however, and QuickTime Media-link files could still be used to annoy users with popup windows and dialogs until this issue is fixed in QuickTime. This QuickTime issue appears to be the one described by CVE-2006-4965 but the fix Apple applied in QuickTime 7.1.5 does not prevent this version of the problem. Gran Paradiso Alpha 8 does not contain the fix for this vulnerability. Workaround Disabling JavaScript in the browser does not protect against this attack; in vulnerable versions scripts passed through the -chrome option would be executed regardless of the JavaScript setting for web content, much as interpreters for languages such as perl and Python execute scripts passed on the command line. The NoScript add-on, however, has provided protection against this class of attack since the cross-browser vulnerabilities described by MFSA 2007-23 were discovered."
      }
    ],
    "CVE-2007-5337": [
      {
        "url": "http://www.mozilla.org/security/announce/2007/mfsa2007-34.html",
        "title": "Possible file stealing through sftp protocol",
        "description": "On Linux machines with gnome-vfs support the smb: and sftp: URI schemes are available in Firefox. Georgi Guninski showed that if an attacker can store the attack page in a mutually accessible location on the target server (/tmp perhaps) and lure the victim into loading it, the attacker could potentially read any file owned by the victim from known locations on that server."
      }
    ],
    "CVE-2007-5338": [
      {
        "url": "http://www.mozilla.org/security/announce/2007/mfsa2007-35.html",
        "title": "XPCNativeWraper pollution using Script object",
        "description": "Mozilla security researcher moz_bug_r_a4 reported that it was possible to use the Script object to modify XPCNativeWrappers in such a way that subsequent access by the browser chrome--such as by right-clicking to open a context menu--can cause attacker-supplied javascript to run with the same privileges as the user. This is similar to MFSA 2007-25 fixed in Firefox 2.0.0.5"
      }
    ],
    "CVE-2007-5339": [
      {
        "url": "http://www.mozilla.org/security/announce/2007/mfsa2007-29.html",
        "title": "Crashes with evidence of memory corruption (rv:1.8.1.8)",
        "description": "As part of the Firefox 2.0.0.8 update releases Mozilla developers fixed many bugs to improve the stability of the product. Some of these crashes showed evidence of memory corruption under certain circumstances and we presume that with enough effort at least some of these could be exploited to run arbitrary code. Thunderbird shares the browser engine with Firefox and could be vulnerable if JavaScript were to be enabled in mail. This is not the default setting and we strongly discourage users from running JavaScript in mail. Without further investigation we cannot rule out the possibility that for some of these an attacker might be able to prepare memory for exploitation through some means other than JavaScript such as large images. Update (December 19, 2007): Some of these bugs were patched in Thunderbird 1.5.0.14, please see the links below. For complete protection please upgrade to the latest version of Thunderbird 2 and do not enable JavaScript in mail. Workaround Disable JavaScript until a version containing these fixes can be installed."
      }
    ],
    "CVE-2007-5340": [
      {
        "url": "http://www.mozilla.org/security/announce/2007/mfsa2007-29.html",
        "title": "Crashes with evidence of memory corruption (rv:1.8.1.8)",
        "description": "As part of the Firefox 2.0.0.8 update releases Mozilla developers fixed many bugs to improve the stability of the product. Some of these crashes showed evidence of memory corruption under certain circumstances and we presume that with enough effort at least some of these could be exploited to run arbitrary code. Thunderbird shares the browser engine with Firefox and could be vulnerable if JavaScript were to be enabled in mail. This is not the default setting and we strongly discourage users from running JavaScript in mail. Without further investigation we cannot rule out the possibility that for some of these an attacker might be able to prepare memory for exploitation through some means other than JavaScript such as large images. Update (December 19, 2007): Some of these bugs were patched in Thunderbird 1.5.0.14, please see the links below. For complete protection please upgrade to the latest version of Thunderbird 2 and do not enable JavaScript in mail. Workaround Disable JavaScript until a version containing these fixes can be installed."
      }
    ],
    "CVE-2007-5947": [
      {
        "url": "http://www.mozilla.org/security/announce/2007/mfsa2007-37.html",
        "title": "jar: URI scheme XSS hazard",
        "description": "The jar: URI scheme was introduced as a mechanism to support digitally signed web pages, enabling web sites to load pages packaged in zip archives containing signatures in java-archive format. Jesse Ruderman and Petko D. Petkov point out this means that sites that allow users to upload binary content in zip format are effectively allowing users to install web pages on their site, and these can be used to perform Cross-Site Scripting (XSS) attacks. The blogger at beford.org noted that redirects confused Mozilla browsers about the true source of the jar: content: the content was wrongly considered to originate with the redirecting site rather than the actual source. This meant that an XSS attack could be mounted against any site with an open redirect even if it didn't allow uploads. A published proof-of-concept demonstrates stealing the GMail contact list of users logged-in to GMail. Support for the jar: URI scheme has been restricted to files served with a Content-Type header of application/java-archive or application/x-jar. Web applications that require signed pages must make sure their .jar archives are served with this Content-Type. Sites that allow users to upload binary files should make sure they do not allow these files to have one of these two MIME types."
      }
    ],
    "CVE-2007-5960": [
      {
        "url": "http://www.mozilla.org/security/announce/2007/mfsa2007-39.html",
        "title": "Referer-spoofing via window.location race condition",
        "description": "Gregory Fleischer demonstrated that it was possible to generate a fake HTTP Referer header by exploiting a timing condition when setting the window.location property. This could be used to conduct a Cross-site Request Forgery (CSRF) attack against websites that rely only on the Referer header as protection against such attacks. When navigation occurs due to setting window.location the Referer header is supposed to reflect the address of the content which initiated the script. Instead, the referer was set to the address of the window (or frame) in which the script was running, and this vulnerability arises from that tiny difference. Using a modal alert() dialog Fleischer was able to suspend the attack script so that it did not load the target URI until after the attacker's initial content had been replaced by the intended referring page. When the Referer is set to the current URI of the script's window it is no longer the correct one."
      }
    ],
    "CVE-2007-6589": [
      {
        "url": "http://www.mozilla.org/security/announce/2007/mfsa2007-37.html",
        "title": "jar: URI scheme XSS hazard",
        "description": "The jar: URI scheme was introduced as a mechanism to support digitally signed web pages, enabling web sites to load pages packaged in zip archives containing signatures in java-archive format. Jesse Ruderman and Petko D. Petkov point out this means that sites that allow users to upload binary content in zip format are effectively allowing users to install web pages on their site, and these can be used to perform Cross-Site Scripting (XSS) attacks. The blogger at beford.org noted that redirects confused Mozilla browsers about the true source of the jar: content: the content was wrongly considered to originate with the redirecting site rather than the actual source. This meant that an XSS attack could be mounted against any site with an open redirect even if it didn't allow uploads. A published proof-of-concept demonstrates stealing the GMail contact list of users logged-in to GMail. Support for the jar: URI scheme has been restricted to files served with a Content-Type header of application/java-archive or application/x-jar. Web applications that require signed pages must make sure their .jar archives are served with this Content-Type. Sites that allow users to upload binary files should make sure they do not allow these files to have one of these two MIME types."
      }
    ]
  }
}